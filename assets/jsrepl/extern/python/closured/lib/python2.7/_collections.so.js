(function(g){function e(a,b,c){var d;for(d=-1;;)switch(d){case -1:var e,f,g,h;e=a;f=b;d=c>2147483522?1:2;break;case 1:_PyErr_SetString(HEAP[_PyExc_OverflowError],q);g=0;d=7;break;case 2:d=HEAP[p]!=0?3:4;break;case 3:HEAP[p]-=1;h=HEAP[r+HEAP[p]*4];d=6;break;case 4:h=_PyMem_Malloc(256);d=h==0?5:6;break;case 5:_PyErr_NoMemory();g=0;d=7;break;case 6:HEAP[h]=e;HEAP[h+4]=f;g=h;d=7;break;case 7:return a=g;default:assert(0,"bad label: "+d)}}
function b(a){var b;for(b=-1;;)switch(b){case -1:var c;c=a;b=HEAP[p]<=9?1:2;break;case 1:HEAP[r+HEAP[p]*4]=c;HEAP[p]+=1;b=3;break;case 2:_PyMem_Free(c);b=3;break;case 3:return;default:assert(0,"bad label: "+b)}}function a(a){var c;for(c=-1;;)switch(c){case -1:var d,e,f,g;d=a;c=HEAP[d+24]==0?1:2;break;case 1:_PyErr_SetString(HEAP[_PyExc_IndexError],t);e=0;c=13;break;case 2:f=HEAP[HEAP[d+12]+8+HEAP[d+20]*4];HEAP[d+20]-=1;HEAP[d+24]-=1;HEAP[d+32]+=1;c=HEAP[d+20]==-1?3:12;break;case 3:var h=d;c=HEAP[d+
24]==0?4:9;break;case 4:c=HEAP[h+8]!=HEAP[d+12]?5:6;break;case 5:throw ___assert_fail(s,u,176,v),"Reached an unreachable!";case 6:c=HEAP[d+16]!=HEAP[d+20]+1?7:8;break;case 7:throw ___assert_fail(w,u,177,v),"Reached an unreachable!";case 8:HEAP[d+16]=31;HEAP[d+20]=30;c=12;break;case 9:g=HEAP[HEAP[h+12]];c=HEAP[d+8]==HEAP[d+12]?10:11;break;case 10:throw ___assert_fail(x,u,183,v),"Reached an unreachable!";case 11:b(HEAP[d+12]);HEAP[g+4]=0;HEAP[d+12]=g;HEAP[d+20]=61;c=12;break;case 12:e=f;c=13;break;
case 13:return a=e;default:assert(0,"bad label: "+c)}}function c(a){var c;for(c=-1;;)switch(c){case -1:var d,e,f,g;d=a;c=HEAP[d+24]==0?1:2;break;case 1:_PyErr_SetString(HEAP[_PyExc_IndexError],t);e=0;c=17;break;case 2:c=HEAP[d+8]==0?3:4;break;case 3:throw ___assert_fail(B,u,205,A),"Reached an unreachable!";case 4:f=HEAP[HEAP[d+8]+8+HEAP[d+16]*4];HEAP[d+16]+=1;HEAP[d+24]-=1;HEAP[d+32]+=1;c=HEAP[d+16]==62?5:16;break;case 5:var h=HEAP[d+8],j=HEAP[d+12];c=HEAP[d+24]==0?6:11;break;case 6:c=h!=j?7:8;break;
case 7:throw ___assert_fail(s,u,213,A),"Reached an unreachable!";case 8:c=HEAP[d+16]!=HEAP[d+20]+1?9:10;break;case 9:throw ___assert_fail(w,u,214,A),"Reached an unreachable!";case 10:HEAP[d+16]=31;HEAP[d+20]=30;c=16;break;case 11:c=h==j?12:13;break;case 12:throw ___assert_fail(x,u,219,A),"Reached an unreachable!";case 13:g=HEAP[HEAP[d+8]+4];b(HEAP[d+8]);c=g==0?14:15;break;case 14:throw ___assert_fail(C,u,222,A),"Reached an unreachable!";case 15:HEAP[g]=0;HEAP[d+8]=g;HEAP[d+16]=0;c=16;break;case 16:e=
f;c=17;break;case 17:return a=e;default:assert(0,"bad label: "+c)}}function d(a,b){var d;for(d=-1;;)switch(d){case -1:var f,g,h,j,k;f=a;g=b;HEAP[f+32]+=1;d=HEAP[f+20]==61?1:6;break;case 1:j=e(HEAP[f+12],0,HEAP[f+24]);d=j==0?2:3;break;case 2:h=0;d=14;break;case 3:d=HEAP[HEAP[f+12]+4]!=0?4:5;break;case 4:throw ___assert_fail(F,u,241,E),"Reached an unreachable!";case 5:HEAP[HEAP[f+12]+4]=j;HEAP[f+12]=j;HEAP[f+20]=-1;d=6;break;case 6:HEAP[g]+=1;HEAP[f+24]+=1;HEAP[f+20]+=1;HEAP[HEAP[f+12]+8+HEAP[f+20]*
4]=g;d=HEAP[f+28]!=-1?7:13;break;case 7:d=HEAP[f+24]>HEAP[f+28]?8:13;break;case 8:k=c(f,0);d=k==0?10:9;break;case 9:d=HEAP[f+24]>HEAP[f+28]?10:11;break;case 10:throw ___assert_fail(N,u,250,E),"Reached an unreachable!";case 11:HEAP[k]-=1;d=HEAP[k]==0?12:13;break;case 12:FUNCTION_TABLE[HEAP[HEAP[k+4]+24]](k);d=13;break;case 13:HEAP[__Py_NoneStruct]+=1;h=__Py_NoneStruct;d=14;break;case 14:return d=h;default:assert(0,"bad label: "+d)}}function f(b,c){var d;for(d=-1;;)switch(d){case -1:var f,g,h,j,k;f=
b;g=c;HEAP[f+32]+=1;d=HEAP[f+16]==0?1:6;break;case 1:j=e(0,HEAP[f+8],HEAP[f+24]);d=j==0?2:3;break;case 2:h=0;d=14;break;case 3:d=HEAP[HEAP[f+8]]!=0?4:5;break;case 4:throw ___assert_fail(I,u,264,J),"Reached an unreachable!";case 5:HEAP[HEAP[f+8]]=j;HEAP[f+8]=j;HEAP[f+16]=62;d=6;break;case 6:HEAP[g]+=1;HEAP[f+24]+=1;HEAP[f+16]-=1;HEAP[HEAP[f+8]+8+HEAP[f+16]*4]=g;d=HEAP[f+28]!=-1?7:13;break;case 7:d=HEAP[f+24]>HEAP[f+28]?8:13;break;case 8:k=a(f,0);d=k==0?10:9;break;case 9:d=HEAP[f+24]>HEAP[f+28]?10:
11;break;case 10:throw ___assert_fail(N,u,273,J),"Reached an unreachable!";case 11:HEAP[k]-=1;d=HEAP[k]==0?12:13;break;case 12:FUNCTION_TABLE[HEAP[HEAP[k+4]+24]](k);d=13;break;case 13:HEAP[__Py_NoneStruct]+=1;h=__Py_NoneStruct;d=14;break;case 14:return d=h;default:assert(0,"bad label: "+d)}}function h(a){var b;for(b=-1;;)switch(b){case -1:var c,d,e;c=a;e=b=_PyIter_Next(c);b=b!=0?1:4;break;case 1:HEAP[e]-=1;b=HEAP[e]==0?3:2;break;case 2:e=b=_PyIter_Next(c);b=b!=0?1:4;break;case 3:FUNCTION_TABLE[HEAP[HEAP[e+
4]+24]](e);b=2;break;case 4:HEAP[c]-=1;b=HEAP[c]==0?5:6;break;case 5:FUNCTION_TABLE[HEAP[HEAP[c+4]+24]](c);b=6;break;case 6:b=_PyErr_Occurred()!=0?7:8;break;case 7:d=0;b=9;break;case 8:HEAP[__Py_NoneStruct]+=1;d=__Py_NoneStruct;b=9;break;case 9:return a=d;default:assert(0,"bad label: "+b)}}function j(a,b){var d;for(d=-1;;)switch(d){case -1:var f,g,k,l,m,n,o,p;f=a;var q=d=b;d=f==d?1:6;break;case 1:n=_PySequence_List(q);d=n==0?2:3;break;case 2:g=0;d=33;break;case 3:m=j(f,n);HEAP[n]-=1;d=HEAP[n]==0?
4:5;break;case 4:FUNCTION_TABLE[HEAP[HEAP[n+4]+24]](n);d=5;break;case 5:g=m;d=33;break;case 6:k=_PyObject_GetIter(q);d=k==0?7:8;break;case 7:g=0;d=33;break;case 8:d=HEAP[f+28]==0?9:27;break;case 9:g=h(k);d=33;break;case 10:HEAP[f+32]+=1;d=HEAP[f+20]==61?11:20;break;case 11:o=e(HEAP[f+12],0,HEAP[f+24]);d=o==0?12:17;break;case 12:HEAP[l]-=1;d=HEAP[l]==0?13:14;break;case 13:FUNCTION_TABLE[HEAP[HEAP[l+4]+24]](l);d=14;break;case 14:HEAP[k]-=1;d=HEAP[k]==0?15:16;break;case 15:FUNCTION_TABLE[HEAP[HEAP[k+
4]+24]](k);d=16;break;case 16:g=0;d=33;break;case 17:d=HEAP[HEAP[f+12]+4]!=0?18:19;break;case 18:throw ___assert_fail(F,u,329,D),"Reached an unreachable!";case 19:HEAP[HEAP[f+12]+4]=o;HEAP[f+12]=o;HEAP[f+20]=-1;d=20;break;case 20:HEAP[f+24]+=1;HEAP[f+20]+=1;HEAP[HEAP[f+12]+8+HEAP[f+20]*4]=l;d=HEAP[f+28]!=-1?21:27;break;case 21:d=HEAP[f+24]>HEAP[f+28]?22:27;break;case 22:p=c(f,0);d=p==0?24:23;break;case 23:d=HEAP[f+24]>HEAP[f+28]?24:25;break;case 24:throw ___assert_fail(N,u,337,D),"Reached an unreachable!";
case 25:HEAP[p]-=1;d=HEAP[p]==0?26:27;break;case 26:FUNCTION_TABLE[HEAP[HEAP[p+4]+24]](p);d=27;break;case 27:l=d=_PyIter_Next(k);d=d!=0?10:28;break;case 28:HEAP[k]-=1;d=HEAP[k]==0?29:30;break;case 29:FUNCTION_TABLE[HEAP[HEAP[k+4]+24]](k);d=30;break;case 30:d=_PyErr_Occurred()!=0?31:32;break;case 31:g=0;d=33;break;case 32:HEAP[__Py_NoneStruct]+=1;g=__Py_NoneStruct;d=33;break;case 33:return f=g;default:assert(0,"bad label: "+d)}}function k(b,c){var d;for(d=-1;;)switch(d){case -1:var f,g,j,l,m,n,o,p;
f=b;var q=d=c;d=f==d?1:6;break;case 1:n=_PySequence_List(q);d=n==0?2:3;break;case 2:g=0;d=33;break;case 3:m=k(f,n);HEAP[n]-=1;d=HEAP[n]==0?4:5;break;case 4:FUNCTION_TABLE[HEAP[HEAP[n+4]+24]](n);d=5;break;case 5:g=m;d=33;break;case 6:j=_PyObject_GetIter(q);d=j==0?7:8;break;case 7:g=0;d=33;break;case 8:d=HEAP[f+28]==0?9:27;break;case 9:g=h(j);d=33;break;case 10:HEAP[f+32]+=1;d=HEAP[f+16]==0?11:20;break;case 11:o=e(0,HEAP[f+8],HEAP[f+24]);d=o==0?12:17;break;case 12:HEAP[l]-=1;d=HEAP[l]==0?13:14;break;
case 13:FUNCTION_TABLE[HEAP[HEAP[l+4]+24]](l);d=14;break;case 14:HEAP[j]-=1;d=HEAP[j]==0?15:16;break;case 15:FUNCTION_TABLE[HEAP[HEAP[j+4]+24]](j);d=16;break;case 16:g=0;d=33;break;case 17:d=HEAP[HEAP[f+8]]!=0?18:19;break;case 18:throw ___assert_fail(I,u,381,L),"Reached an unreachable!";case 19:HEAP[HEAP[f+8]]=o;HEAP[f+8]=o;HEAP[f+16]=62;d=20;break;case 20:HEAP[f+24]+=1;HEAP[f+16]-=1;HEAP[HEAP[f+8]+8+HEAP[f+16]*4]=l;d=HEAP[f+28]!=-1?21:27;break;case 21:d=HEAP[f+24]>HEAP[f+28]?22:27;break;case 22:p=
a(f,0);d=p==0?24:23;break;case 23:d=HEAP[f+24]>HEAP[f+28]?24:25;break;case 24:throw ___assert_fail(N,u,389,L),"Reached an unreachable!";case 25:HEAP[p]-=1;d=HEAP[p]==0?26:27;break;case 26:FUNCTION_TABLE[HEAP[HEAP[p+4]+24]](p);d=27;break;case 27:l=d=_PyIter_Next(j);d=d!=0?10:28;break;case 28:HEAP[j]-=1;d=HEAP[j]==0?29:30;break;case 29:FUNCTION_TABLE[HEAP[HEAP[j+4]+24]](j);d=30;break;case 30:d=_PyErr_Occurred()!=0?31:32;break;case 31:g=0;d=33;break;case 32:HEAP[__Py_NoneStruct]+=1;g=__Py_NoneStruct;
d=33;break;case 33:return f=g;default:assert(0,"bad label: "+d)}}function l(b,e){var g;for(g=-1;;)switch(g){case -1:var h,j,k,l,m,n,o,p;h=b;j=e;m=HEAP[h+24];n=m+1>>1;g=m==0?1:2;break;case 1:k=0;g=31;break;case 2:g=j>n?4:3;break;case 3:g=0-n>j?4:8;break;case 4:j%=m;g=j>n?5:6;break;case 5:j-=m;g=8;break;case 6:g=0-n>j?7:8;break;case 7:j=m+j;g=8;break;case 8:l=0;g=18;break;case 9:o=a(h,0);g=o==0?10:11;break;case 10:throw ___assert_fail(R,u,431,K),"Reached an unreachable!";case 11:p=f(h,o);HEAP[o]-=1;
g=HEAP[o]==0?12:13;break;case 12:FUNCTION_TABLE[HEAP[HEAP[o+4]+24]](o);g=13;break;case 13:g=p==0?14:15;break;case 14:k=-1;g=31;break;case 15:HEAP[p]-=1;g=HEAP[p]==0?16:17;break;case 16:FUNCTION_TABLE[HEAP[HEAP[p+4]+24]](p);g=17;break;case 17:l+=1;g=18;break;case 18:g=l<j?9:19;break;case 19:l=0;g=29;break;case 20:o=c(h,0);g=o==0?21:22;break;case 21:throw ___assert_fail(R,u,440,K),"Reached an unreachable!";case 22:p=d(h,o);HEAP[o]-=1;g=HEAP[o]==0?23:24;break;case 23:FUNCTION_TABLE[HEAP[HEAP[o+4]+24]](o);
g=24;break;case 24:g=p==0?25:26;break;case 25:k=-1;g=31;break;case 26:HEAP[p]-=1;g=HEAP[p]==0?27:28;break;case 27:FUNCTION_TABLE[HEAP[HEAP[p+4]+24]](p);g=28;break;case 28:l-=1;g=29;break;case 29:g=l>j?20:30;break;case 30:k=0;g=31;break;case 31:return g=k;default:assert(0,"bad label: "+g)}}function m(b){var c;for(c=-1;;)switch(c){case -1:var d,e;d=b;c=5;break;case 1:e=a(f,0);c=e==0?2:3;break;case 2:throw ___assert_fail(R,u,598,cb),"Reached an unreachable!";case 3:HEAP[e]-=1;c=HEAP[e]==0?4:5;break;
case 4:FUNCTION_TABLE[HEAP[HEAP[e+4]+24]](e);c=5;break;case 5:var f=d;c=HEAP[d+24]!=0?1:6;break;case 6:c=HEAP[f+8]!=HEAP[d+12]?9:7;break;case 7:c=HEAP[d+16]-1!=HEAP[d+20]?9:8;break;case 8:c=HEAP[d+24]!=0?9:10;break;case 9:throw ___assert_fail(db,u,603,cb),"Reached an unreachable!";case 10:return 0;default:assert(0,"bad label: "+c)}}function n(){p=allocate(1,"i32",ALLOC_NORMAL);q=allocate([99,97,110,110,111,116,32,97,100,100,32,109,111,114,101,32,98,108,111,99,107,115,32,116,111,32,116,104,101,32,
100,101,113,117,101,0],"i8",ALLOC_NORMAL);r=allocate(40,"%struct.block*",ALLOC_NORMAL);t=allocate([112,111,112,32,102,114,111,109,32,97,110,32,101,109,112,116,121,32,100,101,113,117,101,0],"i8",ALLOC_NORMAL);s=allocate([100,101,113,117,101,45,62,108,101,102,116,98,108,111,99,107,32,61,61,32,100,101,113,117,101,45,62,114,105,103,104,116,98,108,111,99,107,0],"i8",ALLOC_NORMAL);u=allocate([46,46,47,99,112,121,116,104,111,110,47,77,111,100,117,108,101,115,47,95,99,111,108,108,101,99,116,105,111,110,115,
109,111,100,117,108,101,46,99,0],"i8",ALLOC_NORMAL);v=allocate([100,101,113,117,101,95,112,111,112,0],"i8",ALLOC_NORMAL);w=allocate([100,101,113,117,101,45,62,108,101,102,116,105,110,100,101,120,32,61,61,32,100,101,113,117,101,45,62,114,105,103,104,116,105,110,100,101,120,43,49,0],"i8",ALLOC_NORMAL);x=allocate([100,101,113,117,101,45,62,108,101,102,116,98,108,111,99,107,32,33,61,32,100,101,113,117,101,45,62,114,105,103,104,116,98,108,111,99,107,0],"i8",ALLOC_NORMAL);y=allocate([82,101,109,111,118,
101,32,97,110,100,32,114,101,116,117,114,110,32,116,104,101,32,114,105,103,104,116,109,111,115,116,32,101,108,101,109,101,110,116,46,0],"i8",ALLOC_NORMAL);B=allocate([100,101,113,117,101,45,62,108,101,102,116,98,108,111,99,107,32,33,61,32,40,40,118,111,105,100,32,42,41,48,41,0],"i8",ALLOC_NORMAL);A=allocate([100,101,113,117,101,95,112,111,112,108,101,102,116,0],"i8",ALLOC_NORMAL);C=allocate([112,114,101,118,98,108,111,99,107,32,33,61,32,40,40,118,111,105,100,32,42,41,48,41,0],"i8",ALLOC_NORMAL);G=
allocate([82,101,109,111,118,101,32,97,110,100,32,114,101,116,117,114,110,32,116,104,101,32,108,101,102,116,109,111,115,116,32,101,108,101,109,101,110,116,46,0],"i8",ALLOC_NORMAL);F=allocate([100,101,113,117,101,45,62,114,105,103,104,116,98,108,111,99,107,45,62,114,105,103,104,116,108,105,110,107,32,61,61,32,40,40,118,111,105,100,32,42,41,48,41,0],"i8",ALLOC_NORMAL);E=allocate([100,101,113,117,101,95,97,112,112,101,110,100,0],"i8",ALLOC_NORMAL);N=allocate([114,118,32,33,61,32,40,40,118,111,105,100,
32,42,41,48,41,32,38,38,32,100,101,113,117,101,45,62,108,101,110,32,60,61,32,100,101,113,117,101,45,62,109,97,120,108,101,110,0],"i8",ALLOC_NORMAL);Q=allocate([65,100,100,32,97,110,32,101,108,101,109,101,110,116,32,116,111,32,116,104,101,32,114,105,103,104,116,32,115,105,100,101,32,111,102,32,116,104,101,32,100,101,113,117,101,46,0],"i8",ALLOC_NORMAL);I=allocate([100,101,113,117,101,45,62,108,101,102,116,98,108,111,99,107,45,62,108,101,102,116,108,105,110,107,32,61,61,32,40,40,118,111,105,100,32,
42,41,48,41,0],"i8",ALLOC_NORMAL);J=allocate([100,101,113,117,101,95,97,112,112,101,110,100,108,101,102,116,0],"i8",ALLOC_NORMAL);P=allocate([65,100,100,32,97,110,32,101,108,101,109,101,110,116,32,116,111,32,116,104,101,32,108,101,102,116,32,115,105,100,101,32,111,102,32,116,104,101,32,100,101,113,117,101,46,0],"i8",ALLOC_NORMAL);D=allocate([100,101,113,117,101,95,101,120,116,101,110,100,0],"i8",ALLOC_NORMAL);T=allocate([69,120,116,101,110,100,32,116,104,101,32,114,105,103,104,116,32,115,105,100,
101,32,111,102,32,116,104,101,32,100,101,113,117,101,32,119,105,116,104,32,101,108,101,109,101,110,116,115,32,102,114,111,109,32,116,104,101,32,105,116,101,114,97,98,108,101,0],"i8",ALLOC_NORMAL);L=allocate([100,101,113,117,101,95,101,120,116,101,110,100,108,101,102,116,0],"i8",ALLOC_NORMAL);$=allocate([69,120,116,101,110,100,32,116,104,101,32,108,101,102,116,32,115,105,100,101,32,111,102,32,116,104,101,32,100,101,113,117,101,32,119,105,116,104,32,101,108,101,109,101,110,116,115,32,102,114,111,109,
32,116,104,101,32,105,116,101,114,97,98,108,101,0],"i8",ALLOC_NORMAL);R=allocate([105,116,101,109,32,33,61,32,40,40,118,111,105,100,32,42,41,48,41,0],"i8",ALLOC_NORMAL);K=allocate([95,100,101,113,117,101,95,114,111,116,97,116,101,0],"i8",ALLOC_NORMAL);H=allocate([124,110,58,114,111,116,97,116,101,0],"i8",ALLOC_NORMAL);S=allocate([82,111,116,97,116,101,32,116,104,101,32,100,101,113,117,101,32,110,32,115,116,101,112,115,32,116,111,32,116,104,101,32,114,105,103,104,116,32,40,100,101,102,97,117,108,116,
32,110,61,49,41,46,32,32,73,102,32,110,32,105,115,32,110,101,103,97,116,105,118,101,44,32,114,111,116,97,116,101,115,32,108,101,102,116,46,0],"i8",ALLOC_NORMAL);U=allocate([108,101,102,116,98,108,111,99,107,32,33,61,32,114,105,103,104,116,98,108,111,99,107,32,124,124,32,108,101,102,116,105,110,100,101,120,32,60,32,114,105,103,104,116,105,110,100,101,120,0],"i8",ALLOC_NORMAL);z=allocate([100,101,113,117,101,95,114,101,118,101,114,115,101,0],"i8",ALLOC_NORMAL);aa=allocate([68,46,114,101,118,101,114,
115,101,40,41,32,45,45,32,114,101,118,101,114,115,101,32,42,73,78,32,80,76,65,67,69,42,0],"i8",ALLOC_NORMAL);ja=allocate([100,101,113,117,101,32,109,117,116,97,116,101,100,32,100,117,114,105,110,103,32,105,116,101,114,97,116,105,111,110,0],"i8",ALLOC_NORMAL);la=allocate([68,46,99,111,117,110,116,40,118,97,108,117,101,41,32,45,62,32,105,110,116,101,103,101,114,32,45,45,32,114,101,116,117,114,110,32,110,117,109,98,101,114,32,111,102,32,111,99,99,117,114,114,101,110,99,101,115,32,111,102,32,118,97,108,
117,101,0],"i8",ALLOC_NORMAL);da=allocate([100,101,113,117,101,32,109,117,116,97,116,101,100,32,100,117,114,105,110,103,32,114,101,109,111,118,101,40,41,46,0],"i8",ALLOC_NORMAL);Ka=allocate([116,103,116,32,33,61,32,40,40,118,111,105,100,32,42,41,48,41,0],"i8",ALLOC_NORMAL);Ma=allocate([100,101,113,117,101,95,114,101,109,111,118,101,0],"i8",ALLOC_NORMAL);wa=allocate([100,101,113,117,101,46,114,101,109,111,118,101,40,120,41,58,32,120,32,110,111,116,32,105,110,32,100,101,113,117,101,0],"i8",ALLOC_NORMAL);
ib=allocate([68,46,114,101,109,111,118,101,40,118,97,108,117,101,41,32,45,45,32,114,101,109,111,118,101,32,102,105,114,115,116,32,111,99,99,117,114,114,101,110,99,101,32,111,102,32,118,97,108,117,101,46,0],"i8",ALLOC_NORMAL);cb=allocate([100,101,113,117,101,95,99,108,101,97,114,0],"i8",ALLOC_NORMAL);db=allocate([100,101,113,117,101,45,62,108,101,102,116,98,108,111,99,107,32,61,61,32,100,101,113,117,101,45,62,114,105,103,104,116,98,108,111,99,107,32,38,38,32,100,101,113,117,101,45,62,108,101,102,116,
105,110,100,101,120,32,45,32,49,32,61,61,32,100,101,113,117,101,45,62,114,105,103,104,116,105,110,100,101,120,32,38,38,32,100,101,113,117,101,45,62,108,101,110,32,61,61,32,48,0],"i8",ALLOC_NORMAL);Da=allocate([100,101,113,117,101,32,105,110,100,101,120,32,111,117,116,32,111,102,32,114,97,110,103,101,0],"i8",ALLOC_NORMAL);gb=allocate([105,32,62,61,32,48,32,38,38,32,105,32,60,32,100,101,113,117,101,45,62,108,101,110,0],"i8",ALLOC_NORMAL);Xa=allocate([100,101,113,117,101,95,100,101,108,95,105,116,101,
109,0],"i8",ALLOC_NORMAL);Ca=allocate([114,118,32,33,61,32,45,49,0],"i8",ALLOC_NORMAL);Za=allocate([100,101,113,117,101,95,99,108,101,97,114,109,101,116,104,111,100,0],"i8",ALLOC_NORMAL);Va=allocate([82,101,109,111,118,101,32,97,108,108,32,101,108,101,109,101,110,116,115,32,102,114,111,109,32,116,104,101,32,100,101,113,117,101,46,0],"i8",ALLOC_NORMAL);Ga=allocate([100,101,113,117,101,95,100,101,97,108,108,111,99,0],"i8",ALLOC_NORMAL);ha=allocate([79,0],"i8",ALLOC_NORMAL);Na=allocate([79,105,0],"i8",
ALLOC_NORMAL);jb=allocate([82,101,116,117,114,110,32,97,32,115,104,97,108,108,111,119,32,99,111,112,121,32,111,102,32,97,32,100,101,113,117,101,46,0],"i8",ALLOC_NORMAL);hb=allocate([95,95,100,105,99,116,95,95,0],"i8",ALLOC_NORMAL);Qa=allocate([79,40,79,41,0],"i8",ALLOC_NORMAL);Ha=allocate([79,40,79,110,41,0],"i8",ALLOC_NORMAL);Ra=allocate([79,40,79,79,41,79,0],"i8",ALLOC_NORMAL);Ia=allocate([79,40,79,110,41,79,0],"i8",ALLOC_NORMAL);Fa=allocate([82,101,116,117,114,110,32,115,116,97,116,101,32,105,
110,102,111,114,109,97,116,105,111,110,32,102,111,114,32,112,105,99,107,108,105,110,103,46,0],"i8",ALLOC_NORMAL);$a=allocate([91,46,46,46,93,0],"i8",ALLOC_NORMAL);Wa=allocate([100,101,113,117,101,40,37,37,114,44,32,109,97,120,108,101,110,61,37,122,100,41,0],"i8",ALLOC_NORMAL);Y=allocate([100,101,113,117,101,40,37,114,41,0],"i8",ALLOC_NORMAL);kb=allocate(1,"i8",ALLOC_NORMAL);ra=allocate([44,32,0],"i8",ALLOC_NORMAL);Ta=allocate([100,101,113,117,101,40,91,0],"i8",ALLOC_NORMAL);ia=allocate([93,41,0],
"i8",ALLOC_NORMAL);ba=allocate([93,44,32,109,97,120,108,101,110,61,37,122,100,41,0],"i8",ALLOC_NORMAL);Ya=allocate([105,116,101,114,97,98,108,101,0],"i8",ALLOC_NORMAL);ta=allocate([109,97,120,108,101,110,0],"i8",ALLOC_NORMAL);O=allocate([124,79,79,58,100,101,113,117,101,0],"i8",ALLOC_NORMAL);wb=allocate([109,97,120,108,101,110,32,109,117,115,116,32,98,101,32,110,111,110,45,110,101,103,97,116,105,118,101,0],"i8",ALLOC_NORMAL);bb=allocate([109,97,120,105,109,117,109,32,115,105,122,101,32,111,102,32,
97,32,100,101,113,117,101,32,111,114,32,78,111,110,101,32,105,102,32,117,110,98,111,117,110,100,101,100,0],"i8",ALLOC_NORMAL);vb=allocate(40,["i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, i8*)*",0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*, i8*)*",0,0,0,"i8*",0,0,0,"i8","i8","i8","i8","i8*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8"],ALLOC_NORMAL);ka=allocate(40,["i32 (%struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",
0,0,0,"%struct.PyObject* (%struct.PyObject*, i32)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, i32)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, i32, i32)*",0,0,0,"i32 (%struct.PyObject*, i32, %struct.PyObject*)*",0,0,0,"i32 (%struct.PyObject*, i32, i32, %struct.PyObject*)*",0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, i32)*",0,0,0],ALLOC_NORMAL);za=allocate([68,46,95,95,114,101,
118,101,114,115,101,100,95,95,40,41,32,45,45,32,114,101,116,117,114,110,32,97,32,114,101,118,101,114,115,101,32,105,116,101,114,97,116,111,114,32,111,118,101,114,32,116,104,101,32,100,101,113,117,101,0],"i8",ALLOC_NORMAL);Aa=allocate([97,112,112,101,110,100,0],"i8",ALLOC_NORMAL);La=allocate([97,112,112,101,110,100,108,101,102,116,0],"i8",ALLOC_NORMAL);ya=allocate([99,108,101,97,114,0],"i8",ALLOC_NORMAL);ub=allocate([95,95,99,111,112,121,95,95,0],"i8",ALLOC_NORMAL);Z=allocate([99,111,117,110,116,0],
"i8",ALLOC_NORMAL);qa=allocate([101,120,116,101,110,100,0],"i8",ALLOC_NORMAL);M=allocate([101,120,116,101,110,100,108,101,102,116,0],"i8",ALLOC_NORMAL);na=allocate([112,111,112,0],"i8",ALLOC_NORMAL);nb=allocate([112,111,112,108,101,102,116,0],"i8",ALLOC_NORMAL);ca=allocate([95,95,114,101,100,117,99,101,95,95,0],"i8",ALLOC_NORMAL);ua=allocate([114,101,109,111,118,101,0],"i8",ALLOC_NORMAL);Ea=allocate([95,95,114,101,118,101,114,115,101,100,95,95,0],"i8",ALLOC_NORMAL);Eb=allocate([114,101,118,101,114,
115,101,0],"i8",ALLOC_NORMAL);zb=allocate([114,111,116,97,116,101,0],"i8",ALLOC_NORMAL);va=allocate([0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],["i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,
"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",
0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,
0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8"],ALLOC_NORMAL);xa=allocate([100,101,113,117,101,40,105,116,101,114,97,98,108,101,91,44,32,109,97,120,108,101,110,93,41,32,45,45,62,32,100,101,113,117,101,32,111,98,106,101,99,116,10,10,66,117,105,108,100,32,97,110,32,111,114,100,101,114,101,100,32,99,111,108,108,101,99,116,105,111,110,32,119,105,116,104,32,111,112,116,105,109,105,122,101,100,32,97,99,99,101,115,115,32,102,114,111,
109,32,105,116,115,32,101,110,100,112,111,105,110,116,115,46,0],"i8",ALLOC_NORMAL);V=allocate([99,111,108,108,101,99,116,105,111,110,115,46,100,101,113,117,101,0],"i8",ALLOC_NORMAL);sa=allocate([1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,148971,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,36,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],["i32",0,0,0,"%struct._typeobject*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i32",0,0,0,"i32",0,0,0,"void (%struct.PyObject*)*",0,0,0,"i32 (%struct.PyObject*, %struct.FILE*, i32)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, i8*)*",0,0,0,"i32 (%struct.PyObject*, i8*, %struct.PyObject*)*",0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*)*",0,0,0,"%struct.PyNumberMethods*",
0,0,0,"%struct.PySequenceMethods*",0,0,0,"%struct.PyMappingMethods*",0,0,0,"i32 (%struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"%struct.PyBufferProcs*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i32 (%struct.PyObject*, i32 (%struct.PyObject*, i8*)*, i8*)*",0,0,0,
"i32 (%struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*, i32)*",0,0,0,"i32",0,0,0,"%struct.PyObject* (%struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*)*",0,0,0,"%struct.PyMethodDef*",0,0,0,"%struct.PyMemberDef*",0,0,0,"%struct.PyGetSetDef*",0,0,0,"%struct._typeobject*",0,0,0,"%struct.PyObject*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",
0,0,0,"i32",0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct._typeobject*, i32)*",0,0,0,"%struct.PyObject* (%struct._typeobject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"void (i8*)*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8"],ALLOC_NORMAL);pa=allocate([33,40,105,116,45,62,98,32,61,61,32,105,116,45,62,100,101,113,
117,101,45,62,114,105,103,104,116,98,108,111,99,107,32,38,38,32,105,116,45,62,105,110,100,101,120,32,62,32,105,116,45,62,100,101,113,117,101,45,62,114,105,103,104,116,105,110,100,101,120,41,0],"i8",ALLOC_NORMAL);fb=allocate([100,101,113,117,101,105,116,101,114,95,110,101,120,116,0],"i8",ALLOC_NORMAL);ma=allocate([105,116,45,62,98,45,62,114,105,103,104,116,108,105,110,107,32,33,61,32,40,40,118,111,105,100,32,42,41,48,41,0],"i8",ALLOC_NORMAL);sb=allocate([80,114,105,118,97,116,101,32,109,101,116,104,
111,100,32,114,101,116,117,114,110,105,110,103,32,97,110,32,101,115,116,105,109,97,116,101,32,111,102,32,108,101,110,40,108,105,115,116,40,105,116,41,41,46,0],"i8",ALLOC_NORMAL);mb=allocate([95,95,108,101,110,103,116,104,95,104,105,110,116,95,95,0],"i8",ALLOC_NORMAL);yb=allocate([0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],["i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",
0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8"],ALLOC_NORMAL);Nb=allocate([100,101,113,117,101,95,105,116,101,114,97,116,111,114,0],"i8",ALLOC_NORMAL);Ib=allocate([1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,28,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,147947,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],["i32",0,0,0,"%struct._typeobject*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i32",0,0,0,"i32",0,0,0,"void (%struct.PyObject*)*",0,0,0,"i32 (%struct.PyObject*, %struct.FILE*, i32)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, i8*)*",0,0,0,"i32 (%struct.PyObject*, i8*, %struct.PyObject*)*",0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*)*",0,0,0,"%struct.PyNumberMethods*",0,0,0,"%struct.PySequenceMethods*",
0,0,0,"%struct.PyMappingMethods*",0,0,0,"i32 (%struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"%struct.PyBufferProcs*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i32 (%struct.PyObject*, i32 (%struct.PyObject*, i8*)*, i8*)*",0,0,0,"i32 (%struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*, i32)*",
0,0,0,"i32",0,0,0,"%struct.PyObject* (%struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*)*",0,0,0,"%struct.PyMethodDef*",0,0,0,"%struct.PyMemberDef*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8",
"i8","i8","i8","i8","i8"],ALLOC_NORMAL);Db=allocate([33,40,105,116,45,62,98,32,61,61,32,105,116,45,62,100,101,113,117,101,45,62,108,101,102,116,98,108,111,99,107,32,38,38,32,105,116,45,62,105,110,100,101,120,32,60,32,105,116,45,62,100,101,113,117,101,45,62,108,101,102,116,105,110,100,101,120,41,0],"i8",ALLOC_NORMAL);Ub=allocate([100,101,113,117,101,114,101,118,105,116,101,114,95,110,101,120,116,0],"i8",ALLOC_NORMAL);Tb=allocate([105,116,45,62,98,45,62,108,101,102,116,108,105,110,107,32,33,61,32,40,
40,118,111,105,100,32,42,41,48,41,0],"i8",ALLOC_NORMAL);qb=allocate([100,101,113,117,101,95,114,101,118,101,114,115,101,95,105,116,101,114,97,116,111,114,0],"i8",ALLOC_NORMAL);Mb=allocate([1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,28,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,147947,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],["i32",0,0,0,"%struct._typeobject*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i32",0,0,0,"i32",0,0,0,"void (%struct.PyObject*)*",0,0,0,"i32 (%struct.PyObject*, %struct.FILE*, i32)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, i8*)*",0,0,0,"i32 (%struct.PyObject*, i8*, %struct.PyObject*)*",0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*)*",0,0,0,"%struct.PyNumberMethods*",0,
0,0,"%struct.PySequenceMethods*",0,0,0,"%struct.PyMappingMethods*",0,0,0,"i32 (%struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"%struct.PyBufferProcs*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i32 (%struct.PyObject*, i32 (%struct.PyObject*, i8*)*, i8*)*",0,0,0,"i32 (%struct.PyObject*)*",
0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*, i32)*",0,0,0,"i32",0,0,0,"%struct.PyObject* (%struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*)*",0,0,0,"%struct.PyMethodDef*",0,0,0,"%struct.PyMemberDef*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8",
"i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8"],ALLOC_NORMAL);Hb=allocate([95,95,109,105,115,115,105,110,103,95,95,40,107,101,121,41,32,35,32,67,97,108,108,101,100,32,98,121,32,95,95,103,101,116,105,116,101,109,95,95,32,102,111,114,32,109,105,115,115,105,110,103,32,107,101,121,59,32,112,115,101,117,100,111,45,99,111,100,101,58,10,32,32,105,102,32,115,101,108,102,46,100,101,102,97,117,108,116,95,102,97,99,116,111,114,121,32,105,115,32,78,111,110,
101,58,32,114,97,105,115,101,32,75,101,121,69,114,114,111,114,40,40,107,101,121,44,41,41,10,32,32,115,101,108,102,91,107,101,121,93,32,61,32,118,97,108,117,101,32,61,32,115,101,108,102,46,100,101,102,97,117,108,116,95,102,97,99,116,111,114,121,40,41,10,32,32,114,101,116,117,114,110,32,118,97,108,117,101,10,0],"i8",ALLOC_NORMAL);Wb=allocate([68,46,99,111,112,121,40,41,32,45,62,32,97,32,115,104,97,108,108,111,119,32,99,111,112,121,32,111,102,32,68,46,0],"i8",ALLOC_NORMAL);ea=allocate([105,116,101,114,
105,116,101,109,115,0],"i8",ALLOC_NORMAL);Qb=allocate([40,41,0],"i8",ALLOC_NORMAL);Bb=allocate([95,95,109,105,115,115,105,110,103,95,95,0],"i8",ALLOC_NORMAL);ic=allocate([99,111,112,121,0],"i8",ALLOC_NORMAL);Vb=allocate([0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],["i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",
0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8"],ALLOC_NORMAL);Oa=allocate([100,101,102,97,117,108,116,95,102,97,99,116,111,114,121,0],"i8",ALLOC_NORMAL);eb=allocate([70,97,99,116,111,114,121,32,102,111,114,32,100,101,102,97,117,108,116,32,118,
97,108,117,101,32,99,97,108,108,101,100,32,98,121,32,95,95,109,105,115,115,105,110,103,95,95,40,41,46,0],"i8",ALLOC_NORMAL);Ob=allocate([0,0,0,0,6,0,0,0,124,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],["i8*",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8"],ALLOC_NORMAL);Sa=allocate([100,101,102,97,117,108,116,100,105,99,116,40,0],"i8",ALLOC_NORMAL);Yb=allocate([78,111,110,101,0],"i8",
ALLOC_NORMAL);xb=allocate([46,46,46,0],"i8",ALLOC_NORMAL);Xb=allocate([100,101,102,97,117,108,116,100,105,99,116,40,37,115,44,32,37,115,41,0],"i8",ALLOC_NORMAL);lb=allocate([102,105,114,115,116,32,97,114,103,117,109,101,110,116,32,109,117,115,116,32,98,101,32,99,97,108,108,97,98,108,101,0],"i8",ALLOC_NORMAL);fc=allocate([100,101,102,97,117,108,116,100,105,99,116,40,100,101,102,97,117,108,116,95,102,97,99,116,111,114,121,41,32,45,45,62,32,100,105,99,116,32,119,105,116,104,32,100,101,102,97,117,108,
116,32,102,97,99,116,111,114,121,10,10,84,104,101,32,100,101,102,97,117,108,116,32,102,97,99,116,111,114,121,32,105,115,32,99,97,108,108,101,100,32,119,105,116,104,111,117,116,32,97,114,103,117,109,101,110,116,115,32,116,111,32,112,114,111,100,117,99,101,10,97,32,110,101,119,32,118,97,108,117,101,32,119,104,101,110,32,97,32,107,101,121,32,105,115,32,110,111,116,32,112,114,101,115,101,110,116,44,32,105,110,32,95,95,103,101,116,105,116,101,109,95,95,32,111,110,108,121,46,10,65,32,100,101,102,97,117,
108,116,100,105,99,116,32,99,111,109,112,97,114,101,115,32,101,113,117,97,108,32,116,111,32,97,32,100,105,99,116,32,119,105,116,104,32,116,104,101,32,115,97,109,101,32,105,116,101,109,115,46,10,0],"i8",ALLOC_NORMAL);jc=allocate([99,111,108,108,101,99,116,105,111,110,115,46,100,101,102,97,117,108,116,100,105,99,116,0],"i8",ALLOC_NORMAL);Pb=allocate([1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,148971,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],["i32",0,0,0,"%struct._typeobject*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i32",0,0,0,"i32",0,0,0,"void (%struct.PyObject*)*",0,0,0,"i32 (%struct.PyObject*, %struct.FILE*, i32)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, i8*)*",0,0,0,"i32 (%struct.PyObject*, i8*, %struct.PyObject*)*",
0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*)*",0,0,0,"%struct.PyNumberMethods*",0,0,0,"%struct.PySequenceMethods*",0,0,0,"%struct.PyMappingMethods*",0,0,0,"i32 (%struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",
0,0,0,"%struct.PyBufferProcs*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i32 (%struct.PyObject*, i32 (%struct.PyObject*, i8*)*, i8*)*",0,0,0,"i32 (%struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*, i32)*",0,0,0,"i32",0,0,0,"%struct.PyObject* (%struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*)*",0,0,0,"%struct.PyMethodDef*",0,0,0,"%struct.PyMemberDef*",0,0,0,"%struct.PyGetSetDef*",0,0,0,"%struct._typeobject*",0,0,0,"%struct.PyObject*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",
0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct._typeobject*, i32)*",0,0,0,"%struct.PyObject* (%struct._typeobject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"void (i8*)*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8"],ALLOC_NORMAL);nc=
allocate([72,105,103,104,32,112,101,114,102,111,114,109,97,110,99,101,32,100,97,116,97,32,115,116,114,117,99,116,117,114,101,115,46,10,45,32,100,101,113,117,101,58,32,32,32,32,32,32,32,32,111,114,100,101,114,101,100,32,99,111,108,108,101,99,116,105,111,110,32,97,99,99,101,115,115,105,98,108,101,32,102,114,111,109,32,101,110,100,112,111,105,110,116,115,32,111,110,108,121,10,45,32,100,101,102,97,117,108,116,100,105,99,116,58,32,32,100,105,99,116,32,115,117,98,99,108,97,115,115,32,119,105,116,104,32,
97,32,100,101,102,97,117,108,116,32,118,97,108,117,101,32,102,97,99,116,111,114,121,10,0],"i8",ALLOC_NORMAL);rb=allocate([95,99,111,108,108,101,99,116,105,111,110,115,0],"i8",ALLOC_NORMAL);fa=allocate([100,101,113,117,101,0],"i8",ALLOC_NORMAL);tb=allocate([100,101,102,97,117,108,116,100,105,99,116,0],"i8",ALLOC_NORMAL);HEAP[vb]=ta;HEAP[vb+4]=g+2;HEAP[vb+12]=bb;HEAP[ka]=g+4;HEAP[ka+12]=g+6;HEAP[ka+20]=g+8;HEAP[ka+32]=g+10;HEAP[va]=Aa;HEAP[va+4]=g+12;HEAP[va+12]=Q;HEAP[va+16]=La;HEAP[va+20]=g+14;HEAP[va+
28]=P;HEAP[va+32]=ya;HEAP[va+36]=g+16;HEAP[va+44]=Va;HEAP[va+48]=ub;HEAP[va+52]=g+18;HEAP[va+60]=jb;HEAP[va+64]=Z;HEAP[va+68]=g+20;HEAP[va+76]=la;HEAP[va+80]=qa;HEAP[va+84]=g+22;HEAP[va+92]=T;HEAP[va+96]=M;HEAP[va+100]=g+24;HEAP[va+108]=$;HEAP[va+112]=na;HEAP[va+116]=g+26;HEAP[va+124]=y;HEAP[va+128]=nb;HEAP[va+132]=g+28;HEAP[va+140]=G;HEAP[va+144]=ca;HEAP[va+148]=g+30;HEAP[va+156]=Fa;HEAP[va+160]=ua;HEAP[va+164]=g+32;HEAP[va+172]=ib;HEAP[va+176]=Ea;HEAP[va+180]=g+34;HEAP[va+188]=za;HEAP[va+192]=Eb;
HEAP[va+196]=g+36;HEAP[va+204]=aa;HEAP[va+208]=zb;HEAP[va+212]=g+38;HEAP[va+220]=S;HEAP[sa+12]=V;HEAP[sa+24]=g+40;HEAP[sa+28]=g+42;HEAP[sa+44]=g+44;HEAP[sa+52]=ka;HEAP[sa+60]=g+46;HEAP[sa+72]=g+48;HEAP[sa+88]=xa;HEAP[sa+92]=g+50;HEAP[sa+96]=g+52;HEAP[sa+100]=g+54;HEAP[sa+108]=g+56;HEAP[sa+116]=va;HEAP[sa+124]=vb;HEAP[sa+148]=g+58;HEAP[sa+152]=g+60;HEAP[sa+156]=g+62;HEAP[sa+160]=g+64;HEAP[yb]=mb;HEAP[yb+4]=g+66;HEAP[yb+12]=sb;HEAP[Ib+12]=Nb;HEAP[Ib+24]=g+68;HEAP[Ib+72]=g+48;HEAP[Ib+92]=g+70;HEAP[Ib+
108]=g+72;HEAP[Ib+112]=g+74;HEAP[Ib+116]=yb;HEAP[Mb+12]=qb;HEAP[Mb+24]=g+68;HEAP[Mb+72]=g+48;HEAP[Mb+92]=g+70;HEAP[Mb+108]=g+72;HEAP[Mb+112]=g+76;HEAP[Mb+116]=yb;HEAP[Vb]=Bb;HEAP[Vb+4]=g+78;HEAP[Vb+12]=Hb;HEAP[Vb+16]=ic;HEAP[Vb+20]=g+80;HEAP[Vb+28]=Wb;HEAP[Vb+32]=ub;HEAP[Vb+36]=g+80;HEAP[Vb+44]=Wb;HEAP[Vb+48]=ca;HEAP[Vb+52]=g+82;HEAP[Vb+60]=Fa;HEAP[Ob]=Oa;HEAP[Ob+16]=eb;HEAP[Pb+12]=jc;HEAP[Pb+24]=g+84;HEAP[Pb+28]=g+86;HEAP[Pb+44]=g+88;HEAP[Pb+72]=g+48;HEAP[Pb+88]=fc;HEAP[Pb+92]=g+90;HEAP[Pb+96]=g+
92;HEAP[Pb+116]=Vb;HEAP[Pb+120]=Ob;HEAP[Pb+148]=g+94;HEAP[Pb+152]=g+60;HEAP[Pb+160]=g+64}var o={arguments:[]};Runtime.QUANTUM_SIZE=4;var p,q,r,t,s,u,v,w,x,y,B,A,C,G,F,E,N,Q,I,J,P,D,T,L,$,R,K,H,S,U,z,aa,ja,la,da,Ka,Ma,wa,ib,cb,db,Da,gb,Xa,Ca,Za,Va,Ga,ha,Na,jb,hb,Qa,Ha,Ra,Ia,Fa,$a,Wa,Y,kb,ra,Ta,ia,ba,Ya,ta,O,wb,bb,vb,ka,za,Aa,La,ya,ub,Z,qa,M,na,nb,ca,ua,Ea,Eb,zb,va,xa,V,sa,pa,fb,ma,sb,mb,yb,Nb,Ib,Db,Ub,Tb,qb,Mb,Hb,Wb,ea,Qb,Bb,ic,Vb,Oa,eb,Ob,Sa,Yb,xb,Xb,lb,fc,jc,Pb,nc,rb,fa,tb;o._init_collections=function(){var a;
for(a=-1;;)switch(a){case -1:var b;b=_Py_InitModule4(rb,0,nc,0,1013);a=b==0?5:1;break;case 1:a=_PyType_Ready(sa)<0?5:2;break;case 2:HEAP[sa]+=1;_PyModule_AddObject(b,fa,sa);HEAP[Pb+128]=_PyDict_Type;a=_PyType_Ready(Pb)<0?5:3;break;case 3:HEAP[Pb]+=1;_PyModule_AddObject(b,tb,Pb);a=_PyType_Ready(Ib)<0?5:4;break;case 4:_PyType_Ready(Mb);return;case 5:return;default:assert(0,"bad label: "+a)}};FUNCTION_TABLE=FUNCTION_TABLE.concat([0,0,function(a){var b;for(b=-1;;)switch(b){case -1:var c,d;c=a;b=HEAP[c+
28]==-1?1:2;break;case 1:HEAP[__Py_NoneStruct]+=1;d=__Py_NoneStruct;b=3;break;case 2:d=_PyInt_FromSsize_t(HEAP[c+28]);b=3;break;case 3:return a=d;default:assert(0,"bad label: "+b)}},0,function(a){return HEAP[a+24]},0,function(a,b){var c;for(c=-1;;)switch(c){case -1:var d,e,f,g,h,j;d=a;j=e=b;c=e<0?2:1;break;case 1:c=HEAP[d+24]<=e?2:3;break;case 2:_PyErr_SetString(HEAP[_PyExc_IndexError],Da);f=0;c=13;break;case 3:var k=d;c=e==0?4:5;break;case 4:e=HEAP[k+16];g=HEAP[d+8];c=12;break;case 5:var l=d;c=HEAP[k+
24]-1==e?6:7;break;case 6:e=HEAP[l+20];g=HEAP[d+12];c=12;break;case 7:e+=HEAP[l+16];h=e/62|0;e%=62;var m=d;c=HEAP[d+24]>>1>j?8:10;break;case 8:g=HEAP[m+8];h=c=h-1;c=c!=-1?9:12;break;case 9:g=HEAP[g+4];h=c=h-1;c=c!=-1?9:12;break;case 10:h=((HEAP[m+16]+-1+HEAP[d+24])/62|0)-h;g=HEAP[d+12];h=c=h-1;c=c!=-1?11:12;break;case 11:g=HEAP[g];h=c=h-1;c=c!=-1?11:12;break;case 12:f=HEAP[g+8+e*4];HEAP[f]+=1;c=13;break;case 13:return d=f;default:assert(0,"bad label: "+c)}},0,function(a,b,d){var e;for(e=-1;;)switch(e){case -1:var f,
g,h,j,k,m,n,o,p,q;f=a;g=b;h=d;o=HEAP[f+24];p=o+1>>1;q=g;e=g<0?2:1;break;case 1:e=g>=o?2:3;break;case 2:_PyErr_SetString(HEAP[_PyExc_IndexError],Da);j=-1;e=13;break;case 3:var r=f;e=h==0?4:5;break;case 4:a:{j=r;e=g;for(var s=void 0,s=-1;;)switch(s){case -1:var t,v,z,w;t=j;v=e;s=v<0?2:1;break;case 1:s=HEAP[t+24]<=v?2:3;break;case 2:throw ___assert_fail(gb,u,658,Xa),"Reached an unreachable!";case 3:s=l(t,0-v)==-1?4:5;break;case 4:z=-1;s=10;break;case 5:w=c(t,0);s=w==0?6:7;break;case 6:throw ___assert_fail(R,
u,663,Xa),"Reached an unreachable!";case 7:HEAP[w]-=1;s=HEAP[w]==0?8:9;break;case 8:FUNCTION_TABLE[HEAP[HEAP[w+4]+24]](w);s=9;break;case 9:z=l(t,v);s=10;break;case 10:j=z;break a;default:assert(0,"bad label: "+s)}j=void 0}e=13;break;case 5:g+=HEAP[r+16];n=g/62|0;g%=62;var x=f;e=q<=p?6:8;break;case 6:m=HEAP[x+8];n=e=n-1;e=e!=-1?7:10;break;case 7:m=HEAP[m+4];n=e=n-1;e=e!=-1?7:10;break;case 8:n=((HEAP[x+16]+-1+o)/62|0)-n;m=HEAP[f+12];n=e=n-1;e=e!=-1?9:10;break;case 9:m=HEAP[m];n=e=n-1;e=e!=-1?9:10;break;
case 10:HEAP[h]+=1;k=HEAP[m+8+g*4];HEAP[m+8+g*4]=h;HEAP[k]-=1;e=HEAP[k]==0?11:12;break;case 11:FUNCTION_TABLE[HEAP[HEAP[k+4]+24]](k);e=12;break;case 12:j=0;e=13;break;case 13:return a=j;default:assert(0,"bad label: "+e)}},0,function(a,b){var c;for(c=-1;;)switch(c){case -1:var d,e,f;d=a;var g=f=j(d,b);c=f==0?1:2;break;case 1:e=g;c=5;break;case 2:HEAP[f]=HEAP[g]-1;c=HEAP[f]==0?3:4;break;case 3:FUNCTION_TABLE[HEAP[HEAP[f+4]+24]](f);c=4;break;case 4:HEAP[d]+=1;e=d;c=5;break;case 5:return c=e;default:assert(0,
"bad label: "+c)}},0,d,0,f,0,function(a){var b;for(b=-1;;)switch(b){case -1:b=m(a)==-1?1:2;break;case 1:throw ___assert_fail(Ca,u,710,Za),"Reached an unreachable!";case 2:return HEAP[__Py_NoneStruct]+=1,a=__Py_NoneStruct;default:assert(0,"bad label: "+b)}},0,function(a){var b;for(b=-1;;)switch(b){case -1:var c,d,e=c=a;b=HEAP[c+28]==-1?1:2;break;case 1:d=_PyObject_CallFunction(HEAP[e+4],ha,allocate([c,0,0,0,0,0,0,0],["%struct.PyObject*",0,0,0,"i8*",0,0,0],ALLOC_STACK));b=3;break;case 2:d=_PyObject_CallFunction(HEAP[c+
4],Na,allocate([c,0,0,0,HEAP[e+28],0,0,0,0,0,0,0],["%struct.PyObject*",0,0,0,"i32",0,0,0,"i8*",0,0,0],ALLOC_STACK));b=3;break;case 3:return a=d;default:assert(0,"bad label: "+b)}},0,function(a,b){var c;for(c=-1;;)switch(c){case -1:var d,e,f,g,h,j,k,l,m,n;d=a;e=b;g=HEAP[d+8];h=HEAP[d+16];j=HEAP[d+24];l=0;m=HEAP[d+32];k=0;c=11;break;case 1:c=HEAP[g+8+h*4];n=_PyObject_RichCompareBool(c,e,2);c=n>0?2:3;break;case 2:l+=1;c=5;break;case 3:c=n<0?4:5;break;case 4:f=0;c=13;break;case 5:c=HEAP[d+32]!=m?6:7;
break;case 6:_PyErr_SetString(HEAP[_PyExc_RuntimeError],ja);f=0;c=13;break;case 7:h+=1;c=h==62?8:10;break;case 8:c=HEAP[g+4]==0?12:9;break;case 9:g=HEAP[g+4];h=0;c=10;break;case 10:k+=1;c=11;break;case 11:c=k<j?1:12;break;case 12:f=_PyInt_FromSsize_t(l);c=13;break;case 13:return d=f;default:assert(0,"bad label: "+c)}},0,j,0,k,0,a,0,c,0,function(a){var b;for(b=-1;;)switch(b){case -1:var c,d,e,f,g;c=a;e=_PyObject_GetAttrString(c,hb);b=e==0?1:2;break;case 1:_PyErr_Clear();b=2;break;case 2:g=b=_PySequence_List(c);
var h=e;b=b==0?3:7;break;case 3:b=h!=0?4:6;break;case 4:HEAP[e]-=1;b=HEAP[e]==0?5:6;break;case 5:FUNCTION_TABLE[HEAP[HEAP[e+4]+24]](e);b=6;break;case 6:d=0;b=20;break;case 7:var j=HEAP[c+28]==-1,k=c;b=h==0?8:11;break;case 8:b=j?9:10;break;case 9:f=_Py_BuildValue(Qa,allocate([HEAP[k+4],0,0,0,g,0,0,0],["%struct._typeobject*",0,0,0,"%struct.PyObject*",0,0,0],ALLOC_STACK));b=14;break;case 10:f=_Py_BuildValue(Ha,allocate([HEAP[c+4],0,0,0,g,0,0,0,HEAP[k+28],0,0,0],["%struct._typeobject*",0,0,0,"%struct.PyObject*",
0,0,0,"i32",0,0,0],ALLOC_STACK));b=14;break;case 11:b=j?12:13;break;case 12:f=_Py_BuildValue(Ra,allocate([HEAP[k+4],0,0,0,g,0,0,0,__Py_NoneStruct,0,0,0,e,0,0,0],["%struct._typeobject*",0,0,0,"%struct.PyObject*",0,0,0,"%struct.PyObject*",0,0,0,"%struct.PyObject*",0,0,0],ALLOC_STACK));b=14;break;case 13:f=_Py_BuildValue(Ia,allocate([HEAP[c+4],0,0,0,g,0,0,0,HEAP[k+28],0,0,0,e,0,0,0],["%struct._typeobject*",0,0,0,"%struct.PyObject*",0,0,0,"i32",0,0,0,"%struct.PyObject*",0,0,0],ALLOC_STACK));b=14;break;
case 14:b=e!=0?15:17;break;case 15:HEAP[e]-=1;b=HEAP[e]==0?16:17;break;case 16:FUNCTION_TABLE[HEAP[HEAP[e+4]+24]](e);b=17;break;case 17:HEAP[g]-=1;b=HEAP[g]==0?18:19;break;case 18:FUNCTION_TABLE[HEAP[HEAP[g+4]+24]](g);b=19;break;case 19:d=f;b=20;break;case 20:return a=d;default:assert(0,"bad label: "+b)}},0,function(a,b){var d;for(d=-1;;)switch(d){case -1:var e,f,g,h,j,k,m;e=a;f=b;j=HEAP[e+24];h=0;d=14;break;case 1:d=HEAP[HEAP[e+8]+8+HEAP[e+16]*4];k=_PyObject_RichCompareBool(d,f,2);d=HEAP[e+24]!=
j?2:3;break;case 2:_PyErr_SetString(HEAP[_PyExc_IndexError],da);g=0;d=16;break;case 3:d=k>0?4:11;break;case 4:m=c(e,0);d=m==0?5:6;break;case 5:throw ___assert_fail(Ka,u,572,Ma),"Reached an unreachable!";case 6:HEAP[m]-=1;d=HEAP[m]==0?7:8;break;case 7:FUNCTION_TABLE[HEAP[HEAP[m+4]+24]](m);d=8;break;case 8:d=l(e,h)==-1?9:10;break;case 9:g=0;d=16;break;case 10:HEAP[__Py_NoneStruct]+=1;g=__Py_NoneStruct;d=16;break;case 11:var n=e;d=k<0?12:13;break;case 12:l(n,h);g=0;d=16;break;case 13:l(n,-1);h+=1;d=
14;break;case 14:d=h<j?1:15;break;case 15:_PyErr_SetString(HEAP[_PyExc_ValueError],wa);g=0;d=16;break;case 16:return e=g;default:assert(0,"bad label: "+d)}},0,function(a){var b;for(b=-1;;)switch(b){case -1:var c,d,e;c=a;e=__PyObject_GC_New(Mb);b=e==0?1:2;break;case 1:d=0;b=3;break;case 2:HEAP[e+12]=HEAP[c+12];HEAP[e+8]=HEAP[c+20];HEAP[c]+=1;HEAP[e+16]=c;HEAP[e+20]=HEAP[c+32];HEAP[e+24]=HEAP[c+24];_PyObject_GC_Track(e);d=e;b=3;break;case 3:return a=d;default:assert(0,"bad label: "+b)}},0,function(a){var b;
for(b=-1;;)switch(b){case -1:var c,d,e,f,g,h;c=a;d=HEAP[c+8];e=HEAP[c+12];f=HEAP[c+16];g=HEAP[c+20];c=HEAP[c+24]/2|0;h=0;b=11;break;case 1:b=d==e?2:4;break;case 2:b=f>=g?3:4;break;case 3:throw ___assert_fail(U,u,478,z),"Reached an unreachable!";case 4:b=HEAP[d+8+f*4];HEAP[d+8+f*4]=HEAP[e+8+g*4];HEAP[e+8+g*4]=b;f=b=f+1;b=b==62?5:7;break;case 5:b=HEAP[d+4]==0?12:6;break;case 6:d=HEAP[d+4];f=0;b=7;break;case 7:g=b=g-1;b=b==-1?8:10;break;case 8:b=HEAP[e]==0?12:9;break;case 9:e=HEAP[e];g=61;b=10;break;
case 10:h+=1;b=11;break;case 11:b=h<c?1:12;break;case 12:return HEAP[__Py_NoneStruct]+=1,a=__Py_NoneStruct;default:assert(0,"bad label: "+b)}},0,function(a,b){var c=STACKTOP;STACKTOP+=4;_memset(c,0,4);var d;for(d=-1;;)switch(d){case -1:var e,f,g=c;e=a;d=b;HEAP[g]=1;d=_PyArg_ParseTuple(d,H,allocate([g,0,0,0],["i32*",0,0,0],ALLOC_STACK))==0?1:2;break;case 1:f=0;d=5;break;case 2:d=l(e,HEAP[g])==0?3:4;break;case 3:HEAP[__Py_NoneStruct]+=1;f=__Py_NoneStruct;d=5;break;case 4:f=0;d=5;break;case 5:return e=
f,STACKTOP=c,e;default:assert(0,"bad label: "+d)}},0,function(a){var c;for(c=-1;;)switch(c){case -1:var d;d=a;_PyObject_GC_UnTrack(d);c=HEAP[d+36]!=0?1:2;break;case 1:_PyObject_ClearWeakRefs(d);c=2;break;case 2:c=HEAP[d+8]!=0?3:6;break;case 3:m(d);c=HEAP[d+8]==0?4:5;break;case 4:throw ___assert_fail(B,u,724,Ga),"Reached an unreachable!";case 5:b(HEAP[d+8]);c=6;break;case 6:HEAP[d+8]=0;HEAP[d+12]=0;FUNCTION_TABLE[HEAP[HEAP[d+4]+160]](d);return;default:assert(0,"bad label: "+c)}},0,function(a,b){var c;
for(c=-1;;)switch(c){case -1:var d,e,f,g,h,j,k,l;d=a;e=b;j=kb;k=ra;l=_Py_ReprEnter(d);c=l!=0?1:4;break;case 1:c=l<0?2:3;break;case 2:f=l;c=24;break;case 3:_fwrite($a,1,5,e);f=0;c=24;break;case 4:g=_PyObject_GetIter(d);c=g==0?5:6;break;case 5:f=-1;c=24;break;case 6:_fwrite(Ta,1,7,e);c=15;break;case 7:_fputs(j,e);j=k;c=_PyObject_Print(h,e,0)!=0;HEAP[h]-=1;var m=HEAP[h]==0;c=c?8:13;break;case 8:c=m?9:10;break;case 9:FUNCTION_TABLE[HEAP[HEAP[h+4]+24]](h);c=10;break;case 10:HEAP[g]-=1;c=HEAP[g]==0?11:
12;break;case 11:FUNCTION_TABLE[HEAP[HEAP[g+4]+24]](g);c=12;break;case 12:_Py_ReprLeave(d);f=-1;c=24;break;case 13:c=m?14:15;break;case 14:FUNCTION_TABLE[HEAP[HEAP[h+4]+24]](h);c=15;break;case 15:h=c=_PyIter_Next(g);c=c!=0?7:16;break;case 16:_Py_ReprLeave(d);HEAP[g]-=1;c=HEAP[g]==0?17:18;break;case 17:FUNCTION_TABLE[HEAP[HEAP[g+4]+24]](g);c=18;break;case 18:c=_PyErr_Occurred()!=0?19:20;break;case 19:f=-1;c=24;break;case 20:c=HEAP[d+28]==-1?21:22;break;case 21:_fwrite(ia,1,2,e);c=23;break;case 22:_fprintf(e,
ba,allocate([HEAP[d+28],0,0,0],["i32",0,0,0],ALLOC_STACK));c=23;break;case 23:f=0;c=24;break;case 24:return d=f;default:assert(0,"bad label: "+c)}},0,function(a){var b,c=null;for(b=-1;;)switch(b){case -1:var d,e,f,g,h,j;d=a;j=_Py_ReprEnter(d);b=j!=0?1:4;break;case 1:b=j<0?2:3;break;case 2:e=0;b=18;break;case 3:e=_PyString_FromString($a);b=18;break;case 4:f=_PySequence_List(d);var k=d;b=f==0?5:6;break;case 5:_Py_ReprLeave(k);e=0;b=18;break;case 6:b=HEAP[k+28]!=-1?7:8;break;case 7:var l=_PyString_FromFormat(Wa,
allocate([HEAP[d+28],0,0,0],["i32",0,0,0],ALLOC_STACK));h=l;c=7;b=9;break;case 8:var m=_PyString_FromString(Y);h=m;c=8;b=9;break;case 9:b=(c==8?m:l)==0?10:13;break;case 10:HEAP[f]-=1;b=HEAP[f]==0?11:12;break;case 11:FUNCTION_TABLE[HEAP[HEAP[f+4]+24]](f);b=12;break;case 12:_Py_ReprLeave(d);e=0;b=18;break;case 13:g=_PyString_Format(h,f);HEAP[h]-=1;b=HEAP[h]==0?14:15;break;case 14:FUNCTION_TABLE[HEAP[HEAP[h+4]+24]](h);b=15;break;case 15:HEAP[f]-=1;b=HEAP[f]==0?16:17;break;case 16:FUNCTION_TABLE[HEAP[HEAP[f+
4]+24]](f);b=17;break;case 17:_Py_ReprLeave(d);e=g;b=18;break;case 18:return a=e;default:assert(0,"bad label: "+b)}},0,_PyObject_HashNotImplemented,0,_PyObject_GenericGetAttr,0,function(a,b,c){var d,e=null;for(d=-1;;)switch(d){case -1:var f,g,h,j,k,l,m,n,o,p,q;f=a;g=b;h=c;o=HEAP[f+16];var r=HEAP[f+8];l=r;e=-1;d=11;break;case 1:d=HEAP[f+12]==l?2:3;break;case 2:k=HEAP[f+20];d=4;break;case 3:k=61;d=4;break;case 4:p=k;n=o;d=9;break;case 5:m=HEAP[l+8+n*4];d=m!=0?6:8;break;case 6:q=FUNCTION_TABLE[g](m,
h);d=q!=0?7:8;break;case 7:j=q;d=13;break;case 8:n+=1;d=9;break;case 9:d=n<=p?5:10;break;case 10:o=0;var s=HEAP[l+4];l=s;e=10;d=11;break;case 11:d=(e==10?s:r)!=0?1:12;break;case 12:j=0;d=13;break;case 13:return a=j;default:assert(0,"bad label: "+d)}},0,m,0,function(a,b,c){var d,e=null;for(d=-1;;)switch(d){case -1:var f,g,h,j,k,l,m,n,o,p,q,r;f=a;g=b;h=c;l=k=0;r=-1;d=HEAP[f+4]==sa?2:1;break;case 1:d=_PyType_IsSubtype(HEAP[f+4],sa)==0?4:2;break;case 2:d=HEAP[g+4]==sa?5:3;break;case 3:d=_PyType_IsSubtype(HEAP[g+
4],sa)==0?4:5;break;case 4:HEAP[__Py_NotImplementedStruct]+=1;j=__Py_NotImplementedStruct;d=58;break;case 5:o=HEAP[f+24];p=HEAP[g+24];var s=h;s==2?(e=5,d=6):(e=5,d=11);break;case 6:d=f==g?7:8;break;case 7:HEAP[__Py_TrueStruct]+=1;j=__Py_TrueStruct;d=58;break;case 8:d=o!=p?9:10;break;case 9:HEAP[__Py_ZeroStruct]+=1;j=__Py_ZeroStruct;d=58;break;case 10:var t=h,e=10;d=11;break;case 11:d=(e==10?t:s)==3?12:16;break;case 12:d=f==g?13:14;break;case 13:HEAP[__Py_ZeroStruct]+=1;j=__Py_ZeroStruct;d=58;break;
case 14:d=o!=p?15:16;break;case 15:HEAP[__Py_TrueStruct]+=1;j=__Py_TrueStruct;d=58;break;case 16:k=d=_PyObject_GetIter(f);d=d==0?50:17;break;case 17:l=_PyObject_GetIter(g);d=l==0?47:18;break;case 18:m=d=_PyIter_Next(k);d=d==0?19:20;break;case 19:d=_PyErr_Occurred()!=0?47:20;break;case 20:var u=_PyIter_Next(l);n=u;m==0?(e=20,d=36):(e=20,d=21);break;case 21:var v=m;d=n==0?32:22;break;case 22:q=_PyObject_RichCompareBool(v,n,2);var z=m;d=q==0?23:27;break;case 23:r=_PyObject_RichCompareBool(z,n,h);HEAP[m]-=
1;d=HEAP[m]==0?24:25;break;case 24:FUNCTION_TABLE[HEAP[HEAP[m+4]+24]](m);d=25;break;case 25:HEAP[n]-=1;d=HEAP[n]==0?26:47;break;case 26:FUNCTION_TABLE[HEAP[HEAP[n+4]+24]](n);d=47;break;case 27:HEAP[m]=HEAP[z]-1;d=HEAP[m]==0?28:29;break;case 28:FUNCTION_TABLE[HEAP[HEAP[m+4]+24]](m);d=29;break;case 29:HEAP[n]-=1;d=HEAP[n]==0?30:31;break;case 30:FUNCTION_TABLE[HEAP[HEAP[n+4]+24]](n);d=31;break;case 31:d=q==-1?47:18;break;case 32:d=v!=0?33:35;break;case 33:HEAP[m]-=1;d=HEAP[m]==0?34:35;break;case 34:FUNCTION_TABLE[HEAP[HEAP[m+
4]+24]](m);d=35;break;case 35:var w=n,e=35;d=36;break;case 36:d=(e==35?w:u)!=0?37:39;break;case 37:HEAP[n]-=1;d=HEAP[n]==0?38:39;break;case 38:FUNCTION_TABLE[HEAP[HEAP[n+4]+24]](n);d=39;break;case 39:d=_PyErr_Occurred()!=0?47:40;break;case 40:d=h;d=d==0?41:d==1?42:d==2?43:d==3?44:d==4?45:d==5?46:47;break;case 41:r=n!=0;d=47;break;case 42:r=m==0;d=47;break;case 43:r=m==n;d=47;break;case 44:r=m!=n;d=47;break;case 45:r=m!=0;d=47;break;case 46:r=n==0;d=47;break;case 47:d=k!=0?48:50;break;case 48:HEAP[k]-=
1;d=HEAP[k]==0?49:50;break;case 49:FUNCTION_TABLE[HEAP[HEAP[k+4]+24]](k);d=50;break;case 50:d=l!=0?51:53;break;case 51:HEAP[l]-=1;d=HEAP[l]==0?52:53;break;case 52:FUNCTION_TABLE[HEAP[HEAP[l+4]+24]](l);d=53;break;case 53:d=r==1?54:55;break;case 54:HEAP[__Py_TrueStruct]+=1;j=__Py_TrueStruct;d=58;break;case 55:d=r==0?56:57;break;case 56:HEAP[__Py_ZeroStruct]+=1;j=__Py_ZeroStruct;d=58;break;case 57:j=0;d=58;break;case 58:return a=j;default:assert(0,"bad label: "+d)}},0,function(a){var b;for(b=-1;;)switch(b){case -1:var c,
d,e;c=a;e=__PyObject_GC_New(Ib);b=e==0?1:2;break;case 1:d=0;b=3;break;case 2:HEAP[e+12]=HEAP[c+8];HEAP[e+8]=HEAP[c+16];HEAP[c]+=1;HEAP[e+16]=c;HEAP[e+20]=HEAP[c+32];HEAP[e+24]=HEAP[c+24];_PyObject_GC_Track(e);d=e;b=3;break;case 3:return a=d;default:assert(0,"bad label: "+b)}},0,function(a,b,c){var d=STACKTOP;STACKTOP+=20;_memset(d,0,20);var e,f=null;for(e=-1;;)switch(e){case -1:var g,h,k,l=d,n=d+4,o,p=d+8,q;g=a;e=b;h=c;HEAP[l]=0;HEAP[n]=0;o=-1;HEAP[p]=Ya;HEAP[p+4]=ta;HEAP[p+8]=0;e=_PyArg_ParseTupleAndKeywords(e,
h,O,p,allocate([l,0,0,0,n,0,0,0],["%struct.PyObject**",0,0,0,"%struct.PyObject**",0,0,0],ALLOC_STACK))==0?1:2;break;case 1:k=-1;e=15;break;case 2:e=HEAP[n]!=0&HEAP[n]!=__Py_NoneStruct?3:9;break;case 3:var r=o=_PyInt_AsSsize_t(HEAP[n]);r==-1?(f=3,e=4):(f=3,e=7);break;case 4:e=_PyErr_Occurred()!=0?5:6;break;case 5:k=-1;e=15;break;case 6:var s=o,f=6;e=7;break;case 7:e=(f==6?s:r)<0?8:9;break;case 8:_PyErr_SetString(HEAP[_PyExc_ValueError],wb);k=-1;e=15;break;case 9:HEAP[g+28]=o;m(g);e=HEAP[l]!=0?10:14;
break;case 10:q=j(g,HEAP[l]);e=q==0?11:12;break;case 11:k=-1;e=15;break;case 12:HEAP[q]-=1;e=HEAP[q]==0?13:14;break;case 13:FUNCTION_TABLE[HEAP[HEAP[q+4]+24]](q);e=14;break;case 14:k=0;e=15;break;case 15:return a=k,STACKTOP=d,a;default:assert(0,"bad label: "+e)}},0,_PyType_GenericAlloc,0,function(a){var b;for(b=-1;;)switch(b){case -1:var c,d,f;b=a;d=FUNCTION_TABLE[HEAP[b+152]](b,0);b=d==0?1:2;break;case 1:c=0;b=7;break;case 2:f=e(0,0,0);var g=d;b=f==0?3:6;break;case 3:HEAP[g]-=1;b=HEAP[g]==0?4:5;
break;case 4:FUNCTION_TABLE[HEAP[HEAP[d+4]+24]](d);b=5;break;case 5:c=0;b=7;break;case 6:HEAP[g+8]=f;HEAP[d+12]=f;HEAP[d+16]=31;HEAP[d+20]=30;HEAP[d+24]=0;HEAP[d+32]=0;HEAP[d+36]=0;HEAP[d+28]=-1;c=d;b=7;break;case 7:return a=c;default:assert(0,"bad label: "+b)}},0,_PyObject_GC_Del,0,function(a){return _PyInt_FromLong(HEAP[a+24])},0,function(a){var b;for(b=-1;;)switch(b){case -1:var c;c=a;b=HEAP[c+16]!=0?1:3;break;case 1:b=HEAP[c+16];HEAP[b]-=1;b=HEAP[b]==0?2:3;break;case 2:FUNCTION_TABLE[HEAP[HEAP[HEAP[c+
16]+4]+24]](HEAP[c+16]);b=3;break;case 3:_PyObject_GC_Del(c);return;default:assert(0,"bad label: "+b)}},0,function(a,b,c){var d;for(d=-1;;)switch(d){case -1:var e,f,g,h,j;e=a;f=b;g=c;d=HEAP[e+16]!=0?1:3;break;case 1:j=FUNCTION_TABLE[f](HEAP[e+16],g);d=j!=0?2:3;break;case 2:h=j;d=4;break;case 3:h=0;d=4;break;case 4:return a=h;default:assert(0,"bad label: "+d)}},0,_PyObject_SelfIter,0,function(a){var b;for(b=-1;;)switch(b){case -1:var c,d,e;c=a;var f=c+24;b=HEAP[HEAP[c+16]+32]!=HEAP[c+20]?1:2;break;
case 1:HEAP[f]=0;_PyErr_SetString(HEAP[_PyExc_RuntimeError],ja);d=0;b=13;break;case 2:b=HEAP[f]==0?3:4;break;case 3:d=0;b=13;break;case 4:b=HEAP[c+12]==HEAP[HEAP[c+16]+12]?5:7;break;case 5:b=HEAP[c+8]>HEAP[HEAP[c+16]+20]?6:7;break;case 6:throw ___assert_fail(pa,u,1168,fb),"Reached an unreachable!";case 7:e=HEAP[HEAP[c+12]+8+HEAP[c+8]*4];HEAP[c+8]+=1;HEAP[c+24]-=1;b=HEAP[c+8]==62?8:12;break;case 8:b=HEAP[c+24]>0?9:12;break;case 9:b=HEAP[HEAP[c+12]+4]==0?10:11;break;case 10:throw ___assert_fail(ma,
u,1174,fb),"Reached an unreachable!";case 11:HEAP[c+12]=HEAP[HEAP[c+12]+4];HEAP[c+8]=0;b=12;break;case 12:HEAP[e]+=1;d=e;b=13;break;case 13:return a=d;default:assert(0,"bad label: "+b)}},0,function(a){var b;for(b=-1;;)switch(b){case -1:var c,d,e;c=a;b=HEAP[c+24]==0?1:2;break;case 1:d=0;b=13;break;case 2:var f=c;b=HEAP[HEAP[c+16]+32]!=HEAP[c+20]?3:4;break;case 3:HEAP[f+24]=0;_PyErr_SetString(HEAP[_PyExc_RuntimeError],ja);d=0;b=13;break;case 4:b=HEAP[f+12]==HEAP[HEAP[c+16]+8]?5:7;break;case 5:b=HEAP[c+
8]<HEAP[HEAP[c+16]+16]?6:7;break;case 6:throw ___assert_fail(Db,u,1264,Ub),"Reached an unreachable!";case 7:e=HEAP[HEAP[c+12]+8+HEAP[c+8]*4];HEAP[c+8]-=1;HEAP[c+24]-=1;b=HEAP[c+8]==-1?8:12;break;case 8:b=HEAP[c+24]>0?9:12;break;case 9:b=HEAP[HEAP[c+12]]==0?10:11;break;case 10:throw ___assert_fail(Tb,u,1270,Ub),"Reached an unreachable!";case 11:HEAP[c+12]=HEAP[HEAP[c+12]];HEAP[c+8]=61;b=12;break;case 12:HEAP[e]+=1;d=e;b=13;break;case 13:return a=d;default:assert(0,"bad label: "+b)}},0,function(a,b){var c;
for(c=-1;;)switch(c){case -1:var d,e,f,g,h,j;d=a;e=b;g=HEAP[d+124];c=g==0|g==__Py_NoneStruct?1:6;break;case 1:j=_PyTuple_Pack(1,allocate([e,0,0,0],["%struct.PyObject*",0,0,0],ALLOC_STACK));c=j==0?2:3;break;case 2:f=0;c=13;break;case 3:_PyErr_SetObject(HEAP[_PyExc_KeyError],j);HEAP[j]-=1;c=HEAP[j]==0?4:5;break;case 4:FUNCTION_TABLE[HEAP[HEAP[j+4]+24]](j);c=5;break;case 5:f=0;c=13;break;case 6:h=_PyEval_CallObjectWithKeywords(g,0,0);c=h==0?7:8;break;case 7:f=h;c=13;break;case 8:c=_PyObject_SetItem(d,
e,h);var k=h;c=c<0?9:12;break;case 9:HEAP[h]=HEAP[k]-1;c=HEAP[h]==0?10:11;break;case 10:FUNCTION_TABLE[HEAP[HEAP[h+4]+24]](h);c=11;break;case 11:f=0;c=13;break;case 12:f=k;c=13;break;case 13:return d=f;default:assert(0,"bad label: "+c)}},0,function(a){var b;for(b=-1;;)switch(b){case -1:var c,d,e=c=a;b=HEAP[c+124]==0?1:2;break;case 1:d=_PyObject_CallFunctionObjArgs(HEAP[e+4],allocate([__Py_NoneStruct,0,0,0,c,0,0,0,0,0,0,0],["%struct.PyObject*",0,0,0,"%struct.defdictobject*",0,0,0,"i8*",0,0,0],ALLOC_STACK));
b=3;break;case 2:d=_PyObject_CallFunctionObjArgs(HEAP[c+4],allocate([HEAP[e+124],0,0,0,c,0,0,0,0,0,0,0],["%struct.PyObject*",0,0,0,"%struct.defdictobject*",0,0,0,"i8*",0,0,0],ALLOC_STACK));b=3;break;case 3:return a=d;default:assert(0,"bad label: "+b)}},0,function(a){var b,c=null;for(b=-1;;)switch(b){case -1:var d,e,f,g,h;d=a;b=HEAP[d+124]==0?2:1;break;case 1:b=HEAP[d+124]==__Py_NoneStruct?2:3;break;case 2:var j=_PyTuple_New(0);f=j;c=2;b=4;break;case 3:var k=_PyTuple_Pack(1,allocate([HEAP[d+124],0,
0,0],["%struct.PyObject*",0,0,0],ALLOC_STACK));f=k;c=3;b=4;break;case 4:b=(c==3?k:j)==0?5:6;break;case 5:e=0;b=15;break;case 6:g=_PyObject_CallMethod(d,ea,Qb,allocate(1,"i32",ALLOC_STACK));b=g==0?7:10;break;case 7:HEAP[f]-=1;b=HEAP[f]==0?8:9;break;case 8:FUNCTION_TABLE[HEAP[HEAP[f+4]+24]](f);b=9;break;case 9:e=0;b=15;break;case 10:h=_PyTuple_Pack(5,allocate([HEAP[d+4],0,0,0,f,0,0,0,__Py_NoneStruct,0,0,0,__Py_NoneStruct,0,0,0,g,0,0,0],["%struct._typeobject*",0,0,0,"%struct.PyObject*",0,0,0,"%struct.PyObject*",
0,0,0,"%struct.PyObject*",0,0,0,"%struct.PyObject*",0,0,0],ALLOC_STACK));HEAP[g]-=1;b=HEAP[g]==0?11:12;break;case 11:FUNCTION_TABLE[HEAP[HEAP[g+4]+24]](g);b=12;break;case 12:HEAP[f]-=1;b=HEAP[f]==0?13:14;break;case 13:FUNCTION_TABLE[HEAP[HEAP[f+4]+24]](f);b=14;break;case 14:e=h;b=15;break;case 15:return a=e;default:assert(0,"bad label: "+b)}},0,function(a){var b;for(b=-1;;)switch(b){case -1:var c,d;c=a;b=HEAP[c+124]!=0?1:3;break;case 1:d=HEAP[c+124];HEAP[c+124]=0;HEAP[d]-=1;b=HEAP[d]==0?2:3;break;
case 2:FUNCTION_TABLE[HEAP[HEAP[d+4]+24]](d);b=3;break;case 3:FUNCTION_TABLE[HEAP[_PyDict_Type+24]](c);return;default:assert(0,"bad label: "+b)}},0,function(a,b){var c;for(c=-1;;)switch(c){case -1:var d,e;d=a;e=b;_fwrite(Sa,1,12,e);c=HEAP[d+124]==0?1:2;break;case 1:_fwrite(Yb,1,4,e);c=3;break;case 2:_PyObject_Print(HEAP[d+124],e,0);c=3;break;case 3:return _fwrite(ra,1,2,e),c=FUNCTION_TABLE[HEAP[_PyDict_Type+28]](d,e,0),_fputc(41,e),e=c;default:assert(0,"bad label: "+c)}},0,function(a){var b,c=null;
for(b=-1;;)switch(b){case -1:var d,e,f,g,h,j;d=a;g=FUNCTION_TABLE[HEAP[_PyDict_Type+44]](d);b=g==0?1:2;break;case 1:e=0;b=19;break;case 2:b=HEAP[d+124]==0?3:4;break;case 3:var k=_PyString_FromString(Yb);f=k;c=3;b=10;break;case 4:j=_Py_ReprEnter(HEAP[d+124]);b=j!=0?5:8;break;case 5:b=j<0?6:7;break;case 6:e=0;b=19;break;case 7:f=_PyString_FromString(xb);b=9;break;case 8:f=_PyObject_Repr(HEAP[d+124]);b=9;break;case 9:_Py_ReprLeave(HEAP[d+124]);var l=f,c=9;b=10;break;case 10:var m=g;b=(c==9?l:k)==0?11:
14;break;case 11:HEAP[g]=HEAP[m]-1;b=HEAP[g]==0?12:13;break;case 12:FUNCTION_TABLE[HEAP[HEAP[g+4]+24]](g);b=13;break;case 13:e=0;b=19;break;case 14:h=_PyString_FromFormat(Xb,allocate([f+20,0,0,0,m+20,0,0,0],["i8*",0,0,0,"i8*",0,0,0],ALLOC_STACK));HEAP[f]-=1;b=HEAP[f]==0?15:16;break;case 15:FUNCTION_TABLE[HEAP[HEAP[f+4]+24]](f);b=16;break;case 16:HEAP[g]-=1;b=HEAP[g]==0?17:18;break;case 17:FUNCTION_TABLE[HEAP[HEAP[g+4]+24]](g);b=18;break;case 18:e=h;b=19;break;case 19:return a=e;default:assert(0,"bad label: "+
b)}},0,function(a,b,c){var d;for(d=-1;;)switch(d){case -1:var e,f,g,h,j;e=a;f=b;g=c;d=HEAP[e+124]!=0?1:3;break;case 1:j=FUNCTION_TABLE[f](HEAP[e+124],g);d=j!=0?2:3;break;case 2:h=j;d=4;break;case 3:h=FUNCTION_TABLE[HEAP[_PyDict_Type+92]](e,f,g);d=4;break;case 4:return a=h;default:assert(0,"bad label: "+d)}},0,function(a){var b;for(b=-1;;)switch(b){case -1:var c,d;c=a;b=HEAP[c+124]!=0?1:3;break;case 1:d=HEAP[c+124];HEAP[c+124]=0;HEAP[d]-=1;b=HEAP[d]==0?2:3;break;case 2:FUNCTION_TABLE[HEAP[HEAP[d+4]+
24]](d);b=3;break;case 3:return a=FUNCTION_TABLE[HEAP[_PyDict_Type+96]](c);default:assert(0,"bad label: "+b)}},0,function(a,b,c){var d,e=null;for(d=-1;;)switch(d){case -1:var f,g,h,j,k,l,m,n,o,p;f=a;g=b;h=c;k=f;l=HEAP[k+124];m=0;d=g==0?2:1;break;case 1:d=(HEAP[HEAP[g+4]+84]&67108864)==0?2:3;break;case 2:var q=_PyTuple_New(0);n=q;e=2;d=7;break;case 3:p=HEAP[g+8];d=p>0?4:6;break;case 4:m=HEAP[g+12];d=_PyCallable_Check(m)==0&m!=__Py_NoneStruct?5:6;break;case 5:_PyErr_SetString(HEAP[_PyExc_TypeError],
lb);j=-1;d=17;break;case 6:var r=_PySequence_GetSlice(g,1,p);n=r;e=6;d=7;break;case 7:d=(e==6?r:q)==0?8:9;break;case 8:j=-1;d=17;break;case 9:d=m!=0?10:11;break;case 10:HEAP[m]+=1;d=11;break;case 11:HEAP[k+124]=m;o=FUNCTION_TABLE[HEAP[_PyDict_Type+148]](f,n,h);HEAP[n]-=1;d=HEAP[n]==0?12:13;break;case 12:FUNCTION_TABLE[HEAP[HEAP[n+4]+24]](n);d=13;break;case 13:d=l!=0?14:16;break;case 14:HEAP[l]-=1;d=HEAP[l]==0?15:16;break;case 15:FUNCTION_TABLE[HEAP[HEAP[l+4]+24]](l);d=16;break;case 16:j=o;d=17;break;
case 17:return a=j;default:assert(0,"bad label: "+d)}},0]);o.run=n;n();return o});