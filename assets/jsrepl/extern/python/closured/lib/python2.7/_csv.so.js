(function(g){function e(a){var b;for(b=-1;;)switch(b){case -1:var c;c=_PyDict_GetItem(HEAP[x],a);b=c==0?1:3;break;case 1:b=_PyErr_Occurred()==0?2:4;break;case 2:_PyErr_Format(HEAP[y],B,allocate(1,"i32",ALLOC_STACK));b=4;break;case 3:HEAP[c]+=1;b=4;break;case 4:return a=c;default:assert(0,"bad label: "+b)}}function b(a){var b=STACKTOP;STACKTOP+=1;_memset(b,0,1);var c;for(c=-1;;)switch(c){case -1:var d=b,e;HEAP[d]=a;c=HEAP[d]==0?1:2;break;case 1:HEAP[__Py_NoneStruct]+=
1;e=__Py_NoneStruct;c=3;break;case 2:e=_PyString_FromStringAndSize(d,1);c=3;break;case 3:return a=e,STACKTOP=b,a;default:assert(0,"bad label: "+c)}}function a(a,b,c,d){for(a=-1;;)switch(a){case -1:var e,f,g;e=b;f=c;g=d;a=f==0?1:2;break;case 1:HEAP[e]=g;a=3;break;case 2:a=_PyObject_IsTrue(f);HEAP[e]=a;a=3;break;case 3:return 0;default:assert(0,"bad label: "+a)}}function c(a,b,c,d){var e;for(e=-1;;)switch(e){case -1:var f,g,h,j,k,l;f=a;g=b;h=c;j=d;e=h==0?1:2;break;case 1:HEAP[g]=j;e=11;break;case 2:e=
h==__Py_NoneStruct?4:3;break;case 3:e=_PyString_Size(h)==0?4:5;break;case 4:HEAP[g]=0;e=11;break;case 5:e=(HEAP[HEAP[h+4]+84]&134217728)==0?7:6;break;case 6:e=_PyString_Size(h)!=1?7:8;break;case 7:_PyErr_Format(HEAP[_PyExc_TypeError],C,allocate([f,0,0,0],["i8*",0,0,0],ALLOC_STACK));k=-1;e=12;break;case 8:l=_PyString_AsString(h);e=l==0?9:10;break;case 9:k=-1;e=12;break;case 10:HEAP[g]=HEAP[l];e=11;break;case 11:k=0;e=12;break;case 12:return a=k;default:assert(0,"bad label: "+e)}}function d(a,b){var c;
for(c=-1;;)switch(c){case -1:var d,e,f,g,h,j;d=a;e=b;c=d!=0?1:2;break;case 1:g=Ka;c=3;break;case 2:g=Ma;c=3;break;case 3:h=c=_Py_BuildValue(g,allocate([d,0,0,0],["%struct.PyObject*",0,0,0],ALLOC_STACK));c=c==0?4:5;break;case 4:f=0;c=8;break;case 5:j=_PyObject_Call(da,h,e);HEAP[h]-=1;c=HEAP[h]==0?6:7;break;case 6:FUNCTION_TABLE[HEAP[HEAP[h+4]+24]](h);c=7;break;case 7:f=j;c=8;break;case 8:return d=f;default:assert(0,"bad label: "+c)}}function f(a){var b;for(b=-1;;)switch(b){case -1:var c,d,e,f;c=a;
e=_PyString_FromStringAndSize(HEAP[c+24],HEAP[c+32]);b=e==0?1:2;break;case 1:d=-1;b=13;break;case 2:HEAP[c+32]=0;b=HEAP[c+36]!=0?3:10;break;case 3:HEAP[c+36]=0;f=_PyNumber_Float(e);HEAP[e]-=1;var g=HEAP[e]==0;b=f==0?4:7;break;case 4:b=g?5:6;break;case 5:FUNCTION_TABLE[HEAP[HEAP[e+4]+24]](e);b=6;break;case 6:d=-1;b=13;break;case 7:b=g?8:9;break;case 8:FUNCTION_TABLE[HEAP[HEAP[e+4]+24]](e);b=9;break;case 9:e=f;b=10;break;case 10:_PyList_Append(HEAP[c+16],e);HEAP[e]-=1;b=HEAP[e]==0?11:12;break;case 11:FUNCTION_TABLE[HEAP[HEAP[e+
4]+24]](e);b=12;break;case 12:d=0;b=13;break;case 13:return a=d;default:assert(0,"bad label: "+b)}}function h(a,b){var c;for(c=-1;;)switch(c){case -1:var d,e,f;d=a;e=b;c=HEAP[d+32]>=HEAP[r]?1:2;break;case 1:_PyErr_Format(HEAP[y],wa,allocate([HEAP[r],0,0,0],["i32",0,0,0],ALLOC_STACK));f=-1;c=6;break;case 2:c=HEAP[d+32]==HEAP[d+28]?3:5;break;case 3:a:{c=d;for(var g=void 0,g=-1;;)switch(g){case -1:var h,j;h=c;var k=h+28,g=HEAP[h+28]==0?1:4;break;case 1:HEAP[k]=4096;g=HEAP[h+24]!=0?2:3;break;case 2:_PyMem_Free(HEAP[h+
24]);g=3;break;case 3:g=_PyMem_Malloc(HEAP[h+28]);HEAP[h+24]=g;g=7;break;case 4:g=HEAP[k]>1073741823?5:6;break;case 5:_PyErr_NoMemory();j=0;g=10;break;case 6:HEAP[h+28]*=2;g=_PyMem_Realloc(HEAP[h+24],HEAP[h+28]);HEAP[h+24]=g;g=7;break;case 7:g=HEAP[h+24]==0?8:9;break;case 8:_PyErr_NoMemory();j=0;g=10;break;case 9:j=1;g=10;break;case 10:c=j;break a;default:assert(0,"bad label: "+g)}c=void 0}c=c==0?4:5;break;case 4:f=-1;c=6;break;case 5:f=HEAP[d+32];HEAP[HEAP[d+24]+f]=e;HEAP[d+32]=f+1;f=0;c=6;break;
case 6:return d=f;default:assert(0,"bad label: "+c)}}function j(a,b){var c;for(c=-1;;)switch(c){case -1:var d,e,g,j,k,l,m;d=a;e=b;m=HEAP[d+12];c=HEAP[d+20];c=c==0?1:c==1?5:c==2?27:c==3?32:c==4?47:c==5?57:c==6?62:c==7?83:87;break;case 1:c=e==0?87:2;break;case 2:var n=d+20;c=e==10|e==13?3:4;break;case 3:HEAP[n]=7;c=87;break;case 4:HEAP[n]=1;c=5;break;case 5:c=e==10|e==13|e==0?6:12;break;case 6:c=f(d)<0?7:8;break;case 7:l=-1;c=88;break;case 8:c=e==0?9:10;break;case 9:k=0;c=11;break;case 10:k=7;c=11;
break;case 11:HEAP[d+20]=k;c=87;break;case 12:c=HEAP[m+13]!=e?15:13;break;case 13:c=HEAP[m+24]==3?15:14;break;case 14:HEAP[d+20]=4;c=87;break;case 15:c=HEAP[m+14]==e?16:17;break;case 16:HEAP[d+20]=2;c=87;break;case 17:c=e!=32?19:18;break;case 18:c=HEAP[m+16]==0?19:87;break;case 19:c=HEAP[m+12]==e?20:22;break;case 20:c=f(d)<0?21:87;break;case 21:l=-1;c=88;break;case 22:c=HEAP[m+24]==2?23:24;break;case 23:HEAP[d+36]=1;c=24;break;case 24:c=h(d,e&255)<0?25:26;break;case 25:l=-1;c=88;break;case 26:HEAP[d+
20]=3;c=87;break;case 27:c=e==0?28:29;break;case 28:e=10;c=29;break;case 29:c=h(d,e&255)<0?30:31;break;case 30:l=-1;c=88;break;case 31:HEAP[d+20]=3;c=87;break;case 32:c=e==10|e==13|e==0?33:39;break;case 33:c=f(d)<0?34:35;break;case 34:l=-1;c=88;break;case 35:c=e==0?36:37;break;case 36:j=0;c=38;break;case 37:j=7;c=38;break;case 38:HEAP[d+20]=j;c=87;break;case 39:c=HEAP[m+14]==e?40:41;break;case 40:HEAP[d+20]=2;c=87;break;case 41:c=HEAP[m+12]==e?42:45;break;case 42:c=f(d)<0?43:44;break;case 43:l=-1;
c=88;break;case 44:HEAP[d+20]=1;c=87;break;case 45:c=h(d,e&255)<0?46:87;break;case 46:l=-1;c=88;break;case 47:c=e!=0?48:87;break;case 48:c=HEAP[m+14]==e?49:50;break;case 49:HEAP[d+20]=5;c=87;break;case 50:c=HEAP[m+13]!=e?55:51;break;case 51:c=HEAP[m+24]==3?55:52;break;case 52:var o=d+20;c=HEAP[m+8]!=0?53:54;break;case 53:HEAP[o]=6;c=87;break;case 54:HEAP[o]=3;c=87;break;case 55:c=h(d,e&255)<0?56:87;break;case 56:l=-1;c=88;break;case 57:c=e==0?58:59;break;case 58:e=10;c=59;break;case 59:c=h(d,e&255)<
0?60:61;break;case 60:l=-1;c=88;break;case 61:HEAP[d+20]=4;c=87;break;case 62:c=HEAP[m+24]==3?67:63;break;case 63:c=HEAP[m+13]!=e?67:64;break;case 64:c=h(d,e&255)<0?65:66;break;case 65:l=-1;c=88;break;case 66:HEAP[d+20]=4;c=87;break;case 67:c=HEAP[m+12]==e?68:71;break;case 68:c=f(d)<0?69:70;break;case 69:l=-1;c=88;break;case 70:HEAP[d+20]=1;c=87;break;case 71:c=e==10|e==13|e==0?72:78;break;case 72:c=f(d)<0?73:74;break;case 73:l=-1;c=88;break;case 74:c=e==0?75:76;break;case 75:g=0;c=77;break;case 76:g=
7;c=77;break;case 77:HEAP[d+20]=g;c=87;break;case 78:c=HEAP[m+28]==0?79:82;break;case 79:c=h(d,e&255)<0?80:81;break;case 80:l=-1;c=88;break;case 81:HEAP[d+20]=3;c=87;break;case 82:_PyErr_Format(HEAP[y],ib,allocate([HEAP[m+12],0,0,0,HEAP[m+13],0,0,0],["i32",0,0,0,"i32",0,0,0],ALLOC_STACK));l=-1;c=88;break;case 83:c=e!=10&e!=13?84:87;break;case 84:c=e==0?85:86;break;case 85:HEAP[d+20]=0;c=87;break;case 86:_PyErr_Format(HEAP[y],cb,allocate(1,"i32",ALLOC_STACK));l=-1;c=88;break;case 87:l=0;c=88;break;
case 88:return d=l;default:assert(0,"bad label: "+c)}}function k(a){var b;for(b=-1;;)switch(b){case -1:var c,d;c=a;b=HEAP[c+16]!=0?1:3;break;case 1:b=HEAP[c+16];HEAP[b]-=1;b=HEAP[b]==0?2:3;break;case 2:FUNCTION_TABLE[HEAP[HEAP[HEAP[c+16]+4]+24]](HEAP[c+16]);b=3;break;case 3:b=_PyList_New(0);HEAP[c+16]=b;b=HEAP[c+16]==0?4:5;break;case 4:d=-1;b=6;break;case 5:HEAP[c+32]=0;HEAP[c+20]=0;d=HEAP[c+36]=0;b=6;break;case 6:return a=d;default:assert(0,"bad label: "+b)}}function l(a,b,c,d,e){var f;for(f=-1;;)switch(f){case -1:var g,
h,j,k,l,m,n,o,p,q,r,s;g=a;h=b;j=c;k=d;l=e;n=HEAP[g+12];q=_PyString_AsString(HEAP[n+20]);f=q==0?1:2;break;case 1:m=-1;f=47;break;case 2:p=HEAP[g+24];f=HEAP[g+28]>0?3:6;break;case 3:f=l!=0?4:5;break;case 4:HEAP[HEAP[g+16]+p]=HEAP[n+12];f=5;break;case 5:p+=1;f=6;break;case 6:f=l!=0?7:11;break;case 7:f=HEAP[k]!=0?8:11;break;case 8:f=l!=0?9:10;break;case 9:HEAP[HEAP[g+16]+p]=HEAP[n+13];f=10;break;case 10:p+=1;f=11;break;case 11:o=0;f=12;break;case 12:r=f=HEAP[h+o];s=0;f=f==0?35:13;break;case 13:f=HEAP[n+
12]==r?17:14;break;case 14:f=HEAP[n+14]==r?17:15;break;case 15:f=HEAP[n+13]==r?17:16;break;case 16:f=_strchr(q,r)!=0?17:32;break;case 17:f=HEAP[n+24]==3?18:19;break;case 18:s=1;f=27;break;case 19:f=HEAP[n+13]==r?20:25;break;case 20:f=HEAP[n+8]!=0?21:24;break;case 21:f=l!=0?22:23;break;case 22:HEAP[HEAP[g+16]+p]=HEAP[n+13];f=23;break;case 23:p+=1;f=25;break;case 24:s=1;f=27;break;case 25:f=s==0?26:27;break;case 26:HEAP[k]=1;f=s!=0?27:32;break;case 27:f=HEAP[n+14]==0?28:29;break;case 28:_PyErr_Format(HEAP[y],
jb,allocate(1,"i32",ALLOC_STACK));m=-1;f=47;break;case 29:f=l!=0?30:31;break;case 30:HEAP[HEAP[g+16]+p]=HEAP[n+14];f=31;break;case 31:p+=1;f=32;break;case 32:f=l!=0?33:34;break;case 33:HEAP[HEAP[g+16]+p]=r;f=34;break;case 34:p+=1;o+=1;f=12;break;case 35:f=o==0?36:40;break;case 36:f=j!=0?37:40;break;case 37:f=HEAP[n+24]==3?38:39;break;case 38:_PyErr_Format(HEAP[y],hb,allocate(1,"i32",ALLOC_STACK));m=-1;f=47;break;case 39:HEAP[k]=1;f=40;break;case 40:f=HEAP[k]!=0?41:46;break;case 41:f=l!=0?42:45;break;
case 42:f=l!=0?43:44;break;case 43:HEAP[HEAP[g+16]+p]=HEAP[n+13];f=44;break;case 44:p+=1;f=46;break;case 45:p+=2;f=46;break;case 46:m=p;f=47;break;case 47:return a=m;default:assert(0,"bad label: "+f)}}function m(a,b){var c;for(c=-1;;)switch(c){case -1:var d,e,f,g;d=a;e=b;c=e<0|e>2147450879?1:2;break;case 1:_PyErr_NoMemory();f=0;c=12;break;case 2:c=HEAP[d+20]<e?3:11;break;case 3:c=HEAP[d+20]==0?4:7;break;case 4:HEAP[d+20]=((e/32768|0)+1)*32768;c=HEAP[d+16]!=0?5:6;break;case 5:_PyMem_Free(HEAP[d+16]);
c=6;break;case 6:c=_PyMem_Malloc(HEAP[d+20]);HEAP[d+16]=c;c=9;break;case 7:g=HEAP[d+16];HEAP[d+20]=((e/32768|0)+1)*32768;c=_PyMem_Realloc(HEAP[d+16],HEAP[d+20]);HEAP[d+16]=c;c=HEAP[d+16]==0?8:9;break;case 8:_PyMem_Free(g);c=9;break;case 9:c=HEAP[d+16]==0?10:11;break;case 10:_PyErr_NoMemory();f=0;c=12;break;case 11:f=1;c=12;break;case 12:return d=f;default:assert(0,"bad label: "+c)}}function n(a,b,c,d){var e;for(e=-1;;)switch(e){case -1:var f,g,h,j,k,n;f=a;g=b;h=c;j=d;n=l(f,g,j,h,0);e=n<0?1:2;break;
case 1:k=0;e=5;break;case 2:e=m(f,n)==0?3:4;break;case 3:k=0;e=5;break;case 4:e=l(f,g,j,h,1);HEAP[f+24]=e;HEAP[f+28]+=1;k=1;e=5;break;case 5:return a=k;default:assert(0,"bad label: "+e)}}function o(a,b){var c=STACKTOP;STACKTOP+=4;_memset(c,0,4);var d;for(d=-1;;)switch(d){case -1:var e,f,g,h,j,k,l,o,p=c,q;e=a;f=b;h=HEAP[e+12];d=_PySequence_Check(f)==0?1:2;break;case 1:g=_PyErr_Format(HEAP[y],Ha,allocate(1,"i32",ALLOC_STACK));d=30;break;case 2:j=_PySequence_Size(f);d=j<0?3:4;break;case 3:g=0;d=30;break;
case 4:k=e;HEAP[k+24]=0;k=HEAP[k+28]=0;d=26;break;case 5:l=_PySequence_GetItem(f,k);d=l==0?6:7;break;case 6:g=0;d=30;break;case 7:d=HEAP[h+24];d=d==1?9:d==2?8:10;break;case 8:d=_PyNumber_Check(l);HEAP[p]=d==0;d=11;break;case 9:HEAP[p]=1;d=11;break;case 10:HEAP[p]=0;d=11;break;case 11:d=(HEAP[HEAP[l+4]+84]&134217728)!=0?12:14;break;case 12:o=n(e,l+20,p,j==1);HEAP[l]-=1;d=HEAP[l]==0?13:23;break;case 13:FUNCTION_TABLE[HEAP[HEAP[l+4]+24]](l);d=23;break;case 14:d=l==__Py_NoneStruct?15:17;break;case 15:o=
n(e,ha,p,j==1);HEAP[l]-=1;d=HEAP[l]==0?16:23;break;case 16:FUNCTION_TABLE[HEAP[HEAP[l+4]+24]](l);d=23;break;case 17:q=_PyObject_Str(l);HEAP[l]-=1;d=HEAP[l]==0?18:19;break;case 18:FUNCTION_TABLE[HEAP[HEAP[l+4]+24]](l);d=19;break;case 19:d=q==0?20:21;break;case 20:g=0;d=30;break;case 21:o=n(e,q+20,p,j==1);HEAP[q]-=1;d=HEAP[q]==0?22:23;break;case 22:FUNCTION_TABLE[HEAP[HEAP[q+4]+24]](q);d=23;break;case 23:d=o==0?24:25;break;case 24:g=0;d=30;break;case 25:k+=1;d=26;break;case 26:d=k<j?5:27;break;case 27:a:{d=
e;for(var r=void 0,r=-1;;)switch(r){case -1:var s,t,u,v;s=d;u=_PyString_Size(HEAP[HEAP[s+12]+20]);r=u==-1?1:2;break;case 1:t=0;r=7;break;case 2:r=m(s,u+HEAP[s+24])==0?3:4;break;case 3:t=0;r=7;break;case 4:v=_PyString_AsString(HEAP[HEAP[s+12]+20]);r=v==0?5:6;break;case 5:t=0;r=7;break;case 6:_llvm_memmove_p0i8_p0i8_i32(HEAP[s+16]+HEAP[s+24],v,u,1,0);HEAP[s+24]=u+HEAP[s+24];t=1;r=7;break;case 7:d=t;break a;default:assert(0,"bad label: "+r)}d=void 0}d=d==0?28:29;break;case 28:g=0;d=30;break;case 29:g=
_PyObject_CallFunction(HEAP[e+8],Ra,allocate([HEAP[e+16],0,0,0,HEAP[e+24],0,0,0],["i8*",0,0,0,"i32",0,0,0],ALLOC_STACK));d=30;break;case 30:return e=g,STACKTOP=c,e;default:assert(0,"bad label: "+d)}}function p(){r=allocate([131072],["i32",0,0,0,0],ALLOC_NORMAL);t=allocate([81,85,79,84,69,95,77,73,78,73,77,65,76,0],"i8",ALLOC_NORMAL);s=allocate([81,85,79,84,69,95,65,76,76,0],"i8",ALLOC_NORMAL);u=allocate([81,85,79,84,69,95,78,79,78,78,85,77,69,82,73,67,0],"i8",ALLOC_NORMAL);v=allocate([81,85,79,84,
69,95,78,79,78,69,0],"i8",ALLOC_NORMAL);w=allocate([0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],["i32",0,0,0,"i8*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i32",0,0,0,"i8","i8","i8","i8"],ALLOC_NORMAL);x=allocate(1,"%struct.PyObject*",ALLOC_NORMAL);y=allocate(1,"%struct.PyObject*",ALLOC_NORMAL);B=allocate([117,110,107,110,111,119,110,32,100,105,97,108,101,99,116,0],"i8",ALLOC_NORMAL);A=allocate([34,37,115,34,32,109,117,115,
116,32,98,101,32,97,110,32,105,110,116,101,103,101,114,0],"i8",ALLOC_NORMAL);C=allocate([34,37,115,34,32,109,117,115,116,32,98,101,32,97,110,32,49,45,99,104,97,114,97,99,116,101,114,32,115,116,114,105,110,103,0],"i8",ALLOC_NORMAL);G=allocate([34,37,115,34,32,109,117,115,116,32,98,101,32,97,110,32,115,116,114,105,110,103,0],"i8",ALLOC_NORMAL);F=allocate([98,97,100,32,34,113,117,111,116,105,110,103,34,32,118,97,108,117,101,0],"i8",ALLOC_NORMAL);E=allocate([100,101,108,105,109,105,116,101,114,0],"i8",
ALLOC_NORMAL);N=allocate([115,107,105,112,105,110,105,116,105,97,108,115,112,97,99,101,0],"i8",ALLOC_NORMAL);Q=allocate([100,111,117,98,108,101,113,117,111,116,101,0],"i8",ALLOC_NORMAL);I=allocate([115,116,114,105,99,116,0],"i8",ALLOC_NORMAL);J=allocate([0,0,0,0,7,0,0,0,12,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,16,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,8,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,28,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],["i8*",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",
0,0,0,"i8","i8","i8","i8","i8*",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i8","i8","i8","i8","i8*",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i8","i8","i8","i8","i8*",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i8","i8","i8","i8","i8*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8"],ALLOC_NORMAL);P=allocate([101,115,99,97,112,101,99,104,97,114,0],"i8",ALLOC_NORMAL);D=allocate([108,105,110,101,116,101,114,109,105,110,97,116,111,114,0],"i8",ALLOC_NORMAL);T=allocate([113,
117,111,116,101,99,104,97,114,0],"i8",ALLOC_NORMAL);L=allocate([113,117,111,116,105,110,103,0],"i8",ALLOC_NORMAL);$=allocate(100,["i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, i8*)*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, i8*)*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, i8*)*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8",
"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, i8*)*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8"],ALLOC_NORMAL);R=allocate(40,"i8*",ALLOC_NORMAL);K=allocate([100,105,97,108,101,99,116,0],"i8",ALLOC_NORMAL);H=allocate([124,79,79,79,79,79,79,79,79,79,0],"i8",ALLOC_NORMAL);S=allocate([13,10,0],"i8",ALLOC_NORMAL);U=allocate([100,101,108,105,109,105,116,101,114,32,109,117,115,116,32,98,
101,32,115,101,116,0],"i8",ALLOC_NORMAL);z=allocate([113,117,111,116,101,99,104,97,114,32,109,117,115,116,32,98,101,32,115,101,116,32,105,102,32,113,117,111,116,105,110,103,32,101,110,97,98,108,101,100,0],"i8",ALLOC_NORMAL);aa=allocate([108,105,110,101,116,101,114,109,105,110,97,116,111,114,32,109,117,115,116,32,98,101,32,115,101,116,0],"i8",ALLOC_NORMAL);ja=allocate([67,83,86,32,100,105,97,108,101,99,116,10,10,84,104,101,32,68,105,97,108,101,99,116,32,116,121,112,101,32,114,101,99,111,114,100,115,
32,67,83,86,32,112,97,114,115,105,110,103,32,97,110,100,32,103,101,110,101,114,97,116,105,111,110,32,111,112,116,105,111,110,115,46,10,0],"i8",ALLOC_NORMAL);la=allocate([95,99,115,118,46,68,105,97,108,101,99,116,0],"i8",ALLOC_NORMAL);da=allocate([1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,132587,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],["i32",0,0,0,"%struct._typeobject*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i32",0,0,0,"i32",0,0,0,"void (%struct.PyObject*)*",0,0,0,"i32 (%struct.PyObject*, %struct.FILE*, i32)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, i8*)*",0,0,0,"i32 (%struct.PyObject*, i8*, %struct.PyObject*)*",0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*)*",
0,0,0,"%struct.PyNumberMethods*",0,0,0,"%struct.PySequenceMethods*",0,0,0,"%struct.PyMappingMethods*",0,0,0,"i32 (%struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"%struct.PyBufferProcs*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i32 (%struct.PyObject*, i32 (%struct.PyObject*, i8*)*, i8*)*",
0,0,0,"i32 (%struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*, i32)*",0,0,0,"i32",0,0,0,"%struct.PyObject* (%struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*)*",0,0,0,"%struct.PyMethodDef*",0,0,0,"%struct.PyMemberDef*",0,0,0,"%struct.PyGetSetDef*",0,0,0,"%struct._typeobject*",0,0,0,"%struct.PyObject*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",
0,0,0,"i32",0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct._typeobject*, i32)*",0,0,0,"%struct.PyObject* (%struct._typeobject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"void (i8*)*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8"],ALLOC_NORMAL);Ka=allocate([40,79,41,0],"i8",ALLOC_NORMAL);Ma=allocate([40,41,0],"i8",ALLOC_NORMAL);
wa=allocate([102,105,101,108,100,32,108,97,114,103,101,114,32,116,104,97,110,32,102,105,101,108,100,32,108,105,109,105,116,32,40,37,108,100,41,0],"i8",ALLOC_NORMAL);ib=allocate([39,37,99,39,32,101,120,112,101,99,116,101,100,32,97,102,116,101,114,32,39,37,99,39,0],"i8",ALLOC_NORMAL);cb=allocate([110,101,119,45,108,105,110,101,32,99,104,97,114,97,99,116,101,114,32,115,101,101,110,32,105,110,32,117,110,113,117,111,116,101,100,32,102,105,101,108,100,32,45,32,100,111,32,121,111,117,32,110,101,101,100,
32,116,111,32,111,112,101,110,32,116,104,101,32,102,105,108,101,32,105,110,32,117,110,105,118,101,114,115,97,108,45,110,101,119,108,105,110,101,32,109,111,100,101,63,0],"i8",ALLOC_NORMAL);db=allocate([110,101,119,108,105,110,101,32,105,110,115,105,100,101,32,115,116,114,105,110,103,0],"i8",ALLOC_NORMAL);Da=allocate([108,105,110,101,32,99,111,110,116,97,105,110,115,32,78,85,76,76,32,98,121,116,101,0],"i8",ALLOC_NORMAL);gb=allocate([67,83,86,32,114,101,97,100,101,114,10,10,82,101,97,100,101,114,32,
111,98,106,101,99,116,115,32,97,114,101,32,114,101,115,112,111,110,115,105,98,108,101,32,102,111,114,32,114,101,97,100,105,110,103,32,97,110,100,32,112,97,114,115,105,110,103,32,116,97,98,117,108,97,114,32,100,97,116,97,10,105,110,32,67,83,86,32,102,111,114,109,97,116,46,10,0],"i8",ALLOC_NORMAL);Xa=allocate(16,["i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8"],ALLOC_NORMAL);Ca=allocate([108,105,110,101,95,110,117,109,0],"i8",ALLOC_NORMAL);
Za=allocate([0,0,0,0,6,0,0,0,12,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,40,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],["i8*",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i8","i8","i8","i8","i8*",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i8","i8","i8","i8","i8*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8"],ALLOC_NORMAL);Va=allocate([95,99,115,118,46,114,101,97,100,101,114,0],"i8",ALLOC_NORMAL);Ga=allocate([1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
44,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,148971,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],["i32",0,0,0,"%struct._typeobject*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i32",0,0,0,"i32",0,0,0,"void (%struct.PyObject*)*",0,0,0,"i32 (%struct.PyObject*, %struct.FILE*, i32)*",
0,0,0,"%struct.PyObject* (%struct.PyObject*, i8*)*",0,0,0,"i32 (%struct.PyObject*, i8*, %struct.PyObject*)*",0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*)*",0,0,0,"%struct.PyNumberMethods*",0,0,0,"%struct.PySequenceMethods*",0,0,0,"%struct.PyMappingMethods*",0,0,0,"i32 (%struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",
0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"%struct.PyBufferProcs*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i32 (%struct.PyObject*, i32 (%struct.PyObject*, i8*)*, i8*)*",0,0,0,"i32 (%struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*, i32)*",0,0,0,"i32",0,0,0,"%struct.PyObject* (%struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*)*",0,0,0,"%struct.PyMethodDef*",0,0,0,"%struct.PyMemberDef*",0,0,0,"%struct.PyGetSetDef*",0,0,0,"i8",
"i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8"],ALLOC_NORMAL);ha=allocate(1,"i8",ALLOC_NORMAL);Na=allocate([97,114,103,117,109,101,110,116,32,49,32,109,117,115,116,32,98,101,32,97,110,32,105,116,101,114,97,116,111,
114,0],"i8",ALLOC_NORMAL);jb=allocate([110,101,101,100,32,116,111,32,101,115,99,97,112,101,44,32,98,117,116,32,110,111,32,101,115,99,97,112,101,99,104,97,114,32,115,101,116,0],"i8",ALLOC_NORMAL);hb=allocate([115,105,110,103,108,101,32,101,109,112,116,121,32,102,105,101,108,100,32,114,101,99,111,114,100,32,109,117,115,116,32,98,101,32,113,117,111,116,101,100,0],"i8",ALLOC_NORMAL);Qa=allocate([119,114,105,116,101,114,111,119,40,115,101,113,117,101,110,99,101,41,10,10,67,111,110,115,116,114,117,99,116,
32,97,110,100,32,119,114,105,116,101,32,97,32,67,83,86,32,114,101,99,111,114,100,32,102,114,111,109,32,97,32,115,101,113,117,101,110,99,101,32,111,102,32,102,105,101,108,100,115,46,32,32,78,111,110,45,115,116,114,105,110,103,10,101,108,101,109,101,110,116,115,32,119,105,108,108,32,98,101,32,99,111,110,118,101,114,116,101,100,32,116,111,32,115,116,114,105,110,103,46,0],"i8",ALLOC_NORMAL);Ha=allocate([115,101,113,117,101,110,99,101,32,101,120,112,101,99,116,101,100,0],"i8",ALLOC_NORMAL);Ra=allocate([40,
115,35,41,0],"i8",ALLOC_NORMAL);Ia=allocate([119,114,105,116,101,114,111,119,115,40,115,101,113,117,101,110,99,101,32,111,102,32,115,101,113,117,101,110,99,101,115,41,10,10,67,111,110,115,116,114,117,99,116,32,97,110,100,32,119,114,105,116,101,32,97,32,115,101,114,105,101,115,32,111,102,32,115,101,113,117,101,110,99,101,115,32,116,111,32,97,32,99,115,118,32,102,105,108,101,46,32,32,78,111,110,45,115,116,114,105,110,103,10,101,108,101,109,101,110,116,115,32,119,105,108,108,32,98,101,32,99,111,110,
118,101,114,116,101,100,32,116,111,32,115,116,114,105,110,103,46,0],"i8",ALLOC_NORMAL);Fa=allocate([119,114,105,116,101,114,111,119,115,40,41,32,97,114,103,117,109,101,110,116,32,109,117,115,116,32,98,101,32,105,116,101,114,97,98,108,101,0],"i8",ALLOC_NORMAL);$a=allocate([119,114,105,116,101,114,111,119,0],"i8",ALLOC_NORMAL);Wa=allocate([119,114,105,116,101,114,111,119,115,0],"i8",ALLOC_NORMAL);Y=allocate([0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0],["i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8"],ALLOC_NORMAL);kb=allocate([0,0,0,0,6,0,0,0,12,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],["i8*",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i8","i8","i8",
"i8","i8*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8"],ALLOC_NORMAL);ra=allocate([67,83,86,32,119,114,105,116,101,114,10,10,87,114,105,116,101,114,32,111,98,106,101,99,116,115,32,97,114,101,32,114,101,115,112,111,110,115,105,98,108,101,32,102,111,114,32,103,101,110,101,114,97,116,105,110,103,32,116,97,98,117,108,97,114,32,100,97,116,97,10,105,110,32,67,83,86,32,102,111,114,109,97,116,32,102,114,111,109,32,115,101,113,117,101,110,99,101,32,105,110,112,117,
116,46,10,0],"i8",ALLOC_NORMAL);Ta=allocate([95,99,115,118,46,119,114,105,116,101,114,0],"i8",ALLOC_NORMAL);ia=allocate([1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,148971,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0],["i32",0,0,0,"%struct._typeobject*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i32",0,0,0,"i32",0,0,0,"void (%struct.PyObject*)*",0,0,0,"i32 (%struct.PyObject*, %struct.FILE*, i32)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, i8*)*",0,0,0,"i32 (%struct.PyObject*, i8*, %struct.PyObject*)*",0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*)*",0,0,0,"%struct.PyNumberMethods*",0,0,0,"%struct.PySequenceMethods*",0,0,0,"%struct.PyMappingMethods*",0,
0,0,"i32 (%struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"%struct.PyBufferProcs*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i32 (%struct.PyObject*, i32 (%struct.PyObject*, i8*)*, i8*)*",0,0,0,"i32 (%struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*, i32)*",
0,0,0,"i32",0,0,0,"%struct.PyObject* (%struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*)*",0,0,0,"%struct.PyMethodDef*",0,0,0,"%struct.PyMemberDef*",0,0,0,"%struct.PyGetSetDef*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8",
"i8","i8","i8","i8","i8","i8","i8"],ALLOC_NORMAL);ba=allocate([119,114,105,116,101,0],"i8",ALLOC_NORMAL);Ya=allocate([97,114,103,117,109,101,110,116,32,49,32,109,117,115,116,32,104,97,118,101,32,97,32,34,119,114,105,116,101,34,32,109,101,116,104,111,100,0],"i8",ALLOC_NORMAL);ta=allocate([100,105,97,108,101,99,116,32,110,97,109,101,32,109,117,115,116,32,98,101,32,97,32,115,116,114,105,110,103,32,111,114,32,117,110,105,99,111,100,101,0],"i8",ALLOC_NORMAL);O=allocate([102,105,101,108,100,95,115,105,
122,101,95,108,105,109,105,116,0],"i8",ALLOC_NORMAL);wb=allocate([108,105,109,105,116,32,109,117,115,116,32,98,101,32,97,110,32,105,110,116,101,103,101,114,0],"i8",ALLOC_NORMAL);bb=allocate([67,83,86,32,112,97,114,115,105,110,103,32,97,110,100,32,119,114,105,116,105,110,103,46,10,10,84,104,105,115,32,109,111,100,117,108,101,32,112,114,111,118,105,100,101,115,32,99,108,97,115,115,101,115,32,116,104,97,116,32,97,115,115,105,115,116,32,105,110,32,116,104,101,32,114,101,97,100,105,110,103,32,97,110,100,
32,119,114,105,116,105,110,103,10,111,102,32,67,111,109,109,97,32,83,101,112,97,114,97,116,101,100,32,86,97,108,117,101,32,40,67,83,86,41,32,102,105,108,101,115,44,32,97,110,100,32,105,109,112,108,101,109,101,110,116,115,32,116,104,101,32,105,110,116,101,114,102,97,99,101,10,100,101,115,99,114,105,98,101,100,32,98,121,32,80,69,80,32,51,48,53,46,32,32,65,108,116,104,111,117,103,104,32,109,97,110,121,32,67,83,86,32,102,105,108,101,115,32,97,114,101,32,115,105,109,112,108,101,32,116,111,32,112,97,114,
115,101,44,10,116,104,101,32,102,111,114,109,97,116,32,105,115,32,110,111,116,32,102,111,114,109,97,108,108,121,32,100,101,102,105,110,101,100,32,98,121,32,97,32,115,116,97,98,108,101,32,115,112,101,99,105,102,105,99,97,116,105,111,110,32,97,110,100,10,105,115,32,115,117,98,116,108,101,32,101,110,111,117,103,104,32,116,104,97,116,32,112,97,114,115,105,110,103,32,108,105,110,101,115,32,111,102,32,97,32,67,83,86,32,102,105,108,101,32,119,105,116,104,32,115,111,109,101,116,104,105,110,103,10,108,105,
107,101,32,108,105,110,101,46,115,112,108,105,116,40,34,44,34,41,32,105,115,32,98,111,117,110,100,32,116,111,32,102,97,105,108,46,32,32,84,104,101,32,109,111,100,117,108,101,32,115,117,112,112,111,114,116,115,32,116,104,114,101,101,10,98,97,115,105,99,32,65,80,73,115,58,32,114,101,97,100,105,110,103,44,32,119,114,105,116,105,110,103,44,32,97,110,100,32,114,101,103,105,115,116,114,97,116,105,111,110,32,111,102,32,100,105,97,108,101,99,116,115,46,10,10,10,68,73,65,76,69,67,84,32,82,69,71,73,83,84,82,
65,84,73,79,78,58,10,10,82,101,97,100,101,114,115,32,97,110,100,32,119,114,105,116,101,114,115,32,115,117,112,112,111,114,116,32,97,32,100,105,97,108,101,99,116,32,97,114,103,117,109,101,110,116,44,32,119,104,105,99,104,32,105,115,32,97,32,99,111,110,118,101,110,105,101,110,116,10,104,97,110,100,108,101,32,111,110,32,97,32,103,114,111,117,112,32,111,102,32,115,101,116,116,105,110,103,115,46,32,32,87,104,101,110,32,116,104,101,32,100,105,97,108,101,99,116,32,97,114,103,117,109,101,110,116,32,105,115,
32,97,32,115,116,114,105,110,103,44,10,105,116,32,105,100,101,110,116,105,102,105,101,115,32,111,110,101,32,111,102,32,116,104,101,32,100,105,97,108,101,99,116,115,32,112,114,101,118,105,111,117,115,108,121,32,114,101,103,105,115,116,101,114,101,100,32,119,105,116,104,32,116,104,101,32,109,111,100,117,108,101,46,10,73,102,32,105,116,32,105,115,32,97,32,99,108,97,115,115,32,111,114,32,105,110,115,116,97,110,99,101,44,32,116,104,101,32,97,116,116,114,105,98,117,116,101,115,32,111,102,32,116,104,101,
32,97,114,103,117,109,101,110,116,32,97,114,101,32,117,115,101,100,32,97,115,10,116,104,101,32,115,101,116,116,105,110,103,115,32,102,111,114,32,116,104,101,32,114,101,97,100,101,114,32,111,114,32,119,114,105,116,101,114,58,10,10,32,32,32,32,99,108,97,115,115,32,101,120,99,101,108,58,10,32,32,32,32,32,32,32,32,100,101,108,105,109,105,116,101,114,32,61,32,39,44,39,10,32,32,32,32,32,32,32,32,113,117,111,116,101,99,104,97,114,32,61,32,39,34,39,10,32,32,32,32,32,32,32,32,101,115,99,97,112,101,99,104,
97,114,32,61,32,78,111,110,101,10,32,32,32,32,32,32,32,32,100,111,117,98,108,101,113,117,111,116,101,32,61,32,84,114,117,101,10,32,32,32,32,32,32,32,32,115,107,105,112,105,110,105,116,105,97,108,115,112,97,99,101,32,61,32,70,97,108,115,101,10,32,32,32,32,32,32,32,32,108,105,110,101,116,101,114,109,105,110,97,116,111,114,32,61,32,39,92,114,92,110,39,10,32,32,32,32,32,32,32,32,113,117,111,116,105,110,103,32,61,32,81,85,79,84,69,95,77,73,78,73,77,65,76,10,10,83,69,84,84,73,78,71,83,58,10,10,32,32,32,
32,42,32,113,117,111,116,101,99,104,97,114,32,45,32,115,112,101,99,105,102,105,101,115,32,97,32,111,110,101,45,99,104,97,114,97,99,116,101,114,32,115,116,114,105,110,103,32,116,111,32,117,115,101,32,97,115,32,116,104,101,32,10,32,32,32,32,32,32,32,32,113,117,111,116,105,110,103,32,99,104,97,114,97,99,116,101,114,46,32,32,73,116,32,100,101,102,97,117,108,116,115,32,116,111,32,39,34,39,46,10,32,32,32,32,42,32,100,101,108,105,109,105,116,101,114,32,45,32,115,112,101,99,105,102,105,101,115,32,97,32,111,
110,101,45,99,104,97,114,97,99,116,101,114,32,115,116,114,105,110,103,32,116,111,32,117,115,101,32,97,115,32,116,104,101,32,10,32,32,32,32,32,32,32,32,102,105,101,108,100,32,115,101,112,97,114,97,116,111,114,46,32,32,73,116,32,100,101,102,97,117,108,116,115,32,116,111,32,39,44,39,46,10,32,32,32,32,42,32,115,107,105,112,105,110,105,116,105,97,108,115,112,97,99,101,32,45,32,115,112,101,99,105,102,105,101,115,32,104,111,119,32,116,111,32,105,110,116,101,114,112,114,101,116,32,119,104,105,116,101,115,
112,97,99,101,32,119,104,105,99,104,10,32,32,32,32,32,32,32,32,105,109,109,101,100,105,97,116,101,108,121,32,102,111,108,108,111,119,115,32,97,32,100,101,108,105,109,105,116,101,114,46,32,32,73,116,32,100,101,102,97,117,108,116,115,32,116,111,32,70,97,108,115,101,44,32,119,104,105,99,104,10,32,32,32,32,32,32,32,32,109,101,97,110,115,32,116,104,97,116,32,119,104,105,116,101,115,112,97,99,101,32,105,109,109,101,100,105,97,116,101,108,121,32,102,111,108,108,111,119,105,110,103,32,97,32,100,101,108,105,
109,105,116,101,114,32,105,115,32,112,97,114,116,10,32,32,32,32,32,32,32,32,111,102,32,116,104,101,32,102,111,108,108,111,119,105,110,103,32,102,105,101,108,100,46,10,32,32,32,32,42,32,108,105,110,101,116,101,114,109,105,110,97,116,111,114,32,45,32,32,115,112,101,99,105,102,105,101,115,32,116,104,101,32,99,104,97,114,97,99,116,101,114,32,115,101,113,117,101,110,99,101,32,119,104,105,99,104,32,115,104,111,117,108,100,32,10,32,32,32,32,32,32,32,32,116,101,114,109,105,110,97,116,101,32,114,111,119,115,
46,10,32,32,32,32,42,32,113,117,111,116,105,110,103,32,45,32,99,111,110,116,114,111,108,115,32,119,104,101,110,32,113,117,111,116,101,115,32,115,104,111,117,108,100,32,98,101,32,103,101,110,101,114,97,116,101,100,32,98,121,32,116,104,101,32,119,114,105,116,101,114,46,10,32,32,32,32,32,32,32,32,73,116,32,99,97,110,32,116,97,107,101,32,111,110,32,97,110,121,32,111,102,32,116,104,101,32,102,111,108,108,111,119,105,110,103,32,109,111,100,117,108,101,32,99,111,110,115,116,97,110,116,115,58,10,10,32,32,
32,32,32,32,32,32,99,115,118,46,81,85,79,84,69,95,77,73,78,73,77,65,76,32,109,101,97,110,115,32,111,110,108,121,32,119,104,101,110,32,114,101,113,117,105,114,101,100,44,32,102,111,114,32,101,120,97,109,112,108,101,44,32,119,104,101,110,32,97,10,32,32,32,32,32,32,32,32,32,32,32,32,102,105,101,108,100,32,99,111,110,116,97,105,110,115,32,101,105,116,104,101,114,32,116,104,101,32,113,117,111,116,101,99,104,97,114,32,111,114,32,116,104,101,32,100,101,108,105,109,105,116,101,114,10,32,32,32,32,32,32,32,
32,99,115,118,46,81,85,79,84,69,95,65,76,76,32,109,101,97,110,115,32,116,104,97,116,32,113,117,111,116,101,115,32,97,114,101,32,97,108,119,97,121,115,32,112,108,97,99,101,100,32,97,114,111,117,110,100,32,102,105,101,108,100,115,46,10,32,32,32,32,32,32,32,32,99,115,118,46,81,85,79,84,69,95,78,79,78,78,85,77,69,82,73,67,32,109,101,97,110,115,32,116,104,97,116,32,113,117,111,116,101,115,32,97,114,101,32,97,108,119,97,121,115,32,112,108,97,99,101,100,32,97,114,111,117,110,100,10,32,32,32,32,32,32,32,
32,32,32,32,32,102,105,101,108,100,115,32,119,104,105,99,104,32,100,111,32,110,111,116,32,112,97,114,115,101,32,97,115,32,105,110,116,101,103,101,114,115,32,111,114,32,102,108,111,97,116,105,110,103,32,112,111,105,110,116,10,32,32,32,32,32,32,32,32,32,32,32,32,110,117,109,98,101,114,115,46,10,32,32,32,32,32,32,32,32,99,115,118,46,81,85,79,84,69,95,78,79,78,69,32,109,101,97,110,115,32,116,104,97,116,32,113,117,111,116,101,115,32,97,114,101,32,110,101,118,101,114,32,112,108,97,99,101,100,32,97,114,
111,117,110,100,32,102,105,101,108,100,115,46,10,32,32,32,32,42,32,101,115,99,97,112,101,99,104,97,114,32,45,32,115,112,101,99,105,102,105,101,115,32,97,32,111,110,101,45,99,104,97,114,97,99,116,101,114,32,115,116,114,105,110,103,32,117,115,101,100,32,116,111,32,101,115,99,97,112,101,32,10,32,32,32,32,32,32,32,32,116,104,101,32,100,101,108,105,109,105,116,101,114,32,119,104,101,110,32,113,117,111,116,105,110,103,32,105,115,32,115,101,116,32,116,111,32,81,85,79,84,69,95,78,79,78,69,46,10,32,32,32,
32,42,32,100,111,117,98,108,101,113,117,111,116,101,32,45,32,99,111,110,116,114,111,108,115,32,116,104,101,32,104,97,110,100,108,105,110,103,32,111,102,32,113,117,111,116,101,115,32,105,110,115,105,100,101,32,102,105,101,108,100,115,46,32,32,87,104,101,110,10,32,32,32,32,32,32,32,32,84,114,117,101,44,32,116,119,111,32,99,111,110,115,101,99,117,116,105,118,101,32,113,117,111,116,101,115,32,97,114,101,32,105,110,116,101,114,112,114,101,116,101,100,32,97,115,32,111,110,101,32,100,117,114,105,110,103,
32,114,101,97,100,44,10,32,32,32,32,32,32,32,32,97,110,100,32,119,104,101,110,32,119,114,105,116,105,110,103,44,32,101,97,99,104,32,113,117,111,116,101,32,99,104,97,114,97,99,116,101,114,32,101,109,98,101,100,100,101,100,32,105,110,32,116,104,101,32,100,97,116,97,32,105,115,10,32,32,32,32,32,32,32,32,119,114,105,116,116,101,110,32,97,115,32,116,119,111,32,113,117,111,116,101,115,10,0],"i8",ALLOC_NORMAL);vb=allocate([32,32,32,32,99,115,118,95,114,101,97,100,101,114,32,61,32,114,101,97,100,101,114,
40,105,116,101,114,97,98,108,101,32,91,44,32,100,105,97,108,101,99,116,61,39,101,120,99,101,108,39,93,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,91,111,112,116,105,111,110,97,108,32,107,101,121,119,111,114,100,32,97,114,103,115,93,41,10,32,32,32,32,102,111,114,32,114,111,119,32,105,110,32,99,115,118,95,114,101,97,100,101,114,58,10,32,32,32,32,32,32,32,32,112,114,111,99,101,115,115,40,114,111,119,41,10,10,84,104,101,32,34,105,116,101,114,97,98,108,101,34,32,97,114,103,
117,109,101,110,116,32,99,97,110,32,98,101,32,97,110,121,32,111,98,106,101,99,116,32,116,104,97,116,32,114,101,116,117,114,110,115,32,97,32,108,105,110,101,10,111,102,32,105,110,112,117,116,32,102,111,114,32,101,97,99,104,32,105,116,101,114,97,116,105,111,110,44,32,115,117,99,104,32,97,115,32,97,32,102,105,108,101,32,111,98,106,101,99,116,32,111,114,32,97,32,108,105,115,116,46,32,32,84,104,101,10,111,112,116,105,111,110,97,108,32,34,100,105,97,108,101,99,116,34,32,112,97,114,97,109,101,116,101,114,
32,105,115,32,100,105,115,99,117,115,115,101,100,32,98,101,108,111,119,46,32,32,84,104,101,32,102,117,110,99,116,105,111,110,10,97,108,115,111,32,97,99,99,101,112,116,115,32,111,112,116,105,111,110,97,108,32,107,101,121,119,111,114,100,32,97,114,103,117,109,101,110,116,115,32,119,104,105,99,104,32,111,118,101,114,114,105,100,101,32,115,101,116,116,105,110,103,115,10,112,114,111,118,105,100,101,100,32,98,121,32,116,104,101,32,100,105,97,108,101,99,116,46,10,10,84,104,101,32,114,101,116,117,114,110,
101,100,32,111,98,106,101,99,116,32,105,115,32,97,110,32,105,116,101,114,97,116,111,114,46,32,32,69,97,99,104,32,105,116,101,114,97,116,105,111,110,32,114,101,116,117,114,110,115,32,97,32,114,111,119,10,111,102,32,116,104,101,32,67,83,86,32,102,105,108,101,32,40,119,104,105,99,104,32,99,97,110,32,115,112,97,110,32,109,117,108,116,105,112,108,101,32,105,110,112,117,116,32,108,105,110,101,115,41,58,10,0],"i8",ALLOC_NORMAL);ka=allocate([32,32,32,32,99,115,118,95,119,114,105,116,101,114,32,61,32,99,115,
118,46,119,114,105,116,101,114,40,102,105,108,101,111,98,106,32,91,44,32,100,105,97,108,101,99,116,61,39,101,120,99,101,108,39,93,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,91,111,112,116,105,111,110,97,108,32,107,101,121,119,111,114,100,32,97,114,103,115,93,41,10,32,32,32,32,102,111,114,32,114,111,119,32,105,110,32,115,101,113,117,101,110,99,101,58,10,32,32,32,32,32,32,32,32,99,115,118,95,119,114,105,116,101,114,46,119,114,105,116,101,114,111,119,40,114,
111,119,41,10,10,32,32,32,32,91,111,114,93,10,10,32,32,32,32,99,115,118,95,119,114,105,116,101,114,32,61,32,99,115,118,46,119,114,105,116,101,114,40,102,105,108,101,111,98,106,32,91,44,32,100,105,97,108,101,99,116,61,39,101,120,99,101,108,39,93,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,91,111,112,116,105,111,110,97,108,32,107,101,121,119,111,114,100,32,97,114,103,115,93,41,10,32,32,32,32,99,115,118,95,119,114,105,116,101,114,46,119,114,105,116,101,114,
111,119,115,40,114,111,119,115,41,10,10,84,104,101,32,34,102,105,108,101,111,98,106,34,32,97,114,103,117,109,101,110,116,32,99,97,110,32,98,101,32,97,110,121,32,111,98,106,101,99,116,32,116,104,97,116,32,115,117,112,112,111,114,116,115,32,116,104,101,32,102,105,108,101,32,65,80,73,46,10,0],"i8",ALLOC_NORMAL);za=allocate([82,101,116,117,114,110,32,97,32,108,105,115,116,32,111,102,32,97,108,108,32,107,110,111,119,32,100,105,97,108,101,99,116,32,110,97,109,101,115,46,10,32,32,32,32,110,97,109,101,115,
32,61,32,99,115,118,46,108,105,115,116,95,100,105,97,108,101,99,116,115,40,41,0],"i8",ALLOC_NORMAL);Aa=allocate([82,101,116,117,114,110,32,116,104,101,32,100,105,97,108,101,99,116,32,105,110,115,116,97,110,99,101,32,97,115,115,111,99,105,97,116,101,100,32,119,105,116,104,32,110,97,109,101,46,10,32,32,32,32,100,105,97,108,101,99,116,32,61,32,99,115,118,46,103,101,116,95,100,105,97,108,101,99,116,40,110,97,109,101,41,0],"i8",ALLOC_NORMAL);La=allocate([67,114,101,97,116,101,32,97,32,109,97,112,112,105,
110,103,32,102,114,111,109,32,97,32,115,116,114,105,110,103,32,110,97,109,101,32,116,111,32,97,32,100,105,97,108,101,99,116,32,99,108,97,115,115,46,10,32,32,32,32,100,105,97,108,101,99,116,32,61,32,99,115,118,46,114,101,103,105,115,116,101,114,95,100,105,97,108,101,99,116,40,110,97,109,101,44,32,100,105,97,108,101,99,116,41,0],"i8",ALLOC_NORMAL);ya=allocate([68,101,108,101,116,101,32,116,104,101,32,110,97,109,101,47,100,105,97,108,101,99,116,32,109,97,112,112,105,110,103,32,97,115,115,111,99,105,
97,116,101,100,32,119,105,116,104,32,97,32,115,116,114,105,110,103,32,110,97,109,101,46,10,32,32,32,32,99,115,118,46,117,110,114,101,103,105,115,116,101,114,95,100,105,97,108,101,99,116,40,110,97,109,101,41,0],"i8",ALLOC_NORMAL);ub=allocate([83,101,116,115,32,97,110,32,117,112,112,101,114,32,108,105,109,105,116,32,111,110,32,112,97,114,115,101,100,32,102,105,101,108,100,115,46,10,32,32,32,32,99,115,118,46,102,105,101,108,100,95,115,105,122,101,95,108,105,109,105,116,40,91,108,105,109,105,116,93,41,
10,10,82,101,116,117,114,110,115,32,111,108,100,32,108,105,109,105,116,46,32,73,102,32,108,105,109,105,116,32,105,115,32,110,111,116,32,103,105,118,101,110,44,32,110,111,32,110,101,119,32,108,105,109,105,116,32,105,115,32,115,101,116,32,97,110,100,10,116,104,101,32,111,108,100,32,108,105,109,105,116,32,105,115,32,114,101,116,117,114,110,101,100,0],"i8",ALLOC_NORMAL);Z=allocate([114,101,97,100,101,114,0],"i8",ALLOC_NORMAL);qa=allocate([119,114,105,116,101,114,0],"i8",ALLOC_NORMAL);M=allocate([108,
105,115,116,95,100,105,97,108,101,99,116,115,0],"i8",ALLOC_NORMAL);na=allocate([114,101,103,105,115,116,101,114,95,100,105,97,108,101,99,116,0],"i8",ALLOC_NORMAL);nb=allocate([117,110,114,101,103,105,115,116,101,114,95,100,105,97,108,101,99,116,0],"i8",ALLOC_NORMAL);ca=allocate([103,101,116,95,100,105,97,108,101,99,116,0],"i8",ALLOC_NORMAL);ua=allocate([0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],["i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",
0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8"],ALLOC_NORMAL);Ea=allocate([95,99,115,118,0],"i8",ALLOC_NORMAL);
Eb=allocate([95,95,118,101,114,115,105,111,110,95,95,0],"i8",ALLOC_NORMAL);zb=allocate([49,46,48,0],"i8",ALLOC_NORMAL);va=allocate([95,100,105,97,108,101,99,116,115,0],"i8",ALLOC_NORMAL);xa=allocate([68,105,97,108,101,99,116,0],"i8",ALLOC_NORMAL);V=allocate([95,99,115,118,46,69,114,114,111,114,0],"i8",ALLOC_NORMAL);sa=allocate([69,114,114,111,114,0],"i8",ALLOC_NORMAL);HEAP[w+4]=t;HEAP[w+12]=s;HEAP[w+20]=u;HEAP[w+28]=v;HEAP[J]=E;HEAP[J+20]=N;HEAP[J+40]=Q;HEAP[J+60]=I;HEAP[$]=P;HEAP[$+4]=g+2;HEAP[$+
20]=D;HEAP[$+24]=g+4;HEAP[$+40]=T;HEAP[$+44]=g+6;HEAP[$+60]=L;HEAP[$+64]=g+8;HEAP[R]=K;HEAP[R+4]=E;HEAP[R+8]=Q;HEAP[R+12]=P;HEAP[R+16]=D;HEAP[R+20]=T;HEAP[R+24]=L;HEAP[R+28]=N;HEAP[R+32]=I;HEAP[da+12]=la;HEAP[da+24]=g+10;HEAP[da+88]=ja;HEAP[da+120]=J;HEAP[da+124]=$;HEAP[da+156]=g+12;HEAP[Za]=K;HEAP[Za+20]=Ca;HEAP[Ga+12]=Va;HEAP[Ga+24]=g+14;HEAP[Ga+88]=gb;HEAP[Ga+92]=g+16;HEAP[Ga+96]=g+18;HEAP[Ga+108]=g+20;HEAP[Ga+112]=g+22;HEAP[Ga+116]=Xa;HEAP[Ga+120]=Za;HEAP[Y]=$a;HEAP[Y+4]=g+24;HEAP[Y+12]=Qa;HEAP[Y+
16]=Wa;HEAP[Y+20]=g+26;HEAP[Y+28]=Ia;HEAP[kb]=K;HEAP[ia+12]=Ta;HEAP[ia+24]=g+28;HEAP[ia+88]=ra;HEAP[ia+92]=g+30;HEAP[ia+96]=g+32;HEAP[ia+116]=Y;HEAP[ia+120]=kb;HEAP[ua]=Z;HEAP[ua+4]=g+34;HEAP[ua+12]=vb;HEAP[ua+16]=qa;HEAP[ua+20]=g+36;HEAP[ua+28]=ka;HEAP[ua+32]=M;HEAP[ua+36]=g+38;HEAP[ua+44]=za;HEAP[ua+48]=na;HEAP[ua+52]=g+40;HEAP[ua+60]=La;HEAP[ua+64]=nb;HEAP[ua+68]=g+42;HEAP[ua+76]=ya;HEAP[ua+80]=ca;HEAP[ua+84]=g+44;HEAP[ua+92]=Aa;HEAP[ua+96]=O;HEAP[ua+100]=g+46;HEAP[ua+108]=ub}var q={arguments:[]};
Runtime.QUANTUM_SIZE=4;var r,t,s,u,v,w,x,y,B,A,C,G,F,E,N,Q,I,J,P,D,T,L,$,R,K,H,S,U,z,aa,ja,la,da,Ka,Ma,wa,ib,cb,db,Da,gb,Xa,Ca,Za,Va,Ga,ha,Na,jb,hb,Qa,Ha,Ra,Ia,Fa,$a,Wa,Y,kb,ra,Ta,ia,ba,Ya,ta,O,wb,bb,vb,ka,za,Aa,La,ya,ub,Z,qa,M,na,nb,ca,ua,Ea,Eb,zb,va,xa,V,sa;q._init_csv=function(){var a;for(a=-1;;)switch(a){case -1:var b,c;a=_PyType_Ready(da)<0?14:1;break;case 1:a=_PyType_Ready(Ga)<0?14:2;break;case 2:a=_PyType_Ready(ia)<0?14:3;break;case 3:b=_Py_InitModule4(Ea,ua,bb,0,1013);a=b==0?14:4;break;case 4:a=
_PyModule_AddStringConstant(b,Eb,zb)==-1?14:5;break;case 5:a=_PyDict_New();HEAP[x]=a;a=HEAP[x]==0?14:6;break;case 6:a=_PyModule_AddObject(b,va,HEAP[x])!=0?14:7;break;case 7:c=w;a=10;break;case 8:a=_PyModule_AddIntConstant(b,HEAP[c+4],HEAP[c])==-1?14:9;break;case 9:c+=8;a=10;break;case 10:a=HEAP[c+4]!=0?8:11;break;case 11:HEAP[da]+=1;a=_PyModule_AddObject(b,xa,da)!=0?14:12;break;case 12:a=_PyErr_NewException(V,0,0);HEAP[y]=a;a=HEAP[y]==0?14:13;break;case 13:_PyModule_AddObject(b,sa,HEAP[y]);a=14;break;
case 14:return;default:assert(0,"bad label: "+a)}};FUNCTION_TABLE=FUNCTION_TABLE.concat([0,0,function(a){return b(HEAP[a+14]&255)},0,function(a){var b;a:{var a=HEAP[a+20],c;for(c=-1;;)switch(c){case -1:b=a;c=b!=0?1:2;break;case 1:HEAP[b]+=1;c=2;break;case 2:break a;default:assert(0,"bad label: "+c)}b=void 0}return b},0,function(a){return b(HEAP[a+13]&255)},0,function(a){return _PyInt_FromLong(HEAP[a+24])},0,function(a){var b;for(b=-1;;)switch(b){case -1:var c;c=a;b=HEAP[c+20]!=0?1:3;break;case 1:b=
HEAP[c+20];HEAP[b]-=1;b=HEAP[b]==0?2:3;break;case 2:FUNCTION_TABLE[HEAP[HEAP[HEAP[c+20]+4]+24]](HEAP[c+20]);b=3;break;case 3:FUNCTION_TABLE[HEAP[HEAP[c+4]+160]](c);return;default:assert(0,"bad label: "+b)}},0,function(b,d,f){var g=STACKTOP;STACKTOP+=36;_memset(g,0,36);var h;for(h=-1;;)switch(h){case -1:var j,k,l,m,n,o=g,p=g+4,q=g+8,r=g+12,s=g+16,t=g+20,u=g+24,v=g+28,x=g+32;j=b;h=d;k=f;n=0;HEAP[o]=0;HEAP[p]=0;HEAP[q]=0;HEAP[r]=0;HEAP[s]=0;HEAP[t]=0;HEAP[u]=0;HEAP[v]=0;HEAP[x]=0;h=_PyArg_ParseTupleAndKeywords(h,
k,H,R,allocate([o,0,0,0,p,0,0,0,q,0,0,0,r,0,0,0,s,0,0,0,t,0,0,0,u,0,0,0,v,0,0,0,x,0,0,0],["%struct.PyObject**",0,0,0,"%struct.PyObject**",0,0,0,"%struct.PyObject**",0,0,0,"%struct.PyObject**",0,0,0,"%struct.PyObject**",0,0,0,"%struct.PyObject**",0,0,0,"%struct.PyObject**",0,0,0,"%struct.PyObject**",0,0,0,"%struct.PyObject**",0,0,0],ALLOC_STACK))==0?1:2;break;case 1:l=0;h=109;break;case 2:h=HEAP[o]!=0?3:19;break;case 3:h=HEAP[HEAP[o]+4]==_PyBaseString_Type?5:4;break;case 4:h=_PyType_IsSubtype(HEAP[HEAP[o]+
4],_PyBaseString_Type)!=0?5:7;break;case 5:h=e(HEAP[o]);HEAP[o]=h;h=h==0?6:8;break;case 6:l=0;h=109;break;case 7:HEAP[HEAP[o]]+=1;h=8;break;case 8:h=HEAP[HEAP[o]+4]==da?10:9;break;case 9:h=_PyType_IsSubtype(HEAP[HEAP[o]+4],da)!=0?10:19;break;case 10:h=HEAP[p]==0?11:19;break;case 11:h=HEAP[q]==0?12:19;break;case 12:h=HEAP[r]==0?13:19;break;case 13:h=HEAP[s]==0?14:19;break;case 14:h=HEAP[t]==0?15:19;break;case 15:h=HEAP[u]==0?16:19;break;case 16:h=HEAP[v]==0?17:19;break;case 17:h=HEAP[x]==0?18:19;break;
case 18:l=HEAP[o];h=109;break;case 19:m=h=FUNCTION_TABLE[HEAP[j+152]](j,0);h=h==0?20:24;break;case 20:h=HEAP[o]!=0?21:23;break;case 21:h=HEAP[o];HEAP[h]-=1;h=HEAP[h]==0?22:23;break;case 22:FUNCTION_TABLE[HEAP[HEAP[HEAP[o]+4]+24]](HEAP[o]);h=23;break;case 23:l=0;h=109;break;case 24:HEAP[m+20]=0;h=HEAP[p]!=0?25:26;break;case 25:HEAP[HEAP[p]]+=1;h=26;break;case 26:h=HEAP[q]!=0?27:28;break;case 27:HEAP[HEAP[q]]+=1;h=28;break;case 28:h=HEAP[r]!=0?29:30;break;case 29:HEAP[HEAP[r]]+=1;h=30;break;case 30:h=
HEAP[s]!=0?31:32;break;case 31:HEAP[HEAP[s]]+=1;h=32;break;case 32:h=HEAP[t]!=0?33:34;break;case 33:HEAP[HEAP[t]]+=1;h=34;break;case 34:h=HEAP[u]!=0?35:36;break;case 35:HEAP[HEAP[u]]+=1;h=36;break;case 36:h=HEAP[v]!=0?37:38;break;case 37:HEAP[HEAP[v]]+=1;h=38;break;case 38:h=HEAP[x]!=0?39:40;break;case 39:HEAP[HEAP[x]]+=1;h=40;break;case 40:h=HEAP[o]!=0?41:58;break;case 41:h=HEAP[p]==0?42:43;break;case 42:h=_PyObject_GetAttrString(HEAP[o],E);HEAP[p]=h;h=43;break;case 43:h=HEAP[q]==0?44:45;break;case 44:h=
_PyObject_GetAttrString(HEAP[o],Q);HEAP[q]=h;h=45;break;case 45:h=HEAP[r]==0?46:47;break;case 46:h=_PyObject_GetAttrString(HEAP[o],P);HEAP[r]=h;h=47;break;case 47:h=HEAP[s]==0?48:49;break;case 48:h=_PyObject_GetAttrString(HEAP[o],D);HEAP[s]=h;h=49;break;case 49:h=HEAP[t]==0?50:51;break;case 50:h=_PyObject_GetAttrString(HEAP[o],T);HEAP[t]=h;h=51;break;case 51:h=HEAP[u]==0?52:53;break;case 52:h=_PyObject_GetAttrString(HEAP[o],L);HEAP[u]=h;h=53;break;case 53:h=HEAP[v]==0?54:55;break;case 54:h=_PyObject_GetAttrString(HEAP[o],
N);HEAP[v]=h;h=55;break;case 55:h=HEAP[x]==0?56:57;break;case 56:h=_PyObject_GetAttrString(HEAP[o],I);HEAP[x]=h;h=57;break;case 57:_PyErr_Clear();h=58;break;case 58:h=c(E,m+12,HEAP[p],44)!=0?78:59;break;case 59:h=a(Q,m+8,HEAP[q],1)!=0?78:60;break;case 60:h=c(P,m+14,HEAP[r],0)!=0?78:61;break;case 61:a:{h=m+20;k=HEAP[s];for(var M=void 0,M=-1;;)switch(M){case -1:var K,V,y,ca,B;K=D;V=h;y=k;ca=S;M=y==0?1:2;break;case 1:M=_PyString_FromString(ca);HEAP[V]=M;M=11;break;case 2:M=y==__Py_NoneStruct?3:4;break;
case 3:HEAP[V]=0;M=11;break;case 4:M=HEAP[y+4]==_PyBaseString_Type?7:5;break;case 5:M=_PyType_IsSubtype(HEAP[y+4],_PyBaseString_Type)!=0?7:6;break;case 6:_PyErr_Format(HEAP[_PyExc_TypeError],G,allocate([K,0,0,0],["i8*",0,0,0],ALLOC_STACK));B=-1;M=12;break;case 7:M=HEAP[V]!=0?8:10;break;case 8:M=HEAP[V];HEAP[M]-=1;M=HEAP[M]==0?9:10;break;case 9:FUNCTION_TABLE[HEAP[HEAP[HEAP[V]+4]+24]](HEAP[V]);M=10;break;case 10:HEAP[y]+=1;HEAP[V]=y;M=11;break;case 11:B=0;M=12;break;case 12:h=B;break a;default:assert(0,
"bad label: "+M)}h=void 0}h=h!=0?78:62;break;case 62:h=c(T,m+13,HEAP[t],34)!=0?78:63;break;case 63:a:{h=m+24;k=HEAP[u];M=void 0;for(M=-1;;)switch(M){case -1:var xa,C,J,va,Ea;xa=L;C=h;J=k;va=0;M=J==0?1:2;break;case 1:HEAP[C]=va;M=5;break;case 2:M=(HEAP[HEAP[J+4]+84]&8388608)==0?3:4;break;case 3:_PyErr_Format(HEAP[_PyExc_TypeError],A,allocate([xa,0,0,0],["i8*",0,0,0],ALLOC_STACK));Ea=-1;M=6;break;case 4:M=_PyInt_AsLong(J);HEAP[C]=M;M=5;break;case 5:Ea=0;M=6;break;case 6:h=Ea;break a;default:assert(0,
"bad label: "+M)}h=void 0}h=h!=0?78:64;break;case 64:h=a(N,m+16,HEAP[v],0)!=0?78:65;break;case 65:h=a(I,m+28,HEAP[x],0)!=0?78:66;break;case 66:a:{h=HEAP[m+24];k=void 0;for(k=-1;;)switch(k){case -1:var na,nb,Eb;na=h;Eb=w;k=4;break;case 1:k=HEAP[Eb]==na?2:3;break;case 2:nb=0;k=6;break;case 3:Eb+=8;k=4;break;case 4:k=HEAP[Eb+4]!=0?1:5;break;case 5:_PyErr_Format(HEAP[_PyExc_TypeError],F,allocate(1,"i32",ALLOC_STACK));nb=-1;k=6;break;case 6:h=nb;break a;default:assert(0,"bad label: "+k)}h=void 0}h=h!=
0?78:67;break;case 67:h=HEAP[m+12]==0?68:69;break;case 68:_PyErr_SetString(HEAP[_PyExc_TypeError],U);h=78;break;case 69:h=HEAP[t]==__Py_NoneStruct?70:72;break;case 70:h=HEAP[u]==0?71:72;break;case 71:HEAP[m+24]=3;h=72;break;case 72:h=HEAP[m+24]!=3?73:75;break;case 73:h=HEAP[m+13]==0?74:75;break;case 74:_PyErr_SetString(HEAP[_PyExc_TypeError],z);h=78;break;case 75:h=HEAP[m+20]==0?76:77;break;case 76:_PyErr_SetString(HEAP[_PyExc_TypeError],aa);h=78;break;case 77:n=m;HEAP[m]+=1;h=78;break;case 78:h=
m!=0?79:81;break;case 79:HEAP[m]-=1;h=HEAP[m]==0?80:81;break;case 80:FUNCTION_TABLE[HEAP[HEAP[m+4]+24]](m);h=81;break;case 81:h=HEAP[o]!=0?82:84;break;case 82:h=HEAP[o];HEAP[h]-=1;h=HEAP[h]==0?83:84;break;case 83:FUNCTION_TABLE[HEAP[HEAP[HEAP[o]+4]+24]](HEAP[o]);h=84;break;case 84:h=HEAP[p]!=0?85:87;break;case 85:h=HEAP[p];HEAP[h]-=1;h=HEAP[h]==0?86:87;break;case 86:FUNCTION_TABLE[HEAP[HEAP[HEAP[p]+4]+24]](HEAP[p]);h=87;break;case 87:h=HEAP[q]!=0?88:90;break;case 88:h=HEAP[q];HEAP[h]-=1;h=HEAP[h]==
0?89:90;break;case 89:FUNCTION_TABLE[HEAP[HEAP[HEAP[q]+4]+24]](HEAP[q]);h=90;break;case 90:h=HEAP[r]!=0?91:93;break;case 91:h=HEAP[r];HEAP[h]-=1;h=HEAP[h]==0?92:93;break;case 92:FUNCTION_TABLE[HEAP[HEAP[HEAP[r]+4]+24]](HEAP[r]);h=93;break;case 93:h=HEAP[s]!=0?94:96;break;case 94:h=HEAP[s];HEAP[h]-=1;h=HEAP[h]==0?95:96;break;case 95:FUNCTION_TABLE[HEAP[HEAP[HEAP[s]+4]+24]](HEAP[s]);h=96;break;case 96:h=HEAP[t]!=0?97:99;break;case 97:h=HEAP[t];HEAP[h]-=1;h=HEAP[h]==0?98:99;break;case 98:FUNCTION_TABLE[HEAP[HEAP[HEAP[t]+
4]+24]](HEAP[t]);h=99;break;case 99:h=HEAP[u]!=0?100:102;break;case 100:h=HEAP[u];HEAP[h]-=1;h=HEAP[h]==0?101:102;break;case 101:FUNCTION_TABLE[HEAP[HEAP[HEAP[u]+4]+24]](HEAP[u]);h=102;break;case 102:h=HEAP[v]!=0?103:105;break;case 103:h=HEAP[v];HEAP[h]-=1;h=HEAP[h]==0?104:105;break;case 104:FUNCTION_TABLE[HEAP[HEAP[HEAP[v]+4]+24]](HEAP[v]);h=105;break;case 105:h=HEAP[x]!=0?106:108;break;case 106:h=HEAP[x];HEAP[h]-=1;h=HEAP[h]==0?107:108;break;case 107:FUNCTION_TABLE[HEAP[HEAP[HEAP[x]+4]+24]](HEAP[x]);
h=108;break;case 108:l=n;h=109;break;case 109:return b=l,STACKTOP=g,b;default:assert(0,"bad label: "+h)}},0,function(a){var b;for(b=-1;;)switch(b){case -1:var c;c=a;_PyObject_GC_UnTrack(c);b=HEAP[c+12]!=0?1:3;break;case 1:b=HEAP[c+12];HEAP[b]-=1;b=HEAP[b]==0?2:3;break;case 2:FUNCTION_TABLE[HEAP[HEAP[HEAP[c+12]+4]+24]](HEAP[c+12]);b=3;break;case 3:b=HEAP[c+8]!=0?4:6;break;case 4:b=HEAP[c+8];HEAP[b]-=1;b=HEAP[b]==0?5:6;break;case 5:FUNCTION_TABLE[HEAP[HEAP[HEAP[c+8]+4]+24]](HEAP[c+8]);b=6;break;case 6:b=
HEAP[c+16]!=0?7:9;break;case 7:b=HEAP[c+16];HEAP[b]-=1;b=HEAP[b]==0?8:9;break;case 8:FUNCTION_TABLE[HEAP[HEAP[HEAP[c+16]+4]+24]](HEAP[c+16]);b=9;break;case 9:b=HEAP[c+24]!=0?10:11;break;case 10:_PyMem_Free(HEAP[c+24]);b=11;break;case 11:_PyObject_GC_Del(c);return;default:assert(0,"bad label: "+b)}},0,function(a,b,c){var d;for(d=-1;;)switch(d){case -1:var e,f,g,h,j,k,l;e=a;f=b;g=c;d=HEAP[e+12]!=0?1:3;break;case 1:j=FUNCTION_TABLE[f](HEAP[e+12],g);d=j!=0?2:3;break;case 2:h=j;d=10;break;case 3:d=HEAP[e+
8]!=0?4:6;break;case 4:k=FUNCTION_TABLE[f](HEAP[e+8],g);d=k!=0?5:6;break;case 5:h=k;d=10;break;case 6:d=HEAP[e+16]!=0?7:9;break;case 7:l=FUNCTION_TABLE[f](HEAP[e+16],g);d=l!=0?8:9;break;case 8:h=l;d=10;break;case 9:h=0;d=10;break;case 10:return a=h;default:assert(0,"bad label: "+d)}},0,function(a){var b;for(b=-1;;)switch(b){case -1:var c,d,e,f;c=a;b=HEAP[c+12]!=0?1:3;break;case 1:d=HEAP[c+12];HEAP[c+12]=0;HEAP[d]-=1;b=HEAP[d]==0?2:3;break;case 2:FUNCTION_TABLE[HEAP[HEAP[d+4]+24]](d);b=3;break;case 3:b=
HEAP[c+8]!=0?4:6;break;case 4:e=HEAP[c+8];HEAP[c+8]=0;HEAP[e]-=1;b=HEAP[e]==0?5:6;break;case 5:FUNCTION_TABLE[HEAP[HEAP[e+4]+24]](e);b=6;break;case 6:b=HEAP[c+16]!=0?7:9;break;case 7:f=HEAP[c+16];HEAP[c+16]=0;HEAP[f]-=1;b=HEAP[f]==0?8:9;break;case 8:FUNCTION_TABLE[HEAP[HEAP[f+4]+24]](f);b=9;break;case 9:return 0;default:assert(0,"bad label: "+b)}},0,_PyObject_SelfIter,0,function(a){var b;for(b=-1;;)switch(b){case -1:var c,d,e,f,g,h,l;c=a;f=0;b=k(c)<0?1:2;break;case 1:d=0;b=26;break;case 2:e=b=_PyIter_Next(HEAP[c+
8]);b=b==0?3:7;break;case 3:b=_PyErr_Occurred()==0?4:6;break;case 4:b=HEAP[c+32]!=0?5:6;break;case 5:_PyErr_Format(HEAP[y],db,allocate(1,"i32",ALLOC_STACK));b=6;break;case 6:d=0;b=26;break;case 7:HEAP[c+40]+=1;g=_PyString_AsString(e);l=_PyString_Size(e);b=g==0?9:8;break;case 8:b=l<0?9:19;break;case 9:HEAP[e]-=1;b=HEAP[e]==0?10:11;break;case 10:FUNCTION_TABLE[HEAP[HEAP[e+4]+24]](e);b=11;break;case 11:d=0;b=26;break;case 12:h=HEAP[g];g+=1;b=h==0?13:16;break;case 13:HEAP[e]-=1;b=HEAP[e]==0?14:15;break;
case 14:FUNCTION_TABLE[HEAP[HEAP[e+4]+24]](e);b=15;break;case 15:_PyErr_Format(HEAP[y],Da,allocate(1,"i32",ALLOC_STACK));b=25;break;case 16:b=j(c,h&255)<0?17:19;break;case 17:HEAP[e]-=1;b=HEAP[e]==0?18:25;break;case 18:FUNCTION_TABLE[HEAP[HEAP[e+4]+24]](e);b=25;break;case 19:l=b=l-1;b=b!=-1?12:20;break;case 20:HEAP[e]-=1;b=HEAP[e]==0?21:22;break;case 21:FUNCTION_TABLE[HEAP[HEAP[e+4]+24]](e);b=22;break;case 22:b=j(c,0)<0?25:23;break;case 23:b=HEAP[c+20]!=0?2:24;break;case 24:f=HEAP[c+16];HEAP[c+16]=
0;b=25;break;case 25:d=f;b=26;break;case 26:return a=d;default:assert(0,"bad label: "+b)}},0,o,0,function(a,b){var c;for(c=-1;;)switch(c){case -1:var d,e,f,g,h;d=a;f=_PyObject_GetIter(b);c=f==0?1:10;break;case 1:_PyErr_SetString(HEAP[_PyExc_TypeError],Fa);e=0;c=16;break;case 2:h=o(d,g);HEAP[g]-=1;c=HEAP[g]==0?3:4;break;case 3:FUNCTION_TABLE[HEAP[HEAP[g+4]+24]](g);c=4;break;case 4:c=h==0?5:8;break;case 5:HEAP[f]-=1;c=HEAP[f]==0?6:7;break;case 6:FUNCTION_TABLE[HEAP[HEAP[f+4]+24]](f);c=7;break;case 7:e=
0;c=16;break;case 8:HEAP[h]-=1;c=HEAP[h]==0?9:10;break;case 9:FUNCTION_TABLE[HEAP[HEAP[h+4]+24]](h);c=10;break;case 10:g=c=_PyIter_Next(f);c=c!=0?2:11;break;case 11:HEAP[f]-=1;c=HEAP[f]==0?12:13;break;case 12:FUNCTION_TABLE[HEAP[HEAP[f+4]+24]](f);c=13;break;case 13:c=_PyErr_Occurred()!=0?14:15;break;case 14:e=0;c=16;break;case 15:HEAP[__Py_NoneStruct]+=1;e=__Py_NoneStruct;c=16;break;case 16:return d=e;default:assert(0,"bad label: "+c)}},0,function(a){var b;for(b=-1;;)switch(b){case -1:var c;c=a;_PyObject_GC_UnTrack(c);
b=HEAP[c+12]!=0?1:3;break;case 1:b=HEAP[c+12];HEAP[b]-=1;b=HEAP[b]==0?2:3;break;case 2:FUNCTION_TABLE[HEAP[HEAP[HEAP[c+12]+4]+24]](HEAP[c+12]);b=3;break;case 3:b=HEAP[c+8]!=0?4:6;break;case 4:b=HEAP[c+8];HEAP[b]-=1;b=HEAP[b]==0?5:6;break;case 5:FUNCTION_TABLE[HEAP[HEAP[HEAP[c+8]+4]+24]](HEAP[c+8]);b=6;break;case 6:b=HEAP[c+16]!=0?7:8;break;case 7:_PyMem_Free(HEAP[c+16]);b=8;break;case 8:_PyObject_GC_Del(c);return;default:assert(0,"bad label: "+b)}},0,function(a,b,c){var d;for(d=-1;;)switch(d){case -1:var e,
f,g,h,j,k;e=a;f=b;g=c;d=HEAP[e+12]!=0?1:3;break;case 1:j=FUNCTION_TABLE[f](HEAP[e+12],g);d=j!=0?2:3;break;case 2:h=j;d=7;break;case 3:d=HEAP[e+8]!=0?4:6;break;case 4:k=FUNCTION_TABLE[f](HEAP[e+8],g);d=k!=0?5:6;break;case 5:h=k;d=7;break;case 6:h=0;d=7;break;case 7:return a=h;default:assert(0,"bad label: "+d)}},0,function(a){var b;for(b=-1;;)switch(b){case -1:var c,d,e;c=a;b=HEAP[c+12]!=0?1:3;break;case 1:d=HEAP[c+12];HEAP[c+12]=0;HEAP[d]-=1;b=HEAP[d]==0?2:3;break;case 2:FUNCTION_TABLE[HEAP[HEAP[d+
4]+24]](d);b=3;break;case 3:b=HEAP[c+8]!=0?4:6;break;case 4:e=HEAP[c+8];HEAP[c+8]=0;HEAP[e]-=1;b=HEAP[e]==0?5:6;break;case 5:FUNCTION_TABLE[HEAP[HEAP[e+4]+24]](e);b=6;break;case 6:return 0;default:assert(0,"bad label: "+b)}},0,function(a,b,c){a=STACKTOP;STACKTOP+=8;_memset(a,0,8);var e;for(e=-1;;)switch(e){case -1:var f,g,h,j=a,l=a+4,m;f=b;g=c;HEAP[l]=0;m=__PyObject_GC_New(Ga);e=m==0?1:2;break;case 1:h=0;e=19;break;case 2:HEAP[m+12]=0;HEAP[m+16]=0;HEAP[m+8]=0;HEAP[m+24]=0;HEAP[m+28]=0;HEAP[m+40]=
0;e=k(m)<0?3:6;break;case 3:HEAP[m]-=1;e=HEAP[m]==0?4:5;break;case 4:FUNCTION_TABLE[HEAP[HEAP[m+4]+24]](m);e=5;break;case 5:h=0;e=19;break;case 6:e=_PyArg_UnpackTuple(f,ha,1,2,allocate([j,0,0,0,l,0,0,0],["%struct.PyObject**",0,0,0,"%struct.PyObject**",0,0,0],ALLOC_STACK))==0?7:10;break;case 7:HEAP[m]-=1;e=HEAP[m]==0?8:9;break;case 8:FUNCTION_TABLE[HEAP[HEAP[m+4]+24]](m);e=9;break;case 9:h=0;e=19;break;case 10:e=_PyObject_GetIter(HEAP[j]);HEAP[m+8]=e;e=HEAP[m+8]==0?11:14;break;case 11:_PyErr_SetString(HEAP[_PyExc_TypeError],
Na);HEAP[m]-=1;e=HEAP[m]==0?12:13;break;case 12:FUNCTION_TABLE[HEAP[HEAP[m+4]+24]](m);e=13;break;case 13:h=0;e=19;break;case 14:var n=d(HEAP[l],g);HEAP[m+12]=n;n=m;e=HEAP[m+12]==0?15:18;break;case 15:HEAP[n]-=1;e=HEAP[n]==0?16:17;break;case 16:FUNCTION_TABLE[HEAP[HEAP[m+4]+24]](m);e=17;break;case 17:h=0;e=19;break;case 18:_PyObject_GC_Track(n);h=m;e=19;break;case 19:return b=h,STACKTOP=a,b;default:assert(0,"bad label: "+e)}},0,function(a,b,c){a=STACKTOP;STACKTOP+=8;_memset(a,0,8);var e;for(e=-1;;)switch(e){case -1:var f,
g,h,j=a,k=a+4,l;f=b;g=c;HEAP[k]=0;l=__PyObject_GC_New(ia);e=l==0?1:2;break;case 1:h=0;e=16;break;case 2:HEAP[l+12]=0;HEAP[l+8]=0;HEAP[l+16]=0;HEAP[l+20]=0;HEAP[l+24]=0;HEAP[l+28]=0;e=_PyArg_UnpackTuple(f,ha,1,2,allocate([j,0,0,0,k,0,0,0],["%struct.PyObject**",0,0,0,"%struct.PyObject**",0,0,0],ALLOC_STACK))==0?3:6;break;case 3:HEAP[l]-=1;e=HEAP[l]==0?4:5;break;case 4:FUNCTION_TABLE[HEAP[HEAP[l+4]+24]](l);e=5;break;case 5:h=0;e=16;break;case 6:e=_PyObject_GetAttrString(HEAP[j],ba);HEAP[l+8]=e;e=HEAP[l+
8]==0?8:7;break;case 7:e=_PyCallable_Check(HEAP[l+8])==0?8:11;break;case 8:_PyErr_SetString(HEAP[_PyExc_TypeError],Ya);HEAP[l]-=1;e=HEAP[l]==0?9:10;break;case 9:FUNCTION_TABLE[HEAP[HEAP[l+4]+24]](l);e=10;break;case 10:h=0;e=16;break;case 11:var m=d(HEAP[k],g);HEAP[l+12]=m;m=l;e=HEAP[l+12]==0?12:15;break;case 12:HEAP[m]-=1;e=HEAP[m]==0?13:14;break;case 13:FUNCTION_TABLE[HEAP[HEAP[l+4]+24]](l);e=14;break;case 14:h=0;e=16;break;case 15:_PyObject_GC_Track(m);h=l;e=16;break;case 16:return b=h,STACKTOP=
a,b;default:assert(0,"bad label: "+e)}},0,function(){return _PyDict_Keys(HEAP[x])},0,function(a,b,c){a=STACKTOP;STACKTOP+=8;_memset(a,0,8);var e;for(e=-1;;)switch(e){case -1:var f,g,h=a,j=a+4,k;e=b;f=c;HEAP[j]=0;e=_PyArg_UnpackTuple(e,ha,1,2,allocate([h,0,0,0,j,0,0,0],["%struct.PyObject**",0,0,0,"%struct.PyObject**",0,0,0],ALLOC_STACK))==0?1:2;break;case 1:g=0;e=14;break;case 2:e=HEAP[HEAP[h]+4]!=_PyBaseString_Type?3:5;break;case 3:e=_PyType_IsSubtype(HEAP[HEAP[h]+4],_PyBaseString_Type)==0?4:5;break;
case 4:_PyErr_SetString(HEAP[_PyExc_TypeError],ta);g=0;e=14;break;case 5:k=e=d(HEAP[j],f);e=e==0?6:7;break;case 6:g=0;e=14;break;case 7:e=_PyDict_SetItem(HEAP[x],HEAP[h],k)<0;HEAP[k]-=1;var l=HEAP[k]==0;e=e?8:11;break;case 8:e=l?9:10;break;case 9:FUNCTION_TABLE[HEAP[HEAP[k+4]+24]](k);e=10;break;case 10:g=0;e=14;break;case 11:e=l?12:13;break;case 12:FUNCTION_TABLE[HEAP[HEAP[k+4]+24]](k);e=13;break;case 13:HEAP[__Py_NoneStruct]+=1;g=__Py_NoneStruct;e=14;break;case 14:return b=g,STACKTOP=a,b;default:assert(0,
"bad label: "+e)}},0,function(a,b){var c;for(c=-1;;)switch(c){case -1:var d;c=_PyDict_DelItem(HEAP[x],b)<0?1:2;break;case 1:d=_PyErr_Format(HEAP[y],B,allocate(1,"i32",ALLOC_STACK));c=3;break;case 2:HEAP[__Py_NoneStruct]+=1;d=__Py_NoneStruct;c=3;break;case 3:return c=d;default:assert(0,"bad label: "+c)}},0,function(a,b){return e(b)},0,function(a,b){var c=STACKTOP;STACKTOP+=4;_memset(c,0,4);var d;for(d=-1;;)switch(d){case -1:var e,f=c,g;d=b;HEAP[f]=0;g=HEAP[r];d=_PyArg_UnpackTuple(d,O,0,1,allocate([f,
0,0,0],["%struct.PyObject**",0,0,0],ALLOC_STACK))==0?1:2;break;case 1:e=0;d=7;break;case 2:d=HEAP[f]!=0?3:6;break;case 3:d=(HEAP[HEAP[HEAP[f]+4]+84]&8388608)==0?4:5;break;case 4:_PyErr_Format(HEAP[_PyExc_TypeError],wb,allocate(1,"i32",ALLOC_STACK));e=0;d=7;break;case 5:d=_PyInt_AsLong(HEAP[f]);HEAP[r]=d;d=6;break;case 6:e=_PyInt_FromLong(g);d=7;break;case 7:return STACKTOP=c,e;default:assert(0,"bad label: "+d)}},0]);q.run=p;p();return q});