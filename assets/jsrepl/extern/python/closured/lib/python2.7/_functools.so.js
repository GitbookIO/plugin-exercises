(function(g){function e(){a=allocate([114,101,100,117,99,101,0],"i8",ALLOC_NORMAL);c=allocate([114,101,100,117,99,101,40,41,32,97,114,103,32,50,32,109,117,115,116,32,115,117,112,112,111,114,116,32,105,116,101,114,97,116,105,111,110,0],"i8",ALLOC_NORMAL);d=allocate([114,101,100,117,99,101,40,41,32,111,102,32,101,109,112,116,121,32,115,101,113,117,101,110,99,101,32,119,105,116,104,32,110,111,32,105,110,105,116,105,97,108,32,118,97,108,117,
101,0],"i8",ALLOC_NORMAL);f=allocate([114,101,100,117,99,101,40,102,117,110,99,116,105,111,110,44,32,115,101,113,117,101,110,99,101,91,44,32,105,110,105,116,105,97,108,93,41,32,45,62,32,118,97,108,117,101,10,10,65,112,112,108,121,32,97,32,102,117,110,99,116,105,111,110,32,111,102,32,116,119,111,32,97,114,103,117,109,101,110,116,115,32,99,117,109,117,108,97,116,105,118,101,108,121,32,116,111,32,116,104,101,32,105,116,101,109,115,32,111,102,32,97,32,115,101,113,117,101,110,99,101,44,10,102,114,111,
109,32,108,101,102,116,32,116,111,32,114,105,103,104,116,44,32,115,111,32,97,115,32,116,111,32,114,101,100,117,99,101,32,116,104,101,32,115,101,113,117,101,110,99,101,32,116,111,32,97,32,115,105,110,103,108,101,32,118,97,108,117,101,46,10,70,111,114,32,101,120,97,109,112,108,101,44,32,114,101,100,117,99,101,40,108,97,109,98,100,97,32,120,44,32,121,58,32,120,43,121,44,32,91,49,44,32,50,44,32,51,44,32,52,44,32,53,93,41,32,99,97,108,99,117,108,97,116,101,115,10,40,40,40,40,49,43,50,41,43,51,41,43,52,
41,43,53,41,46,32,32,73,102,32,105,110,105,116,105,97,108,32,105,115,32,112,114,101,115,101,110,116,44,32,105,116,32,105,115,32,112,108,97,99,101,100,32,98,101,102,111,114,101,32,116,104,101,32,105,116,101,109,115,10,111,102,32,116,104,101,32,115,101,113,117,101,110,99,101,32,105,110,32,116,104,101,32,99,97,108,99,117,108,97,116,105,111,110,44,32,97,110,100,32,115,101,114,118,101,115,32,97,115,32,97,32,100,101,102,97,117,108,116,32,119,104,101,110,32,116,104,101,10,115,101,113,117,101,110,99,101,
32,105,115,32,101,109,112,116,121,46,0],"i8",ALLOC_NORMAL);h=allocate([116,121,112,101,32,39,112,97,114,116,105,97,108,39,32,116,97,107,101,115,32,97,116,32,108,101,97,115,116,32,111,110,101,32,97,114,103,117,109,101,110,116,0],"i8",ALLOC_NORMAL);j=allocate([116,104,101,32,102,105,114,115,116,32,97,114,103,117,109,101,110,116,32,109,117,115,116,32,98,101,32,99,97,108,108,97,98,108,101,0],"i8",ALLOC_NORMAL);k=allocate([80,121,67,97,108,108,97,98,108,101,95,67,104,101,99,107,40,112,116,111,45,62,102,
110,41,0],"i8",ALLOC_NORMAL);l=allocate([46,46,47,99,112,121,116,104,111,110,47,77,111,100,117,108,101,115,47,95,102,117,110,99,116,111,111,108,115,109,111,100,117,108,101,46,99,0],"i8",ALLOC_NORMAL);m=allocate([112,97,114,116,105,97,108,95,99,97,108,108,0],"i8",ALLOC_NORMAL);n=allocate([40,40,40,40,40,40,80,121,79,98,106,101,99,116,42,41,40,112,116,111,45,62,97,114,103,115,41,41,45,62,111,98,95,116,121,112,101,41,41,45,62,116,112,95,102,108,97,103,115,32,38,32,40,40,49,76,60,60,50,54,41,41,41,32,
33,61,32,48,41,0],"i8",ALLOC_NORMAL);o=allocate([112,116,111,45,62,107,119,32,61,61,32,40,38,95,80,121,95,78,111,110,101,83,116,114,117,99,116,41,32,124,124,32,40,40,40,40,40,40,80,121,79,98,106,101,99,116,42,41,40,112,116,111,45,62,107,119,41,41,45,62,111,98,95,116,121,112,101,41,41,45,62,116,112,95,102,108,97,103,115,32,38,32,40,40,49,76,60,60,50,57,41,41,41,32,33,61,32,48,41,0],"i8",ALLOC_NORMAL);p=allocate([112,97,114,116,105,97,108,40,102,117,110,99,44,32,42,97,114,103,115,44,32,42,42,107,101,
121,119,111,114,100,115,41,32,45,32,110,101,119,32,102,117,110,99,116,105,111,110,32,119,105,116,104,32,112,97,114,116,105,97,108,32,97,112,112,108,105,99,97,116,105,111,110,10,32,32,32,32,111,102,32,116,104,101,32,103,105,118,101,110,32,97,114,103,117,109,101,110,116,115,32,97,110,100,32,107,101,121,119,111,114,100,115,46,10,0],"i8",ALLOC_NORMAL);q=allocate([102,117,110,99,0],"i8",ALLOC_NORMAL);r=allocate([102,117,110,99,116,105,111,110,32,111,98,106,101,99,116,32,116,111,32,117,115,101,32,105,110,
32,102,117,116,117,114,101,32,112,97,114,116,105,97,108,32,99,97,108,108,115,0],"i8",ALLOC_NORMAL);t=allocate([97,114,103,115,0],"i8",ALLOC_NORMAL);s=allocate([116,117,112,108,101,32,111,102,32,97,114,103,117,109,101,110,116,115,32,116,111,32,102,117,116,117,114,101,32,112,97,114,116,105,97,108,32,99,97,108,108,115,0],"i8",ALLOC_NORMAL);u=allocate([107,101,121,119,111,114,100,115,0],"i8",ALLOC_NORMAL);v=allocate([100,105,99,116,105,111,110,97,114,121,32,111,102,32,107,101,121,119,111,114,100,32,97,
114,103,117,109,101,110,116,115,32,116,111,32,102,117,116,117,114,101,32,112,97,114,116,105,97,108,32,99,97,108,108,115,0],"i8",ALLOC_NORMAL);w=allocate([0,0,0,0,6,0,0,0,8,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,12,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,16,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],["i8*",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",
0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8"],ALLOC_NORMAL);x=allocate([97,32,112,97,114,116,105,97,108,32,111,98,106,101,99,116,39,115,32,100,105,99,116,105,111,110,97,114,121,32,109,97,121,32,110,111,116,32,98,101,32,100,101,108,101,116,101,100,0],"i8",ALLOC_NORMAL);y=allocate([115,101,116,116,105,110,103,32,112,97,114,116,105,97,108,32,111,98,106,101,99,116,39,115,32,100,105,99,116,105,111,110,97,114,121,32,116,111,32,97,32,110,111,110,45,100,105,99,116,
0],"i8",ALLOC_NORMAL);B=allocate([95,95,100,105,99,116,95,95,0],"i8",ALLOC_NORMAL);A=allocate(40,["i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, i8*)*",0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*, i8*)*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8","i8*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8"],ALLOC_NORMAL);C=allocate([79,40,79,41,40,79,79,79,79,41,0],"i8",ALLOC_NORMAL);G=allocate([40,79,79,79,79,41,58,95,95,115,101,116,115,116,97,116,101,95,
95,0],"i8",ALLOC_NORMAL);F=allocate([95,95,114,101,100,117,99,101,95,95,0],"i8",ALLOC_NORMAL);E=allocate([95,95,115,101,116,115,116,97,116,101,95,95,0],"i8",ALLOC_NORMAL);N=allocate([0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],["i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8","i8","i8","i8","i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8","i8","i8","i8",
"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8"],ALLOC_NORMAL);Q=allocate([102,117,110,99,116,111,111,108,115,46,112,97,114,116,105,97,108,0],"i8",ALLOC_NORMAL);I=allocate([1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,28,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,148971,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],["i32",0,0,0,"%struct._typeobject*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i32",0,0,0,"i32",0,0,0,"void (%struct.PyObject*)*",0,0,0,"i32 (%struct.PyObject*, %struct.FILE*, i32)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, i8*)*",0,0,0,"i32 (%struct.PyObject*, i8*, %struct.PyObject*)*",0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*)*",
0,0,0,"%struct.PyNumberMethods*",0,0,0,"%struct.PySequenceMethods*",0,0,0,"%struct.PyMappingMethods*",0,0,0,"i32 (%struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"%struct.PyBufferProcs*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i32 (%struct.PyObject*, i32 (%struct.PyObject*, i8*)*, i8*)*",
0,0,0,"i32 (%struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*, i32)*",0,0,0,"i32",0,0,0,"%struct.PyObject* (%struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*)*",0,0,0,"%struct.PyMethodDef*",0,0,0,"%struct.PyMemberDef*",0,0,0,"%struct.PyGetSetDef*",0,0,0,"%struct._typeobject*",0,0,0,"%struct.PyObject*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",
0,0,0,"i32",0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct._typeobject*, i32)*",0,0,0,"%struct.PyObject* (%struct._typeobject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"void (i8*)*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8"],ALLOC_NORMAL);J=allocate([84,111,111,108,115,32,116,104,97,116,32,111,112,101,114,97,116,
101,32,111,110,32,102,117,110,99,116,105,111,110,115,46,0],"i8",ALLOC_NORMAL);P=allocate([0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],["i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8"],ALLOC_NORMAL);D=allocate([95,102,117,110,99,116,111,111,108,115,0],"i8",ALLOC_NORMAL);T=allocate([110,97,109,101,32,33,61,32,
40,40,118,111,105,100,32,42,41,48,41,0],"i8",ALLOC_NORMAL);L=allocate([105,110,105,116,95,102,117,110,99,116,111,111,108,115,0],"i8",ALLOC_NORMAL);HEAP[w]=q;HEAP[w+16]=r;HEAP[w+20]=t;HEAP[w+36]=s;HEAP[w+40]=u;HEAP[w+56]=v;HEAP[A]=B;HEAP[A+4]=g+2;HEAP[A+8]=g+4;HEAP[N]=F;HEAP[N+4]=g+6;HEAP[N+16]=E;HEAP[N+20]=g+8;HEAP[I+12]=Q;HEAP[I+24]=g+10;HEAP[I+64]=g+12;HEAP[I+72]=g+14;HEAP[I+76]=g+16;HEAP[I+88]=p;HEAP[I+92]=g+18;HEAP[I+116]=N;HEAP[I+120]=w;HEAP[I+124]=A;HEAP[I+156]=g+20;HEAP[I+160]=g+22;HEAP[P]=
a;HEAP[P+4]=g+24;HEAP[P+12]=f}var b={arguments:[]};Runtime.QUANTUM_SIZE=4;var a,c,d,f,h,j,k,l,m,n,o,p,q,r,t,s,u,v,w,x,y,B,A,C,G,F,E,N,Q,I,J,P,D,T,L;b._init_functools=function(){var a=STACKTOP;STACKTOP+=8;_memset(a,0,8);var b;for(b=-1;;)switch(b){case -1:var c,d,e,f=a;HEAP[f]=I;HEAP[f+4]=0;d=_Py_InitModule4(D,P,J,0,1013);b=d==0?7:1;break;case 1:c=0;b=6;break;case 2:b=_PyType_Ready(HEAP[f+c*4])<0?7:3;break;case 3:e=_strchr(HEAP[HEAP[f+c*4]+12],46);b=e==0?4:5;break;case 4:throw ___assert_fail(T,l,398,
L),"Reached an unreachable!";case 5:HEAP[HEAP[f+c*4]]+=1;_PyModule_AddObject(d,e+1,HEAP[f+c*4]);c+=1;b=6;break;case 6:b=HEAP[f+c*4]!=0?2:7;break;case 7:STACKTOP=a;return;default:assert(0,"bad label: "+b)}};FUNCTION_TABLE=FUNCTION_TABLE.concat([0,0,function(a){var b;for(b=-1;;)switch(b){case -1:var c,d;c=a;b=HEAP[c+20]==0?1:3;break;case 1:b=_PyDict_New();HEAP[c+20]=b;b=HEAP[c+20]==0?2:3;break;case 2:d=0;b=4;break;case 3:HEAP[HEAP[c+20]]+=1;d=HEAP[c+20];b=4;break;case 4:return a=d;default:assert(0,
"bad label: "+b)}},0,function(a,b){var c;for(c=-1;;)switch(c){case -1:var d,e,f,g;d=a;e=b;c=e==0?1:2;break;case 1:_PyErr_SetString(HEAP[_PyExc_TypeError],x);f=-1;c=8;break;case 2:c=(HEAP[HEAP[e+4]+84]&536870912)==0?3:4;break;case 3:_PyErr_SetString(HEAP[_PyExc_TypeError],y);f=-1;c=8;break;case 4:g=HEAP[d+20];HEAP[e]+=1;HEAP[d+20]=e;c=g!=0?5:7;break;case 5:HEAP[g]-=1;c=HEAP[g]==0?6:7;break;case 6:FUNCTION_TABLE[HEAP[HEAP[g+4]+24]](g);c=7;break;case 7:f=0;c=8;break;case 8:return c=f;default:assert(0,
"bad label: "+c)}},0,function(a){var b;for(b=-1;;)switch(b){case -1:var c,d;c=a;b=HEAP[c+20]!=0?1:2;break;case 1:d=HEAP[c+20];b=3;break;case 2:d=__Py_NoneStruct;b=3;break;case 3:return a=_Py_BuildValue(C,allocate([HEAP[c+4],0,0,0,HEAP[c+8],0,0,0,HEAP[c+8],0,0,0,HEAP[c+12],0,0,0,HEAP[c+16],0,0,0,d,0,0,0],["%struct._typeobject*",0,0,0,"%struct.PyObject*",0,0,0,"%struct.PyObject*",0,0,0,"%struct.PyObject*",0,0,0,"%struct.PyObject*",0,0,0,"%struct.PyObject*",0,0,0],ALLOC_STACK));default:assert(0,"bad label: "+
b)}},0,function(a,b){var c=STACKTOP;STACKTOP+=16;_memset(c,0,16);var d;for(d=-1;;)switch(d){case -1:var e,f,g=c,h=c+4,j=c+8,k=c+12;e=a;d=_PyArg_ParseTuple(b,G,allocate([g,0,0,0,h,0,0,0,j,0,0,0,k,0,0,0],["%struct.PyObject**",0,0,0,"%struct.PyObject**",0,0,0,"%struct.PyObject**",0,0,0,"%struct.PyObject**",0,0,0],ALLOC_STACK))==0?1:2;break;case 1:f=0;d=18;break;case 2:d=HEAP[e+8]!=0?3:5;break;case 3:d=HEAP[e+8];HEAP[d]-=1;d=HEAP[d]==0?4:5;break;case 4:FUNCTION_TABLE[HEAP[HEAP[HEAP[e+8]+4]+24]](HEAP[e+
8]);d=5;break;case 5:d=HEAP[e+12]!=0?6:8;break;case 6:d=HEAP[e+12];HEAP[d]-=1;d=HEAP[d]==0?7:8;break;case 7:FUNCTION_TABLE[HEAP[HEAP[HEAP[e+12]+4]+24]](HEAP[e+12]);d=8;break;case 8:d=HEAP[e+16]!=0?9:11;break;case 9:d=HEAP[e+16];HEAP[d]-=1;d=HEAP[d]==0?10:11;break;case 10:FUNCTION_TABLE[HEAP[HEAP[HEAP[e+16]+4]+24]](HEAP[e+16]);d=11;break;case 11:d=HEAP[e+20]!=0?12:14;break;case 12:d=HEAP[e+20];HEAP[d]-=1;d=HEAP[d]==0?13:14;break;case 13:FUNCTION_TABLE[HEAP[HEAP[HEAP[e+20]+4]+24]](HEAP[e+20]);d=14;
break;case 14:HEAP[e+8]=HEAP[g];HEAP[e+12]=HEAP[h];HEAP[e+16]=HEAP[j];d=HEAP[k]!=__Py_NoneStruct?15:16;break;case 15:HEAP[e+20]=HEAP[k];HEAP[HEAP[k]]+=1;d=17;break;case 16:HEAP[e+20]=0;d=17;break;case 17:HEAP[HEAP[g]]+=1;HEAP[HEAP[h]]+=1;HEAP[HEAP[j]]+=1;HEAP[__Py_NoneStruct]+=1;f=__Py_NoneStruct;d=18;break;case 18:return e=f,STACKTOP=c,e;default:assert(0,"bad label: "+d)}},0,function(a){var b;for(b=-1;;)switch(b){case -1:var c;c=a;_PyObject_GC_UnTrack(c);b=HEAP[c+24]!=0?1:2;break;case 1:_PyObject_ClearWeakRefs(c);
b=2;break;case 2:b=HEAP[c+8]!=0?3:5;break;case 3:b=HEAP[c+8];HEAP[b]-=1;b=HEAP[b]==0?4:5;break;case 4:FUNCTION_TABLE[HEAP[HEAP[HEAP[c+8]+4]+24]](HEAP[c+8]);b=5;break;case 5:b=HEAP[c+12]!=0?6:8;break;case 6:b=HEAP[c+12];HEAP[b]-=1;b=HEAP[b]==0?7:8;break;case 7:FUNCTION_TABLE[HEAP[HEAP[HEAP[c+12]+4]+24]](HEAP[c+12]);b=8;break;case 8:b=HEAP[c+16]!=0?9:11;break;case 9:b=HEAP[c+16];HEAP[b]-=1;b=HEAP[b]==0?10:11;break;case 10:FUNCTION_TABLE[HEAP[HEAP[HEAP[c+16]+4]+24]](HEAP[c+16]);b=11;break;case 11:b=
HEAP[c+20]!=0?12:14;break;case 12:b=HEAP[c+20];HEAP[b]-=1;b=HEAP[b]==0?13:14;break;case 13:FUNCTION_TABLE[HEAP[HEAP[HEAP[c+20]+4]+24]](HEAP[c+20]);b=14;break;case 14:FUNCTION_TABLE[HEAP[HEAP[c+4]+160]](c);return;default:assert(0,"bad label: "+b)}},0,function(a,b,c){var d;for(d=-1;;)switch(d){case -1:var e,f,g,h,j,p,q;e=a;f=b;g=c;q=p=0;d=_PyCallable_Check(HEAP[e+8])==0?1:2;break;case 1:throw ___assert_fail(k,l,171,m),"Reached an unreachable!";case 2:d=(HEAP[HEAP[HEAP[e+12]+4]+84]&67108864)==0?3:4;
break;case 3:throw ___assert_fail(n,l,172,m),"Reached an unreachable!";case 4:d=HEAP[e+16]!=__Py_NoneStruct?5:7;break;case 5:d=(HEAP[HEAP[HEAP[e+16]+4]+84]&536870912)==0?6:7;break;case 6:throw ___assert_fail(o,l,173,m),"Reached an unreachable!";case 7:var r=f;d=HEAP[HEAP[e+12]+8]==0?8:9;break;case 8:p=r;HEAP[f]+=1;d=13;break;case 9:var s=HEAP[e+12];d=HEAP[r+8]==0?10:11;break;case 10:p=s;HEAP[HEAP[e+12]]+=1;d=13;break;case 11:p=_PySequence_Concat(s,f);d=p==0?12:13;break;case 12:h=0;d=33;break;case 13:d=
HEAP[e+16]==__Py_NoneStruct?14:16;break;case 14:q=g;d=g!=0?15:27;break;case 15:HEAP[g]+=1;d=27;break;case 16:q=_PyDict_Copy(HEAP[e+16]);d=q==0?17:20;break;case 17:HEAP[p]-=1;d=HEAP[p]==0?18:19;break;case 18:FUNCTION_TABLE[HEAP[HEAP[p+4]+24]](p);d=19;break;case 19:h=0;d=33;break;case 20:d=g!=0?21:27;break;case 21:d=_PyDict_Merge(q,g,1)!=0?22:27;break;case 22:HEAP[p]-=1;d=HEAP[p]==0?23:24;break;case 23:FUNCTION_TABLE[HEAP[HEAP[p+4]+24]](p);d=24;break;case 24:HEAP[q]-=1;d=HEAP[q]==0?25:26;break;case 25:FUNCTION_TABLE[HEAP[HEAP[q+
4]+24]](q);d=26;break;case 26:h=0;d=33;break;case 27:j=_PyObject_Call(HEAP[e+8],p,q);HEAP[p]-=1;d=HEAP[p]==0?28:29;break;case 28:FUNCTION_TABLE[HEAP[HEAP[p+4]+24]](p);d=29;break;case 29:d=q!=0?30:32;break;case 30:HEAP[q]-=1;d=HEAP[q]==0?31:32;break;case 31:FUNCTION_TABLE[HEAP[HEAP[q+4]+24]](q);d=32;break;case 32:h=j;d=33;break;case 33:return a=h;default:assert(0,"bad label: "+d)}},0,_PyObject_GenericGetAttr,0,_PyObject_GenericSetAttr,0,function(a,b,c){var d;for(d=-1;;)switch(d){case -1:var e,f,g,
h,j,k,l,m;e=a;f=b;g=c;d=HEAP[e+8]!=0?1:3;break;case 1:j=FUNCTION_TABLE[f](HEAP[e+8],g);d=j!=0?2:3;break;case 2:h=j;d=13;break;case 3:d=HEAP[e+12]!=0?4:6;break;case 4:k=FUNCTION_TABLE[f](HEAP[e+12],g);d=k!=0?5:6;break;case 5:h=k;d=13;break;case 6:d=HEAP[e+16]!=0?7:9;break;case 7:l=FUNCTION_TABLE[f](HEAP[e+16],g);d=l!=0?8:9;break;case 8:h=l;d=13;break;case 9:d=HEAP[e+20]!=0?10:12;break;case 10:m=FUNCTION_TABLE[f](HEAP[e+20],g);d=m!=0?11:12;break;case 11:h=m;d=13;break;case 12:h=0;d=13;break;case 13:return a=
h;default:assert(0,"bad label: "+d)}},0,function(a,b,c){var d;for(d=-1;;)switch(d){case -1:var e,f,g,k,l,m;e=a;f=b;g=c;d=HEAP[f+8]<=0?1:2;break;case 1:_PyErr_SetString(HEAP[_PyExc_TypeError],h);k=0;d=17;break;case 2:l=HEAP[f+12];d=_PyCallable_Check(l)==0?3:4;break;case 3:_PyErr_SetString(HEAP[_PyExc_TypeError],j);k=0;d=17;break;case 4:m=FUNCTION_TABLE[HEAP[e+152]](e,0);d=m==0?5:6;break;case 5:k=0;d=17;break;case 6:HEAP[m+8]=l;HEAP[l]+=1;d=_PyTuple_GetSlice(f,1,2147483647);HEAP[m+12]=d;d=HEAP[m+12]==
0?7:10;break;case 7:HEAP[m+16]=0;HEAP[m]-=1;d=HEAP[m]==0?8:9;break;case 8:FUNCTION_TABLE[HEAP[HEAP[m+4]+24]](m);d=9;break;case 9:k=0;d=17;break;case 10:d=g!=0?11:15;break;case 11:d=_PyDict_Copy(g);HEAP[m+16]=d;d=HEAP[m+16]==0?12:16;break;case 12:HEAP[m]-=1;d=HEAP[m]==0?13:14;break;case 13:FUNCTION_TABLE[HEAP[HEAP[m+4]+24]](m);d=14;break;case 14:k=0;d=17;break;case 15:HEAP[m+16]=__Py_NoneStruct;HEAP[__Py_NoneStruct]+=1;d=16;break;case 16:HEAP[m+24]=0;HEAP[m+20]=0;k=m;d=17;break;case 17:return a=k;
default:assert(0,"bad label: "+d)}},0,_PyObject_GC_Del,0,function(b,e){var f=STACKTOP;STACKTOP+=12;_memset(f,0,12);var g;for(g=-1;;)switch(g){case -1:var h,j,k=f,l=f+4,m=f+8,n,o;h=e;HEAP[m]=0;g=_PyArg_UnpackTuple(h,a,2,3,allocate([l,0,0,0,k,0,0,0,m,0,0,0],["%struct.PyObject**",0,0,0,"%struct.PyObject**",0,0,0,"%struct.PyObject**",0,0,0],ALLOC_STACK))==0?1:2;break;case 1:j=0;g=35;break;case 2:g=HEAP[m]!=0?3:4;break;case 3:HEAP[HEAP[m]]+=1;g=4;break;case 4:n=g=_PyObject_GetIter(HEAP[k]);g=g==0?5:9;
break;case 5:_PyErr_SetString(HEAP[_PyExc_TypeError],c);g=HEAP[m]!=0?6:8;break;case 6:g=HEAP[m];HEAP[g]-=1;g=HEAP[g]==0?7:8;break;case 7:FUNCTION_TABLE[HEAP[HEAP[HEAP[m]+4]+24]](HEAP[m]);g=8;break;case 8:j=0;g=35;break;case 9:h=_PyTuple_New(2);g=h==0?29:10;break;case 10:g=HEAP[h]>1?11:14;break;case 11:HEAP[h]-=1;g=HEAP[h]==0?12:13;break;case 12:FUNCTION_TABLE[HEAP[HEAP[h+4]+24]](h);g=13;break;case 13:h=g=_PyTuple_New(2);g=g==0?29:14;break;case 14:o=g=_PyIter_Next(n);g=g==0?15:17;break;case 15:g=_PyErr_Occurred()!=
0?26:16;break;case 16:HEAP[h]-=1;g=HEAP[h]==0?20:21;break;case 17:g=HEAP[m]==0?18:19;break;case 18:HEAP[m]=o;g=10;break;case 19:_PyTuple_SetItem(h,0,HEAP[m]);_PyTuple_SetItem(h,1,o);g=_PyEval_CallObjectWithKeywords(HEAP[l],h,0);HEAP[m]=g;g=HEAP[m]==0?26:10;break;case 20:FUNCTION_TABLE[HEAP[HEAP[h+4]+24]](h);g=21;break;case 21:g=HEAP[m]==0?22:23;break;case 22:_PyErr_SetString(HEAP[_PyExc_TypeError],d);g=23;break;case 23:HEAP[n]-=1;g=HEAP[n]==0?24:25;break;case 24:FUNCTION_TABLE[HEAP[HEAP[n+4]+24]](n);
g=25;break;case 25:j=HEAP[m];g=35;break;case 26:g=h!=0?27:29;break;case 27:HEAP[h]-=1;g=HEAP[h]==0?28:29;break;case 28:FUNCTION_TABLE[HEAP[HEAP[h+4]+24]](h);g=29;break;case 29:g=HEAP[m]!=0?30:32;break;case 30:g=HEAP[m];HEAP[g]-=1;g=HEAP[g]==0?31:32;break;case 31:FUNCTION_TABLE[HEAP[HEAP[HEAP[m]+4]+24]](HEAP[m]);g=32;break;case 32:HEAP[n]-=1;g=HEAP[n]==0?33:34;break;case 33:FUNCTION_TABLE[HEAP[HEAP[n+4]+24]](n);g=34;break;case 34:j=0;g=35;break;case 35:return h=j,STACKTOP=f,h;default:assert(0,"bad label: "+
g)}},0]);b.run=e;e();return b});