(function(g){function e(a,b,c){var d;for(d=-1;;)switch(d){case -1:var e,f,g,h,j,k,l;e=a;f=b;g=c;l=k=0;d=1;break;case 1:j=d=_fgetc(HEAP[e+12]);d=d==-1?2:3;break;case 2:h=-1;d=5;break;case 3:k|=(j&127)>>g<<l;l=0-g+7+l;d=j&128;g=0;d=d!=0?1:4;break;case 4:HEAP[f]=k;h=0;d=5;break;case 5:return a=h;default:assert(0,"bad label: "+d)}}function b(a,b){var c=STACKTOP;STACKTOP+=4;_memset(c,0,4);var d;for(d=-1;;)switch(d){case -1:var f,g,h,j,k=c,l,
m;f=a;g=b;l=e(f,k,0);d=l!=0?1:2;break;case 1:h=l;d=12;break;case 2:m=_malloc(HEAP[k]);d=m==0?3:4;break;case 3:_PyErr_NoMemory();h=-2;d=12;break;case 4:j=0;d=8;break;case 5:d=_fgetc(HEAP[f+12]);HEAP[m+j]=d&255;d=d==-1?6:7;break;case 6:_free(m);h=-1;d=12;break;case 7:j+=1;d=8;break;case 8:d=j<HEAP[k]?5:9;break;case 9:d=_PyString_FromStringAndSize(m,HEAP[k]);HEAP[g]=d;_free(m);d=HEAP[g]==0?10:11;break;case 10:h=-2;d=12;break;case 11:h=0;d=12;break;case 12:return f=h,STACKTOP=c,f;default:assert(0,"bad label: "+
d)}}function a(a){var c=STACKTOP;STACKTOP+=8;_memset(c,0,8);var d;for(d=-1;;)switch(d){case -1:var e,f=c,g=c+4,h,j;e=a;HEAP[g]=0;h=b(e,f);d=h==0?1:15;break;case 1:h=b(e,g);var k=HEAP[f];d=h!=0?2:4;break;case 2:HEAP[k]-=1;d=HEAP[k]==0?3:15;break;case 3:FUNCTION_TABLE[HEAP[HEAP[HEAP[f]+4]+24]](HEAP[f]);d=15;break;case 4:j=_PyDict_GetItem(HEAP[e+8],k);d=j==0?5:13;break;case 5:j=_PyList_New(0);d=j==0?6:7;break;case 6:h=-2;d=15;break;case 7:d=_PyDict_SetItem(HEAP[e+8],HEAP[f],j)!=0;HEAP[j]-=1;var l=HEAP[j]==
0;d=d?8:11;break;case 8:d=l?9:10;break;case 9:FUNCTION_TABLE[HEAP[HEAP[j+4]+24]](j);d=10;break;case 10:h=-2;d=15;break;case 11:d=l?12:13;break;case 12:FUNCTION_TABLE[HEAP[HEAP[j+4]+24]](j);d=13;break;case 13:d=_PyList_Append(j,HEAP[g])!=0?14:15;break;case 14:h=-2;d=15;break;case 15:d=HEAP[f]!=0?16:18;break;case 16:d=HEAP[f];HEAP[d]-=1;d=HEAP[d]==0?17:18;break;case 17:FUNCTION_TABLE[HEAP[HEAP[HEAP[f]+4]+24]](HEAP[f]);d=18;break;case 18:d=HEAP[g]!=0?19:21;break;case 19:d=HEAP[g];HEAP[d]-=1;d=HEAP[d]==
0?20:21;break;case 20:FUNCTION_TABLE[HEAP[HEAP[HEAP[g]+4]+24]](HEAP[g]);d=21;break;case 21:return a=h,STACKTOP=c,a;default:assert(0,"bad label: "+d)}}function c(a){_fclose(HEAP[a+12]);HEAP[a+12]=0;_PyErr_SetString(HEAP[_PyExc_EOFError],B)}function d(d){var f=STACKTOP;STACKTOP+=16;_memset(f,0,16);var g,h=null;for(g=-1;;)switch(g){case -1:var j,k,l,m,n,o=f,p=f+4,q=f+8,r=f+12,s,t;j=d;n=0;HEAP[o]=-1;HEAP[p]=-1;HEAP[q]=-1;t=s=HEAP[r]=0;g=HEAP[j+12]==0?1:2;break;case 1:_PyErr_SetString(HEAP[v],A);k=0;g=
44;break;case 2:l=g=_fgetc(HEAP[j+12]);g=g==-1?3:4;break;case 3:_fclose(HEAP[j+12]);k=HEAP[j+12]=0;g=44;break;case 4:m=l&3;g=m==3?5:6;break;case 5:var u=l;m=u;h=5;g=7;break;case 6:_ungetc(l,HEAP[j+12]);var z=m,h=6;g=7;break;case 7:g=h==6?z:u;g=g==0?8:g==1?12:g==2?13:g==19?16:g==35?17:g==51?23:g==67?20:g==83?26:29;break;case 8:var w=n=e(j,p,2);w==0?(h=8,g=9):(h=8,g=30);break;case 9:var x=e(j,o,0);n=x;HEAP[j+20]!=0?(h=9,g=10):(h=9,g=30);break;case 10:var H=n;H==0?(h=10,g=11):(h=10,g=30);break;case 11:var M=
e(j,q,0);n=M;h=11;g=30;break;case 12:var K=e(j,q,2);n=K;h=12;g=30;break;case 13:var D=e(j,o,2);n=D;HEAP[j+16]!=0?(h=13,g=14):(h=13,g=30);break;case 14:var V=n;V==0?(h=14,g=15):(h=14,g=30);break;case 15:var y=e(j,q,0);n=y;h=15;g=30;break;case 16:var ca=a(j);n=ca;h=16;g=30;break;case 17:var L=n=e(j,p,0);L==0?(h=17,g=18):(h=17,g=30);break;case 18:var R=n=b(j,r);R==0?(h=18,g=19):(h=18,g=30);break;case 19:HEAP[__Py_NoneStruct]+=1;s=__Py_NoneStruct;var U=n,h=19;g=30;break;case 20:var B=n=e(j,p,0);B==0?
(h=20,g=21):(h=20,g=30);break;case 21:var S=n=e(j,o,0);S==0?(h=21,g=22):(h=21,g=30);break;case 22:var ma=b(j,r);n=ma;h=22;g=30;break;case 23:l=_fgetc(HEAP[j+12]);g=l==-1?24:25;break;case 24:n=-1;g=33;break;case 25:HEAP[j+16]=l!=0;g=2;break;case 26:l=_fgetc(HEAP[j+12]);g=l==-1?27:28;break;case 27:n=-1;g=33;break;case 28:HEAP[j+20]=l!=0;g=2;break;case 29:n=-3;g=31;break;case 30:g=(h==20?B:h==21?S:h==22?ma:h==17?L:h==18?R:h==19?U:h==13?D:h==14?V:h==15?y:h==8?w:h==9?x:h==10?H:h==11?M:h==16?ca:K)==-3?
31:32;break;case 31:_PyErr_SetString(HEAP[_PyExc_ValueError],C);g=43;break;case 32:g=n==-1?33:34;break;case 33:c(j);g=43;break;case 34:g=n==0?35:43;break;case 35:t=_PyTuple_New(4);g=t==0?36:37;break;case 36:k=0;g=44;break;case 37:var xa=t;g=_PyInt_FromLong(m);HEAP[xa+12]=g;xa=t;g=_PyInt_FromLong(HEAP[p]);HEAP[xa+12+8]=g;xa=t;g=HEAP[r]==0?38:39;break;case 38:g=_PyInt_FromLong(HEAP[q]);HEAP[xa+12+4]=g;g=40;break;case 39:HEAP[xa+12+4]=HEAP[r];g=40;break;case 40:var E=t;g=s==0?41:42;break;case 41:g=_PyInt_FromLong(HEAP[o]);
HEAP[E+12+12]=g;g=43;break;case 42:HEAP[E+12+12]=s;g=43;break;case 43:k=t;g=44;break;case 44:return d=k,STACKTOP=f,d;default:assert(0,"bad label: "+g)}}function f(a){var b;for(b=-1;;)switch(b){case -1:var c,d,e;c=a;e=_fwrite(c+20,1,HEAP[c+16],HEAP[c+10260]);var f=c+16;b=HEAP[c+16]==e?3:1;break;case 1:_llvm_memmove_p0i8_p0i8_i32(c+20,c+20+e,HEAP[f]-e,1,0);HEAP[c+16]-=e;b=e==0?2:4;break;case 2:b=_PyString_AsString(HEAP[c+12]);_PyErr_SetFromErrnoWithFilename(HEAP[_PyExc_IOError],b);p(c);d=-1;b=7;break;
case 3:HEAP[f]=0;b=e!=0?4:6;break;case 4:b=_fflush(HEAP[c+10260])!=0?5:6;break;case 5:b=_PyString_AsString(HEAP[c+12]);_PyErr_SetFromErrnoWithFilename(HEAP[_PyExc_IOError],b);p(c);d=-1;b=7;break;case 6:d=0;b=7;break;case 7:return a=d;default:assert(0,"bad label: "+b)}}function h(a,b,c){var d,e=null;for(d=-1;;)switch(d){case -1:var g,h,k,l;g=a;h=b;var m=k=c;HEAP[g+16]+5+m>10239?(e=-1,d=1):(e=-1,d=4);break;case 1:d=f(g)<0?2:3;break;case 2:l=-1;d=9;break;case 3:var n=k,e=3;d=4;break;case 4:d=(e==3?n:
m)==2147483647?5:6;break;case 5:throw ___assert_fail(F,E,630,N),"Reached an unreachable!";case 6:d=j(g,k)<0?7:8;break;case 7:l=-1;d=9;break;case 8:_llvm_memcpy_p0i8_p0i8_i32(g+20+HEAP[g+16],h,k,1,0);HEAP[g+16]=k+HEAP[g+16];l=0;d=9;break;case 9:return a=l;default:assert(0,"bad label: "+d)}}function j(a,b){var c;for(c=-1;;)switch(c){case -1:var d,e,f;d=a;e=b;c=1;break;case 1:f=e&127;e=c=e>>7;c=c!=0?2:3;break;case 2:f|=-128;c=3;break;case 3:HEAP[d+20+HEAP[d+16]]=f;HEAP[d+16]+=1;c=e!=0?1:4;break;case 4:return 0;
default:assert(0,"bad label: "+c)}}function k(a,b,c){var d;for(d=-1;;)switch(d){case -1:var e,g,j,k,l,m;e=a;g=b;j=c;l=_strlen(g);m=_strlen(j);d=l+11+m+HEAP[e+16]>10239?1:3;break;case 1:d=f(e)<0?2:3;break;case 2:k=-1;d=6;break;case 3:HEAP[e+20+HEAP[e+16]]=19;HEAP[e+16]+=1;d=h(e,g,l)<0?4:5;break;case 4:k=-1;d=6;break;case 5:k=h(e,j,m);d=6;break;case 6:return a=k;default:assert(0,"bad label: "+d)}}function l(a){var b=STACKTOP;STACKTOP+=8;_memset(b,0,8);var c,d=null;for(c=-1;;)switch(c){case -1:var e,
f,g,h=b;e=a;_gettimeofday(h,0);g=HEAP[h+4]-HEAP[e+10284+4];c=HEAP[h]!=HEAP[e+10284]?1:2;break;case 1:var j=(HEAP[h]-HEAP[e+10284])*1E6+g;g=j;d=1;c=3;break;case 2:var k=g,d=2;c=3;break;case 3:c=(d==2?k:j)<0?4:5;break;case 4:f=0;c=6;break;case 5:HEAP[e+10284]=HEAP[h];HEAP[e+10284+4]=HEAP[h+4];f=g;c=6;break;case 6:return a=f,STACKTOP=b,a;default:assert(0,"bad label: "+c)}}function m(a,b,c){var d;for(d=-1;;)switch(d){case -1:var e,f,g,h,k;e=a;f=b;g=c;k=5;d=f&HEAP[I+k*4];g=d<<2&255|g&255;d=d!=f?1:2;break;
case 1:g|=-128;HEAP[e+20+HEAP[e+16]]=g;HEAP[e+16]+=1;h=j(e,f>>k);d=3;break;case 2:HEAP[e+20+HEAP[e+16]]=g;HEAP[e+16]+=1;h=0;d=3;break;case 3:return a=h;default:assert(0,"bad label: "+d)}}function n(){var a=STACKTOP;STACKTOP+=160;_memset(a,0,160);var b;for(b=-1;;)switch(b){case -1:var c=a,d=a+8,e=a+16,f=a+88;_gettimeofday(c,0);var g=c+4,h=c,j=d,k=d+4;b=1;break;case 1:_gettimeofday(d,0);b=HEAP[h]!=HEAP[j]?3:2;break;case 2:b=HEAP[g]!=HEAP[k]?3:1;break;case 3:b=HEAP[c]==HEAP[d]?4:5;break;case 4:HEAP[J]=
HEAP[d+4]-HEAP[c+4];b=6;break;case 5:HEAP[J]=0-HEAP[c+4]+1E6+HEAP[d+4];b=6;break;case 6:_getrusage(0,e);var l=e,m=f,n=e+4,o=f+4,p=e+8,q=f+8,r=e+8+4,s=f+8+4;b=7;break;case 7:_getrusage(0,f);var t=HEAP[n];b=HEAP[l]!=HEAP[m]?8:9;break;case 8:HEAP[P]=0-t+1E6+HEAP[f+4];b=15;break;case 9:b=t!=HEAP[o]?10:11;break;case 10:HEAP[P]=HEAP[f+4]-HEAP[e+4];b=15;break;case 11:var u=HEAP[r];b=HEAP[p]!=HEAP[q]?12:13;break;case 12:HEAP[P]=0-u+1E6+HEAP[f+8+4];b=15;break;case 13:b=u!=HEAP[s]?14:7;break;case 14:HEAP[P]=
HEAP[f+8+4]-HEAP[e+8+4];b=15;break;case 15:STACKTOP=a;return;default:assert(0,"bad label: "+b)}}function o(a){var b;for(b=-1;;)switch(b){case -1:b=a;HEAP[b+10276]=1;_gettimeofday(b+10284,0);var c=b;b=HEAP[b+10264]!=0?1:2;break;case 1:_PyEval_SetTrace(g+2,c);b=3;break;case 2:_PyEval_SetProfile(g+2,c);b=3;break;case 3:return;default:assert(0,"bad label: "+b)}}function p(a){var b;for(b=-1;;)switch(b){case -1:var c;c=a;b=HEAP[c+10276]!=0?1:4;break;case 1:HEAP[c+10276]=0;b=HEAP[c+10264]!=0?2:3;break;case 2:_PyEval_SetTrace(0,
0);b=4;break;case 3:_PyEval_SetProfile(0,0);b=4;break;case 4:b=HEAP[c+16]>0?5:6;break;case 5:f(c);b=6;break;case 6:return;default:assert(0,"bad label: "+b)}}function q(a){var b;for(b=-1;;)switch(b){case -1:var c,d;c=a;b=HEAP[c+10276]!=0?1:2;break;case 1:_PyErr_SetString(HEAP[v],D);d=0;b=5;break;case 2:b=HEAP[c+10260]==0?3:4;break;case 3:_PyErr_SetString(HEAP[v],T);d=0;b=5;break;case 4:d=1;b=5;break;case 5:return a=d;default:assert(0,"bad label: "+b)}}function r(){var a;for(a=-1;;)switch(a){case -1:var b,
c,d;b=Ya;d=0;a=2;break;case 1:b+=1;a=2;break;case 2:a=HEAP[b]==0?5:3;break;case 3:a=___ctype_b_loc();a=(HEAP[HEAP[a]+2*HEAP[b]]&2048)==0?1:5;break;case 4:d+=1;a=5;break;case 5:a=HEAP[b+d]==32?7:6;break;case 6:a=HEAP[b+d]!=0?4:7;break;case 7:c=a=_malloc(d+1);a=a!=0?8:9;break;case 8:_llvm_memmove_p0i8_p0i8_i32(c,b,d,1,0);HEAP[c+d]=0;a=9;break;case 9:return b=c;default:assert(0,"bad label: "+a)}}function t(a,b){var c=STACKTOP;STACKTOP+=12;_memset(c,0,12);var d;for(d=-1;;)switch(d){case -1:var e,g,h,
j=c,l,m=c+4,o=c+8;e=b;l=0;HEAP[m]=0;HEAP[o]=1;d=_PyArg_ParseTuple(e,Ea,allocate([j,0,0,0,m,0,0,0,o,0,0,0],["i8**",0,0,0,"i32*",0,0,0,"i32*",0,0,0],ALLOC_STACK))!=0?1:21;break;case 1:l=__PyObject_New(hb);d=l==0?2:3;break;case 2:h=0;d=22;break;case 3:HEAP[l+10272]=1;HEAP[l+10264]=HEAP[m]!=0;d=HEAP[m]==0?6:4;break;case 4:d=HEAP[o]==0?6:5;break;case 5:g=1;d=7;break;case 6:g=0;d=7;break;case 7:HEAP[l+10268]=g;HEAP[l+16]=0;HEAP[l+10276]=0;HEAP[l+10280]=0;HEAP[l+10260]=0;HEAP[l+12]=HEAP[e+12];HEAP[HEAP[l+
12]]+=1;d=_PyDict_New();HEAP[l+8]=d;d=HEAP[l+8]==0?8:11;break;case 8:HEAP[l]-=1;d=HEAP[l]==0?9:10;break;case 9:FUNCTION_TABLE[HEAP[HEAP[l+4]+24]](l);d=10;break;case 10:h=0;d=22;break;case 11:d=___01fopen64_(HEAP[j],Eb);HEAP[l+10260]=d;d=HEAP[l+10260]==0?12:15;break;case 12:HEAP[l]-=1;d=HEAP[l]==0?13:14;break;case 13:FUNCTION_TABLE[HEAP[HEAP[l+4]+24]](l);d=14;break;case 14:_PyErr_SetFromErrnoWithFilename(HEAP[_PyExc_IOError],HEAP[j]);h=0;d=22;break;case 15:d=HEAP[J]==0?16:17;break;case 16:n();n();
n();d=17;break;case 17:a:{var p=l;d=STACKTOP;STACKTOP+=4096;_memset(d,0,4096);for(var q=void 0,q=-1;;)switch(q){case -1:var s,t,u,v,z,w,x=d,H,K,D;s=p;w=r();q=w==0?1:2;break;case 1:_PyErr_NoMemory();z=-1;q=23;break;case 2:k(s,ta,w);q=HEAP[s+10272]!=0?3:4;break;case 3:v=O;q=5;break;case 4:v=wb;q=5;break;case 5:k(s,bb,v);q=HEAP[s+10264]!=0?6:7;break;case 6:u=O;q=8;break;case 7:u=wb;q=8;break;case 8:k(s,vb,u);q=HEAP[s+10268]!=0?9:10;break;case 9:t=O;q=11;break;case 10:t=wb;q=11;break;case 11:k(s,ka,t);
q=_Py_GetPlatform();k(s,za,q);q=_Py_GetProgramFullPath();k(s,Aa,q);_free(w);w=q=_Py_GetVersion();q=q==0?12:13;break;case 12:_PyErr_Clear();q=14;break;case 13:k(s,La,w);q=14;break;case 14:_PyOS_snprintf(x,4096,ya,allocate([HEAP[P],0,0,0],["i32",0,0,0],ALLOC_STACK));k(s,ub,x);_PyOS_snprintf(x,4096,ya,allocate([HEAP[J],0,0,0],["i32",0,0,0],ALLOC_STACK));k(s,Z,x);H=_getcwd(x,4096);k(s,qa,H);H=q=_PySys_GetObject(M);q=q==0?16:15;break;case 15:q=(HEAP[HEAP[H+4]+84]&33554432)==0?16:17;break;case 16:_PyErr_SetString(HEAP[_PyExc_RuntimeError],
na);z=-1;q=23;break;case 17:D=HEAP[H+8];K=0;q=K<D?18:22;break;case 18:w=HEAP[HEAP[H+12]+4*K];w=q=_PyString_AsString(w);var V=s,q=q==0?19:20;break;case 19:k(V,nb,ca);_PyErr_Clear();q=21;break;case 20:k(V,nb,w);q=21;break;case 21:K+=1;q=K<D?18:22;break;case 22:b:{z=s;q=void 0;for(q=-1;;)switch(q){case -1:var y;y=z;q=HEAP[y+16]+2>10239?1:3;break;case 1:q=f(y)<0?2:3;break;case 2:q=4;break;case 3:HEAP[y+20+HEAP[y+16]]=83;HEAP[y+20+(HEAP[y+16]+1)]=HEAP[y+10272]!=0;HEAP[y+16]+=2;q=4;break;case 4:break b;
default:assert(0,"bad label: "+q)}}b:{z=s;q=void 0;for(q=-1;;)switch(q){case -1:var L;L=z;q=HEAP[L+16]+2>10239?1:3;break;case 1:q=f(L)<0?2:3;break;case 2:q=4;break;case 3:HEAP[L+20+HEAP[L+16]]=51;HEAP[L+20+(HEAP[L+16]+1)]=HEAP[L+10268]!=0;HEAP[L+16]+=2;q=4;break;case 4:break b;default:assert(0,"bad label: "+q)}}z=0;q=23;break;case 23:p=z;STACKTOP=d;d=p;break a;default:assert(0,"bad label: "+q)}d=void 0}d=d!=0?18:21;break;case 18:HEAP[l]-=1;d=HEAP[l]==0?19:20;break;case 19:FUNCTION_TABLE[HEAP[HEAP[l+
4]+24]](l);d=20;break;case 20:l=0;d=21;break;case 21:h=l;d=22;break;case 22:return e=h,STACKTOP=c,e;default:assert(0,"bad label: "+d)}}function s(){v=allocate(1,"%struct.PyObject*",ALLOC_NORMAL);w=allocate([99,108,111,115,101,40,41,10,67,108,111,115,101,32,116,104,101,32,108,111,103,32,102,105,108,101,44,32,112,114,101,118,101,110,116,105,110,103,32,97,100,100,105,116,105,111,110,97,108,32,114,101,99,111,114,100,115,32,102,114,111,109,32,98,101,105,110,103,32,114,101,97,100,46,0],"i8",ALLOC_NORMAL);
x=allocate([102,105,108,101,110,111,40,41,32,45,62,32,102,105,108,101,32,100,101,115,99,114,105,112,116,111,114,10,82,101,116,117,114,110,115,32,116,104,101,32,102,105,108,101,32,100,101,115,99,114,105,112,116,111,114,32,102,111,114,32,116,104,101,32,108,111,103,32,102,105,108,101,44,32,105,102,32,111,112,101,110,46,10,82,97,105,115,101,115,32,86,97,108,117,101,69,114,114,111,114,32,105,102,32,116,104,101,32,108,111,103,32,102,105,108,101,32,105,115,32,99,108,111,115,101,100,46,0],"i8",ALLOC_NORMAL);
y=allocate([108,111,103,114,101,97,100,101,114,39,115,32,102,105,108,101,32,111,98,106,101,99,116,32,97,108,114,101,97,100,121,32,99,108,111,115,101,100,0],"i8",ALLOC_NORMAL);B=allocate([101,110,100,32,111,102,32,102,105,108,101,32,119,105,116,104,32,105,110,99,111,109,112,108,101,116,101,32,112,114,111,102,105,108,101,32,114,101,99,111,114,100,0],"i8",ALLOC_NORMAL);A=allocate([99,97,110,110,111,116,32,105,116,101,114,97,116,101,32,111,118,101,114,32,99,108,111,115,101,100,32,76,111,103,82,101,97,
100,101,114,32,111,98,106,101,99,116,0],"i8",ALLOC_NORMAL);C=allocate([117,110,107,110,111,119,110,32,114,101,99,111,114,100,32,116,121,112,101,32,105,110,32,108,111,103,32,102,105,108,101,0],"i8",ALLOC_NORMAL);G=allocate([110,111,32,109,111,114,101,32,101,118,101,110,116,115,32,105,110,32,108,111,103,0],"i8",ALLOC_NORMAL);F=allocate([108,101,110,32,60,32,50,49,52,55,52,56,51,54,52,55,0],"i8",ALLOC_NORMAL);E=allocate([46,46,47,99,112,121,116,104,111,110,47,77,111,100,117,108,101,115,47,95,104,111,
116,115,104,111,116,46,99,0],"i8",ALLOC_NORMAL);N=allocate([112,97,99,107,95,115,116,114,105,110,103,0],"i8",ALLOC_NORMAL);Q=allocate([105,78,0],"i8",ALLOC_NORMAL);I=allocate([-1,0,0,0,1,0,0,0,3,0,0,0,7,0,0,0,15,0,0,0,31,0,0,0,63,0,0,0,127,0,0,0],["i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0],ALLOC_NORMAL);J=allocate(1,"i32",ALLOC_NORMAL);P=allocate(1,"i32",ALLOC_NORMAL);D=allocate([112,114,111,102,105,108,101,114,32,97,108,114,101,97,100,121,32,
97,99,116,105,118,101,0],"i8",ALLOC_NORMAL);T=allocate([112,114,111,102,105,108,101,114,32,97,108,114,101,97,100,121,32,99,108,111,115,101,100,0],"i8",ALLOC_NORMAL);L=allocate([97,100,100,105,110,102,111,40,107,101,121,44,32,118,97,108,117,101,41,10,73,110,115,101,114,116,32,97,110,32,65,68,68,95,73,78,70,79,32,114,101,99,111,114,100,32,105,110,116,111,32,116,104,101,32,108,111,103,46,0],"i8",ALLOC_NORMAL);$=allocate([115,115,58,97,100,100,105,110,102,111,0],"i8",ALLOC_NORMAL);R=allocate([99,108,
111,115,101,40,41,10,83,104,117,116,32,100,111,119,110,32,116,104,105,115,32,112,114,111,102,105,108,101,114,32,97,110,100,32,99,108,111,115,101,32,116,104,101,32,108,111,103,32,102,105,108,101,115,44,32,101,118,101,110,32,105,102,32,105,116,115,32,97,99,116,105,118,101,46,0],"i8",ALLOC_NORMAL);K=allocate([112,114,111,102,105,108,101,114,39,115,32,102,105,108,101,32,111,98,106,101,99,116,32,97,108,114,101,97,100,121,32,99,108,111,115,101,100,0],"i8",ALLOC_NORMAL);H=allocate([114,117,110,99,97,108,
108,40,99,97,108,108,97,98,108,101,91,44,32,97,114,103,115,91,44,32,107,119,93,93,41,32,45,62,32,99,97,108,108,97,98,108,101,40,41,10,80,114,111,102,105,108,101,32,97,32,115,112,101,99,105,102,105,99,32,102,117,110,99,116,105,111,110,32,99,97,108,108,44,32,114,101,116,117,114,110,105,110,103,32,116,104,101,32,114,101,115,117,108,116,32,111,102,32,116,104,97,116,32,99,97,108,108,46,0],"i8",ALLOC_NORMAL);S=allocate([114,117,110,99,97,108,108,0],"i8",ALLOC_NORMAL);U=allocate([114,117,110,99,111,100,
101,40,99,111,100,101,44,32,103,108,111,98,97,108,115,91,44,32,108,111,99,97,108,115,93,41,10,69,120,101,99,117,116,101,32,97,32,99,111,100,101,32,111,98,106,101,99,116,32,119,104,105,108,101,32,99,111,108,108,101,99,116,105,110,103,32,112,114,111,102,105,108,101,32,100,97,116,97,46,32,32,73,102,32,108,111,99,97,108,115,32,105,115,10,111,109,105,116,116,101,100,44,32,103,108,111,98,97,108,115,32,105,115,32,117,115,101,100,32,102,111,114,32,116,104,101,32,108,111,99,97,108,115,32,97,115,32,119,101,
108,108,46,0],"i8",ALLOC_NORMAL);z=allocate([79,33,79,33,124,79,58,114,117,110,99,111,100,101,0],"i8",ALLOC_NORMAL);aa=allocate([108,111,99,97,108,115,32,109,117,115,116,32,98,101,32,97,32,100,105,99,116,105,111,110,97,114,121,32,111,114,32,78,111,110,101,0],"i8",ALLOC_NORMAL);ja=allocate([115,116,97,114,116,40,41,10,73,110,115,116,97,108,108,32,116,104,105,115,32,112,114,111,102,105,108,101,114,32,102,111,114,32,116,104,101,32,99,117,114,114,101,110,116,32,116,104,114,101,97,100,46,0],"i8",ALLOC_NORMAL);
la=allocate([115,116,111,112,40,41,10,82,101,109,111,118,101,32,116,104,105,115,32,112,114,111,102,105,108,101,114,32,102,114,111,109,32,116,104,101,32,99,117,114,114,101,110,116,32,116,104,114,101,97,100,46,0],"i8",ALLOC_NORMAL);da=allocate([112,114,111,102,105,108,101,114,32,110,111,116,32,97,99,116,105,118,101,0],"i8",ALLOC_NORMAL);Ka=allocate([97,100,100,105,110,102,111,0],"i8",ALLOC_NORMAL);Ma=allocate([99,108,111,115,101,0],"i8",ALLOC_NORMAL);wa=allocate([102,105,108,101,110,111,0],"i8",ALLOC_NORMAL);
ib=allocate([114,117,110,99,111,100,101,0],"i8",ALLOC_NORMAL);cb=allocate([115,116,97,114,116,0],"i8",ALLOC_NORMAL);db=allocate([115,116,111,112,0],"i8",ALLOC_NORMAL);Da=allocate([0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],["i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",
0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",
0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8"],ALLOC_NORMAL);gb=allocate([102,114,97,109,101,116,105,109,105,110,103,115,0],"i8",ALLOC_NORMAL);Xa=allocate([108,105,110,101,101,118,101,110,116,115,0],"i8",ALLOC_NORMAL);Ca=allocate([108,105,110,101,116,105,109,105,110,103,115,0],"i8",ALLOC_NORMAL);
Za=allocate([0,0,0,0,2,0,0,0,10268,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,10264,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,10268,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],["i8*",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i8","i8","i8","i8","i8*",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i8","i8","i8","i8","i8*",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i8","i8","i8","i8","i8*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8"],ALLOC_NORMAL);Va=
allocate([99,108,111,115,101,100,0],"i8",ALLOC_NORMAL);Ga=allocate([84,114,117,101,32,105,102,32,116,104,101,32,112,114,111,102,105,108,101,114,39,115,32,111,117,116,112,117,116,32,102,105,108,101,32,104,97,115,32,97,108,114,101,97,100,121,32,98,101,101,110,32,99,108,111,115,101,100,46,0],"i8",ALLOC_NORMAL);ha=allocate(40,["i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, i8*)*",0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*, i8*)*",0,0,0,"i8*",0,0,0,"i8","i8","i8","i8","i8*",0,0,0,"i8","i8","i8",
"i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8"],ALLOC_NORMAL);Na=allocate([72,105,103,104,45,112,101,114,102,111,114,109,97,110,99,101,32,112,114,111,102,105,108,101,114,32,111,98,106,101,99,116,46,10,10,77,101,116,104,111,100,115,58,10,10,99,108,111,115,101,40,41,58,32,32,32,32,32,32,83,116,111,112,32,116,104,101,32,112,114,111,102,105,108,101,114,32,97,110,100,32,99,108,111,115,101,32,116,104,101,32,108,111,103,32,102,105,108,101,115,46,10,102,105,108,101,110,111,40,41,58,32,32,
32,32,32,82,101,116,117,114,110,115,32,116,104,101,32,102,105,108,101,32,100,101,115,99,114,105,112,116,111,114,32,111,102,32,116,104,101,32,108,111,103,32,102,105,108,101,46,10,114,117,110,99,97,108,108,40,41,58,32,32,32,32,82,117,110,32,97,32,115,105,110,103,108,101,32,102,117,110,99,116,105,111,110,32,99,97,108,108,32,119,105,116,104,32,112,114,111,102,105,108,105,110,103,32,101,110,97,98,108,101,100,46,10,114,117,110,99,111,100,101,40,41,58,32,32,32,32,69,120,101,99,117,116,101,32,97,32,99,111,
100,101,32,111,98,106,101,99,116,32,119,105,116,104,32,112,114,111,102,105,108,105,110,103,32,101,110,97,98,108,101,100,46,10,115,116,97,114,116,40,41,58,32,32,32,32,32,32,73,110,115,116,97,108,108,32,116,104,101,32,112,114,111,102,105,108,101,114,32,97,110,100,32,114,101,116,117,114,110,46,10,115,116,111,112,40,41,58,32,32,32,32,32,32,32,82,101,109,111,118,101,32,116,104,101,32,112,114,111,102,105,108,101,114,46,10,10,65,116,116,114,105,98,117,116,101,115,32,40,114,101,97,100,45,111,110,108,121,
41,58,10,10,99,108,111,115,101,100,58,32,32,32,32,32,32,32,84,114,117,101,32,105,102,32,116,104,101,32,112,114,111,102,105,108,101,114,32,104,97,115,32,97,108,114,101,97,100,121,32,98,101,101,110,32,99,108,111,115,101,100,46,10,102,114,97,109,101,116,105,109,105,110,103,115,58,32,84,114,117,101,32,105,102,32,69,78,84,69,82,47,69,88,73,84,32,101,118,101,110,116,115,32,99,111,108,108,101,99,116,32,116,105,109,105,110,103,32,105,110,102,111,114,109,97,116,105,111,110,46,10,108,105,110,101,101,118,101,
110,116,115,58,32,32,32,84,114,117,101,32,105,102,32,108,105,110,101,32,101,118,101,110,116,115,32,97,114,101,32,114,101,112,111,114,116,101,100,32,116,111,32,116,104,101,32,112,114,111,102,105,108,101,114,46,10,108,105,110,101,116,105,109,105,110,103,115,58,32,32,84,114,117,101,32,105,102,32,108,105,110,101,32,101,118,101,110,116,115,32,99,111,108,108,101,99,116,32,116,105,109,105,110,103,32,105,110,102,111,114,109,97,116,105,111,110,46,0],"i8",ALLOC_NORMAL);jb=allocate([95,104,111,116,115,104,111,
116,46,80,114,111,102,105,108,101,114,84,121,112,101,0],"i8",ALLOC_NORMAL);hb=allocate([1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10292,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,131563,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],["i32",0,0,
0,"%struct._typeobject*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i32",0,0,0,"i32",0,0,0,"void (%struct.PyObject*)*",0,0,0,"i32 (%struct.PyObject*, %struct.FILE*, i32)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, i8*)*",0,0,0,"i32 (%struct.PyObject*, i8*, %struct.PyObject*)*",0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*)*",0,0,0,"%struct.PyNumberMethods*",0,0,0,"%struct.PySequenceMethods*",0,0,0,"%struct.PyMappingMethods*",0,0,0,"i32 (%struct.PyObject*)*",
0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"%struct.PyBufferProcs*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i32 (%struct.PyObject*, i32 (%struct.PyObject*, i8*)*, i8*)*",0,0,0,"i32 (%struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*, i32)*",0,0,
0,"i32",0,0,0,"%struct.PyObject* (%struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*)*",0,0,0,"%struct.PyMethodDef*",0,0,0,"%struct.PyMemberDef*",0,0,0,"%struct.PyGetSetDef*",0,0,0,"%struct._typeobject*",0,0,0,"%struct.PyObject*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8",
"i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8"],ALLOC_NORMAL);Qa=allocate([0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],["i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",
0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8"],ALLOC_NORMAL);Ha=allocate([105,110,102,111,0],"i8",ALLOC_NORMAL);Ra=allocate([68,105,99,116,105,111,110,97,114,121,32,109,97,112,112,105,110,103,32,105,110,102,111,114,109,97,116,105,111,110,97,108,32,107,101,121,115,32,116,111,32,108,105,115,116,115,32,111,102,32,118,97,108,117,101,115,46,0],"i8",ALLOC_NORMAL);Ia=allocate([0,0,0,0,6,0,0,0,8,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0],["i8*",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8"],ALLOC_NORMAL);Fa=allocate([108,111,103,114,101,97,100,101,114,40,102,105,108,101,110,97,109,101,41,32,45,45,62,32,108,111,103,45,105,116,101,114,97,116,111,114,10,67,114,101,97,116,101,32,97,32,108,111,103,45,114,101,97,100,101,114,32,102,111,114,32,116,104,101,32,116,105,109,105,110,103,32,105,110,102,111,114,109,97,116,105,111,
110,32,102,105,108,101,46,0],"i8",ALLOC_NORMAL);$a=allocate(40,["i32 (%struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, i32)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, i32)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, i32, i32)*",0,0,0,"i32 (%struct.PyObject*, i32, %struct.PyObject*)*",0,0,0,"i32 (%struct.PyObject*, i32, i32, %struct.PyObject*)*",0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",
0,0,0,"%struct.PyObject* (%struct.PyObject*, i32)*",0,0,0],ALLOC_NORMAL);Wa=allocate([84,114,117,101,32,105,102,32,116,104,101,32,108,111,103,114,101,97,100,101,114,39,115,32,105,110,112,117,116,32,102,105,108,101,32,104,97,115,32,97,108,114,101,97,100,121,32,98,101,101,110,32,99,108,111,115,101,100,46,0],"i8",ALLOC_NORMAL);Y=allocate(40,["i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, i8*)*",0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*, i8*)*",0,0,0,"i8*",0,0,0,"i8","i8","i8","i8","i8*",0,
0,0,"i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8"],ALLOC_NORMAL);kb=allocate([95,104,111,116,115,104,111,116,46,76,111,103,82,101,97,100,101,114,84,121,112,101,0],"i8",ALLOC_NORMAL);ra=allocate([1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,131563,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],["i32",0,0,0,"%struct._typeobject*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i32",0,0,0,"i32",0,0,0,"void (%struct.PyObject*)*",0,0,0,"i32 (%struct.PyObject*, %struct.FILE*, i32)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, i8*)*",0,0,0,"i32 (%struct.PyObject*, i8*, %struct.PyObject*)*",0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*)*",
0,0,0,"%struct.PyNumberMethods*",0,0,0,"%struct.PySequenceMethods*",0,0,0,"%struct.PyMappingMethods*",0,0,0,"i32 (%struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"%struct.PyBufferProcs*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i32 (%struct.PyObject*, i32 (%struct.PyObject*, i8*)*, i8*)*",
0,0,0,"i32 (%struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*, i32)*",0,0,0,"i32",0,0,0,"%struct.PyObject* (%struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*)*",0,0,0,"%struct.PyMethodDef*",0,0,0,"%struct.PyMemberDef*",0,0,0,"%struct.PyGetSetDef*",0,0,0,"%struct._typeobject*",0,0,0,"%struct.PyObject*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",
0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8"],ALLOC_NORMAL);Ta=allocate([115,58,108,111,103,114,101,97,100,101,114,0],"i8",ALLOC_NORMAL);ia=allocate([114,98,0],"i8",ALLOC_NORMAL);ba=allocate([117,110,101,120,112,101,99,116,101,100,32,101,114,114,111,114,0],"i8",ALLOC_NORMAL);Ya=allocate([36,
82,101,118,105,115,105,111,110,36,0],"i8",ALLOC_NORMAL);ta=allocate([104,111,116,115,104,111,116,45,118,101,114,115,105,111,110,0],"i8",ALLOC_NORMAL);O=allocate([121,101,115,0],"i8",ALLOC_NORMAL);wb=allocate([110,111,0],"i8",ALLOC_NORMAL);bb=allocate([114,101,113,117,101,115,116,101,100,45,102,114,97,109,101,45,116,105,109,105,110,103,115,0],"i8",ALLOC_NORMAL);vb=allocate([114,101,113,117,101,115,116,101,100,45,108,105,110,101,45,101,118,101,110,116,115,0],"i8",ALLOC_NORMAL);ka=allocate([114,101,
113,117,101,115,116,101,100,45,108,105,110,101,45,116,105,109,105,110,103,115,0],"i8",ALLOC_NORMAL);za=allocate([112,108,97,116,102,111,114,109,0],"i8",ALLOC_NORMAL);Aa=allocate([101,120,101,99,117,116,97,98,108,101,0],"i8",ALLOC_NORMAL);La=allocate([101,120,101,99,117,116,97,98,108,101,45,118,101,114,115,105,111,110,0],"i8",ALLOC_NORMAL);ya=allocate([37,108,117,0],"i8",ALLOC_NORMAL);ub=allocate([111,98,115,101,114,118,101,100,45,105,110,116,101,114,118,97,108,45,103,101,116,114,117,115,97,103,101,
0],"i8",ALLOC_NORMAL);Z=allocate([111,98,115,101,114,118,101,100,45,105,110,116,101,114,118,97,108,45,103,101,116,116,105,109,101,111,102,100,97,121,0],"i8",ALLOC_NORMAL);qa=allocate([99,117,114,114,101,110,116,45,100,105,114,101,99,116,111,114,121,0],"i8",ALLOC_NORMAL);M=allocate([112,97,116,104,0],"i8",ALLOC_NORMAL);na=allocate([115,121,115,46,112,97,116,104,32,109,117,115,116,32,98,101,32,97,32,108,105,115,116,0],"i8",ALLOC_NORMAL);nb=allocate([115,121,115,45,112,97,116,104,45,101,110,116,114,
121,0],"i8",ALLOC_NORMAL);ca=allocate([60,110,111,110,45,115,116,114,105,110,103,45,112,97,116,104,45,101,110,116,114,121,62,0],"i8",ALLOC_NORMAL);ua=allocate([112,114,111,102,105,108,101,114,40,108,111,103,102,105,108,101,110,97,109,101,91,44,32,108,105,110,101,101,118,101,110,116,115,91,44,32,108,105,110,101,116,105,109,101,115,93,93,41,32,45,62,32,112,114,111,102,105,108,101,114,10,67,114,101,97,116,101,32,97,32,110,101,119,32,112,114,111,102,105,108,101,114,32,111,98,106,101,99,116,46,0],"i8",
ALLOC_NORMAL);Ea=allocate([115,124,105,105,58,112,114,111,102,105,108,101,114,0],"i8",ALLOC_NORMAL);Eb=allocate([119,98,0],"i8",ALLOC_NORMAL);zb=allocate([99,111,118,101,114,97,103,101,40,108,111,103,102,105,108,101,110,97,109,101,41,32,45,62,32,112,114,111,102,105,108,101,114,10,82,101,116,117,114,110,115,32,97,32,112,114,111,102,105,108,101,114,32,116,104,97,116,32,100,111,101,115,110,39,116,32,99,111,108,108,101,99,116,32,97,110,121,32,116,105,109,105,110,103,32,105,110,102,111,114,109,97,116,
105,111,110,44,32,119,104,105,99,104,32,105,115,10,117,115,101,102,117,108,32,105,110,32,98,117,105,108,100,105,110,103,32,97,32,99,111,118,101,114,97,103,101,32,97,110,97,108,121,115,105,115,32,116,111,111,108,46,0],"i8",ALLOC_NORMAL);va=allocate([115,58,99,111,118,101,114,97,103,101,0],"i8",ALLOC_NORMAL);xa=allocate([114,101,115,111,108,117,116,105,111,110,40,41,32,45,62,32,40,103,101,116,116,105,109,101,111,102,100,97,121,45,117,115,101,99,115,44,32,103,101,116,114,117,115,97,103,101,45,117,115,
101,99,115,41,10,82,101,116,117,114,110,32,116,104,101,32,114,101,115,111,108,117,116,105,111,110,32,111,102,32,116,104,101,32,116,105,109,101,114,115,32,112,114,111,118,105,100,101,100,32,98,121,32,116,104,101,32,103,101,116,116,105,109,101,111,102,100,97,121,40,41,32,97,110,100,10,103,101,116,114,117,115,97,103,101,40,41,32,115,121,115,116,101,109,32,99,97,108,108,115,44,32,111,114,32,45,49,32,105,102,32,116,104,101,32,99,97,108,108,32,105,115,32,110,111,116,32,115,117,112,112,111,114,116,101,100,
46,0],"i8",ALLOC_NORMAL);V=allocate([105,105,0],"i8",ALLOC_NORMAL);sa=allocate([99,111,118,101,114,97,103,101,0],"i8",ALLOC_NORMAL);pa=allocate([112,114,111,102,105,108,101,114,0],"i8",ALLOC_NORMAL);fb=allocate([108,111,103,114,101,97,100,101,114,0],"i8",ALLOC_NORMAL);ma=allocate([114,101,115,111,108,117,116,105,111,110,0],"i8",ALLOC_NORMAL);sb=allocate([0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0],["i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,
0,"i8","i8","i8","i8","i8","i8","i8","i8"],ALLOC_NORMAL);mb=allocate([95,104,111,116,115,104,111,116,0],"i8",ALLOC_NORMAL);yb=allocate([95,95,118,101,114,115,105,111,110,95,95,0],"i8",ALLOC_NORMAL);Nb=allocate([76,111,103,82,101,97,100,101,114,84,121,112,101,0],"i8",ALLOC_NORMAL);Ib=allocate([80,114,111,102,105,108,101,114,84,121,112,101,0],"i8",ALLOC_NORMAL);Db=allocate([104,111,116,115,104,111,116,46,80,114,111,102,105,108,101,114,69,114,114,111,114,0],"i8",ALLOC_NORMAL);Ub=allocate([80,114,111,
102,105,108,101,114,69,114,114,111,114,0],"i8",ALLOC_NORMAL);Tb=allocate([87,72,65,84,95,69,78,84,69,82,0],"i8",ALLOC_NORMAL);qb=allocate([87,72,65,84,95,69,88,73,84,0],"i8",ALLOC_NORMAL);Mb=allocate([87,72,65,84,95,76,73,78,69,78,79,0],"i8",ALLOC_NORMAL);Hb=allocate([87,72,65,84,95,79,84,72,69,82,0],"i8",ALLOC_NORMAL);Wb=allocate([87,72,65,84,95,65,68,68,95,73,78,70,79,0],"i8",ALLOC_NORMAL);ea=allocate([87,72,65,84,95,68,69,70,73,78,69,95,70,73,76,69,0],"i8",ALLOC_NORMAL);Qb=allocate([87,72,65,84,
95,68,69,70,73,78,69,95,70,85,78,67,0],"i8",ALLOC_NORMAL);Bb=allocate([87,72,65,84,95,76,73,78,69,95,84,73,77,69,83,0],"i8",ALLOC_NORMAL);HEAP[Da]=Ka;HEAP[Da+4]=g+4;HEAP[Da+12]=L;HEAP[Da+16]=Ma;HEAP[Da+20]=g+6;HEAP[Da+28]=R;HEAP[Da+32]=wa;HEAP[Da+36]=g+8;HEAP[Da+44]=x;HEAP[Da+48]=S;HEAP[Da+52]=g+10;HEAP[Da+60]=H;HEAP[Da+64]=ib;HEAP[Da+68]=g+12;HEAP[Da+76]=U;HEAP[Da+80]=cb;HEAP[Da+84]=g+14;HEAP[Da+92]=ja;HEAP[Da+96]=db;HEAP[Da+100]=g+16;HEAP[Da+108]=la;HEAP[Za]=gb;HEAP[Za+20]=Xa;HEAP[Za+40]=Ca;HEAP[ha]=
Va;HEAP[ha+4]=g+18;HEAP[ha+12]=Ga;HEAP[hb+12]=jb;HEAP[hb+24]=g+20;HEAP[hb+72]=g+22;HEAP[hb+88]=Na;HEAP[hb+116]=Da;HEAP[hb+120]=Za;HEAP[hb+124]=ha;HEAP[Qa]=Ma;HEAP[Qa+4]=g+24;HEAP[Qa+12]=w;HEAP[Qa+16]=wa;HEAP[Qa+20]=g+26;HEAP[Qa+28]=x;HEAP[Ia]=Ha;HEAP[Ia+16]=Ra;HEAP[$a+12]=g+28;HEAP[Y]=Va;HEAP[Y+4]=g+30;HEAP[Y+12]=Wa;HEAP[ra+12]=kb;HEAP[ra+24]=g+32;HEAP[ra+52]=$a;HEAP[ra+72]=g+22;HEAP[ra+88]=Fa;HEAP[ra+108]=g+34;HEAP[ra+112]=g+36;HEAP[ra+116]=Qa;HEAP[ra+120]=Ia;HEAP[ra+124]=Y;HEAP[sb]=sa;HEAP[sb+4]=
g+38;HEAP[sb+12]=zb;HEAP[sb+16]=pa;HEAP[sb+20]=g+40;HEAP[sb+28]=ua;HEAP[sb+32]=fb;HEAP[sb+36]=g+42;HEAP[sb+44]=Fa;HEAP[sb+48]=ma;HEAP[sb+52]=g+44;HEAP[sb+60]=xa}var u={arguments:[]};Runtime.QUANTUM_SIZE=4;var v,w,x,y,B,A,C,G,F,E,N,Q,I,J,P,D,T,L,$,R,K,H,S,U,z,aa,ja,la,da,Ka,Ma,wa,ib,cb,db,Da,gb,Xa,Ca,Za,Va,Ga,ha,Na,jb,hb,Qa,Ha,Ra,Ia,Fa,$a,Wa,Y,kb,ra,Ta,ia,ba,Ya,ta,O,wb,bb,vb,ka,za,Aa,La,ya,ub,Z,qa,M,na,nb,ca,ua,Ea,Eb,zb,va,xa,V,sa,pa,fb,ma,sb,mb,yb,Nb,Ib,Db,Ub,Tb,qb,Mb,Hb,Wb,ea,Qb,Bb;u._init_hotshot=
function(){var a;for(a=-1;;)switch(a){case -1:var b;HEAP[ra+4]=_PyType_Type;HEAP[hb+4]=_PyType_Type;b=_Py_InitModule4(mb,sb,0,0,1013);a=b!=0?1:5;break;case 1:a=r();_PyModule_AddStringConstant(b,yb,a);_free(a);HEAP[ra]+=1;_PyModule_AddObject(b,Nb,ra);HEAP[hb]+=1;_PyModule_AddObject(b,Ib,hb);a=HEAP[v]==0?2:3;break;case 2:a=_PyErr_NewException(Db,0,0);HEAP[v]=a;a=a!=0?3:4;break;case 3:HEAP[HEAP[v]]+=1;_PyModule_AddObject(b,Ub,HEAP[v]);a=4;break;case 4:_PyModule_AddIntConstant(b,Tb,0);_PyModule_AddIntConstant(b,
qb,1);_PyModule_AddIntConstant(b,Mb,2);_PyModule_AddIntConstant(b,Hb,3);_PyModule_AddIntConstant(b,Wb,19);_PyModule_AddIntConstant(b,ea,35);_PyModule_AddIntConstant(b,Qb,67);_PyModule_AddIntConstant(b,Bb,51);a=5;break;case 5:return;default:assert(0,"bad label: "+a)}};FUNCTION_TABLE=FUNCTION_TABLE.concat([0,0,function(a,b,c){var d;for(d=-1;;)switch(d){case -1:var e,g,k,n,o;e=a;g=b;d=c;d=d==0?1:d==2?8:d==3?7:11;break;case 1:a:{o=e;d=HEAP[g+16];for(var p=void 0,p=-1;;)switch(p){case -1:var q,r,s,t,u,
v;q=o;r=d;t=_PyDict_GetItem(HEAP[q+8],HEAP[r+48]);p=t==0?1:13;break;case 1:u=_PyDict_New();p=u==0?2:3;break;case 2:s=-1;p=28;break;case 3:v=HEAP[q+10280];t=_Py_BuildValue(Q,allocate([v,0,0,0,u,0,0,0],["i32",0,0,0,"%struct.PyObject*",0,0,0],ALLOC_STACK));p=t==0?4:5;break;case 4:s=-1;p=28;break;case 5:p=_PyDict_SetItem(HEAP[q+8],HEAP[r+48],t)!=0?6:9;break;case 6:HEAP[t]-=1;p=HEAP[t]==0?7:8;break;case 7:FUNCTION_TABLE[HEAP[HEAP[t+4]+24]](t);p=8;break;case 8:s=-1;p=28;break;case 9:HEAP[q+10280]+=1;HEAP[t]-=
1;p=HEAP[t]==0?10:11;break;case 10:FUNCTION_TABLE[HEAP[HEAP[t+4]+24]](t);p=11;break;case 11:b:{for(var p=q,z=v,w=HEAP[r+48]+20,x=void 0,x=-1;;)switch(x){case -1:var H,M,K,D,V;H=p;M=z;K=w;V=_strlen(K);x=HEAP[H+16]+11+V>10239?1:3;break;case 1:x=f(H)<0?2:3;break;case 2:D=-1;x=6;break;case 3:HEAP[H+20+HEAP[H+16]]=35;HEAP[H+16]+=1;x=j(H,M)<0?4:5;break;case 4:D=-1;x=6;break;case 5:D=h(H,K,V);x=6;break;case 6:p=D;break b;default:assert(0,"bad label: "+x)}p=void 0}p=p<0?12:14;break;case 12:s=-1;p=28;break;
case 13:v=HEAP[HEAP[t+12]+8];u=HEAP[t+12+4];p=14;break;case 14:t=p=_PyInt_FromLong(HEAP[r+56]);p=p==0?15:16;break;case 15:_PyErr_Clear();p=27;break;case 16:p=_PyDict_GetItem(u,t);p=p==0?17:25;break;case 17:b:{for(var p=q,z=v,w=HEAP[r+56],x=HEAP[r+52]+20,y=void 0,y=-1;;)switch(y){case -1:var L,ca,R,U,A,B;L=p;ca=z;R=w;U=x;B=_strlen(U);y=HEAP[L+16]+16+B>10239?1:3;break;case 1:y=f(L)<0?2:3;break;case 2:A=-1;y=8;break;case 3:HEAP[L+20+HEAP[L+16]]=67;HEAP[L+16]+=1;y=j(L,ca)<0?4:5;break;case 4:A=-1;y=8;
break;case 5:y=j(L,R)<0?6:7;break;case 6:A=-1;y=8;break;case 7:A=h(L,U,B);y=8;break;case 8:p=A;break b;default:assert(0,"bad label: "+y)}p=void 0}p=p<0?18:21;break;case 18:HEAP[t]-=1;p=HEAP[t]==0?19:20;break;case 19:FUNCTION_TABLE[HEAP[HEAP[t+4]+24]](t);p=20;break;case 20:s=-1;p=28;break;case 21:p=_PyDict_SetItem(u,t,HEAP[r+52])!=0?22:25;break;case 22:HEAP[t]-=1;p=HEAP[t]==0?23:24;break;case 23:FUNCTION_TABLE[HEAP[HEAP[t+4]+24]](t);p=24;break;case 24:s=-1;p=28;break;case 25:HEAP[t]-=1;p=HEAP[t]==
0?26:27;break;case 26:FUNCTION_TABLE[HEAP[HEAP[t+4]+24]](t);p=27;break;case 27:s=v;p=28;break;case 28:o=s;break a;default:assert(0,"bad label: "+p)}o=void 0}d=o<0?2:3;break;case 2:n=-1;d=12;break;case 3:var S=HEAP[HEAP[g+16]+56];d=HEAP[e+10272]!=0?4:5;break;case 4:k=l(e);d=6;break;case 5:k=-1;d=6;break;case 6:a:{n=e;d=o;p=k;z=S;w=void 0;for(w=-1;;)switch(w){case -1:var ma,xa,E,C,F;ma=n;xa=d;E=p;C=z;w=HEAP[ma+16]+16>10239?1:3;break;case 1:w=f(ma)<0?2:3;break;case 2:F=-1;w=6;break;case 3:m(ma,xa,0);
j(ma,C);w=HEAP[ma+10272]!=0?4:5;break;case 4:F=j(ma,E);w=6;break;case 5:F=0;w=6;break;case 6:n=F;break a;default:assert(0,"bad label: "+w)}n=void 0}d=12;break;case 7:d=l(e);a:{n=e;p=void 0;for(p=-1;;)switch(p){case -1:var J,va,O;J=n;va=d;p=HEAP[J+16]+6>10239?1:3;break;case 1:p=f(J)<0?2:3;break;case 2:O=-1;p=6;break;case 3:var aa=J,p=HEAP[J+10272]!=0?4:5;break;case 4:O=m(aa,va,1);p=6;break;case 5:HEAP[J+20+HEAP[aa+16]]=1;HEAP[J+16]+=1;O=0;p=6;break;case 6:n=O;break a;default:assert(0,"bad label: "+
p)}n=void 0}d=12;break;case 8:d=HEAP[e+10268]!=0?9:10;break;case 9:p=l(e);a:{n=e;d=HEAP[g+64];z=void 0;for(z=-1;;)switch(z){case -1:var G,P,Ea,na;G=n;P=d;Ea=p;z=HEAP[G+16]+11>10239?1:3;break;case 1:z=f(G)<0?2:3;break;case 2:na=0;z=6;break;case 3:z=m(G,P,2)<0?4:5;break;case 4:na=-1;z=6;break;case 5:na=j(G,Ea);z=6;break;case 6:n=na;break a;default:assert(0,"bad label: "+z)}n=void 0}d=12;break;case 10:a:{n=e;d=HEAP[g+64];p=void 0;for(p=-1;;)switch(p){case -1:var nb,pa,fb;nb=n;pa=d;p=HEAP[nb+16]+6>10239?
1:3;break;case 1:p=f(nb)<0?2:3;break;case 2:fb=-1;p=4;break;case 3:fb=m(nb,pa,2);p=4;break;case 4:n=fb;break a;default:assert(0,"bad label: "+p)}n=void 0}d=12;break;case 11:n=0;d=12;break;case 12:return a=n;default:assert(0,"bad label: "+d)}},0,function(a,b){var c=STACKTOP;STACKTOP+=8;_memset(c,0,8);var d;for(d=-1;;)switch(d){case -1:var e,f,g=c,h=c+4;e=a;d=b;f=0;d=_PyArg_ParseTuple(d,$,allocate([g,0,0,0,h,0,0,0],["i8**",0,0,0,"i8**",0,0,0],ALLOC_STACK))!=0?1:5;break;case 1:d=HEAP[e+10260]==0?2:3;
break;case 2:_PyErr_SetString(HEAP[v],T);d=5;break;case 3:d=k(e,HEAP[g],HEAP[h])==0?4:5;break;case 4:f=__Py_NoneStruct;HEAP[f]+=1;d=5;break;case 5:return e=f,STACKTOP=c,e;default:assert(0,"bad label: "+d)}},0,function(a){var b;for(b=-1;;)switch(b){case -1:var c;c=a;p(c);b=HEAP[c+10260]!=0?1:2;break;case 1:_fclose(HEAP[c+10260]);HEAP[c+10260]=0;b=2;break;case 2:return HEAP[__Py_NoneStruct]+=1,a=__Py_NoneStruct;default:assert(0,"bad label: "+b)}},0,function(a){var b;for(b=-1;;)switch(b){case -1:var c,
d;c=a;b=HEAP[c+10260]==0?1:2;break;case 1:_PyErr_SetString(HEAP[_PyExc_ValueError],K);d=0;b=3;break;case 2:b=_fileno(HEAP[c+10260]);d=_PyInt_FromLong(b);b=3;break;case 3:return a=d;default:assert(0,"bad label: "+b)}},0,function(a,b){var c=STACKTOP;STACKTOP+=12;_memset(c,0,12);var d;for(d=-1;;)switch(d){case -1:var e,f,g=c,h=c+4,j=c+8;e=a;d=b;f=0;HEAP[g]=0;HEAP[h]=0;d=_PyArg_UnpackTuple(d,S,1,3,allocate([j,0,0,0,g,0,0,0,h,0,0,0],["%struct.PyObject**",0,0,0,"%struct.PyObject**",0,0,0,"%struct.PyObject**",
0,0,0],ALLOC_STACK))!=0?1:3;break;case 1:d=q(e)!=0?2:3;break;case 2:o(e);f=_PyEval_CallObjectWithKeywords(HEAP[j],HEAP[g],HEAP[h]);p(e);d=3;break;case 3:return e=f,STACKTOP=c,e;default:assert(0,"bad label: "+d)}},0,function(a,b){var c=STACKTOP;STACKTOP+=12;_memset(c,0,12);var d;for(d=-1;;)switch(d){case -1:var e,f,g,h=c,j=c+4,k=c+8;e=a;d=b;g=0;HEAP[k]=0;d=_PyArg_ParseTuple(d,z,allocate([_PyCode_Type,0,0,0,h,0,0,0,_PyDict_Type,0,0,0,j,0,0,0,k,0,0,0],["%struct._typeobject*",0,0,0,"%struct.PyCodeObject**",
0,0,0,"%struct._typeobject*",0,0,0,"%struct.PyObject**",0,0,0,"%struct.PyObject**",0,0,0],ALLOC_STACK))!=0?1:7;break;case 1:d=q(e)!=0?2:7;break;case 2:d=HEAP[k]==0|HEAP[k]==__Py_NoneStruct?3:4;break;case 3:HEAP[k]=HEAP[j];d=6;break;case 4:d=(HEAP[HEAP[HEAP[k]+4]+84]&536870912)==0?5:6;break;case 5:_PyErr_SetString(HEAP[_PyExc_TypeError],aa);f=0;d=8;break;case 6:o(e);g=_PyEval_EvalCode(HEAP[h],HEAP[j],HEAP[k]);p(e);d=7;break;case 7:f=g;d=8;break;case 8:return e=f,STACKTOP=c,e;default:assert(0,"bad label: "+
d)}},0,function(a){var b;for(b=-1;;)switch(b){case -1:var c,d;c=a;d=0;b=q(c)!=0?1:2;break;case 1:o(c);d=__Py_NoneStruct;HEAP[d]+=1;b=2;break;case 2:return a=d;default:assert(0,"bad label: "+b)}},0,function(a){var b;for(b=-1;;)switch(b){case -1:var c,d;c=a;d=0;b=HEAP[c+10276]==0?1:2;break;case 1:_PyErr_SetString(HEAP[v],da);b=3;break;case 2:p(c);d=__Py_NoneStruct;HEAP[d]+=1;b=3;break;case 3:return a=d;default:assert(0,"bad label: "+b)}},0,function(a){var b;for(b=-1;;)switch(b){case -1:var c;b=HEAP[a+
10260]==0?1:2;break;case 1:c=__Py_TrueStruct;b=3;break;case 2:c=__Py_ZeroStruct;b=3;break;case 3:return a=c,HEAP[a]+=1,a;default:assert(0,"bad label: "+b)}},0,function(a){var b;for(b=-1;;)switch(b){case -1:var c;c=a;p(c);b=HEAP[c+10260]!=0?1:2;break;case 1:_fclose(HEAP[c+10260]);b=2;break;case 2:b=HEAP[c+8]!=0?3:5;break;case 3:b=HEAP[c+8];HEAP[b]-=1;b=HEAP[b]==0?4:5;break;case 4:FUNCTION_TABLE[HEAP[HEAP[HEAP[c+8]+4]+24]](HEAP[c+8]);b=5;break;case 5:b=HEAP[c+12]!=0?6:8;break;case 6:b=HEAP[c+12];HEAP[b]-=
1;b=HEAP[b]==0?7:8;break;case 7:FUNCTION_TABLE[HEAP[HEAP[HEAP[c+12]+4]+24]](HEAP[c+12]);b=8;break;case 8:_PyObject_Free(c);return;default:assert(0,"bad label: "+b)}},0,_PyObject_GenericGetAttr,0,function(a){var b;for(b=-1;;)switch(b){case -1:var c;c=a;b=HEAP[c+12]!=0?1:2;break;case 1:_fclose(HEAP[c+12]);HEAP[c+12]=0;b=2;break;case 2:return HEAP[__Py_NoneStruct]+=1,a=__Py_NoneStruct;default:assert(0,"bad label: "+b)}},0,function(a){var b;for(b=-1;;)switch(b){case -1:var c,d;c=a;b=HEAP[c+12]==0?1:2;
break;case 1:_PyErr_SetString(HEAP[_PyExc_ValueError],y);d=0;b=3;break;case 2:b=_fileno(HEAP[c+12]);d=_PyInt_FromLong(b);b=3;break;case 3:return a=d;default:assert(0,"bad label: "+b)}},0,function(a){var b;for(b=-1;;)switch(b){case -1:var c,e;e=d(a);b=e==0?1:3;break;case 1:b=_PyErr_Occurred()==0?2:3;break;case 2:_PyErr_SetString(HEAP[_PyExc_IndexError],G);c=0;b=4;break;case 3:c=e;b=4;break;case 4:return a=c;default:assert(0,"bad label: "+b)}},0,function(a){var b;for(b=-1;;)switch(b){case -1:var c;
b=HEAP[a+12]==0?1:2;break;case 1:c=__Py_TrueStruct;b=3;break;case 2:c=__Py_ZeroStruct;b=3;break;case 3:return a=c,HEAP[a]+=1,a;default:assert(0,"bad label: "+b)}},0,function(a){var b;for(b=-1;;)switch(b){case -1:var c;c=a;b=HEAP[c+12]!=0?1:2;break;case 1:_fclose(HEAP[c+12]);HEAP[c+12]=0;b=2;break;case 2:b=HEAP[c+8]!=0?3:5;break;case 3:b=HEAP[c+8];HEAP[b]-=1;b=HEAP[b]==0?4:5;break;case 4:FUNCTION_TABLE[HEAP[HEAP[HEAP[c+8]+4]+24]](HEAP[c+8]);b=5;break;case 5:_PyObject_Free(c);return;default:assert(0,
"bad label: "+b)}},0,_PyObject_SelfIter,0,d,0,function(a,b){var c=STACKTOP;STACKTOP+=4;_memset(c,0,4);var d;for(d=-1;;)switch(d){case -1:var e,f;d=c;var g;e=a;f=b;g=0;d=_PyArg_ParseTuple(f,va,allocate([d,0,0,0],["i8**",0,0,0],ALLOC_STACK))!=0?1:3;break;case 1:g=t(e,f);d=g!=0?2:3;break;case 2:d=g;HEAP[d+10272]=0;HEAP[d+10268]=0;HEAP[d+10264]=1;d=3;break;case 3:return e=g,STACKTOP=c,e;default:assert(0,"bad label: "+d)}},0,t,0,function(b,d){var e=STACKTOP;STACKTOP+=4;_memset(e,0,4);var f;for(f=-1;;)switch(f){case -1:var g,
h,j=e,k,l;f=d;l=h=0;f=_PyArg_ParseTuple(f,Ta,allocate([j,0,0,0],["i8**",0,0,0],ALLOC_STACK))!=0?1:13;break;case 1:h=__PyObject_New(ra);f=h!=0?2:13;break;case 2:HEAP[h+20]=1;HEAP[h+16]=0;HEAP[h+8]=0;f=___01fopen64_(HEAP[j],ia);HEAP[h+12]=f;f=HEAP[h+12]==0?3:4;break;case 3:_PyErr_SetFromErrnoWithFilename(HEAP[_PyExc_IOError],HEAP[j]);f=14;break;case 4:f=_PyDict_New();HEAP[h+8]=f;f=HEAP[h+8]==0?14:5;break;case 5:k=f=_fgetc(HEAP[h+12]);f=f==-1?6:7;break;case 6:c(h);f=14;break;case 7:var m=h;f=k!=19?8:
9;break;case 8:_ungetc(k,HEAP[m+12]);f=13;break;case 9:l=a(m);f=l!=0?10:5;break;case 10:f=l==-1?11:12;break;case 11:c(h);f=14;break;case 12:_PyErr_SetString(HEAP[_PyExc_RuntimeError],ba);f=14;break;case 13:g=h;f=17;break;case 14:HEAP[h]-=1;f=HEAP[h]==0?15:16;break;case 15:FUNCTION_TABLE[HEAP[HEAP[h+4]+24]](h);f=16;break;case 16:g=0;f=17;break;case 17:return STACKTOP=e,g;default:assert(0,"bad label: "+f)}},0,function(){var a;for(a=-1;;)switch(a){case -1:a=HEAP[J]==0?1:2;break;case 1:n();n();n();a=
2;break;case 2:return a=_Py_BuildValue(V,allocate([HEAP[J],0,0,0,HEAP[P],0,0,0],["i32",0,0,0,"i32",0,0,0],ALLOC_STACK));default:assert(0,"bad label: "+a)}},0]);u.run=s;s();return u});