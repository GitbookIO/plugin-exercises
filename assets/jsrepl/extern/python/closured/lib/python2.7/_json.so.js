(function(g){function e(a,b,c){var d;for(d=-1;;)switch(d){case -1:var e,f,g;e=a;f=b;g=c;HEAP[f+g]=92;g+=1;d=e;d=d==8?3:d==9?7:d==10?5:d==12?4:d==13?6:d==34?2:d==92?1:8;break;case 1:HEAP[f+g]=e&255;g+=1;d=9;break;case 2:HEAP[f+g]=e&255;g+=1;d=9;break;case 3:HEAP[f+g]=98;g+=1;d=9;break;case 4:HEAP[f+g]=102;g+=1;d=9;break;case 5:HEAP[f+g]=110;g+=1;d=9;break;case 6:HEAP[f+g]=114;g+=1;d=9;break;case 7:HEAP[f+g]=116;g+=1;d=9;break;case 8:HEAP[f+
g]=117;g+=1;HEAP[f+g]=HEAP[$+(e>>>12&15)];g+=1;HEAP[f+g]=HEAP[$+(e>>>8&15)];g+=1;HEAP[f+g]=HEAP[$+(e>>>4&15)];g+=1;HEAP[f+g]=HEAP[$+(e&15)];g+=1;d=9;break;case 9:return a=g;default:assert(0,"bad label: "+d)}}function b(a){var b=STACKTOP;STACKTOP+=4;_memset(b,0,4);var c;for(c=-1;;)switch(c){case -1:var d,f,g,h,j,k,l=b,m,n,o;d=a;h=HEAP[d+8];n=HEAP[d+12];d=h+26;j=h*6+2;c=_PyString_FromStringAndSize(0,d);HEAP[l]=c;c=HEAP[l]==0?1:2;break;case 1:f=0;c=18;break;case 2:m=HEAP[l]+20;k=0;HEAP[m+k]=34;k+=1;
g=0;c=14;break;case 3:var p=c=HEAP[n+2*g];c=c<=31|c>126|c==92|c==34?5:4;break;case 4:HEAP[m+k]=p&255;k+=1;c=6;break;case 5:k=e(p&65535,m,k);c=6;break;case 6:c=d-k<=6?7:13;break;case 7:o=d*2;c=o>j?8:9;break;case 8:o=j;c=9;break;case 9:c=o!=d?10:13;break;case 10:d=o;c=__PyString_Resize(l,d)==-1?11:12;break;case 11:f=0;c=18;break;case 12:m=HEAP[l]+20;c=13;break;case 13:g+=1;c=14;break;case 14:c=g<h?3:15;break;case 15:HEAP[m+k]=34;k+=1;c=__PyString_Resize(l,k)==-1?16:17;break;case 16:f=0;c=18;break;case 17:f=
HEAP[l];c=18;break;case 18:return a=f,STACKTOP=b,a;default:assert(0,"bad label: "+c)}}function a(a,b,c){var d=STACKTOP;STACKTOP+=4;_memset(d,0,4);var e;for(e=-1;;)switch(e){case -1:var f,h,j=d,k,l;f=a;h=b;HEAP[j]=c;e=HEAP[R]==0?1:5;break;case 1:l=_PyImport_ImportModule(K);e=l==0?8:2;break;case 2:e=_PyObject_GetAttrString(l,H);HEAP[R]=e;HEAP[l]-=1;e=HEAP[l]==0?3:4;break;case 3:FUNCTION_TABLE[HEAP[HEAP[l+4]+24]](l);e=4;break;case 4:e=HEAP[R]==0?8:5;break;case 5:k=e=_PyObject_CallFunction(HEAP[R],S,
allocate([f,0,0,0,h,0,0,0,g+2,0,0,0,j,0,0,0],["i8*",0,0,0,"%struct.PyObject*",0,0,0,"%struct.PyObject* (i32*)*",0,0,0,"i32*",0,0,0],ALLOC_STACK));e=e!=0?6:8;break;case 6:_PyErr_SetObject(HEAP[_PyExc_ValueError],k);HEAP[k]-=1;e=HEAP[k]==0?7:8;break;case 7:FUNCTION_TABLE[HEAP[HEAP[k+4]+24]](k);e=8;break;case 8:STACKTOP=d;return;default:assert(0,"bad label: "+e)}}function c(a){var b;for(b=-1;;)switch(b){case -1:var c,d,e;c=a;b=HEAP[U]==0?1:7;break;case 1:e=_PyUnicodeUCS2_FromUnicode(0,0);b=e==0?2:3;
break;case 2:d=0;b=8;break;case 3:b=_PyObject_GetAttrString(e,z);HEAP[U]=b;HEAP[e]-=1;b=HEAP[e]==0?4:5;break;case 4:FUNCTION_TABLE[HEAP[HEAP[e+4]+24]](e);b=5;break;case 5:b=HEAP[U]==0?6:7;break;case 6:d=0;b=8;break;case 7:d=_PyObject_CallFunctionObjArgs(HEAP[U],allocate([c,0,0,0,0,0,0,0],["%struct.PyObject*",0,0,0,"i8*",0,0,0],ALLOC_STACK));b=8;break;case 8:return a=d;default:assert(0,"bad label: "+b)}}function d(a,b){var c;for(c=-1;;)switch(c){case -1:var d,e,f,g,h;d=a;e=b;c=d==0?1:2;break;case 1:f=
0;c=13;break;case 2:h=_PyInt_FromSsize_t(e);c=h==0?3:6;break;case 3:HEAP[d]-=1;c=HEAP[d]==0?4:5;break;case 4:FUNCTION_TABLE[HEAP[HEAP[d+4]+24]](d);c=5;break;case 5:f=0;c=13;break;case 6:g=_PyTuple_New(2);c=g==0?7:12;break;case 7:HEAP[h]-=1;c=HEAP[h]==0?8:9;break;case 8:FUNCTION_TABLE[HEAP[HEAP[h+4]+24]](h);c=9;break;case 9:HEAP[d]-=1;c=HEAP[d]==0?10:11;break;case 10:FUNCTION_TABLE[HEAP[HEAP[d+4]+24]](d);c=11;break;case 11:f=0;c=13;break;case 12:HEAP[g+12]=d;HEAP[g+12+4]=h;f=g;c=13;break;case 13:return c=
f;default:assert(0,"bad label: "+c)}}function f(b,d,e,f,g){var h=STACKTOP;STACKTOP+=2;_memset(h,0,2);var j;for(j=-1;;)switch(j){case -1:var k,l,m,n,o,p,q,r,s,t,u,v,w=h,x,y,z,A;k=b;l=d;m=e;n=f;o=g;r=HEAP[k+8];s=l-1;u=k+20;v=_PyList_New(0);j=v==0?56:1;break;case 1:j=l<0?3:2;break;case 2:j=r<=l?3:4;break;case 3:_PyErr_SetString(HEAP[_PyExc_ValueError],aa);j=56;break;case 4:x=HEAP[w]=0;t=l;j=10;break;case 5:HEAP[w]=HEAP[u+t];j=HEAP[w]==34|HEAP[w]==92?11:6;break;case 6:j=n!=0?7:9;break;case 7:j=HEAP[w]<=
31?8:9;break;case 8:a(ja,k,t);j=56;break;case 9:t+=1;j=10;break;case 10:j=t<r?5:11;break;case 11:j=HEAP[w]!=34&HEAP[w]!=92?12:13;break;case 12:a(la,k,s);j=56;break;case 13:j=t!=l?14:23;break;case 14:y=_PyString_FromStringAndSize(u+l,t-l);j=y==0?56:15;break;case 15:x=_PyUnicodeUCS2_FromEncodedObject(y,m,0);HEAP[y]-=1;j=HEAP[y]==0?16:17;break;case 16:FUNCTION_TABLE[HEAP[HEAP[y+4]+24]](y);j=17;break;case 17:j=x==0?56:18;break;case 18:j=_PyList_Append(v,x)!=0;HEAP[x]-=1;var B=HEAP[x]==0;j=j?19:21;break;
case 19:j=B?20:56;break;case 20:FUNCTION_TABLE[HEAP[HEAP[x+4]+24]](x);j=56;break;case 21:j=B?22:23;break;case 22:FUNCTION_TABLE[HEAP[HEAP[x+4]+24]](x);j=23;break;case 23:t+=1;var H=t;j=HEAP[w]==34?24:25;break;case 24:l=H;q=c(v);j=q==0?56:52;break;case 25:j=H==r?26:27;break;case 26:a(la,k,s);j=56;break;case 27:HEAP[w]=HEAP[u+t];j=HEAP[w]!=117?28:37;break;case 28:l=t+1;var C=HEAP[w];j=C;j=j==34?35:j==47?35:j==92?35:j==98?29:j==102?30:j==110?31:j==114?32:j==116?33:34;break;case 29:HEAP[w]=8;j=46;break;
case 30:HEAP[w]=12;j=46;break;case 31:HEAP[w]=10;j=46;break;case 32:HEAP[w]=13;j=46;break;case 33:HEAP[w]=9;j=46;break;case 34:HEAP[w]=0;j=36;break;case 35:j=C==0?36:46;break;case 36:a(da,k,l-2);j=56;break;case 37:HEAP[w]=0;t+=1;l=t+4;j=l>=r?38:45;break;case 38:a(Ka,k,t-1);j=56;break;case 39:z=HEAP[u+t];HEAP[w]<<=4;j=z;j=j==48?40:j==49?40:j==50?40:j==51?40:j==52?40:j==53?40:j==54?40:j==55?40:j==56?40:j==57?40:j==65?42:j==66?42:j==67?42:j==68?42:j==69?42:j==70?42:j==97?41:j==98?41:j==99?41:j==100?
41:j==101?41:j==102?41:43;break;case 40:HEAP[w]|=z-48;j=44;break;case 41:HEAP[w]|=z-87;j=44;break;case 42:HEAP[w]|=z-55;j=44;break;case 43:a(Ka,k,l-5);j=56;break;case 44:t+=1;j=45;break;case 45:j=t<l?39:46;break;case 46:x=j=_PyUnicodeUCS2_FromUnicode(w,1);j=j==0?56:47;break;case 47:j=_PyList_Append(v,x)!=0;HEAP[x]-=1;var D=HEAP[x]==0;j=j?48:50;break;case 48:j=D?49:56;break;case 49:FUNCTION_TABLE[HEAP[HEAP[x+4]+24]](x);j=56;break;case 50:j=D?51:4;break;case 51:FUNCTION_TABLE[HEAP[HEAP[x+4]+24]](x);
j=4;break;case 52:j=v!=0?53:55;break;case 53:A=v;v=0;HEAP[A]-=1;j=HEAP[A]==0?54:55;break;case 54:FUNCTION_TABLE[HEAP[HEAP[A+4]+24]](A);j=55;break;case 55:HEAP[o]=l;p=q;j=60;break;case 56:HEAP[o]=-1;j=v!=0?57:59;break;case 57:HEAP[v]-=1;j=HEAP[v]==0?58:59;break;case 58:FUNCTION_TABLE[HEAP[HEAP[v+4]+24]](v);j=59;break;case 59:p=0;j=60;break;case 60:return b=p,STACKTOP=h,b;default:assert(0,"bad label: "+j)}}function h(b,d,e,f){var g=STACKTOP;STACKTOP+=2;_memset(g,0,2);var h;for(h=-1;;)switch(h){case -1:var j,
k,l,m,n,o,p,q,r,s,t,u=g,v,w;j=b;k=d;l=e;m=f;p=HEAP[j+8];q=k-1;s=HEAP[j+12];t=_PyList_New(0);h=t==0?52:1;break;case 1:h=k<0?3:2;break;case 2:h=p<=k?3:4;break;case 3:_PyErr_SetString(HEAP[_PyExc_ValueError],aa);h=52;break;case 4:v=HEAP[u]=0;r=k;h=10;break;case 5:HEAP[u]=HEAP[s+2*r];h=HEAP[u]==34|HEAP[u]==92?11:6;break;case 6:h=l!=0?7:9;break;case 7:h=HEAP[u]<=31?8:9;break;case 8:a(ja,j,r);h=52;break;case 9:r+=1;h=10;break;case 10:h=r<p?5:11;break;case 11:h=HEAP[u]!=34&HEAP[u]!=92?12:13;break;case 12:a(la,
j,q);h=52;break;case 13:h=r!=k?14:20;break;case 14:v=_PyUnicodeUCS2_FromUnicode(s+2*k,r-k);h=v==0?52:15;break;case 15:h=_PyList_Append(t,v)!=0;HEAP[v]-=1;var x=HEAP[v]==0;h=h?16:18;break;case 16:h=x?17:52;break;case 17:FUNCTION_TABLE[HEAP[HEAP[v+4]+24]](v);h=52;break;case 18:h=x?19:20;break;case 19:FUNCTION_TABLE[HEAP[HEAP[v+4]+24]](v);h=20;break;case 20:r+=1;var y=r;h=HEAP[u]==34?21:22;break;case 21:k=y;o=c(t);h=o==0?52:49;break;case 22:h=y==p?23:24;break;case 23:a(la,j,q);h=52;break;case 24:HEAP[u]=
HEAP[s+2*r];h=HEAP[u]!=117?25:34;break;case 25:k=r+1;var z=HEAP[u];h=z;h=h==34?32:h==47?32:h==92?32:h==98?26:h==102?27:h==110?28:h==114?29:h==116?30:31;break;case 26:HEAP[u]=8;h=43;break;case 27:HEAP[u]=12;h=43;break;case 28:HEAP[u]=10;h=43;break;case 29:HEAP[u]=13;h=43;break;case 30:HEAP[u]=9;h=43;break;case 31:HEAP[u]=0;h=33;break;case 32:h=z==0?33:43;break;case 33:a(da,j,k-2);h=52;break;case 34:HEAP[u]=0;r+=1;k=r+4;h=k>=p?35:42;break;case 35:a(Ka,j,r-1);h=52;break;case 36:w=HEAP[s+2*r];HEAP[u]<<=
4;h=w;h=h==48?37:h==49?37:h==50?37:h==51?37:h==52?37:h==53?37:h==54?37:h==55?37:h==56?37:h==57?37:h==65?39:h==66?39:h==67?39:h==68?39:h==69?39:h==70?39:h==97?38:h==98?38:h==99?38:h==100?38:h==101?38:h==102?38:40;break;case 37:HEAP[u]|=w-48;h=41;break;case 38:HEAP[u]|=w-87;h=41;break;case 39:HEAP[u]|=w-55;h=41;break;case 40:a(Ka,j,k-5);h=52;break;case 41:r+=1;h=42;break;case 42:h=r<k?36:43;break;case 43:v=h=_PyUnicodeUCS2_FromUnicode(u,1);h=h==0?52:44;break;case 44:h=_PyList_Append(t,v)!=0;HEAP[v]-=
1;var A=HEAP[v]==0;h=h?45:47;break;case 45:h=A?46:52;break;case 46:FUNCTION_TABLE[HEAP[HEAP[v+4]+24]](v);h=52;break;case 47:h=A?48:4;break;case 48:FUNCTION_TABLE[HEAP[HEAP[v+4]+24]](v);h=4;break;case 49:HEAP[t]-=1;h=HEAP[t]==0?50:51;break;case 50:FUNCTION_TABLE[HEAP[HEAP[t+4]+24]](t);h=51;break;case 51:HEAP[m]=k;n=o;h=56;break;case 52:HEAP[m]=-1;h=t!=0?53:55;break;case 53:HEAP[t]-=1;h=HEAP[t]==0?54:55;break;case 54:FUNCTION_TABLE[HEAP[HEAP[t+4]+24]](t);h=55;break;case 55:n=0;h=56;break;case 56:return b=
n,STACKTOP=g,b;default:assert(0,"bad label: "+h)}}function j(a,c){var d;for(d=-1;;)switch(d){case -1:var f,g,h=f=c;d=(HEAP[HEAP[f+4]+84]&134217728)!=0?1:2;break;case 1:a:{g=h;d=STACKTOP;STACKTOP+=4;_memset(d,0,4);for(var j=void 0,j=-1;;)switch(j){case -1:var k,l,m,n,o,p=d,q,r,s,t;k=g;m=HEAP[k+8];r=k+20;k=0;j=12;break;case 1:var j=HEAP[r+k],u=k,j=j<=31|j>126|j==92|j==34?2:11;break;case 2:s=u;j=10;break;case 3:j=HEAP[r+s];j=j>127?4:9;break;case 4:t=_PyUnicodeUCS2_DecodeUTF8(r,m,x);j=t==0?5:6;break;
case 5:l=0;j=33;break;case 6:j=b(t);HEAP[p]=j;HEAP[t]-=1;j=HEAP[t]==0?7:8;break;case 7:FUNCTION_TABLE[HEAP[HEAP[t+4]+24]](t);j=8;break;case 8:l=HEAP[p];j=33;break;case 9:s+=1;j=10;break;case 10:j=s<m?3:13;break;case 11:k=u+1;j=12;break;case 12:j=k<m?1:13;break;case 13:var v=m,j=k==m?14:15;break;case 14:n=v+2;j=16;break;case 15:n=v+26;j=16;break;case 16:j=_PyString_FromStringAndSize(0,n);HEAP[p]=j;j=j==0?17:18;break;case 17:l=0;j=33;break;case 18:q=HEAP[p]+20;HEAP[q]=34;o=k+1;_llvm_memcpy_p0i8_p0i8_i32(q+
1,r,k,1,0);j=29;break;case 19:var w=j=HEAP[r+k],j=j<=31|j>126|j==92|j==34?21:20;break;case 20:HEAP[q+o]=w&255;o+=1;j=22;break;case 21:o=e(w&65535,q,o);j=22;break;case 22:j=n-o<=6?23:28;break;case 23:n*=2;j=m*6+2<n?24:25;break;case 24:n=m*6+2;j=25;break;case 25:j=__PyString_Resize(p,n)==-1?26:27;break;case 26:l=0;j=33;break;case 27:q=HEAP[p]+20;j=28;break;case 28:k+=1;j=29;break;case 29:j=k<m?19:30;break;case 30:HEAP[q+o]=34;o+=1;j=__PyString_Resize(p,o)==-1?31:32;break;case 31:l=0;j=33;break;case 32:l=
HEAP[p];j=33;break;case 33:g=l;STACKTOP=d;break a;default:assert(0,"bad label: "+j)}g=void 0}d=5;break;case 2:var y=f;d=(HEAP[HEAP[h+4]+84]&268435456)!=0?3:4;break;case 3:g=b(y);d=5;break;case 4:_PyErr_Format(HEAP[_PyExc_TypeError],cb,allocate([HEAP[HEAP[y+4]+12],0,0,0],["i8*",0,0,0],ALLOC_STACK));g=0;d=5;break;case 5:return f=g;default:assert(0,"bad label: "+d)}}function k(a){var b;for(b=-1;;)switch(b){case -1:var c,d,e,f,g,h,j,k,l;c=a;b=HEAP[c+4]!=O?1:3;break;case 1:b=_PyType_IsSubtype(HEAP[c+4],
O)==0?2:3;break;case 2:throw ___assert_fail(Da,gb,868,Ca),"Reached an unreachable!";case 3:d=c;b=HEAP[d+8]!=0?4:6;break;case 4:e=HEAP[d+8];HEAP[d+8]=0;HEAP[e]-=1;b=HEAP[e]==0?5:6;break;case 5:FUNCTION_TABLE[HEAP[HEAP[e+4]+24]](e);b=6;break;case 6:b=HEAP[d+12]!=0?7:9;break;case 7:f=HEAP[d+12];HEAP[d+12]=0;HEAP[f]-=1;b=HEAP[f]==0?8:9;break;case 8:FUNCTION_TABLE[HEAP[HEAP[f+4]+24]](f);b=9;break;case 9:b=HEAP[d+16]!=0?10:12;break;case 10:g=HEAP[d+16];HEAP[d+16]=0;HEAP[g]-=1;b=HEAP[g]==0?11:12;break;case 11:FUNCTION_TABLE[HEAP[HEAP[g+
4]+24]](g);b=12;break;case 12:b=HEAP[d+20]!=0?13:15;break;case 13:h=HEAP[d+20];HEAP[d+20]=0;HEAP[h]-=1;b=HEAP[h]==0?14:15;break;case 14:FUNCTION_TABLE[HEAP[HEAP[h+4]+24]](h);b=15;break;case 15:b=HEAP[d+24]!=0?16:18;break;case 16:j=HEAP[d+24];HEAP[d+24]=0;HEAP[j]-=1;b=HEAP[j]==0?17:18;break;case 17:FUNCTION_TABLE[HEAP[HEAP[j+4]+24]](j);b=18;break;case 18:b=HEAP[d+28]!=0?19:21;break;case 19:k=HEAP[d+28];HEAP[d+28]=0;HEAP[k]-=1;b=HEAP[k]==0?20:21;break;case 20:FUNCTION_TABLE[HEAP[HEAP[k+4]+24]](k);b=
21;break;case 21:b=HEAP[d+32]!=0?22:24;break;case 22:l=HEAP[d+32];HEAP[d+32]=0;HEAP[l]-=1;b=HEAP[l]==0?23:24;break;case 23:FUNCTION_TABLE[HEAP[HEAP[l+4]+24]](l);b=24;break;case 24:return 0;default:assert(0,"bad label: "+b)}}function l(a,b,c,d){var e;for(e=-1;;)switch(e){case -1:var f,g,h,j,k,l;f=a;e=b;g=c;h=d;k=_PyString_InternFromString(e);e=k==0?1:2;break;case 1:j=0;e=5;break;case 2:l=_PyObject_CallFunctionObjArgs(HEAP[f+32],allocate([k,0,0,0,0,0,0,0],["%struct.PyObject*",0,0,0,"i8*",0,0,0],ALLOC_STACK));
g+=HEAP[k+8];HEAP[k]-=1;e=HEAP[k]==0?3:4;break;case 3:FUNCTION_TABLE[HEAP[HEAP[k+4]+24]](k);e=4;break;case 4:HEAP[h]=g;j=l;e=5;break;case 5:return a=j;default:assert(0,"bad label: "+e)}}function m(b,c,d,e){var g;for(g=-1;;)switch(g){case -1:var h,j,k,n,o,p,q;h=b;j=c;k=d;n=e;p=j+20;q=HEAP[j+8];g=k>=q?1:2;break;case 1:_PyErr_SetNone(HEAP[_PyExc_StopIteration]);o=0;g=52;break;case 2:g=HEAP[p+k];g=g==34?3:g==45?41:g==73?32:g==78?28:g==91?8:g==102?22:g==110?12:g==116?17:g==123?4:51;break;case 3:o=_PyObject_IsTrue(HEAP[h+
12]);o=f(j,k+1,HEAP[h+8]+20,o,n);g=52;break;case 4:g=HEAP[__PyThreadState_Current];HEAP[g+12]+=1;g=HEAP[g+12]>HEAP[__Py_CheckRecursionLimit]?5:7;break;case 5:g=__Py_CheckRecursiveCall(Na)!=0?6:7;break;case 6:o=0;g=52;break;case 7:a:{g=h;var r=j,s=k+1,t=n;o=STACKTOP;STACKTOP+=4;_memset(o,0,4);for(var u=void 0,u=-1;;)switch(u){case -1:var v,w,x,y,z,A,B,H,C,D,E,F,G,K,I=o,J,M,R;v=g;w=r;x=s;y=t;A=w+20;B=HEAP[w+8]-1;F=E=0;G=HEAP[v+8]+20;K=_PyObject_IsTrue(HEAP[v+12]);C=_PyList_New(0);u=C==0?1:3;break;case 1:z=
0;u=90;break;case 2:x+=1;u=3;break;case 3:u=x>B?8:4;break;case 4:u=HEAP[A+x]==32?2:5;break;case 5:u=HEAP[A+x]==9?2:6;break;case 6:u=HEAP[A+x]==10?2:7;break;case 7:u=HEAP[A+x]==13?2:8;break;case 8:u=x<=B?9:62;break;case 9:u=HEAP[A+x]!=125?61:62;break;case 10:u=HEAP[A+x]!=34?11:12;break;case 11:a(Za,w,x);u=80;break;case 12:E=f(w,x+1,G,K,I);u=E==0?83:13;break;case 13:x=HEAP[I];u=15;break;case 14:x+=1;u=15;break;case 15:u=x>B?20:16;break;case 16:u=HEAP[A+x]==32?14:17;break;case 17:u=HEAP[A+x]==9?14:18;
break;case 18:u=HEAP[A+x]==10?14:19;break;case 19:u=HEAP[A+x]==13?14:20;break;case 20:u=x>B?22:21;break;case 21:u=HEAP[A+x]!=58?22:23;break;case 22:a(Va,w,x);u=80;break;case 23:x+=1;u=25;break;case 24:x+=1;u=25;break;case 25:u=x>B?30:26;break;case 26:u=HEAP[A+x]==32?24:27;break;case 27:u=HEAP[A+x]==9?24:28;break;case 28:u=HEAP[A+x]==10?24:29;break;case 29:u=HEAP[A+x]==13?24:30;break;case 30:F=u=m(v,w,x,I);u=u==0?80:31;break;case 31:D=_PyTuple_Pack(2,allocate([E,0,0,0,F,0,0,0],["%struct.PyObject*",
0,0,0,"%struct.PyObject*",0,0,0],ALLOC_STACK));u=D==0?80:32;break;case 32:u=E!=0?33:35;break;case 33:J=E;E=0;HEAP[J]-=1;u=HEAP[J]==0?34:35;break;case 34:FUNCTION_TABLE[HEAP[HEAP[J+4]+24]](J);u=35;break;case 35:u=F!=0?36:38;break;case 36:M=F;F=0;HEAP[M]-=1;u=HEAP[M]==0?37:38;break;case 37:FUNCTION_TABLE[HEAP[HEAP[M+4]+24]](M);u=38;break;case 38:u=_PyList_Append(C,D)==-1;HEAP[D]-=1;var P=HEAP[D]==0,u=u?39:41;break;case 39:u=P?40:80;break;case 40:FUNCTION_TABLE[HEAP[HEAP[D+4]+24]](D);u=80;break;case 41:u=
P?42:43;break;case 42:FUNCTION_TABLE[HEAP[HEAP[D+4]+24]](D);u=43;break;case 43:x=HEAP[I];u=45;break;case 44:x+=1;u=45;break;case 45:u=x>B?50:46;break;case 46:u=HEAP[A+x]==32?44:47;break;case 47:u=HEAP[A+x]==9?44:48;break;case 48:u=HEAP[A+x]==10?44:49;break;case 49:u=HEAP[A+x]==13?44:50;break;case 50:u=x>B?62:51;break;case 51:u=HEAP[A+x]==125?62:52;break;case 52:u=HEAP[A+x]!=44?53:54;break;case 53:a(Ga,w,x);u=80;break;case 54:x+=1;u=56;break;case 55:x+=1;u=56;break;case 56:u=x>B?61:57;break;case 57:u=
HEAP[A+x]==32?55:58;break;case 58:u=HEAP[A+x]==9?55:59;break;case 59:u=HEAP[A+x]==10?55:60;break;case 60:u=HEAP[A+x]==13?55:61;break;case 61:u=x<=B?10:62;break;case 62:u=x>B?64:63;break;case 63:u=HEAP[A+x]!=125?64:65;break;case 64:a(ha,w,B);u=80;break;case 65:u=HEAP[v+20]!=__Py_NoneStruct?66:70;break;case 66:F=_PyObject_CallFunctionObjArgs(HEAP[v+20],allocate([C,0,0,0,0,0,0,0],["%struct.PyObject*",0,0,0,"i8*",0,0,0],ALLOC_STACK));u=F==0?80:67;break;case 67:HEAP[C]-=1;u=HEAP[C]==0?68:69;break;case 68:FUNCTION_TABLE[HEAP[HEAP[C+
4]+24]](C);u=69;break;case 69:HEAP[y]=x+1;z=F;u=90;break;case 70:H=_PyObject_CallFunctionObjArgs(_PyDict_Type,allocate([C,0,0,0,0,0,0,0],["%struct.PyObject*",0,0,0,"i8*",0,0,0],ALLOC_STACK));u=H==0?80:71;break;case 71:u=C!=0?72:74;break;case 72:R=C;C=0;HEAP[R]-=1;u=HEAP[R]==0?73:74;break;case 73:FUNCTION_TABLE[HEAP[HEAP[R+4]+24]](R);u=74;break;case 74:u=HEAP[v+16]!=__Py_NoneStruct?75:79;break;case 75:F=_PyObject_CallFunctionObjArgs(HEAP[v+16],allocate([H,0,0,0,0,0,0,0],["%struct.PyObject*",0,0,0,
"i8*",0,0,0],ALLOC_STACK));u=F==0?80:76;break;case 76:HEAP[H]-=1;u=HEAP[H]==0?77:78;break;case 77:FUNCTION_TABLE[HEAP[HEAP[H+4]+24]](H);u=78;break;case 78:H=F;F=0;u=79;break;case 79:HEAP[y]=x+1;z=H;u=90;break;case 80:u=E!=0?81:83;break;case 81:HEAP[E]-=1;u=HEAP[E]==0?82:83;break;case 82:FUNCTION_TABLE[HEAP[HEAP[E+4]+24]](E);u=83;break;case 83:u=F!=0?84:86;break;case 84:HEAP[F]-=1;u=HEAP[F]==0?85:86;break;case 85:FUNCTION_TABLE[HEAP[HEAP[F+4]+24]](F);u=86;break;case 86:u=C!=0?87:89;break;case 87:HEAP[C]-=
1;u=HEAP[C]==0?88:89;break;case 88:FUNCTION_TABLE[HEAP[HEAP[C+4]+24]](C);u=89;break;case 89:z=0;u=90;break;case 90:g=z;STACKTOP=o;o=g;break a;default:assert(0,"bad label: "+u)}o=void 0}HEAP[HEAP[__PyThreadState_Current]+12]-=1;g=52;break;case 8:g=HEAP[__PyThreadState_Current];HEAP[g+12]+=1;g=HEAP[g+12]>HEAP[__Py_CheckRecursionLimit]?9:11;break;case 9:g=__Py_CheckRecursiveCall(jb)!=0?10:11;break;case 10:o=0;g=52;break;case 11:a:{g=h;r=j;s=k+1;t=n;o=STACKTOP;STACKTOP+=4;_memset(o,0,4);u=void 0;for(u=
-1;;)switch(u){case -1:var N,L,O,Q,S,T,U,V,$,aa=o,la;N=g;L=r;O=s;Q=t;T=L+20;U=HEAP[L+8]-1;V=0;$=_PyList_New(0);u=$==0?1:3;break;case 1:S=0;u=44;break;case 2:O+=1;u=3;break;case 3:u=O>U?8:4;break;case 4:u=HEAP[T+O]==32?2:5;break;case 5:u=HEAP[T+O]==9?2:6;break;case 6:u=HEAP[T+O]==10?2:7;break;case 7:u=HEAP[T+O]==13?2:8;break;case 8:u=O<=U?9:34;break;case 9:u=HEAP[T+O]!=93?33:34;break;case 10:V=m(N,L,O,aa);u=V==0?41:11;break;case 11:u=_PyList_Append($,V)==-1?38:12;break;case 12:u=V!=0?13:15;break;case 13:la=
V;V=0;HEAP[la]-=1;u=HEAP[la]==0?14:15;break;case 14:FUNCTION_TABLE[HEAP[HEAP[la+4]+24]](la);u=15;break;case 15:O=HEAP[aa];u=17;break;case 16:O+=1;u=17;break;case 17:u=O>U?22:18;break;case 18:u=HEAP[T+O]==32?16:19;break;case 19:u=HEAP[T+O]==9?16:20;break;case 20:u=HEAP[T+O]==10?16:21;break;case 21:u=HEAP[T+O]==13?16:22;break;case 22:u=O>U?34:23;break;case 23:u=HEAP[T+O]==93?34:24;break;case 24:u=HEAP[T+O]!=44?25:26;break;case 25:a(Ga,L,O);u=38;break;case 26:O+=1;u=28;break;case 27:O+=1;u=28;break;
case 28:u=O>U?33:29;break;case 29:u=HEAP[T+O]==32?27:30;break;case 30:u=HEAP[T+O]==9?27:31;break;case 31:u=HEAP[T+O]==10?27:32;break;case 32:u=HEAP[T+O]==13?27:33;break;case 33:u=O<=U?10:34;break;case 34:u=O>U?36:35;break;case 35:u=HEAP[T+O]!=93?36:37;break;case 36:a(ha,L,U);u=38;break;case 37:HEAP[Q]=O+1;S=$;u=44;break;case 38:u=V!=0?39:41;break;case 39:HEAP[V]-=1;u=HEAP[V]==0?40:41;break;case 40:FUNCTION_TABLE[HEAP[HEAP[V+4]+24]](V);u=41;break;case 41:HEAP[$]-=1;u=HEAP[$]==0?42:43;break;case 42:FUNCTION_TABLE[HEAP[HEAP[$+
4]+24]]($);u=43;break;case 43:S=0;u=44;break;case 44:g=S;STACKTOP=o;o=g;break a;default:assert(0,"bad label: "+u)}o=void 0}HEAP[HEAP[__PyThreadState_Current]+12]-=1;g=52;break;case 12:g=k+3<q?13:51;break;case 13:g=HEAP[p+(k+1)]==117?14:51;break;case 14:g=HEAP[p+(k+2)]==108?15:51;break;case 15:g=HEAP[p+(k+3)]==108?16:51;break;case 16:HEAP[__Py_NoneStruct]+=1;HEAP[n]=k+4;o=__Py_NoneStruct;g=52;break;case 17:g=k+3<q?18:51;break;case 18:g=HEAP[p+(k+1)]==114?19:51;break;case 19:g=HEAP[p+(k+2)]==117?20:
51;break;case 20:g=HEAP[p+(k+3)]==101?21:51;break;case 21:HEAP[__Py_TrueStruct]+=1;HEAP[n]=k+4;o=__Py_TrueStruct;g=52;break;case 22:g=k+4<q?23:51;break;case 23:g=HEAP[p+(k+1)]==97?24:51;break;case 24:g=HEAP[p+(k+2)]==108?25:51;break;case 25:g=HEAP[p+(k+3)]==115?26:51;break;case 26:g=HEAP[p+(k+4)]==101?27:51;break;case 27:HEAP[__Py_ZeroStruct]+=1;HEAP[n]=k+5;o=__Py_ZeroStruct;g=52;break;case 28:g=k+2<q?29:51;break;case 29:g=HEAP[p+(k+1)]==97?30:51;break;case 30:g=HEAP[p+(k+2)]==78?31:51;break;case 31:o=
l(h,hb,k,n);g=52;break;case 32:g=k+7<q?33:51;break;case 33:g=HEAP[p+(k+1)]==110?34:51;break;case 34:g=HEAP[p+(k+2)]==102?35:51;break;case 35:g=HEAP[p+(k+3)]==105?36:51;break;case 36:g=HEAP[p+(k+4)]==110?37:51;break;case 37:g=HEAP[p+(k+5)]==105?38:51;break;case 38:g=HEAP[p+(k+6)]==116?39:51;break;case 39:g=HEAP[p+(k+7)]==121?40:51;break;case 40:o=l(h,Qa,k,n);g=52;break;case 41:g=k+8<q?42:51;break;case 42:g=HEAP[p+(k+1)]==73?43:51;break;case 43:g=HEAP[p+(k+2)]==110?44:51;break;case 44:g=HEAP[p+(k+3)]==
102?45:51;break;case 45:g=HEAP[p+(k+4)]==105?46:51;break;case 46:g=HEAP[p+(k+5)]==110?47:51;break;case 47:g=HEAP[p+(k+6)]==105?48:51;break;case 48:g=HEAP[p+(k+7)]==116?49:51;break;case 49:g=HEAP[p+(k+8)]==121?50:51;break;case 50:o=l(h,Ha,k,n);g=52;break;case 51:a:{o=h;g=j;r=k;s=n;t=void 0;for(t=-1;;)switch(t){case -1:var ja,ba,da,ea,Z,ca,Y,ka,ia,ma,na,pa;ja=o;ba=g;da=r;ea=s;ca=ba+20;ba=HEAP[ba+8]-1;Y=da;ka=0;t=HEAP[ca+Y]==45?1:3;break;case 1:Y+=1;t=Y>ba?2:3;break;case 2:_PyErr_SetNone(HEAP[_PyExc_StopIteration]);
Z=0;t=52;break;case 3:t=HEAP[ca+Y]<=48?10:4;break;case 4:t=HEAP[ca+Y]>57?10:5;break;case 5:Y+=1;t=7;break;case 6:Y+=1;t=7;break;case 7:t=Y>ba?13:8;break;case 8:t=HEAP[ca+Y]<=47?13:9;break;case 9:t=HEAP[ca+Y]<=57?6:13;break;case 10:t=HEAP[ca+Y]==48?11:12;break;case 11:Y+=1;t=13;break;case 12:_PyErr_SetNone(HEAP[_PyExc_StopIteration]);Z=0;t=52;break;case 13:t=Y<ba?14:22;break;case 14:t=HEAP[ca+Y]==46?15:22;break;case 15:t=HEAP[ca+(Y+1)]>47?16:22;break;case 16:t=HEAP[ca+(Y+1)]<=57?17:22;break;case 17:ka=
1;Y+=2;t=19;break;case 18:Y+=1;t=19;break;case 19:t=Y>ba?22:20;break;case 20:t=HEAP[ca+Y]<=47?22:21;break;case 21:t=HEAP[ca+Y]<=57?18:22;break;case 22:t=Y<ba?23:37;break;case 23:t=HEAP[ca+Y]==101?25:24;break;case 24:t=HEAP[ca+Y]==69?25:37;break;case 25:na=Y;Y+=1;t=Y<ba?26:30;break;case 26:t=HEAP[ca+Y]==45?28:27;break;case 27:t=HEAP[ca+Y]==43?28:30;break;case 28:Y+=1;t=30;break;case 29:Y+=1;t=30;break;case 30:t=Y>ba?33:31;break;case 31:t=HEAP[ca+Y]<=47?33:32;break;case 32:t=HEAP[ca+Y]<=57?29:33;break;
case 33:t=HEAP[ca+(Y-1)]<=47?36:34;break;case 34:t=HEAP[ca+(Y-1)]>57?36:35;break;case 35:ka=1;t=37;break;case 36:Y=na;t=37;break;case 37:ma=t=_PyString_FromStringAndSize(ca+da,Y-da);t=t==0?38:39;break;case 38:Z=0;t=52;break;case 39:var qa=ja,t=ka!=0?40:46;break;case 40:t=HEAP[qa+24]!=_PyFloat_Type?41:42;break;case 41:ia=_PyObject_CallFunctionObjArgs(HEAP[ja+24],allocate([ma,0,0,0,0,0,0,0],["%struct.PyObject*",0,0,0,"i8*",0,0,0],ALLOC_STACK));t=49;break;case 42:pa=_PyOS_string_to_double(ma+20,0,0);
t=pa==-1?43:45;break;case 43:t=_PyErr_Occurred()!=0?44:45;break;case 44:Z=0;t=52;break;case 45:ia=_PyFloat_FromDouble(pa);t=49;break;case 46:t=HEAP[qa+28]!=_PyInt_Type?47:48;break;case 47:ia=_PyObject_CallFunctionObjArgs(HEAP[ja+28],allocate([ma,0,0,0,0,0,0,0],["%struct.PyObject*",0,0,0,"i8*",0,0,0],ALLOC_STACK));t=49;break;case 48:ia=_PyInt_FromString(ma+20,0,10);t=49;break;case 49:HEAP[ma]-=1;t=HEAP[ma]==0?50:51;break;case 50:FUNCTION_TABLE[HEAP[HEAP[ma+4]+24]](ma);t=51;break;case 51:HEAP[ea]=Y;
Z=ia;t=52;break;case 52:o=Z;break a;default:assert(0,"bad label: "+t)}o=void 0}g=52;break;case 52:return b=o;default:assert(0,"bad label: "+g)}}function n(b,c,d,e){var f;for(f=-1;;)switch(f){case -1:var g,j,k,m,o,p,q;g=b;j=c;k=d;m=e;p=HEAP[j+12];q=HEAP[j+8];f=k>=q?1:2;break;case 1:_PyErr_SetNone(HEAP[_PyExc_StopIteration]);o=0;f=52;break;case 2:f=HEAP[p+2*k];f=f==34?3:f==45?41:f==73?32:f==78?28:f==91?8:f==102?22:f==110?12:f==116?17:f==123?4:51;break;case 3:o=_PyObject_IsTrue(HEAP[g+12]);o=h(j,k+1,
o,m);f=52;break;case 4:f=HEAP[__PyThreadState_Current];HEAP[f+12]+=1;f=HEAP[f+12]>HEAP[__Py_CheckRecursionLimit]?5:7;break;case 5:f=__Py_CheckRecursiveCall(Ra)!=0?6:7;break;case 6:o=0;f=52;break;case 7:a:{f=g;var r=j,s=k+1,t=m;o=STACKTOP;STACKTOP+=4;_memset(o,0,4);for(var u=void 0,u=-1;;)switch(u){case -1:var v,w,x,y,z,A,B,H,C,D,E,F,G,K=o,I,J,M;v=f;w=r;x=s;y=t;A=HEAP[w+12];B=HEAP[w+8]-1;F=E=0;G=_PyObject_IsTrue(HEAP[v+12]);C=_PyList_New(0);u=C==0?1:3;break;case 1:z=0;u=90;break;case 2:x+=1;u=3;break;
case 3:u=x>B?8:4;break;case 4:u=HEAP[A+2*x]==32?2:5;break;case 5:u=HEAP[A+2*x]==9?2:6;break;case 6:u=HEAP[A+2*x]==10?2:7;break;case 7:u=HEAP[A+2*x]==13?2:8;break;case 8:u=x<=B?9:62;break;case 9:u=HEAP[A+2*x]!=125?61:62;break;case 10:u=HEAP[A+2*x]!=34?11:12;break;case 11:a(Za,w,x);u=80;break;case 12:E=h(w,x+1,G,K);u=E==0?83:13;break;case 13:x=HEAP[K];u=15;break;case 14:x+=1;u=15;break;case 15:u=x>B?20:16;break;case 16:u=HEAP[A+2*x]==32?14:17;break;case 17:u=HEAP[A+2*x]==9?14:18;break;case 18:u=HEAP[A+
2*x]==10?14:19;break;case 19:u=HEAP[A+2*x]==13?14:20;break;case 20:u=x>B?22:21;break;case 21:u=HEAP[A+2*x]!=58?22:23;break;case 22:a(Va,w,x);u=80;break;case 23:x+=1;u=25;break;case 24:x+=1;u=25;break;case 25:u=x>B?30:26;break;case 26:u=HEAP[A+2*x]==32?24:27;break;case 27:u=HEAP[A+2*x]==9?24:28;break;case 28:u=HEAP[A+2*x]==10?24:29;break;case 29:u=HEAP[A+2*x]==13?24:30;break;case 30:F=u=n(v,w,x,K);u=u==0?80:31;break;case 31:D=_PyTuple_Pack(2,allocate([E,0,0,0,F,0,0,0],["%struct.PyObject*",0,0,0,"%struct.PyObject*",
0,0,0],ALLOC_STACK));u=D==0?80:32;break;case 32:u=E!=0?33:35;break;case 33:I=E;E=0;HEAP[I]-=1;u=HEAP[I]==0?34:35;break;case 34:FUNCTION_TABLE[HEAP[HEAP[I+4]+24]](I);u=35;break;case 35:u=F!=0?36:38;break;case 36:J=F;F=0;HEAP[J]-=1;u=HEAP[J]==0?37:38;break;case 37:FUNCTION_TABLE[HEAP[HEAP[J+4]+24]](J);u=38;break;case 38:u=_PyList_Append(C,D)==-1;HEAP[D]-=1;var R=HEAP[D]==0,u=u?39:41;break;case 39:u=R?40:80;break;case 40:FUNCTION_TABLE[HEAP[HEAP[D+4]+24]](D);u=80;break;case 41:u=R?42:43;break;case 42:FUNCTION_TABLE[HEAP[HEAP[D+
4]+24]](D);u=43;break;case 43:x=HEAP[K];u=45;break;case 44:x+=1;u=45;break;case 45:u=x>B?50:46;break;case 46:u=HEAP[A+2*x]==32?44:47;break;case 47:u=HEAP[A+2*x]==9?44:48;break;case 48:u=HEAP[A+2*x]==10?44:49;break;case 49:u=HEAP[A+2*x]==13?44:50;break;case 50:u=x>B?62:51;break;case 51:u=HEAP[A+2*x]==125?62:52;break;case 52:u=HEAP[A+2*x]!=44?53:54;break;case 53:a(Ga,w,x);u=80;break;case 54:x+=1;u=56;break;case 55:x+=1;u=56;break;case 56:u=x>B?61:57;break;case 57:u=HEAP[A+2*x]==32?55:58;break;case 58:u=
HEAP[A+2*x]==9?55:59;break;case 59:u=HEAP[A+2*x]==10?55:60;break;case 60:u=HEAP[A+2*x]==13?55:61;break;case 61:u=x<=B?10:62;break;case 62:u=x>B?64:63;break;case 63:u=HEAP[A+2*x]!=125?64:65;break;case 64:a(ha,w,B);u=80;break;case 65:u=HEAP[v+20]!=__Py_NoneStruct?66:70;break;case 66:F=_PyObject_CallFunctionObjArgs(HEAP[v+20],allocate([C,0,0,0,0,0,0,0],["%struct.PyObject*",0,0,0,"i8*",0,0,0],ALLOC_STACK));u=F==0?80:67;break;case 67:HEAP[C]-=1;u=HEAP[C]==0?68:69;break;case 68:FUNCTION_TABLE[HEAP[HEAP[C+
4]+24]](C);u=69;break;case 69:HEAP[y]=x+1;z=F;u=90;break;case 70:H=_PyObject_CallFunctionObjArgs(_PyDict_Type,allocate([C,0,0,0,0,0,0,0],["%struct.PyObject*",0,0,0,"i8*",0,0,0],ALLOC_STACK));u=H==0?80:71;break;case 71:u=C!=0?72:74;break;case 72:M=C;C=0;HEAP[M]-=1;u=HEAP[M]==0?73:74;break;case 73:FUNCTION_TABLE[HEAP[HEAP[M+4]+24]](M);u=74;break;case 74:u=HEAP[v+16]!=__Py_NoneStruct?75:79;break;case 75:F=_PyObject_CallFunctionObjArgs(HEAP[v+16],allocate([H,0,0,0,0,0,0,0],["%struct.PyObject*",0,0,0,
"i8*",0,0,0],ALLOC_STACK));u=F==0?80:76;break;case 76:HEAP[H]-=1;u=HEAP[H]==0?77:78;break;case 77:FUNCTION_TABLE[HEAP[HEAP[H+4]+24]](H);u=78;break;case 78:H=F;F=0;u=79;break;case 79:HEAP[y]=x+1;z=H;u=90;break;case 80:u=E!=0?81:83;break;case 81:HEAP[E]-=1;u=HEAP[E]==0?82:83;break;case 82:FUNCTION_TABLE[HEAP[HEAP[E+4]+24]](E);u=83;break;case 83:u=F!=0?84:86;break;case 84:HEAP[F]-=1;u=HEAP[F]==0?85:86;break;case 85:FUNCTION_TABLE[HEAP[HEAP[F+4]+24]](F);u=86;break;case 86:u=C!=0?87:89;break;case 87:HEAP[C]-=
1;u=HEAP[C]==0?88:89;break;case 88:FUNCTION_TABLE[HEAP[HEAP[C+4]+24]](C);u=89;break;case 89:z=0;u=90;break;case 90:f=z;STACKTOP=o;o=f;break a;default:assert(0,"bad label: "+u)}o=void 0}HEAP[HEAP[__PyThreadState_Current]+12]-=1;f=52;break;case 8:f=HEAP[__PyThreadState_Current];HEAP[f+12]+=1;f=HEAP[f+12]>HEAP[__Py_CheckRecursionLimit]?9:11;break;case 9:f=__Py_CheckRecursiveCall(Ia)!=0?10:11;break;case 10:o=0;f=52;break;case 11:a:{f=g;r=j;s=k+1;t=m;o=STACKTOP;STACKTOP+=4;_memset(o,0,4);u=void 0;for(u=
-1;;)switch(u){case -1:var O,P,N,L,Q,S,T,U,V,$=o,aa;O=f;P=r;N=s;L=t;S=HEAP[P+12];T=HEAP[P+8]-1;U=0;V=_PyList_New(0);u=V==0?1:3;break;case 1:Q=0;u=44;break;case 2:N+=1;u=3;break;case 3:u=N>T?8:4;break;case 4:u=HEAP[S+2*N]==32?2:5;break;case 5:u=HEAP[S+2*N]==9?2:6;break;case 6:u=HEAP[S+2*N]==10?2:7;break;case 7:u=HEAP[S+2*N]==13?2:8;break;case 8:u=N<=T?9:34;break;case 9:u=HEAP[S+2*N]!=93?33:34;break;case 10:U=n(O,P,N,$);u=U==0?41:11;break;case 11:u=_PyList_Append(V,U)==-1?38:12;break;case 12:u=U!=0?
13:15;break;case 13:aa=U;U=0;HEAP[aa]-=1;u=HEAP[aa]==0?14:15;break;case 14:FUNCTION_TABLE[HEAP[HEAP[aa+4]+24]](aa);u=15;break;case 15:N=HEAP[$];u=17;break;case 16:N+=1;u=17;break;case 17:u=N>T?22:18;break;case 18:u=HEAP[S+2*N]==32?16:19;break;case 19:u=HEAP[S+2*N]==9?16:20;break;case 20:u=HEAP[S+2*N]==10?16:21;break;case 21:u=HEAP[S+2*N]==13?16:22;break;case 22:u=N>T?34:23;break;case 23:u=HEAP[S+2*N]==93?34:24;break;case 24:u=HEAP[S+2*N]!=44?25:26;break;case 25:a(Ga,P,N);u=38;break;case 26:N+=1;u=
28;break;case 27:N+=1;u=28;break;case 28:u=N>T?33:29;break;case 29:u=HEAP[S+2*N]==32?27:30;break;case 30:u=HEAP[S+2*N]==9?27:31;break;case 31:u=HEAP[S+2*N]==10?27:32;break;case 32:u=HEAP[S+2*N]==13?27:33;break;case 33:u=N<=T?10:34;break;case 34:u=N>T?36:35;break;case 35:u=HEAP[S+2*N]!=93?36:37;break;case 36:a(ha,P,T);u=38;break;case 37:HEAP[L]=N+1;Q=V;u=44;break;case 38:u=U!=0?39:41;break;case 39:HEAP[U]-=1;u=HEAP[U]==0?40:41;break;case 40:FUNCTION_TABLE[HEAP[HEAP[U+4]+24]](U);u=41;break;case 41:HEAP[V]-=
1;u=HEAP[V]==0?42:43;break;case 42:FUNCTION_TABLE[HEAP[HEAP[V+4]+24]](V);u=43;break;case 43:Q=0;u=44;break;case 44:f=Q;STACKTOP=o;o=f;break a;default:assert(0,"bad label: "+u)}o=void 0}HEAP[HEAP[__PyThreadState_Current]+12]-=1;f=52;break;case 12:f=k+3<q?13:51;break;case 13:f=HEAP[p+2*(k+1)]==117?14:51;break;case 14:f=HEAP[p+2*(k+2)]==108?15:51;break;case 15:f=HEAP[p+2*(k+3)]==108?16:51;break;case 16:HEAP[__Py_NoneStruct]+=1;HEAP[m]=k+4;o=__Py_NoneStruct;f=52;break;case 17:f=k+3<q?18:51;break;case 18:f=
HEAP[p+2*(k+1)]==114?19:51;break;case 19:f=HEAP[p+2*(k+2)]==117?20:51;break;case 20:f=HEAP[p+2*(k+3)]==101?21:51;break;case 21:HEAP[__Py_TrueStruct]+=1;HEAP[m]=k+4;o=__Py_TrueStruct;f=52;break;case 22:f=k+4<q?23:51;break;case 23:f=HEAP[p+2*(k+1)]==97?24:51;break;case 24:f=HEAP[p+2*(k+2)]==108?25:51;break;case 25:f=HEAP[p+2*(k+3)]==115?26:51;break;case 26:f=HEAP[p+2*(k+4)]==101?27:51;break;case 27:HEAP[__Py_ZeroStruct]+=1;HEAP[m]=k+5;o=__Py_ZeroStruct;f=52;break;case 28:f=k+2<q?29:51;break;case 29:f=
HEAP[p+2*(k+1)]==97?30:51;break;case 30:f=HEAP[p+2*(k+2)]==78?31:51;break;case 31:o=l(g,hb,k,m);f=52;break;case 32:f=k+7<q?33:51;break;case 33:f=HEAP[p+2*(k+1)]==110?34:51;break;case 34:f=HEAP[p+2*(k+2)]==102?35:51;break;case 35:f=HEAP[p+2*(k+3)]==105?36:51;break;case 36:f=HEAP[p+2*(k+4)]==110?37:51;break;case 37:f=HEAP[p+2*(k+5)]==105?38:51;break;case 38:f=HEAP[p+2*(k+6)]==116?39:51;break;case 39:f=HEAP[p+2*(k+7)]==121?40:51;break;case 40:o=l(g,Qa,k,m);f=52;break;case 41:f=k+8<q?42:51;break;case 42:f=
HEAP[p+2*(k+1)]==73?43:51;break;case 43:f=HEAP[p+2*(k+2)]==110?44:51;break;case 44:f=HEAP[p+2*(k+3)]==102?45:51;break;case 45:f=HEAP[p+2*(k+4)]==105?46:51;break;case 46:f=HEAP[p+2*(k+5)]==110?47:51;break;case 47:f=HEAP[p+2*(k+6)]==105?48:51;break;case 48:f=HEAP[p+2*(k+7)]==116?49:51;break;case 49:f=HEAP[p+2*(k+8)]==121?50:51;break;case 50:o=l(g,Ha,k,m);f=52;break;case 51:a:{o=g;f=j;r=k;s=m;t=void 0;for(t=-1;;)switch(t){case -1:var la,Y,ja,ca,ba,da,Z,ea,ka,ia,ma;la=o;Y=f;ja=r;ca=s;da=HEAP[Y+12];Y=
HEAP[Y+8]-1;Z=ja;ea=0;t=HEAP[da+2*Z]==45?1:3;break;case 1:Z+=1;t=Z>Y?2:3;break;case 2:_PyErr_SetNone(HEAP[_PyExc_StopIteration]);ba=0;t=47;break;case 3:t=HEAP[da+2*Z]<=48?10:4;break;case 4:t=HEAP[da+2*Z]>57?10:5;break;case 5:Z+=1;t=7;break;case 6:Z+=1;t=7;break;case 7:t=Z>Y?13:8;break;case 8:t=HEAP[da+2*Z]<=47?13:9;break;case 9:t=HEAP[da+2*Z]<=57?6:13;break;case 10:t=HEAP[da+2*Z]==48?11:12;break;case 11:Z+=1;t=13;break;case 12:_PyErr_SetNone(HEAP[_PyExc_StopIteration]);ba=0;t=47;break;case 13:t=Z<
Y?14:22;break;case 14:t=HEAP[da+2*Z]==46?15:22;break;case 15:t=HEAP[da+2*(Z+1)]>47?16:22;break;case 16:t=HEAP[da+2*(Z+1)]<=57?17:22;break;case 17:ea=1;Z+=2;t=19;break;case 18:Z+=1;t=19;break;case 19:t=Z>Y?22:20;break;case 20:t=HEAP[da+2*Z]<=47?22:21;break;case 21:t=HEAP[da+2*Z]<=57?18:22;break;case 22:t=Z<Y?23:37;break;case 23:t=HEAP[da+2*Z]==101?25:24;break;case 24:t=HEAP[da+2*Z]==69?25:37;break;case 25:ma=Z;Z+=1;t=Z<Y?26:30;break;case 26:t=HEAP[da+2*Z]==45?28:27;break;case 27:t=HEAP[da+2*Z]==43?
28:30;break;case 28:Z+=1;t=30;break;case 29:Z+=1;t=30;break;case 30:t=Z>Y?33:31;break;case 31:t=HEAP[da+2*Z]<=47?33:32;break;case 32:t=HEAP[da+2*Z]<=57?29:33;break;case 33:t=HEAP[da+2*(Z-1)]<=47?36:34;break;case 34:t=HEAP[da+2*(Z-1)]>57?36:35;break;case 35:ea=1;t=37;break;case 36:Z=ma;t=37;break;case 37:ia=t=_PyUnicodeUCS2_FromUnicode(da+2*ja,Z-ja);t=t==0?38:39;break;case 38:ba=0;t=47;break;case 39:var na=la,t=ea!=0?40:43;break;case 40:t=HEAP[na+24]!=_PyFloat_Type?41:42;break;case 41:ka=_PyObject_CallFunctionObjArgs(HEAP[la+
24],allocate([ia,0,0,0,0,0,0,0],["%struct.PyObject*",0,0,0,"i8*",0,0,0],ALLOC_STACK));t=44;break;case 42:ka=_PyFloat_FromString(ia,0);t=44;break;case 43:ka=_PyObject_CallFunctionObjArgs(HEAP[na+28],allocate([ia,0,0,0,0,0,0,0],["%struct.PyObject*",0,0,0,"i8*",0,0,0],ALLOC_STACK));t=44;break;case 44:HEAP[ia]-=1;t=HEAP[ia]==0?45:46;break;case 45:FUNCTION_TABLE[HEAP[HEAP[ia+4]+24]](ia);t=46;break;case 46:HEAP[ca]=Z;ba=ka;t=47;break;case 47:o=ba;break a;default:assert(0,"bad label: "+t)}o=void 0}f=52;
break;case 52:return b=o;default:assert(0,"bad label: "+f)}}function o(a){var b;for(b=-1;;)switch(b){case -1:var c,d;c=a;b=c==__Py_NoneStruct?1:4;break;case 1:b=HEAP[qa]==0?2:3;break;case 2:b=_PyString_InternFromString(M);HEAP[qa]=b;b=3;break;case 3:HEAP[HEAP[qa]]+=1;d=HEAP[qa];b=13;break;case 4:b=c==__Py_TrueStruct?5:8;break;case 5:b=HEAP[na]==0?6:7;break;case 6:b=_PyString_InternFromString(nb);HEAP[na]=b;b=7;break;case 7:HEAP[HEAP[na]]+=1;d=HEAP[na];b=13;break;case 8:b=c==__Py_ZeroStruct?9:12;break;
case 9:b=HEAP[ca]==0?10:11;break;case 10:b=_PyString_InternFromString(ua);HEAP[ca]=b;b=11;break;case 11:HEAP[HEAP[ca]]+=1;d=HEAP[ca];b=13;break;case 12:_PyErr_SetString(HEAP[_PyExc_ValueError],Ea);d=0;b=13;break;case 13:return a=d;default:assert(0,"bad label: "+b)}}function p(a,b){var c;for(c=-1;;)switch(c){case -1:var d,e,f,g;d=a;e=b;g=HEAP[e+8];c=___finite(g)==0?1:8;break;case 1:c=HEAP[d+44]==0?2:3;break;case 2:_PyErr_SetString(HEAP[_PyExc_ValueError],Eb);f=0;c=9;break;case 3:c=g>0?4:5;break;case 4:f=
_PyString_FromString(Qa);c=9;break;case 5:c=g<0?6:7;break;case 6:f=_PyString_FromString(Ha);c=9;break;case 7:f=_PyString_FromString(hb);c=9;break;case 8:f=_PyObject_Repr(e);c=9;break;case 9:return c=f;default:assert(0,"bad label: "+c)}}function q(a,b){var c;for(c=-1;;)switch(c){case -1:var d,e,f;d=a;e=b;c=HEAP[d+40]!=0?1:2;break;case 1:f=j(0,e);c=3;break;case 2:f=_PyObject_CallFunctionObjArgs(HEAP[d+16],allocate([e,0,0,0,0,0,0,0],["%struct.PyObject*",0,0,0,"i8*",0,0,0],ALLOC_STACK));c=3;break;case 3:return c=
f;default:assert(0,"bad label: "+c)}}function r(a,b){var c;for(c=-1;;)switch(c){case -1:var d,e;c=a;d=b;e=_PyList_Append(c,d);HEAP[d]-=1;c=HEAP[d]==0?1:2;break;case 1:FUNCTION_TABLE[HEAP[HEAP[d+4]+24]](d);c=2;break;case 2:return d=e;default:assert(0,"bad label: "+c)}}function t(a,b,c,d){var e;for(e=-1;;)switch(e){case -1:var f,g,h,j,k,l,m,n,s,u,v,w,x;f=a;g=b;h=c;j=d;var y=h;e=h==__Py_NoneStruct|h==__Py_TrueStruct|h==__Py_ZeroStruct?1:4;break;case 1:n=o(y);e=n==0?2:3;break;case 2:k=-1;e=68;break;case 3:k=
r(g,n);e=68;break;case 4:e=(HEAP[HEAP[y+4]+84]&134217728)!=0?6:5;break;case 5:e=(HEAP[HEAP[h+4]+84]&268435456)!=0?6:9;break;case 6:s=e=q(f,h);e=e==0?7:8;break;case 7:k=-1;e=68;break;case 8:k=r(g,s);e=68;break;case 9:e=(HEAP[HEAP[h+4]+84]&8388608)!=0?11:10;break;case 10:e=(HEAP[HEAP[h+4]+84]&16777216)!=0?11:14;break;case 11:u=e=_PyObject_Str(h);e=e==0?12:13;break;case 12:k=-1;e=68;break;case 13:k=r(g,u);e=68;break;case 14:e=HEAP[h+4]==_PyFloat_Type?16:15;break;case 15:e=_PyType_IsSubtype(HEAP[h+4],
_PyFloat_Type)!=0?16:19;break;case 16:v=e=p(f,h);e=e==0?17:18;break;case 17:k=-1;e=68;break;case 18:k=r(g,v);e=68;break;case 19:e=(HEAP[HEAP[h+4]+84]&33554432)!=0?21:20;break;case 20:e=(HEAP[HEAP[h+4]+84]&67108864)!=0?21:25;break;case 21:e=HEAP[__PyThreadState_Current];HEAP[e+12]+=1;e=HEAP[e+12]>HEAP[__Py_CheckRecursionLimit]?22:24;break;case 22:e=__Py_CheckRecursiveCall(zb)!=0?23:24;break;case 23:k=-1;e=68;break;case 24:a:{k=f;m=g;e=h;for(var A=j,z=void 0,z=-1;;)switch(z){case -1:var B,H,C,D,F,E,
G,K,I,J,M,N,R,O;B=k;H=m;C=e;D=A;K=G=0;z=HEAP[mb]==0|HEAP[yb]==0|HEAP[Nb]==0?1:3;break;case 1:z=_PyString_InternFromString(Ib);HEAP[mb]=z;z=_PyString_InternFromString(Db);HEAP[yb]=z;z=_PyString_InternFromString(Ub);HEAP[Nb]=z;z=HEAP[mb]==0|HEAP[yb]==0|HEAP[Nb]==0?2:3;break;case 2:E=-1;z=42;break;case 3:G=0;K=z=_PySequence_Fast(C,Tb);z=z==0?4:5;break;case 4:E=-1;z=42;break;case 5:I=HEAP[K+8];z=I==0?6:9;break;case 6:HEAP[K]-=1;z=HEAP[K]==0?7:8;break;case 7:FUNCTION_TABLE[HEAP[HEAP[K+4]+24]](K);z=8;break;
case 8:E=_PyList_Append(H,HEAP[Nb]);z=42;break;case 9:z=HEAP[B+8]!=__Py_NoneStruct?10:15;break;case 10:G=_PyLong_FromVoidPtr(C);z=G==0?39:11;break;case 11:N=_PyDict_Contains(HEAP[B+8],G);z=N!=0?12:14;break;case 12:z=N!=-1?13:36;break;case 13:_PyErr_SetString(HEAP[_PyExc_ValueError],va);z=36;break;case 14:z=_PyDict_SetItem(HEAP[B+8],G,C)!=0?36:15;break;case 15:var P=K,z=(HEAP[HEAP[K+4]+84]&33554432)!=0?16:17;break;case 16:F=HEAP[P+12];z=18;break;case 17:F=P+12;z=18;break;case 18:J=F;z=_PyList_Append(H,
HEAP[mb])!=0?36:19;break;case 19:z=HEAP[B+20]!=__Py_NoneStruct?20:21;break;case 20:D+=1;z=21;break;case 21:M=0;z=26;break;case 22:R=HEAP[J+4*M];z=M!=0?23:24;break;case 23:z=_PyList_Append(H,HEAP[B+28])!=0?36:24;break;case 24:z=t(B,H,R,D)!=0?36:25;break;case 25:M+=1;z=26;break;case 26:z=M<I?22:27;break;case 27:z=G!=0?28:32;break;case 28:z=_PyDict_DelItem(HEAP[B+8],G)!=0?36:29;break;case 29:z=G!=0?30:32;break;case 30:O=G;G=0;HEAP[O]-=1;z=HEAP[O]==0?31:32;break;case 31:FUNCTION_TABLE[HEAP[HEAP[O+4]+
24]](O);z=32;break;case 32:z=_PyList_Append(H,HEAP[yb])!=0?36:33;break;case 33:HEAP[K]-=1;z=HEAP[K]==0?34:35;break;case 34:FUNCTION_TABLE[HEAP[HEAP[K+4]+24]](K);z=35;break;case 35:E=0;z=42;break;case 36:z=G!=0?37:39;break;case 37:HEAP[G]-=1;z=HEAP[G]==0?38:39;break;case 38:FUNCTION_TABLE[HEAP[HEAP[G+4]+24]](G);z=39;break;case 39:HEAP[K]-=1;z=HEAP[K]==0?40:41;break;case 40:FUNCTION_TABLE[HEAP[HEAP[K+4]+24]](K);z=41;break;case 41:E=-1;z=42;break;case 42:m=k=E;break a;default:assert(0,"bad label: "+
z)}m=void 0}HEAP[HEAP[__PyThreadState_Current]+12]-=1;k=m;e=68;break;case 25:e=(HEAP[HEAP[h+4]+84]&536870912)!=0?26:30;break;case 26:e=HEAP[__PyThreadState_Current];HEAP[e+12]+=1;e=HEAP[e+12]>HEAP[__Py_CheckRecursionLimit]?27:29;break;case 27:e=__Py_CheckRecursiveCall(zb)!=0?28:29;break;case 28:k=-1;e=68;break;case 29:a:{k=f;m=g;e=h;for(var A=j,L=void 0,z=null,L=-1;;)switch(L){case -1:var Q,S,T,U,$,aa,Z,Y,la,da,ja,ba,ca,ea,ha,ia,ka,na;Q=k;S=m;T=e;U=A;da=la=Y=Z=aa=0;L=HEAP[xa]==0|HEAP[V]==0|HEAP[sa]==
0?1:3;break;case 1:L=_PyString_InternFromString(pa);HEAP[xa]=L;L=_PyString_InternFromString(fb);HEAP[V]=L;L=_PyString_InternFromString(ma);HEAP[sa]=L;L=HEAP[xa]==0|HEAP[V]==0|HEAP[sa]==0?2:3;break;case 2:$=-1;L=79;break;case 3:L=HEAP[T+8]==0?4:5;break;case 4:$=_PyList_Append(S,HEAP[sa]);L=79;break;case 5:L=HEAP[Q+8]!=__Py_NoneStruct?6:11;break;case 6:Z=_PyLong_FromVoidPtr(T);L=Z==0?63:7;break;case 7:ca=_PyDict_Contains(HEAP[Q+8],Z);L=ca!=0?8:10;break;case 8:L=ca!=-1?9:63;break;case 9:_PyErr_SetString(HEAP[_PyExc_ValueError],
va);L=63;break;case 10:L=_PyDict_SetItem(HEAP[Q+8],Z,T)!=0?63:11;break;case 11:L=_PyList_Append(S,HEAP[xa])!=0?63:12;break;case 12:L=HEAP[Q+20]!=__Py_NoneStruct?13:14;break;case 13:U+=1;L=14;break;case 14:da=L=_PyObject_GetIter(T);L=L==0?66:15;break;case 15:ja=_PyObject_IsTrue(HEAP[Q+36]);ba=0;L=51;break;case 16:L=(HEAP[HEAP[Y+4]+84]&134217728)!=0?18:17;break;case 17:L=(HEAP[HEAP[Y+4]+84]&268435456)!=0?18:19;break;case 18:HEAP[Y]+=1;aa=Y;L=31;break;case 19:L=HEAP[Y+4]==_PyFloat_Type?21:20;break;case 20:L=
_PyType_IsSubtype(HEAP[Y+4],_PyFloat_Type)!=0?21:22;break;case 21:aa=L=p(Q,Y);L=L==0?63:31;break;case 22:L=(HEAP[HEAP[Y+4]+84]&8388608)!=0?24:23;break;case 23:L=(HEAP[HEAP[Y+4]+84]&16777216)!=0?24:25;break;case 24:aa=L=_PyObject_Str(Y);L=L==0?63:31;break;case 25:L=Y==__Py_TrueStruct|Y==__Py_ZeroStruct|Y==__Py_NoneStruct?26:27;break;case 26:aa=o(Y);L=aa==0?63:31;break;case 27:L=ja!=0?28:30;break;case 28:HEAP[Y]-=1;L=HEAP[Y]==0?29:51;break;case 29:FUNCTION_TABLE[HEAP[HEAP[Y+4]+24]](Y);L=51;break;case 30:_PyErr_SetString(HEAP[_PyExc_TypeError],
sb);L=63;break;case 31:L=ba!=0?32:33;break;case 32:L=_PyList_Append(S,HEAP[Q+28])!=0?63:33;break;case 33:la=L=_PyObject_GetItem(T,Y);L=L==0?63:34;break;case 34:var qa=q(Q,aa);ea=qa;aa!=0?(z=34,L=35):(z=34,L=38);break;case 35:ha=aa;aa=0;HEAP[ha]-=1;L=HEAP[ha]==0?36:37;break;case 36:FUNCTION_TABLE[HEAP[HEAP[ha+4]+24]](ha);L=37;break;case 37:var ra=ea,z=37,L=38;break;case 38:L=(z==37?ra:qa)==0?63:39;break;case 39:L=_PyList_Append(S,ea)!=0;HEAP[ea]-=1;var ta=HEAP[ea]==0,L=L?40:42;break;case 40:L=ta?41:
63;break;case 41:FUNCTION_TABLE[HEAP[HEAP[ea+4]+24]](ea);L=63;break;case 42:L=ta?43:44;break;case 43:FUNCTION_TABLE[HEAP[HEAP[ea+4]+24]](ea);L=44;break;case 44:L=_PyList_Append(S,HEAP[Q+24])!=0?63:45;break;case 45:L=t(Q,S,la,U)!=0?63:46;break;case 46:ba+=1;L=la!=0?47:49;break;case 47:ia=la;la=0;HEAP[ia]-=1;L=HEAP[ia]==0?48:49;break;case 48:FUNCTION_TABLE[HEAP[HEAP[ia+4]+24]](ia);L=49;break;case 49:HEAP[Y]-=1;L=HEAP[Y]==0?50:51;break;case 50:FUNCTION_TABLE[HEAP[HEAP[Y+4]+24]](Y);L=51;break;case 51:Y=
L=_PyIter_Next(da);L=L!=0?16:52;break;case 52:L=_PyErr_Occurred()!=0?63:53;break;case 53:L=da!=0?54:56;break;case 54:ka=da;da=0;HEAP[ka]-=1;L=HEAP[ka]==0?55:56;break;case 55:FUNCTION_TABLE[HEAP[HEAP[ka+4]+24]](ka);L=56;break;case 56:L=Z!=0?57:61;break;case 57:L=_PyDict_DelItem(HEAP[Q+8],Z)!=0?63:58;break;case 58:L=Z!=0?59:61;break;case 59:na=Z;Z=0;HEAP[na]-=1;L=HEAP[na]==0?60:61;break;case 60:FUNCTION_TABLE[HEAP[HEAP[na+4]+24]](na);L=61;break;case 61:L=_PyList_Append(S,HEAP[V])!=0?63:62;break;case 62:$=
0;L=79;break;case 63:L=da!=0?64:66;break;case 64:HEAP[da]-=1;L=HEAP[da]==0?65:66;break;case 65:FUNCTION_TABLE[HEAP[HEAP[da+4]+24]](da);L=66;break;case 66:L=Y!=0?67:69;break;case 67:HEAP[Y]-=1;L=HEAP[Y]==0?68:69;break;case 68:FUNCTION_TABLE[HEAP[HEAP[Y+4]+24]](Y);L=69;break;case 69:L=la!=0?70:72;break;case 70:HEAP[la]-=1;L=HEAP[la]==0?71:72;break;case 71:FUNCTION_TABLE[HEAP[HEAP[la+4]+24]](la);L=72;break;case 72:L=aa!=0?73:75;break;case 73:HEAP[aa]-=1;L=HEAP[aa]==0?74:75;break;case 74:FUNCTION_TABLE[HEAP[HEAP[aa+
4]+24]](aa);L=75;break;case 75:L=Z!=0?76:78;break;case 76:HEAP[Z]-=1;L=HEAP[Z]==0?77:78;break;case 77:FUNCTION_TABLE[HEAP[HEAP[Z+4]+24]](Z);L=78;break;case 78:$=-1;L=79;break;case 79:m=k=$;break a;default:assert(0,"bad label: "+L)}m=void 0}HEAP[HEAP[__PyThreadState_Current]+12]-=1;k=m;e=68;break;case 30:w=0;e=HEAP[f+8]!=__Py_NoneStruct?31:43;break;case 31:w=_PyLong_FromVoidPtr(h);e=w==0?32:33;break;case 32:k=-1;e=68;break;case 33:x=_PyDict_Contains(HEAP[f+8],w);e=x!=0?34:39;break;case 34:e=x!=-1?
35:36;break;case 35:_PyErr_SetString(HEAP[_PyExc_ValueError],va);e=36;break;case 36:HEAP[w]-=1;e=HEAP[w]==0?37:38;break;case 37:FUNCTION_TABLE[HEAP[HEAP[w+4]+24]](w);e=38;break;case 38:k=-1;e=68;break;case 39:e=_PyDict_SetItem(HEAP[f+8],w,h)!=0?40:43;break;case 40:HEAP[w]-=1;e=HEAP[w]==0?41:42;break;case 41:FUNCTION_TABLE[HEAP[HEAP[w+4]+24]](w);e=42;break;case 42:k=-1;e=68;break;case 43:l=e=_PyObject_CallFunctionObjArgs(HEAP[f+12],allocate([h,0,0,0,0,0,0,0],["%struct.PyObject*",0,0,0,"i8*",0,0,0],
ALLOC_STACK));e=e==0?44:48;break;case 44:e=w!=0?45:47;break;case 45:HEAP[w]-=1;e=HEAP[w]==0?46:47;break;case 46:FUNCTION_TABLE[HEAP[HEAP[w+4]+24]](w);e=47;break;case 47:k=-1;e=68;break;case 48:e=HEAP[__PyThreadState_Current];HEAP[e+12]+=1;e=HEAP[e+12]>HEAP[__Py_CheckRecursionLimit]?49:51;break;case 49:e=__Py_CheckRecursiveCall(zb)!=0?50:51;break;case 50:k=-1;e=68;break;case 51:m=t(f,g,l,j);HEAP[HEAP[__PyThreadState_Current]+12]-=1;HEAP[l]-=1;e=HEAP[l]==0?52:53;break;case 52:FUNCTION_TABLE[HEAP[HEAP[l+
4]+24]](l);e=53;break;case 53:var ua=w!=0;e=m!=0?54:58;break;case 54:e=ua?55:57;break;case 55:HEAP[w]-=1;e=HEAP[w]==0?56:57;break;case 56:FUNCTION_TABLE[HEAP[HEAP[w+4]+24]](w);e=57;break;case 57:k=-1;e=68;break;case 58:e=ua?59:67;break;case 59:e=_PyDict_DelItem(HEAP[f+8],w);var wa=w!=0;e=e!=0?60:64;break;case 60:e=wa?61:63;break;case 61:HEAP[w]-=1;e=HEAP[w]==0?62:63;break;case 62:FUNCTION_TABLE[HEAP[HEAP[w+4]+24]](w);e=63;break;case 63:k=-1;e=68;break;case 64:e=wa?65:67;break;case 65:HEAP[w]-=1;e=
HEAP[w]==0?66:67;break;case 66:FUNCTION_TABLE[HEAP[HEAP[w+4]+24]](w);e=67;break;case 67:k=m;e=68;break;case 68:return a=k;default:assert(0,"bad label: "+e)}}function s(a){var b;for(b=-1;;)switch(b){case -1:var c,d,e,f,g,h,j,k,l,m;c=a;b=HEAP[c+4]!=ea?1:3;break;case 1:b=_PyType_IsSubtype(HEAP[c+4],ea)==0?2:3;break;case 2:throw ___assert_fail(wb,gb,2332,Mb),"Reached an unreachable!";case 3:d=c;b=HEAP[d+8]!=0?4:6;break;case 4:e=HEAP[d+8];HEAP[d+8]=0;HEAP[e]-=1;b=HEAP[e]==0?5:6;break;case 5:FUNCTION_TABLE[HEAP[HEAP[e+
4]+24]](e);b=6;break;case 6:b=HEAP[d+12]!=0?7:9;break;case 7:f=HEAP[d+12];HEAP[d+12]=0;HEAP[f]-=1;b=HEAP[f]==0?8:9;break;case 8:FUNCTION_TABLE[HEAP[HEAP[f+4]+24]](f);b=9;break;case 9:b=HEAP[d+16]!=0?10:12;break;case 10:g=HEAP[d+16];HEAP[d+16]=0;HEAP[g]-=1;b=HEAP[g]==0?11:12;break;case 11:FUNCTION_TABLE[HEAP[HEAP[g+4]+24]](g);b=12;break;case 12:b=HEAP[d+20]!=0?13:15;break;case 13:h=HEAP[d+20];HEAP[d+20]=0;HEAP[h]-=1;b=HEAP[h]==0?14:15;break;case 14:FUNCTION_TABLE[HEAP[HEAP[h+4]+24]](h);b=15;break;
case 15:b=HEAP[d+24]!=0?16:18;break;case 16:j=HEAP[d+24];HEAP[d+24]=0;HEAP[j]-=1;b=HEAP[j]==0?17:18;break;case 17:FUNCTION_TABLE[HEAP[HEAP[j+4]+24]](j);b=18;break;case 18:b=HEAP[d+28]!=0?19:21;break;case 19:k=HEAP[d+28];HEAP[d+28]=0;HEAP[k]-=1;b=HEAP[k]==0?20:21;break;case 20:FUNCTION_TABLE[HEAP[HEAP[k+4]+24]](k);b=21;break;case 21:b=HEAP[d+32]!=0?22:24;break;case 22:l=HEAP[d+32];HEAP[d+32]=0;HEAP[l]-=1;b=HEAP[l]==0?23:24;break;case 23:FUNCTION_TABLE[HEAP[HEAP[l+4]+24]](l);b=24;break;case 24:b=HEAP[d+
36]!=0?25:27;break;case 25:m=HEAP[d+36];HEAP[d+36]=0;HEAP[m]-=1;b=HEAP[m]==0?26:27;break;case 26:FUNCTION_TABLE[HEAP[HEAP[m+4]+24]](m);b=27;break;case 27:return 0;default:assert(0,"bad label: "+b)}}function u(){w=allocate([101,110,99,111,100,105,110,103,0],"i8",ALLOC_NORMAL);x=allocate([115,116,114,105,99,116,0],"i8",ALLOC_NORMAL);y=allocate([111,98,106,101,99,116,95,104,111,111,107,0],"i8",ALLOC_NORMAL);B=allocate([111,98,106,101,99,116,95,112,97,105,114,115,95,104,111,111,107,0],"i8",ALLOC_NORMAL);
A=allocate([112,97,114,115,101,95,102,108,111,97,116,0],"i8",ALLOC_NORMAL);C=allocate([112,97,114,115,101,95,105,110,116,0],"i8",ALLOC_NORMAL);G=allocate([112,97,114,115,101,95,99,111,110,115,116,97,110,116,0],"i8",ALLOC_NORMAL);F=allocate([0,0,0,0,6,0,0,0,8,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,12,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,16,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,20,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,24,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,28,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,
32,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],["i8*",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"i8",
"i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8"],ALLOC_NORMAL);E=allocate([109,97,114,107,101,114,115,0],"i8",ALLOC_NORMAL);N=allocate([100,101,102,97,117,108,116,0],"i8",ALLOC_NORMAL);Q=allocate([101,110,99,111,100,101,114,0],"i8",ALLOC_NORMAL);I=allocate([105,110,100,101,110,116,0],"i8",ALLOC_NORMAL);J=allocate([107,101,121,95,115,101,112,97,114,97,116,111,114,0],"i8",ALLOC_NORMAL);P=allocate([105,116,101,109,95,115,101,112,97,114,97,116,111,114,0],"i8",ALLOC_NORMAL);
D=allocate([115,111,114,116,95,107,101,121,115,0],"i8",ALLOC_NORMAL);T=allocate([115,107,105,112,107,101,121,115,0],"i8",ALLOC_NORMAL);L=allocate([0,0,0,0,6,0,0,0,8,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,12,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,16,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,20,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,24,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,28,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,32,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,36,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0],["i8*",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,
0,0,"i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8"],ALLOC_NORMAL);$=allocate([48,49,50,51,52,53,54,55,56,57,97,98,99,100,101,102,0],"i8",ALLOC_NORMAL);R=allocate(1,"%struct.PyObject*",ALLOC_NORMAL);K=allocate([106,115,111,110,46,100,101,99,111,100,101,114,0],"i8",ALLOC_NORMAL);H=allocate([101,114,114,109,115,103,0],"i8",ALLOC_NORMAL);S=allocate([40,122,79,79,38,41,0],"i8",ALLOC_NORMAL);U=allocate(1,"%struct.PyObject*",ALLOC_NORMAL);z=allocate([106,111,105,110,0],"i8",
ALLOC_NORMAL);aa=allocate([101,110,100,32,105,115,32,111,117,116,32,111,102,32,98,111,117,110,100,115,0],"i8",ALLOC_NORMAL);ja=allocate([73,110,118,97,108,105,100,32,99,111,110,116,114,111,108,32,99,104,97,114,97,99,116,101,114,32,97,116,0],"i8",ALLOC_NORMAL);la=allocate([85,110,116,101,114,109,105,110,97,116,101,100,32,115,116,114,105,110,103,32,115,116,97,114,116,105,110,103,32,97,116,0],"i8",ALLOC_NORMAL);da=allocate([73,110,118,97,108,105,100,32,92,101,115,99,97,112,101,0],"i8",ALLOC_NORMAL);
Ka=allocate([73,110,118,97,108,105,100,32,92,117,88,88,88,88,32,101,115,99,97,112,101,0],"i8",ALLOC_NORMAL);Ma=allocate([115,99,97,110,115,116,114,105,110,103,40,98,97,115,101,115,116,114,105,110,103,44,32,101,110,100,44,32,101,110,99,111,100,105,110,103,44,32,115,116,114,105,99,116,61,84,114,117,101,41,32,45,62,32,40,115,116,114,44,32,101,110,100,41,10,10,83,99,97,110,32,116,104,101,32,115,116,114,105,110,103,32,115,32,102,111,114,32,97,32,74,83,79,78,32,115,116,114,105,110,103,46,32,69,110,100,
32,105,115,32,116,104,101,32,105,110,100,101,120,32,111,102,32,116,104,101,10,99,104,97,114,97,99,116,101,114,32,105,110,32,115,32,97,102,116,101,114,32,116,104,101,32,113,117,111,116,101,32,116,104,97,116,32,115,116,97,114,116,101,100,32,116,104,101,32,74,83,79,78,32,115,116,114,105,110,103,46,10,85,110,101,115,99,97,112,101,115,32,97,108,108,32,118,97,108,105,100,32,74,83,79,78,32,115,116,114,105,110,103,32,101,115,99,97,112,101,32,115,101,113,117,101,110,99,101,115,32,97,110,100,32,114,97,105,
115,101,115,32,86,97,108,117,101,69,114,114,111,114,10,111,110,32,97,116,116,101,109,112,116,32,116,111,32,100,101,99,111,100,101,32,97,110,32,105,110,118,97,108,105,100,32,115,116,114,105,110,103,46,32,73,102,32,115,116,114,105,99,116,32,105,115,32,70,97,108,115,101,32,116,104,101,110,32,108,105,116,101,114,97,108,10,99,111,110,116,114,111,108,32,99,104,97,114,97,99,116,101,114,115,32,97,114,101,32,97,108,108,111,119,101,100,32,105,110,32,116,104,101,32,115,116,114,105,110,103,46,10,10,82,101,116,
117,114,110,115,32,97,32,116,117,112,108,101,32,111,102,32,116,104,101,32,100,101,99,111,100,101,100,32,115,116,114,105,110,103,32,97,110,100,32,116,104,101,32,105,110,100,101,120,32,111,102,32,116,104,101,32,99,104,97,114,97,99,116,101,114,32,105,110,32,115,10,97,102,116,101,114,32,116,104,101,32,101,110,100,32,113,117,111,116,101,46,0],"i8",ALLOC_NORMAL);wa=allocate([79,79,38,124,122,105,58,115,99,97,110,115,116,114,105,110,103,0],"i8",ALLOC_NORMAL);ib=allocate([117,116,102,45,56,0],"i8",ALLOC_NORMAL);
cb=allocate([102,105,114,115,116,32,97,114,103,117,109,101,110,116,32,109,117,115,116,32,98,101,32,97,32,115,116,114,105,110,103,44,32,110,111,116,32,37,46,56,48,115,0],"i8",ALLOC_NORMAL);db=allocate([101,110,99,111,100,101,95,98,97,115,101,115,116,114,105,110,103,95,97,115,99,105,105,40,98,97,115,101,115,116,114,105,110,103,41,32,45,62,32,115,116,114,10,10,82,101,116,117,114,110,32,97,110,32,65,83,67,73,73,45,111,110,108,121,32,74,83,79,78,32,114,101,112,114,101,115,101,110,116,97,116,105,111,110,
32,111,102,32,97,32,80,121,116,104,111,110,32,115,116,114,105,110,103,0],"i8",ALLOC_NORMAL);Da=allocate([40,40,40,40,80,121,79,98,106,101,99,116,42,41,40,115,101,108,102,41,41,45,62,111,98,95,116,121,112,101,41,32,61,61,32,40,38,80,121,83,99,97,110,110,101,114,84,121,112,101,41,32,124,124,32,80,121,84,121,112,101,95,73,115,83,117,98,116,121,112,101,40,40,40,40,80,121,79,98,106,101,99,116,42,41,40,115,101,108,102,41,41,45,62,111,98,95,116,121,112,101,41,44,32,40,38,80,121,83,99,97,110,110,101,114,
84,121,112,101,41,41,41,0],"i8",ALLOC_NORMAL);gb=allocate([46,46,47,99,112,121,116,104,111,110,47,77,111,100,117,108,101,115,47,95,106,115,111,110,46,99,0],"i8",ALLOC_NORMAL);Xa=allocate([115,99,97,110,110,101,114,95,116,114,97,118,101,114,115,101,0],"i8",ALLOC_NORMAL);Ca=allocate([115,99,97,110,110,101,114,95,99,108,101,97,114,0],"i8",ALLOC_NORMAL);Za=allocate([69,120,112,101,99,116,105,110,103,32,112,114,111,112,101,114,116,121,32,110,97,109,101,0],"i8",ALLOC_NORMAL);Va=allocate([69,120,112,101,
99,116,105,110,103,32,58,32,100,101,108,105,109,105,116,101,114,0],"i8",ALLOC_NORMAL);Ga=allocate([69,120,112,101,99,116,105,110,103,32,44,32,100,101,108,105,109,105,116,101,114,0],"i8",ALLOC_NORMAL);ha=allocate([69,120,112,101,99,116,105,110,103,32,111,98,106,101,99,116,0],"i8",ALLOC_NORMAL);Na=allocate([32,119,104,105,108,101,32,100,101,99,111,100,105,110,103,32,97,32,74,83,79,78,32,111,98,106,101,99,116,32,102,114,111,109,32,97,32,98,121,116,101,32,115,116,114,105,110,103,0],"i8",ALLOC_NORMAL);
jb=allocate([32,119,104,105,108,101,32,100,101,99,111,100,105,110,103,32,97,32,74,83,79,78,32,97,114,114,97,121,32,102,114,111,109,32,97,32,98,121,116,101,32,115,116,114,105,110,103,0],"i8",ALLOC_NORMAL);hb=allocate([78,97,78,0],"i8",ALLOC_NORMAL);Qa=allocate([73,110,102,105,110,105,116,121,0],"i8",ALLOC_NORMAL);Ha=allocate([45,73,110,102,105,110,105,116,121,0],"i8",ALLOC_NORMAL);Ra=allocate([32,119,104,105,108,101,32,100,101,99,111,100,105,110,103,32,97,32,74,83,79,78,32,111,98,106,101,99,116,32,
102,114,111,109,32,97,32,117,110,105,99,111,100,101,32,115,116,114,105,110,103,0],"i8",ALLOC_NORMAL);Ia=allocate([32,119,104,105,108,101,32,100,101,99,111,100,105,110,103,32,97,32,74,83,79,78,32,97,114,114,97,121,32,102,114,111,109,32,97,32,117,110,105,99,111,100,101,32,115,116,114,105,110,103,0],"i8",ALLOC_NORMAL);Fa=allocate([115,99,97,110,110,101,114,95,99,97,108,108,0],"i8",ALLOC_NORMAL);$a=allocate([79,79,38,58,115,99,97,110,95,111,110,99,101,0],"i8",ALLOC_NORMAL);Wa=allocate(12,"i8*",ALLOC_NORMAL);
Y=allocate([115,116,114,105,110,103,0],"i8",ALLOC_NORMAL);kb=allocate([105,100,120,0],"i8",ALLOC_NORMAL);ra=allocate([115,99,97,110,110,101,114,95,105,110,105,116,0],"i8",ALLOC_NORMAL);Ta=allocate([79,58,109,97,107,101,95,115,99,97,110,110,101,114,0],"i8",ALLOC_NORMAL);ia=allocate(8,"i8*",ALLOC_NORMAL);ba=allocate([99,111,110,116,101,120,116,0],"i8",ALLOC_NORMAL);Ya=allocate([74,83,79,78,32,115,99,97,110,110,101,114,32,111,98,106,101,99,116,0],"i8",ALLOC_NORMAL);ta=allocate([95,106,115,111,110,46,
83,99,97,110,110,101,114,0],"i8",ALLOC_NORMAL);O=allocate([1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,36,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,147947,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],["i32",0,0,0,"%struct._typeobject*",0,0,0,"i32",
0,0,0,"i8*",0,0,0,"i32",0,0,0,"i32",0,0,0,"void (%struct.PyObject*)*",0,0,0,"i32 (%struct.PyObject*, %struct.FILE*, i32)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, i8*)*",0,0,0,"i32 (%struct.PyObject*, i8*, %struct.PyObject*)*",0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*)*",0,0,0,"%struct.PyNumberMethods*",0,0,0,"%struct.PySequenceMethods*",0,0,0,"%struct.PyMappingMethods*",0,0,0,"i32 (%struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",
0,0,0,"%struct.PyObject* (%struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"%struct.PyBufferProcs*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i32 (%struct.PyObject*, i32 (%struct.PyObject*, i8*)*, i8*)*",0,0,0,"i32 (%struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*, i32)*",0,0,0,"i32",0,0,0,"%struct.PyObject* (%struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*)*",
0,0,0,"%struct.PyMethodDef*",0,0,0,"%struct.PyMemberDef*",0,0,0,"%struct.PyGetSetDef*",0,0,0,"%struct._typeobject*",0,0,0,"%struct.PyObject*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct._typeobject*, i32)*",0,0,0,"%struct.PyObject* (%struct._typeobject*, %struct.PyObject*, %struct.PyObject*)*",
0,0,0,"void (i8*)*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8"],ALLOC_NORMAL);wb=allocate([40,40,40,40,80,121,79,98,106,101,99,116,42,41,40,115,101,108,102,41,41,45,62,111,98,95,116,121,112,101,41,32,61,61,32,40,38,80,121,69,110,99,111,100,101,114,84,121,112,101,41,32,124,124,32,80,121,84,121,112,101,95,73,115,83,117,98,116,121,112,101,40,40,40,40,80,121,79,98,106,101,99,116,
42,41,40,115,101,108,102,41,41,45,62,111,98,95,116,121,112,101,41,44,32,40,38,80,121,69,110,99,111,100,101,114,84,121,112,101,41,41,41,0],"i8",ALLOC_NORMAL);bb=allocate([101,110,99,111,100,101,114,95,105,110,105,116,0],"i8",ALLOC_NORMAL);vb=allocate([79,79,79,79,79,79,79,79,79,58,109,97,107,101,95,101,110,99,111,100,101,114,0],"i8",ALLOC_NORMAL);ka=allocate(40,"i8*",ALLOC_NORMAL);za=allocate([97,108,108,111,119,95,110,97,110,0],"i8",ALLOC_NORMAL);Aa=allocate([101,110,99,111,100,101,114,95,99,97,108,
108,0],"i8",ALLOC_NORMAL);La=allocate([79,79,38,58,95,105,116,101,114,101,110,99,111,100,101,0],"i8",ALLOC_NORMAL);ya=allocate(12,"i8*",ALLOC_NORMAL);ub=allocate([111,98,106,0],"i8",ALLOC_NORMAL);Z=allocate([95,99,117,114,114,101,110,116,95,105,110,100,101,110,116,95,108,101,118,101,108,0],"i8",ALLOC_NORMAL);qa=allocate(1,"%struct.PyObject*",ALLOC_NORMAL);M=allocate([110,117,108,108,0],"i8",ALLOC_NORMAL);na=allocate(1,"%struct.PyObject*",ALLOC_NORMAL);nb=allocate([116,114,117,101,0],"i8",ALLOC_NORMAL);
ca=allocate(1,"%struct.PyObject*",ALLOC_NORMAL);ua=allocate([102,97,108,115,101,0],"i8",ALLOC_NORMAL);Ea=allocate([110,111,116,32,97,32,99,111,110,115,116,0],"i8",ALLOC_NORMAL);Eb=allocate([79,117,116,32,111,102,32,114,97,110,103,101,32,102,108,111,97,116,32,118,97,108,117,101,115,32,97,114,101,32,110,111,116,32,74,83,79,78,32,99,111,109,112,108,105,97,110,116,0],"i8",ALLOC_NORMAL);zb=allocate([32,119,104,105,108,101,32,101,110,99,111,100,105,110,103,32,97,32,74,83,79,78,32,111,98,106,101,99,116,
0],"i8",ALLOC_NORMAL);va=allocate([67,105,114,99,117,108,97,114,32,114,101,102,101,114,101,110,99,101,32,100,101,116,101,99,116,101,100,0],"i8",ALLOC_NORMAL);xa=allocate(1,"%struct.PyObject*",ALLOC_NORMAL);V=allocate(1,"%struct.PyObject*",ALLOC_NORMAL);sa=allocate(1,"%struct.PyObject*",ALLOC_NORMAL);pa=allocate([123,0],"i8",ALLOC_NORMAL);fb=allocate([125,0],"i8",ALLOC_NORMAL);ma=allocate([123,125,0],"i8",ALLOC_NORMAL);sb=allocate([107,101,121,115,32,109,117,115,116,32,98,101,32,97,32,115,116,114,
105,110,103,0],"i8",ALLOC_NORMAL);mb=allocate(1,"%struct.PyObject*",ALLOC_NORMAL);yb=allocate(1,"%struct.PyObject*",ALLOC_NORMAL);Nb=allocate(1,"%struct.PyObject*",ALLOC_NORMAL);Ib=allocate([91,0],"i8",ALLOC_NORMAL);Db=allocate([93,0],"i8",ALLOC_NORMAL);Ub=allocate([91,93,0],"i8",ALLOC_NORMAL);Tb=allocate([95,105,116,101,114,101,110,99,111,100,101,95,108,105,115,116,32,110,101,101,100,115,32,97,32,115,101,113,117,101,110,99,101,0],"i8",ALLOC_NORMAL);qb=allocate([101,110,99,111,100,101,114,95,116,
114,97,118,101,114,115,101,0],"i8",ALLOC_NORMAL);Mb=allocate([101,110,99,111,100,101,114,95,99,108,101,97,114,0],"i8",ALLOC_NORMAL);Hb=allocate([95,105,116,101,114,101,110,99,111,100,101,40,111,98,106,44,32,95,99,117,114,114,101,110,116,95,105,110,100,101,110,116,95,108,101,118,101,108,41,32,45,62,32,105,116,101,114,97,98,108,101,0],"i8",ALLOC_NORMAL);Wb=allocate([95,106,115,111,110,46,69,110,99,111,100,101,114,0],"i8",ALLOC_NORMAL);ea=allocate([1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,48,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,147947,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],["i32",0,0,0,"%struct._typeobject*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i32",0,0,0,"i32",0,0,0,"void (%struct.PyObject*)*",0,0,0,"i32 (%struct.PyObject*, %struct.FILE*, i32)*",
0,0,0,"%struct.PyObject* (%struct.PyObject*, i8*)*",0,0,0,"i32 (%struct.PyObject*, i8*, %struct.PyObject*)*",0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*)*",0,0,0,"%struct.PyNumberMethods*",0,0,0,"%struct.PySequenceMethods*",0,0,0,"%struct.PyMappingMethods*",0,0,0,"i32 (%struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",
0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"%struct.PyBufferProcs*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i32 (%struct.PyObject*, i32 (%struct.PyObject*, i8*)*, i8*)*",0,0,0,"i32 (%struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*, i32)*",0,0,0,"i32",0,0,0,"%struct.PyObject* (%struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*)*",0,0,0,"%struct.PyMethodDef*",0,0,0,"%struct.PyMemberDef*",0,0,0,"%struct.PyGetSetDef*",0,0,0,"%struct._typeobject*",
0,0,0,"%struct.PyObject*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct._typeobject*, i32)*",0,0,0,"%struct.PyObject* (%struct._typeobject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"void (i8*)*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8",
"i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8"],ALLOC_NORMAL);Qb=allocate([0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],["i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",
0,0,0,"i8*",0,0,0],ALLOC_NORMAL);Bb=allocate([101,110,99,111,100,101,95,98,97,115,101,115,116,114,105,110,103,95,97,115,99,105,105,0],"i8",ALLOC_NORMAL);ic=allocate([115,99,97,110,115,116,114,105,110,103,0],"i8",ALLOC_NORMAL);Vb=allocate([106,115,111,110,32,115,112,101,101,100,117,112,115,10,0],"i8",ALLOC_NORMAL);Oa=allocate([95,106,115,111,110,0],"i8",ALLOC_NORMAL);eb=allocate([109,97,107,101,95,115,99,97,110,110,101,114,0],"i8",ALLOC_NORMAL);Ob=allocate([109,97,107,101,95,101,110,99,111,100,101,
114,0],"i8",ALLOC_NORMAL);HEAP[F]=w;HEAP[F+16]=w;HEAP[F+20]=x;HEAP[F+36]=x;HEAP[F+40]=y;HEAP[F+56]=y;HEAP[F+60]=B;HEAP[F+76]=B;HEAP[F+80]=A;HEAP[F+96]=A;HEAP[F+100]=C;HEAP[F+116]=C;HEAP[F+120]=G;HEAP[F+136]=G;HEAP[L]=E;HEAP[L+16]=E;HEAP[L+20]=N;HEAP[L+36]=N;HEAP[L+40]=Q;HEAP[L+56]=Q;HEAP[L+60]=I;HEAP[L+76]=I;HEAP[L+80]=J;HEAP[L+96]=J;HEAP[L+100]=P;HEAP[L+116]=P;HEAP[L+120]=D;HEAP[L+136]=D;HEAP[L+140]=T;HEAP[L+156]=T;HEAP[Wa]=Y;HEAP[Wa+4]=kb;HEAP[ia]=ba;HEAP[O+12]=ta;HEAP[O+24]=g+10;HEAP[O+64]=g+12;
HEAP[O+88]=Ya;HEAP[O+92]=g+14;HEAP[O+96]=g+16;HEAP[O+120]=F;HEAP[O+148]=g+18;HEAP[O+156]=g+20;HEAP[ka]=E;HEAP[ka+4]=N;HEAP[ka+8]=Q;HEAP[ka+12]=I;HEAP[ka+16]=J;HEAP[ka+20]=P;HEAP[ka+24]=D;HEAP[ka+28]=T;HEAP[ka+32]=za;HEAP[ya]=ub;HEAP[ya+4]=Z;HEAP[ea+12]=Wb;HEAP[ea+24]=g+22;HEAP[ea+64]=g+24;HEAP[ea+88]=Hb;HEAP[ea+92]=g+26;HEAP[ea+96]=g+28;HEAP[ea+120]=L;HEAP[ea+148]=g+30;HEAP[ea+156]=g+32;HEAP[Qb]=Bb;HEAP[Qb+4]=g+6;HEAP[Qb+12]=db;HEAP[Qb+16]=ic;HEAP[Qb+20]=g+34;HEAP[Qb+28]=Ma}var v={arguments:[]};Runtime.QUANTUM_SIZE=
4;var w,x,y,B,A,C,G,F,E,N,Q,I,J,P,D,T,L,$,R,K,H,S,U,z,aa,ja,la,da,Ka,Ma,wa,ib,cb,db,Da,gb,Xa,Ca,Za,Va,Ga,ha,Na,jb,hb,Qa,Ha,Ra,Ia,Fa,$a,Wa,Y,kb,ra,Ta,ia,ba,Ya,ta,O,wb,bb,vb,ka,za,Aa,La,ya,ub,Z,qa,M,na,nb,ca,ua,Ea,Eb,zb,va,xa,V,sa,pa,fb,ma,sb,mb,yb,Nb,Ib,Db,Ub,Tb,qb,Mb,Hb,Wb,ea,Qb,Bb,ic,Vb,Oa,eb,Ob;v._init_json=function(){var a;for(a=-1;;)switch(a){case -1:HEAP[O+156]=g+8;a=_PyType_Ready(O)<0?3:1;break;case 1:HEAP[ea+156]=g+8;a=_PyType_Ready(ea)<0?3:2;break;case 2:a=_Py_InitModule4(Oa,Qb,Vb,0,1013);
HEAP[O]+=1;_PyModule_AddObject(a,eb,O);HEAP[ea]+=1;_PyModule_AddObject(a,Ob,ea);a=3;break;case 3:return;default:assert(0,"bad label: "+a)}};FUNCTION_TABLE=FUNCTION_TABLE.concat([0,0,function(a){return _PyInt_FromSsize_t(HEAP[a])},0,function(a,b){var c;for(c=-1;;)switch(c){case -1:var d,e;d=a;c=b;d=_PyInt_AsSsize_t(d);HEAP[c]=d;c=HEAP[c]==-1?1:3;break;case 1:c=_PyErr_Occurred()!=0?2:3;break;case 2:e=0;c=4;break;case 3:e=1;c=4;break;case 4:return e;default:assert(0,"bad label: "+c)}},0,j,0,_PyType_GenericNew,
0,function(a){k(a);FUNCTION_TABLE[HEAP[HEAP[a+4]+160]](a)},0,function(a,b,c){var e=STACKTOP;STACKTOP+=12;_memset(e,0,12);var f;for(f=-1;;)switch(f){case -1:var h,j,k,l,o=e,p,q=e+4,r=e+8,s;h=a;j=b;k=c;HEAP[r]=-1;f=HEAP[h+4]!=O?1:3;break;case 1:f=_PyType_IsSubtype(HEAP[h+4],O)==0?2:3;break;case 2:throw ___assert_fail(Da,gb,1664,Fa),"Reached an unreachable!";case 3:s=h;f=_PyArg_ParseTupleAndKeywords(j,k,$a,Wa,allocate([o,0,0,0,g+4,0,0,0,q,0,0,0],["%struct.PyObject**",0,0,0,"i32 (%struct.PyObject*, i32*)*",
0,0,0,"i32*",0,0,0],ALLOC_STACK))==0?4:5;break;case 4:l=0;f=11;break;case 5:f=(HEAP[HEAP[HEAP[o]+4]+84]&134217728)!=0?6:7;break;case 6:p=m(s,HEAP[o],HEAP[q],r);f=10;break;case 7:f=(HEAP[HEAP[HEAP[o]+4]+84]&268435456)!=0?8:9;break;case 8:p=n(s,HEAP[o],HEAP[q],r);f=10;break;case 9:_PyErr_Format(HEAP[_PyExc_TypeError],cb,allocate([HEAP[HEAP[HEAP[o]+4]+12],0,0,0],["i8*",0,0,0],ALLOC_STACK));l=0;f=11;break;case 10:l=d(p,HEAP[r]);f=11;break;case 11:return a=l,STACKTOP=e,a;default:assert(0,"bad label: "+
f)}},0,function(a,b,c){var d;for(d=-1;;)switch(d){case -1:var e,f,g,h,j,k,l,m,n,o,p,q;e=a;f=b;g=c;d=HEAP[e+4]!=O?1:3;break;case 1:d=_PyType_IsSubtype(HEAP[e+4],O)==0?2:3;break;case 2:throw ___assert_fail(Da,gb,852,Xa),"Reached an unreachable!";case 3:j=e;d=HEAP[j+8]!=0?4:6;break;case 4:k=FUNCTION_TABLE[f](HEAP[j+8],g);d=k!=0?5:6;break;case 5:h=k;d=25;break;case 6:d=HEAP[j+12]!=0?7:9;break;case 7:l=FUNCTION_TABLE[f](HEAP[j+12],g);d=l!=0?8:9;break;case 8:h=l;d=25;break;case 9:d=HEAP[j+16]!=0?10:12;
break;case 10:m=FUNCTION_TABLE[f](HEAP[j+16],g);d=m!=0?11:12;break;case 11:h=m;d=25;break;case 12:d=HEAP[j+20]!=0?13:15;break;case 13:n=FUNCTION_TABLE[f](HEAP[j+20],g);d=n!=0?14:15;break;case 14:h=n;d=25;break;case 15:d=HEAP[j+24]!=0?16:18;break;case 16:o=FUNCTION_TABLE[f](HEAP[j+24],g);d=o!=0?17:18;break;case 17:h=o;d=25;break;case 18:d=HEAP[j+28]!=0?19:21;break;case 19:p=FUNCTION_TABLE[f](HEAP[j+28],g);d=p!=0?20:21;break;case 20:h=p;d=25;break;case 21:d=HEAP[j+32]!=0?22:24;break;case 22:q=FUNCTION_TABLE[f](HEAP[j+
32],g);d=q!=0?23:24;break;case 23:h=q;d=25;break;case 24:h=0;d=25;break;case 25:return a=h;default:assert(0,"bad label: "+d)}},0,k,0,function(a,b,c){var d=STACKTOP;STACKTOP+=4;_memset(d,0,4);var e;for(e=-1;;)switch(e){case -1:var f,g,h,j,k=d,l,m,n,o,p,q,r,s,t;f=a;g=b;h=c;e=HEAP[f+4]!=O?1:3;break;case 1:e=_PyType_IsSubtype(HEAP[f+4],O)==0?2:3;break;case 2:throw ___assert_fail(Da,gb,1709,ra),"Reached an unreachable!";case 3:l=f;e=_PyArg_ParseTupleAndKeywords(g,h,Ta,ia,allocate([k,0,0,0],["%struct.PyObject**",
0,0,0],ALLOC_STACK))==0?4:5;break;case 4:j=-1;e=45;break;case 5:e=_PyObject_GetAttrString(HEAP[k],w);HEAP[l+8]=e;e=HEAP[l+8]==0?23:6;break;case 6:e=HEAP[l+8]==__Py_NoneStruct?7:10;break;case 7:HEAP[__Py_NoneStruct]-=1;e=HEAP[__Py_NoneStruct]==0?8:9;break;case 8:FUNCTION_TABLE[HEAP[HEAP[__Py_NoneStruct+4]+24]](__Py_NoneStruct);e=9;break;case 9:e=_PyString_InternFromString(ib);HEAP[l+8]=e;e=14;break;case 10:e=(HEAP[HEAP[HEAP[l+8]+4]+84]&268435456)!=0?11:14;break;case 11:m=_PyUnicodeUCS2_AsEncodedString(HEAP[l+
8],0,0);e=HEAP[l+8];HEAP[e]-=1;e=HEAP[e]==0?12:13;break;case 12:FUNCTION_TABLE[HEAP[HEAP[HEAP[l+8]+4]+24]](HEAP[l+8]);e=13;break;case 13:HEAP[l+8]=m;e=14;break;case 14:e=HEAP[l+8]==0?23:15;break;case 15:e=(HEAP[HEAP[HEAP[l+8]+4]+84]&134217728)==0?23:16;break;case 16:e=_PyObject_GetAttrString(HEAP[k],x);HEAP[l+12]=e;e=HEAP[l+12]==0?23:17;break;case 17:e=_PyObject_GetAttrString(HEAP[k],y);HEAP[l+16]=e;e=HEAP[l+16]==0?23:18;break;case 18:e=_PyObject_GetAttrString(HEAP[k],B);HEAP[l+20]=e;e=HEAP[l+20]==
0?23:19;break;case 19:e=_PyObject_GetAttrString(HEAP[k],A);HEAP[l+24]=e;e=HEAP[l+24]==0?23:20;break;case 20:e=_PyObject_GetAttrString(HEAP[k],C);HEAP[l+28]=e;e=HEAP[l+28]==0?23:21;break;case 21:e=_PyObject_GetAttrString(HEAP[k],G);HEAP[l+32]=e;e=HEAP[l+32]==0?23:22;break;case 22:j=0;e=45;break;case 23:e=HEAP[l+8]!=0?24:26;break;case 24:n=HEAP[l+8];HEAP[l+8]=0;HEAP[n]-=1;e=HEAP[n]==0?25:26;break;case 25:FUNCTION_TABLE[HEAP[HEAP[n+4]+24]](n);e=26;break;case 26:e=HEAP[l+12]!=0?27:29;break;case 27:o=
HEAP[l+12];HEAP[l+12]=0;HEAP[o]-=1;e=HEAP[o]==0?28:29;break;case 28:FUNCTION_TABLE[HEAP[HEAP[o+4]+24]](o);e=29;break;case 29:e=HEAP[l+16]!=0?30:32;break;case 30:p=HEAP[l+16];HEAP[l+16]=0;HEAP[p]-=1;e=HEAP[p]==0?31:32;break;case 31:FUNCTION_TABLE[HEAP[HEAP[p+4]+24]](p);e=32;break;case 32:e=HEAP[l+20]!=0?33:35;break;case 33:q=HEAP[l+20];HEAP[l+20]=0;HEAP[q]-=1;e=HEAP[q]==0?34:35;break;case 34:FUNCTION_TABLE[HEAP[HEAP[q+4]+24]](q);e=35;break;case 35:e=HEAP[l+24]!=0?36:38;break;case 36:r=HEAP[l+24];HEAP[l+
24]=0;HEAP[r]-=1;e=HEAP[r]==0?37:38;break;case 37:FUNCTION_TABLE[HEAP[HEAP[r+4]+24]](r);e=38;break;case 38:e=HEAP[l+28]!=0?39:41;break;case 39:s=HEAP[l+28];HEAP[l+28]=0;HEAP[s]-=1;e=HEAP[s]==0?40:41;break;case 40:FUNCTION_TABLE[HEAP[HEAP[s+4]+24]](s);e=41;break;case 41:e=HEAP[l+32]!=0?42:44;break;case 42:t=HEAP[l+32];HEAP[l+32]=0;HEAP[t]-=1;e=HEAP[t]==0?43:44;break;case 43:FUNCTION_TABLE[HEAP[HEAP[t+4]+24]](t);e=44;break;case 44:j=-1;e=45;break;case 45:return a=j,STACKTOP=d,a;default:assert(0,"bad label: "+
e)}},0,function(a){var b;for(b=-1;;)switch(b){case -1:var c;b=a;c=FUNCTION_TABLE[HEAP[b+152]](b,0);b=c!=0?1:2;break;case 1:HEAP[c+8]=0;HEAP[c+12]=0;HEAP[c+16]=0;HEAP[c+20]=0;HEAP[c+24]=0;HEAP[c+28]=0;HEAP[c+32]=0;b=2;break;case 2:return a=c;default:assert(0,"bad label: "+b)}},0,function(a){s(a);FUNCTION_TABLE[HEAP[HEAP[a+4]+160]](a)},0,function(a,b,c){var d=STACKTOP;STACKTOP+=8;_memset(d,0,8);var e;for(e=-1;;)switch(e){case -1:var f,h,j,k,l=d,m,n=d+4,o;f=a;h=b;j=c;e=HEAP[f+4]!=ea?1:3;break;case 1:e=
_PyType_IsSubtype(HEAP[f+4],ea)==0?2:3;break;case 2:throw ___assert_fail(wb,gb,1877,Aa),"Reached an unreachable!";case 3:o=f;e=_PyArg_ParseTupleAndKeywords(h,j,La,ya,allocate([l,0,0,0,g+4,0,0,0,n,0,0,0],["%struct.PyObject**",0,0,0,"i32 (%struct.PyObject*, i32*)*",0,0,0,"i32*",0,0,0],ALLOC_STACK))==0?4:5;break;case 4:k=0;e=12;break;case 5:m=_PyList_New(0);e=m==0?6:7;break;case 6:k=0;e=12;break;case 7:e=t(o,m,HEAP[l],HEAP[n]);var p=m;e=e!=0?8:11;break;case 8:HEAP[m]=HEAP[p]-1;e=HEAP[m]==0?9:10;break;
case 9:FUNCTION_TABLE[HEAP[HEAP[m+4]+24]](m);e=10;break;case 10:k=0;e=12;break;case 11:k=p;e=12;break;case 12:return a=k,STACKTOP=d,a;default:assert(0,"bad label: "+e)}},0,function(a,b,c){var d;for(d=-1;;)switch(d){case -1:var e,f,g,h,j,k,l,m,n,o,p,q,r;e=a;f=b;g=c;d=HEAP[e+4]!=ea?1:3;break;case 1:d=_PyType_IsSubtype(HEAP[e+4],ea)==0?2:3;break;case 2:throw ___assert_fail(wb,gb,2314,qb),"Reached an unreachable!";case 3:j=e;d=HEAP[j+8]!=0?4:6;break;case 4:k=FUNCTION_TABLE[f](HEAP[j+8],g);d=k!=0?5:6;
break;case 5:h=k;d=28;break;case 6:d=HEAP[j+12]!=0?7:9;break;case 7:l=FUNCTION_TABLE[f](HEAP[j+12],g);d=l!=0?8:9;break;case 8:h=l;d=28;break;case 9:d=HEAP[j+16]!=0?10:12;break;case 10:m=FUNCTION_TABLE[f](HEAP[j+16],g);d=m!=0?11:12;break;case 11:h=m;d=28;break;case 12:d=HEAP[j+20]!=0?13:15;break;case 13:n=FUNCTION_TABLE[f](HEAP[j+20],g);d=n!=0?14:15;break;case 14:h=n;d=28;break;case 15:d=HEAP[j+24]!=0?16:18;break;case 16:o=FUNCTION_TABLE[f](HEAP[j+24],g);d=o!=0?17:18;break;case 17:h=o;d=28;break;case 18:d=
HEAP[j+28]!=0?19:21;break;case 19:p=FUNCTION_TABLE[f](HEAP[j+28],g);d=p!=0?20:21;break;case 20:h=p;d=28;break;case 21:d=HEAP[j+32]!=0?22:24;break;case 22:q=FUNCTION_TABLE[f](HEAP[j+32],g);d=q!=0?23:24;break;case 23:h=q;d=28;break;case 24:d=HEAP[j+36]!=0?25:27;break;case 25:r=FUNCTION_TABLE[f](HEAP[j+36],g);d=r!=0?26:27;break;case 26:h=r;d=28;break;case 27:h=0;d=28;break;case 28:return a=h;default:assert(0,"bad label: "+d)}},0,s,0,function(a,b,c){var d=STACKTOP;STACKTOP+=36;_memset(d,0,36);var e;for(e=
-1;;)switch(e){case -1:var f,h,j,k,l,m,n=d,o=d+4,p=d+8,q=d+12,r=d+16,s=d+20,t=d+24,u=d+28,v=d+32;f=a;h=b;j=c;e=HEAP[f+4]!=ea?1:3;break;case 1:e=_PyType_IsSubtype(HEAP[f+4],ea)==0?2:3;break;case 2:throw ___assert_fail(wb,gb,1838,bb),"Reached an unreachable!";case 3:m=f;e=_PyArg_ParseTupleAndKeywords(h,j,vb,ka,allocate([n,0,0,0,o,0,0,0,p,0,0,0,q,0,0,0,r,0,0,0,s,0,0,0,t,0,0,0,u,0,0,0,v,0,0,0],["%struct.PyObject**",0,0,0,"%struct.PyObject**",0,0,0,"%struct.PyObject**",0,0,0,"%struct.PyObject**",0,0,0,
"%struct.PyObject**",0,0,0,"%struct.PyObject**",0,0,0,"%struct.PyObject**",0,0,0,"%struct.PyObject**",0,0,0,"%struct.PyObject**",0,0,0],ALLOC_STACK))==0?4:5;break;case 4:l=-1;e=10;break;case 5:HEAP[m+8]=HEAP[n];HEAP[m+12]=HEAP[o];HEAP[m+16]=HEAP[p];HEAP[m+20]=HEAP[q];HEAP[m+24]=HEAP[r];HEAP[m+28]=HEAP[s];HEAP[m+32]=HEAP[t];HEAP[m+36]=HEAP[u];e=HEAP[HEAP[m+16]+4]!=_PyCFunction_Type?8:6;break;case 6:e=_PyCFunction_GetFunction(HEAP[m+16])!=g+6?8:7;break;case 7:k=1;e=9;break;case 8:k=0;e=9;break;case 9:HEAP[m+
40]=k;e=_PyObject_IsTrue(HEAP[v]);HEAP[m+44]=e;HEAP[HEAP[m+8]]+=1;HEAP[HEAP[m+12]]+=1;HEAP[HEAP[m+16]]+=1;HEAP[HEAP[m+20]]+=1;HEAP[HEAP[m+24]]+=1;HEAP[HEAP[m+28]]+=1;HEAP[HEAP[m+32]]+=1;HEAP[HEAP[m+36]]+=1;l=0;e=10;break;case 10:return a=l,STACKTOP=d,a;default:assert(0,"bad label: "+e)}},0,function(a){var b;for(b=-1;;)switch(b){case -1:var c;b=a;c=FUNCTION_TABLE[HEAP[b+152]](b,0);b=c!=0?1:2;break;case 1:HEAP[c+8]=0;HEAP[c+12]=0;HEAP[c+16]=0;HEAP[c+20]=0;HEAP[c+24]=0;HEAP[c+28]=0;HEAP[c+32]=0;HEAP[c+
36]=0;b=2;break;case 2:return a=c;default:assert(0,"bad label: "+b)}},0,function(a,b){var c=STACKTOP;STACKTOP+=20;_memset(c,0,20);var e;for(e=-1;;)switch(e){case -1:var j,k=c,l,m=c+4,n=c+8,o=c+12,p=c+16;e=b;HEAP[n]=-1;HEAP[o]=0;HEAP[p]=1;e=_PyArg_ParseTuple(e,wa,allocate([k,0,0,0,g+4,0,0,0,m,0,0,0,o,0,0,0,p,0,0,0],["%struct.PyObject**",0,0,0,"i32 (%struct.PyObject*, i32*)*",0,0,0,"i32*",0,0,0,"i8**",0,0,0,"i32*",0,0,0],ALLOC_STACK))==0?1:2;break;case 1:j=0;e=10;break;case 2:e=HEAP[o]==0?3:4;break;
case 3:HEAP[o]=ib;e=4;break;case 4:e=(HEAP[HEAP[HEAP[k]+4]+84]&134217728)!=0?5:6;break;case 5:l=f(HEAP[k],HEAP[m],HEAP[o],HEAP[p],n);e=9;break;case 6:e=(HEAP[HEAP[HEAP[k]+4]+84]&268435456)!=0?7:8;break;case 7:l=h(HEAP[k],HEAP[m],HEAP[p],n);e=9;break;case 8:_PyErr_Format(HEAP[_PyExc_TypeError],cb,allocate([HEAP[HEAP[HEAP[k]+4]+12],0,0,0],["i8*",0,0,0],ALLOC_STACK));j=0;e=10;break;case 9:j=d(l,HEAP[n]);e=10;break;case 10:return STACKTOP=c,j;default:assert(0,"bad label: "+e)}},0]);v.run=u;u();return v});