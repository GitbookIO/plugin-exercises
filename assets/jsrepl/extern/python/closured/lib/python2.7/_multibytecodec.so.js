(function(g){function e(a,b){var c;for(c=-1;;)switch(c){case -1:var d,e,f,g,h;d=a;e=b;c=d==0?1:2;break;case 1:f=0;c=11;break;case 2:g=_PyTuple_New(2);c=g==0?3:6;break;case 3:HEAP[d]-=1;c=HEAP[d]==0?4:5;break;case 4:FUNCTION_TABLE[HEAP[HEAP[d+4]+24]](d);c=5;break;case 5:f=0;c=11;break;case 6:HEAP[g+12]=d;h=_PyInt_FromSsize_t(e);var j=g;c=h==0?7:10;break;case 7:HEAP[g]=HEAP[j]-1;c=HEAP[g]==0?8:9;break;case 8:FUNCTION_TABLE[HEAP[HEAP[g+
4]+24]](g);c=9;break;case 9:f=0;c=11;break;case 10:HEAP[j+12+4]=h;f=g;c=11;break;case 11:return c=f;default:assert(0,"bad label: "+c)}}function b(a){var b;for(b=-1;;)switch(b){case -1:var c,d;c=a;b=c==0?2:1;break;case 1:b=_strcmp(c,G)==0?2:3;break;case 2:d=1;b=8;break;case 3:b=_strcmp(c,F)==0?4:5;break;case 4:d=2;b=8;break;case 5:b=_strcmp(c,E)==0?6:7;break;case 6:d=3;b=8;break;case 7:d=_PyString_FromString(c);b=8;break;case 8:return a=d;default:assert(0,"bad label: "+b)}}function a(a,b){var c;for(c=
-1;;)switch(c){case -1:var d,e,f,g,h,j;d=a;e=b;c=(HEAP[HEAP[d+4]+84]&134217728)==0?1:2;break;case 1:throw ___assert_fail(N,Q,96,I),"Reached an unreachable!";case 2:h=_PyCodec_LookupError(d+20);c=h==0?3:4;break;case 3:f=0;c=13;break;case 4:g=_PyTuple_New(1);c=g==0?5:8;break;case 5:HEAP[h]-=1;c=HEAP[h]==0?6:7;break;case 6:FUNCTION_TABLE[HEAP[HEAP[h+4]+24]](h);c=7;break;case 7:f=0;c=13;break;case 8:HEAP[g+12]=e;HEAP[e]+=1;j=_PyObject_CallObject(h,g);HEAP[g]-=1;c=HEAP[g]==0?9:10;break;case 9:FUNCTION_TABLE[HEAP[HEAP[g+
4]+24]](g);c=10;break;case 10:HEAP[h]-=1;c=HEAP[h]==0?11:12;break;case 11:FUNCTION_TABLE[HEAP[HEAP[h+4]+24]](h);c=12;break;case 12:f=j;c=13;break;case 13:return c=f;default:assert(0,"bad label: "+c)}}function c(a,b){var c;for(c=-1;;)switch(c){case -1:var d,e,f,g,h,j,k;d=a;e=b;h=HEAP[d+12]-(HEAP[d+24]+20);j=HEAP[HEAP[d+24]+8];c=j>>1>e?1:2;break;case 1:g=j>>1|1;c=3;break;case 2:g=e;c=3;break;case 3:k=g;c=2147483647-k<j?4:5;break;case 4:f=-1;c=8;break;case 5:c=__PyString_Resize(d+24,k+j)==-1?6:7;break;
case 6:f=-1;c=8;break;case 7:HEAP[d+12]=HEAP[d+24]+20+h;HEAP[d+16]=HEAP[d+24]+20+HEAP[HEAP[d+24]+8];f=0;c=8;break;case 8:return c=f;default:assert(0,"bad label: "+c)}}function d(a,b){var c;for(c=-1;;)switch(c){case -1:var d,e,f,g,h,j;d=a;e=b;h=(HEAP[d+12]-HEAP[HEAP[d+24]+12])/2|0;j=HEAP[HEAP[d+24]+8];c=j>>1>e?1:2;break;case 1:g=j>>1|1;c=3;break;case 2:g=e;c=3;break;case 3:c=_PyUnicodeUCS2_Resize(d+24,j+g)==-1?4:5;break;case 4:f=-1;c=6;break;case 5:HEAP[d+12]=HEAP[HEAP[d+24]+12]+2*h;HEAP[d+16]=HEAP[HEAP[d+
24]+12]+2*HEAP[HEAP[d+24]+8];f=0;c=6;break;case 6:return c=f;default:assert(0,"bad label: "+c)}}function f(b,d,e,f,g){var h=STACKTOP;STACKTOP+=10;_memset(h,0,10);var k,l=null;for(k=-1;;)switch(k){case -1:var m,n,o,p,q,r,s,t,u,v,w,x,D,y,z,A=h,B=h+2,C,E=h+6;m=b;n=d;o=e;p=f;q=g;t=s=0;k=q>0?1:2;break;case 1:z=T;x=q;k=8;break;case 2:k=q;k=k==-3?6:k==-2?5:k==-1?3:7;break;case 3:k=c(o,-1)==-1?48:4;break;case 4:r=0;k=55;break;case 5:z=L;x=(HEAP[o+8]-HEAP[o])/2|0;k=8;break;case 6:_PyErr_SetString(HEAP[_PyExc_RuntimeError],
$);r=-1;k=55;break;case 7:_PyErr_SetString(HEAP[_PyExc_RuntimeError],R);r=-1;k=55;break;case 8:k=p==3?9:16;break;case 9:HEAP[A]=63;HEAP[B]=A;k=10;break;case 10:C=HEAP[o+16]-HEAP[o+12];C=k=FUNCTION_TABLE[HEAP[m+12]](n,HEAP[m+4],B,1,o+12,C,0);k=k==-1?11:12;break;case 11:k=c(o,-1)==-1?48:10;break;case 12:k=C!=0?13:16;break;case 13:k=HEAP[o+12]+1>HEAP[o+16]?14:15;break;case 14:k=c(o,1)==-1?48:15;break;case 15:k=HEAP[o+12];HEAP[k]=63;HEAP[o+12]=k+1;k=16;break;case 16:var F=HEAP[o];k=p==2|p==3?17:18;break;
case 17:HEAP[o]=F+2*x;r=0;k=55;break;case 18:D=(F-HEAP[o+4])/2|0;y=x+D;var J=o;k=HEAP[o+20]==0?19:20;break;case 19:k=_PyUnicodeEncodeError_Create(HEAP[m],HEAP[o+4],(HEAP[J+8]-HEAP[o+4])/2|0,D,y,z);HEAP[o+20]=k;k=HEAP[o+20]==0?48:23;break;case 20:k=_PyUnicodeEncodeError_SetStart(HEAP[J+20],D)!=0?48:21;break;case 21:k=_PyUnicodeEncodeError_SetEnd(HEAP[o+20],y)!=0?48:22;break;case 22:k=_PyUnicodeEncodeError_SetReason(HEAP[o+20],z)!=0?48:23;break;case 23:var G=HEAP[o+20];k=p==1?24:25;break;case 24:_PyCodec_StrictErrors(G);
k=48;break;case 25:s=a(p,G);k=s==0?51:26;break;case 26:k=(HEAP[HEAP[s+4]+84]&67108864)==0?31:27;break;case 27:k=HEAP[s+8]!=2?31:28;break;case 28:u=HEAP[s+12];k=(HEAP[HEAP[u+4]+84]&268435456)==0?31:29;break;case 29:k=(HEAP[HEAP[HEAP[s+12+4]+4]+84]&8388608)!=0?32:30;break;case 30:k=(HEAP[HEAP[HEAP[s+12+4]+4]+84]&16777216)==0?31:32;break;case 31:_PyErr_SetString(HEAP[_PyExc_TypeError],K);k=48;break;case 32:HEAP[E]=HEAP[u+12];t=k=j(m,n,E,HEAP[u+8],1,1);k=k==0?48:33;break;case 33:v=HEAP[t+8];k=v<=0?35:
34;break;case 34:k=HEAP[o+12]+v>HEAP[o+16]?35:36;break;case 35:k=c(o,v)==-1?48:36;break;case 36:_llvm_memcpy_p0i8_p0i8_i32(HEAP[o+12],t+20,v,1,0);HEAP[o+12]+=v;w=k=_PyInt_AsSsize_t(HEAP[s+12+4]);k=k<0?37:41;break;case 37:k=_PyErr_Occurred()==0?38:39;break;case 38:var P=w+((HEAP[o+8]-HEAP[o+4])/2|0);w=P;l=38;k=40;break;case 39:var I=w,l=39;k=40;break;case 40:k=(l==39?I:P)<0?42:41;break;case 41:k=HEAP[o+4]+2*w>HEAP[o+8]?42:43;break;case 42:_PyErr_Clear();_PyErr_Format(HEAP[_PyExc_IndexError],H,allocate([w,
0,0,0],["i32",0,0,0],ALLOC_STACK));k=48;break;case 43:HEAP[o]=HEAP[o+4]+2*w;HEAP[s]-=1;k=HEAP[s]==0?44:45;break;case 44:FUNCTION_TABLE[HEAP[HEAP[s+4]+24]](s);k=45;break;case 45:HEAP[t]-=1;k=HEAP[t]==0?46:47;break;case 46:FUNCTION_TABLE[HEAP[HEAP[t+4]+24]](t);k=47;break;case 47:r=0;k=55;break;case 48:k=s!=0?49:51;break;case 49:HEAP[s]-=1;k=HEAP[s]==0?50:51;break;case 50:FUNCTION_TABLE[HEAP[HEAP[s+4]+24]](s);k=51;break;case 51:k=t!=0?52:54;break;case 52:HEAP[t]-=1;k=HEAP[t]==0?53:54;break;case 53:FUNCTION_TABLE[HEAP[HEAP[t+
4]+24]](t);k=54;break;case 54:r=-1;k=55;break;case 55:return b=r,STACKTOP=h,b;default:assert(0,"bad label: "+k)}}function h(b,c,e,f,g){var h,c=null;for(h=-1;;)switch(h){case -1:var j,k,l,m,n,o,p,q,r,s,t,u,v;j=b;k=e;l=f;m=g;p=o=0;h=m>0?1:2;break;case 1:s=T;t=m;h=8;break;case 2:h=m;h=h==-3?6:h==-2?5:h==-1?3:7;break;case 3:h=d(k,-1)==-1?43:4;break;case 4:n=0;h=47;break;case 5:s=L;t=HEAP[k+8]-HEAP[k];h=8;break;case 6:_PyErr_SetString(HEAP[_PyExc_RuntimeError],$);n=-1;h=47;break;case 7:_PyErr_SetString(HEAP[_PyExc_RuntimeError],
R);n=-1;h=47;break;case 8:h=l==3?9:12;break;case 9:h=HEAP[k+12]+2>HEAP[k+16]?10:11;break;case 10:h=d(k,1)==-1?43:11;break;case 11:h=HEAP[k+12];HEAP[h]=-3;HEAP[k+12]=h+2;h=12;break;case 12:var w=HEAP[k];h=l==2|l==3?13:14;break;case 13:HEAP[k]=w+t;n=0;h=47;break;case 14:u=w-HEAP[k+4];v=t+u;var x=k;h=HEAP[k+20]==0?15:16;break;case 15:h=_PyUnicodeDecodeError_Create(HEAP[j],HEAP[k+4],HEAP[x+8]-HEAP[k+4],u,v,s);HEAP[k+20]=h;h=HEAP[k+20]==0?43:19;break;case 16:h=_PyUnicodeDecodeError_SetStart(HEAP[x+20],
u)!=0?43:17;break;case 17:h=_PyUnicodeDecodeError_SetEnd(HEAP[k+20],v)!=0?43:18;break;case 18:h=_PyUnicodeDecodeError_SetReason(HEAP[k+20],s)!=0?43:19;break;case 19:var D=HEAP[k+20];h=l==1?20:21;break;case 20:_PyCodec_StrictErrors(D);h=43;break;case 21:o=a(l,D);h=o==0?46:22;break;case 22:h=(HEAP[HEAP[o+4]+84]&67108864)==0?27:23;break;case 23:h=HEAP[o+8]!=2?27:24;break;case 24:p=HEAP[o+12];h=(HEAP[HEAP[p+4]+84]&268435456)==0?27:25;break;case 25:h=(HEAP[HEAP[HEAP[o+12+4]+4]+84]&8388608)!=0?28:26;break;
case 26:h=(HEAP[HEAP[HEAP[o+12+4]+4]+84]&16777216)==0?27:28;break;case 27:_PyErr_SetString(HEAP[_PyExc_TypeError],S);h=43;break;case 28:q=HEAP[p+8];h=HEAP[p+8]>0?29:33;break;case 29:h=q<=0?31:30;break;case 30:h=HEAP[k+12]+2*q>HEAP[k+16]?31:32;break;case 31:h=d(k,q)==-1?43:32;break;case 32:_llvm_memcpy_p0i8_p0i8_i32(HEAP[k+12],HEAP[p+12],q*2,1,0);HEAP[k+12]+=2*q;h=33;break;case 33:r=h=_PyInt_AsSsize_t(HEAP[o+12+4]);h=h<0?34:38;break;case 34:h=_PyErr_Occurred()==0?35:36;break;case 35:var y=HEAP[k+8]-
HEAP[k+4]+r;r=y;c=35;h=37;break;case 36:var z=r,c=36;h=37;break;case 37:h=(c==36?z:y)<0?39:38;break;case 38:h=HEAP[k+4]+r>HEAP[k+8]?39:40;break;case 39:_PyErr_Clear();_PyErr_Format(HEAP[_PyExc_IndexError],H,allocate([r,0,0,0],["i32",0,0,0],ALLOC_STACK));h=43;break;case 40:HEAP[k]=HEAP[k+4]+r;HEAP[o]-=1;h=HEAP[o]==0?41:42;break;case 41:FUNCTION_TABLE[HEAP[HEAP[o+4]+24]](o);h=42;break;case 42:n=0;h=47;break;case 43:h=o!=0?44:46;break;case 44:HEAP[o]-=1;h=HEAP[o]==0?45:46;break;case 45:FUNCTION_TABLE[HEAP[HEAP[o+
4]+24]](o);h=46;break;case 46:n=-1;h=47;break;case 47:return b=n;default:assert(0,"bad label: "+h)}}function j(a,b,c,d,e,g){var h=STACKTOP;STACKTOP+=28;_memset(h,0,28);var j;for(j=-1;;)switch(j){case -1:var k,l,m,n,o,p,q,r=h,s,t;k=a;l=b;m=c;n=d;o=e;p=g;t=0;j=n==0?1:3;break;case 1:j=(p&2)==0?2:3;break;case 2:q=_PyString_FromString(U);j=31;break;case 3:HEAP[r+20]=0;HEAP[r+4]=HEAP[m];HEAP[r]=HEAP[r+4];HEAP[r+8]=HEAP[r+4]+2*n;j=n>1073741815?4:5;break;case 4:_PyErr_NoMemory();j=24;break;case 5:j=_PyString_FromStringAndSize(0,
n*2+16);HEAP[r+24]=j;j=HEAP[r+24]==0?24:6;break;case 6:HEAP[r+12]=HEAP[r+24]+20;HEAP[r+16]=HEAP[r+12]+HEAP[HEAP[r+24]+8];var u=r,v=r+8,w=r+8,x=r,D=r+16,y=r+12,H=r,z=r+12;j=12;break;case 7:t=(HEAP[w]-HEAP[x])/2|0;j=HEAP[D]-HEAP[y];t=FUNCTION_TABLE[HEAP[k+12]](l,HEAP[k+4],H,t,z,j,p);j=t==0?13:8;break;case 8:j=t!=-2?10:9;break;case 9:j=(p&1)==0?13:10;break;case 10:j=f(k,l,r,o,t)!=0?24:11;break;case 11:j=t==-2?13:12;break;case 12:j=HEAP[u]<HEAP[v]?7:13;break;case 13:j=HEAP[k+20]!=0?14:18;break;case 14:j=
(p&2)!=0?15:18;break;case 15:var K=r+16,A=r+12,B=r+12;j=16;break;case 16:t=HEAP[K]-HEAP[A];t=j=FUNCTION_TABLE[HEAP[k+20]](l,HEAP[k+4],B,t);j=j==0?18:17;break;case 17:j=f(k,l,r,o,t)!=0?24:16;break;case 18:s=HEAP[r+12]-(HEAP[r+24]+20);j=HEAP[HEAP[r+24]+8]!=s?19:20;break;case 19:j=__PyString_Resize(r+24,s)==-1?24:20;break;case 20:HEAP[m]=HEAP[r];j=HEAP[r+20]!=0?21:23;break;case 21:j=HEAP[r+20];HEAP[j]-=1;j=HEAP[j]==0?22:23;break;case 22:FUNCTION_TABLE[HEAP[HEAP[HEAP[r+20]+4]+24]](HEAP[r+20]);j=23;break;
case 23:q=HEAP[r+24];j=31;break;case 24:j=HEAP[r+20]!=0?25:27;break;case 25:j=HEAP[r+20];HEAP[j]-=1;j=HEAP[j]==0?26:27;break;case 26:FUNCTION_TABLE[HEAP[HEAP[HEAP[r+20]+4]+24]](HEAP[r+20]);j=27;break;case 27:j=HEAP[r+24]!=0?28:30;break;case 28:j=HEAP[r+24];HEAP[j]-=1;j=HEAP[j]==0?29:30;break;case 29:FUNCTION_TABLE[HEAP[HEAP[HEAP[r+24]+4]+24]](HEAP[r+24]);j=30;break;case 30:q=0;j=31;break;case 31:return a=q,STACKTOP=h,a;default:assert(0,"bad label: "+j)}}function k(a,b,c){var d=STACKTOP;STACKTOP+=
4;_memset(d,0,4);var e;for(e=-1;;)switch(e){case -1:var f,g,h,k,l,m,n,o=d,p,q,r,s;f=a;g=b;h=c;q=n=0;e=(HEAP[HEAP[g+4]+84]&268435456)!=0?1:2;break;case 1:m=0;e=8;break;case 2:g=m=_PyObject_Unicode(g);e=g==0?3:4;break;case 3:l=0;e=42;break;case 4:e=(HEAP[HEAP[g+4]+84]&268435456)==0?5:8;break;case 5:_PyErr_SetString(HEAP[_PyExc_TypeError],aa);HEAP[m]-=1;e=HEAP[m]==0?6:7;break;case 6:FUNCTION_TABLE[HEAP[HEAP[m+4]+24]](m);e=7;break;case 7:l=0;e=42;break;case 8:r=HEAP[g+8];s=HEAP[f+28];e=HEAP[f+28]>0?9:
15;break;case 9:e=2147483647-HEAP[f+28]<r?10:11;break;case 10:_PyErr_NoMemory();e=33;break;case 11:e=r+HEAP[f+28]<=1073741823?13:12;break;case 12:q=0;e=35;break;case 13:q=e=_PyMem_Malloc((r+HEAP[f+28])*2);e=e==0?35:14;break;case 14:_llvm_memcpy_p0i8_p0i8_i32(q,f+24,HEAP[f+28]*2,1,0);_llvm_memcpy_p0i8_p0i8_i32(q+2*HEAP[f+28],HEAP[g+12],r*2,1,0);r+=HEAP[f+28];HEAP[f+28]=0;HEAP[o]=q;e=16;break;case 15:HEAP[o]=HEAP[g+12];e=16;break;case 16:p=HEAP[o]+2*r;e=h!=0?17:18;break;case 17:k=3;e=19;break;case 18:k=
0;e=19;break;case 19:n=e=j(HEAP[f+8],f+12,o,r,HEAP[f+20],k);e=e==0?20:23;break;case 20:e=s>0?21:22;break;case 21:_llvm_memcpy_p0i8_p0i8_i32(f+24,q,s*2,1,0);e=22;break;case 22:HEAP[f+28]=s;e=33;break;case 23:e=HEAP[o]<p?24:27;break;case 24:HEAP[f+28]=(p-HEAP[o])/2|0;var t=f+28;e=HEAP[f+28]>2?25:26;break;case 25:HEAP[t]=0;_PyErr_SetString(HEAP[_PyExc_UnicodeError],ib);e=33;break;case 26:_llvm_memcpy_p0i8_p0i8_i32(f+24,HEAP[o],HEAP[t]*2,1,0);e=27;break;case 27:e=q!=0?28:29;break;case 28:_PyMem_Free(q);
e=29;break;case 29:e=m!=0?30:32;break;case 30:HEAP[m]-=1;e=HEAP[m]==0?31:32;break;case 31:FUNCTION_TABLE[HEAP[HEAP[m+4]+24]](m);e=32;break;case 32:l=n;e=42;break;case 33:e=q!=0?34:35;break;case 34:_PyMem_Free(q);e=35;break;case 35:e=n!=0?36:38;break;case 36:HEAP[n]-=1;e=HEAP[n]==0?37:38;break;case 37:FUNCTION_TABLE[HEAP[HEAP[n+4]+24]](n);e=38;break;case 38:e=m!=0?39:41;break;case 39:HEAP[m]-=1;e=HEAP[m]==0?40:41;break;case 40:FUNCTION_TABLE[HEAP[HEAP[m+4]+24]](m);e=41;break;case 41:l=0;e=42;break;
case 42:return a=l,STACKTOP=d,a;default:assert(0,"bad label: "+e)}}function l(a,b){var c;for(c=-1;;)switch(c){case -1:var d,e,f,g;d=a;e=b;g=HEAP[e+8]-HEAP[e];c=g+HEAP[d+32]>8?2:1;break;case 1:c=2147483647-HEAP[d+32]<g?2:3;break;case 2:_PyErr_SetString(HEAP[_PyExc_UnicodeError],ib);f=-1;c=4;break;case 3:_llvm_memcpy_p0i8_p0i8_i32(d+24+HEAP[d+32],HEAP[e],g,1,0);HEAP[d+32]=g+HEAP[d+32];f=0;c=4;break;case 4:return c=f;default:assert(0,"bad label: "+c)}}function m(a,b,c){var d;for(d=-1;;)switch(d){case -1:var e,
f,g;e=a;d=b;f=c;HEAP[e+4]=d;HEAP[e]=HEAP[e+4];HEAP[e+8]=HEAP[e+4]+f;d=HEAP[e+24]==0?1:4;break;case 1:d=_PyUnicodeUCS2_FromUnicode(0,f);HEAP[e+24]=d;d=HEAP[e+24]==0?2:3;break;case 2:g=-1;d=5;break;case 3:HEAP[e+12]=HEAP[HEAP[e+24]+12];HEAP[e+16]=HEAP[e+12]+2*HEAP[HEAP[e+24]+8];d=4;break;case 4:g=0;d=5;break;case 5:return a=g;default:assert(0,"bad label: "+d)}}function n(a,b){var c;for(c=-1;;)switch(c){case -1:var d,e,f,g;d=a;e=b;c=4;break;case 1:c=HEAP[e+8]-HEAP[e];g=(HEAP[e+16]-HEAP[e+12])/2|0;g=
FUNCTION_TABLE[HEAP[HEAP[d+8]+24]](d+12,HEAP[HEAP[d+8]+4],e,c,e+12,g);c=g==0|g==-2?5:2;break;case 2:c=h(HEAP[d+8],d+12,e,HEAP[d+20],g)!=0?3:4;break;case 3:f=-1;c=6;break;case 4:c=HEAP[e]<HEAP[e+8]?1:5;break;case 5:f=0;c=6;break;case 6:return d=f;default:assert(0,"bad label: "+c)}}function o(a,b,c){var d=STACKTOP;STACKTOP+=28;_memset(d,0,28);var e,f=null;for(e=-1;;)switch(e){case -1:var g,j,k,o,p=d,q,r,s,t,u;g=a;j=b;k=c;s=0;e=k==0?1:2;break;case 1:o=_PyUnicodeUCS2_FromUnicode(0,0);e=50;break;case 2:HEAP[p+
20]=0;HEAP[p+24]=HEAP[p+20];q=0;var v=k,w=p,x=p+8,D=p,y=p+8,H=p+12,z=p+24,f=2;e=3;break;case 3:var K=j,A=HEAP[g+36];e=(f==30?1:v)<0?4:5;break;case 4:var B=__PyObject_CallMethod_SizeT(A,K,0,allocate(1,"i32",ALLOC_STACK));q=B;f=4;e=6;break;case 5:var C=__PyObject_CallMethod_SizeT(A,K,Qa,allocate([k,0,0,0],["i32",0,0,0],ALLOC_STACK));q=C;f=5;e=6;break;case 6:e=(f==5?C:B)==0?40:7;break;case 7:e=(HEAP[HEAP[q+4]+84]&134217728)==0?8:9;break;case 8:_PyErr_SetString(HEAP[_PyExc_TypeError],Ha);e=40;break;case 9:t=
HEAP[q+8]==0;e=HEAP[g+32]>0?10:16;break;case 10:e=HEAP[q+8]>2147483647-HEAP[g+32]?11:12;break;case 11:_PyErr_NoMemory();e=40;break;case 12:r=HEAP[g+32]+HEAP[q+8];u=_PyString_FromStringAndSize(0,r);e=u==0?40:13;break;case 13:e=u+20;_llvm_memcpy_p0i8_p0i8_i32(e,g+24,HEAP[g+32],1,0);_llvm_memcpy_p0i8_p0i8_i32(e+HEAP[g+32],q+20,HEAP[q+8],1,0);HEAP[q]-=1;e=HEAP[q]==0?14:15;break;case 14:FUNCTION_TABLE[HEAP[HEAP[q+4]+24]](q);e=15;break;case 15:q=u;HEAP[g+32]=0;e=16;break;case 16:r=HEAP[q+8];e=m(p,q+20,
r)!=0?40:17;break;case 17:e=r>0?18:19;break;case 18:e=n(g,p)!=0?40:19;break;case 19:e=t!=0?21:20;break;case 20:e=k<0?21:23;break;case 21:e=HEAP[w]<HEAP[x]?22:23;break;case 22:e=h(HEAP[g+8],g+12,p,HEAP[g+20],-2)!=0?40:23;break;case 23:e=HEAP[D]<HEAP[y]?24:25;break;case 24:e=l(g,p)!=0?40:25;break;case 25:s=(HEAP[H]-HEAP[HEAP[z]+12])/2|0;HEAP[q]-=1;e=HEAP[q]==0?26:27;break;case 26:FUNCTION_TABLE[HEAP[HEAP[q+4]+24]](q);e=27;break;case 27:q=0;e=k<0?31:28;break;case 28:e=s!=0?31:29;break;case 29:e=r==0?
31:30;break;case 30:k=1;f=30;e=3;break;case 31:e=HEAP[HEAP[p+24]+8]!=s?32:33;break;case 32:e=_PyUnicodeUCS2_Resize(p+24,s)==-1?40:33;break;case 33:e=q!=0?34:36;break;case 34:HEAP[q]-=1;e=HEAP[q]==0?35:36;break;case 35:FUNCTION_TABLE[HEAP[HEAP[q+4]+24]](q);e=36;break;case 36:e=HEAP[p+20]!=0?37:39;break;case 37:e=HEAP[p+20];HEAP[e]-=1;e=HEAP[e]==0?38:39;break;case 38:FUNCTION_TABLE[HEAP[HEAP[HEAP[p+20]+4]+24]](HEAP[p+20]);e=39;break;case 39:o=HEAP[p+24];e=50;break;case 40:e=q!=0?41:43;break;case 41:HEAP[q]-=
1;e=HEAP[q]==0?42:43;break;case 42:FUNCTION_TABLE[HEAP[HEAP[q+4]+24]](q);e=43;break;case 43:e=HEAP[p+20]!=0?44:46;break;case 44:e=HEAP[p+20];HEAP[e]-=1;e=HEAP[e]==0?45:46;break;case 45:FUNCTION_TABLE[HEAP[HEAP[HEAP[p+20]+4]+24]](HEAP[p+20]);e=46;break;case 46:e=HEAP[p+24]!=0?47:49;break;case 47:e=HEAP[p+24];HEAP[e]-=1;e=HEAP[e]==0?48:49;break;case 48:FUNCTION_TABLE[HEAP[HEAP[HEAP[p+24]+4]+24]](HEAP[p+24]);e=49;break;case 49:o=0;e=50;break;case 50:return a=o,STACKTOP=d,a;default:assert(0,"bad label: "+
e)}}function p(a,b){var c;for(c=-1;;)switch(c){case -1:var d,e,f,g;d=a;f=k(d,b,0);c=f==0?1:2;break;case 1:e=-1;c=9;break;case 2:g=__PyObject_CallMethod_SizeT(HEAP[d+32],ia,ba,allocate([f,0,0,0],["%struct.PyObject*",0,0,0],ALLOC_STACK));HEAP[f]-=1;c=HEAP[f]==0?3:4;break;case 3:FUNCTION_TABLE[HEAP[HEAP[f+4]+24]](f);c=4;break;case 4:c=g==0?5:6;break;case 5:e=-1;c=9;break;case 6:HEAP[g]-=1;c=HEAP[g]==0?7:8;break;case 7:FUNCTION_TABLE[HEAP[HEAP[g+4]+24]](g);c=8;break;case 8:e=0;c=9;break;case 9:return c=
e;default:assert(0,"bad label: "+c)}}function q(){t=allocate([73,46,101,110,99,111,100,101,40,117,110,105,99,111,100,101,91,44,32,101,114,114,111,114,115,93,41,32,45,62,32,40,115,116,114,105,110,103,44,32,108,101,110,103,116,104,32,99,111,110,115,117,109,101,100,41,10,10,82,101,116,117,114,110,32,97,110,32,101,110,99,111,100,101,100,32,115,116,114,105,110,103,32,118,101,114,115,105,111,110,32,111,102,32,96,117,110,105,99,111,100,101,39,46,32,101,114,114,111,114,115,32,109,97,121,32,98,101,32,103,
105,118,101,110,32,116,111,10,115,101,116,32,97,32,100,105,102,102,101,114,101,110,116,32,101,114,114,111,114,32,104,97,110,100,108,105,110,103,32,115,99,104,101,109,101,46,32,68,101,102,97,117,108,116,32,105,115,32,39,115,116,114,105,99,116,39,32,109,101,97,110,105,110,103,32,116,104,97,116,10,101,110,99,111,100,105,110,103,32,101,114,114,111,114,115,32,114,97,105,115,101,32,97,32,85,110,105,99,111,100,101,69,110,99,111,100,101,69,114,114,111,114,46,32,79,116,104,101,114,32,112,111,115,115,105,98,
108,101,32,118,97,108,117,101,115,32,97,114,101,10,39,105,103,110,111,114,101,39,44,32,39,114,101,112,108,97,99,101,39,32,97,110,100,32,39,120,109,108,99,104,97,114,114,101,102,114,101,112,108,97,99,101,39,32,97,115,32,119,101,108,108,32,97,115,32,97,110,121,32,111,116,104,101,114,32,110,97,109,101,10,114,101,103,105,115,116,101,114,101,100,32,119,105,116,104,32,99,111,100,101,99,115,46,114,101,103,105,115,116,101,114,95,101,114,114,111,114,32,116,104,97,116,32,99,97,110,32,104,97,110,100,108,101,
32,85,110,105,99,111,100,101,69,110,99,111,100,101,69,114,114,111,114,115,46,0],"i8",ALLOC_NORMAL);s=allocate([73,46,100,101,99,111,100,101,40,115,116,114,105,110,103,91,44,32,101,114,114,111,114,115,93,41,32,45,62,32,40,117,110,105,99,111,100,101,111,98,106,101,99,116,44,32,108,101,110,103,116,104,32,99,111,110,115,117,109,101,100,41,10,10,68,101,99,111,100,101,115,32,96,115,116,114,105,110,103,39,32,117,115,105,110,103,32,73,44,32,97,110,32,77,117,108,116,105,98,121,116,101,67,111,100,101,99,32,
105,110,115,116,97,110,99,101,46,32,101,114,114,111,114,115,32,109,97,121,32,98,101,32,103,105,118,101,110,10,116,111,32,115,101,116,32,97,32,100,105,102,102,101,114,101,110,116,32,101,114,114,111,114,32,104,97,110,100,108,105,110,103,32,115,99,104,101,109,101,46,32,68,101,102,97,117,108,116,32,105,115,32,39,115,116,114,105,99,116,39,32,109,101,97,110,105,110,103,10,116,104,97,116,32,101,110,99,111,100,105,110,103,32,101,114,114,111,114,115,32,114,97,105,115,101,32,97,32,85,110,105,99,111,100,101,
68,101,99,111,100,101,69,114,114,111,114,46,32,79,116,104,101,114,32,112,111,115,115,105,98,108,101,32,118,97,108,117,101,115,10,97,114,101,32,39,105,103,110,111,114,101,39,32,97,110,100,32,39,114,101,112,108,97,99,101,39,32,97,115,32,119,101,108,108,32,97,115,32,97,110,121,32,111,116,104,101,114,32,110,97,109,101,32,114,101,103,105,115,116,101,114,101,100,32,119,105,116,104,10,99,111,100,101,99,115,46,114,101,103,105,115,116,101,114,95,101,114,114,111,114,32,116,104,97,116,32,105,115,32,97,98,108,
101,32,116,111,32,104,97,110,100,108,101,32,85,110,105,99,111,100,101,68,101,99,111,100,101,69,114,114,111,114,115,46,0],"i8",ALLOC_NORMAL);u=allocate(12,"i8*",ALLOC_NORMAL);v=allocate([105,110,112,117,116,0],"i8",ALLOC_NORMAL);w=allocate([101,114,114,111,114,115,0],"i8",ALLOC_NORMAL);x=allocate(8,"i8*",ALLOC_NORMAL);y=allocate(12,"i8*",ALLOC_NORMAL);B=allocate([102,105,110,97,108,0],"i8",ALLOC_NORMAL);A=allocate(12,"i8*",ALLOC_NORMAL);C=allocate([115,116,114,101,97,109,0],"i8",ALLOC_NORMAL);G=allocate([115,
116,114,105,99,116,0],"i8",ALLOC_NORMAL);F=allocate([105,103,110,111,114,101,0],"i8",ALLOC_NORMAL);E=allocate([114,101,112,108,97,99,101,0],"i8",ALLOC_NORMAL);N=allocate([40,40,40,40,40,40,80,121,79,98,106,101,99,116,42,41,40,101,114,114,111,114,115,41,41,45,62,111,98,95,116,121,112,101,41,41,45,62,116,112,95,102,108,97,103,115,32,38,32,40,40,49,76,60,60,50,55,41,41,41,32,33,61,32,48,41,0],"i8",ALLOC_NORMAL);Q=allocate([46,46,47,99,112,121,116,104,111,110,47,77,111,100,117,108,101,115,47,99,106,107,
99,111,100,101,99,115,47,109,117,108,116,105,98,121,116,101,99,111,100,101,99,46,99,0],"i8",ALLOC_NORMAL);I=allocate([99,97,108,108,95,101,114,114,111,114,95,99,97,108,108,98,97,99,107,0],"i8",ALLOC_NORMAL);J=allocate([101,114,114,111,114,115,32,109,117,115,116,32,98,101,32,97,32,115,116,114,105,110,103,0],"i8",ALLOC_NORMAL);P=allocate([104,111,119,32,116,111,32,116,114,101,97,116,32,101,114,114,111,114,115,0],"i8",ALLOC_NORMAL);D=allocate(40,["i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, i8*)*",
0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*, i8*)*",0,0,0,"i8*",0,0,0,"i8","i8","i8","i8","i8*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8"],ALLOC_NORMAL);T=allocate([105,108,108,101,103,97,108,32,109,117,108,116,105,98,121,116,101,32,115,101,113,117,101,110,99,101,0],"i8",ALLOC_NORMAL);L=allocate([105,110,99,111,109,112,108,101,116,101,32,109,117,108,116,105,98,121,116,101,32,115,101,113,117,101,110,99,101,0],"i8",ALLOC_NORMAL);$=allocate([105,110,116,
101,114,110,97,108,32,99,111,100,101,99,32,101,114,114,111,114,0],"i8",ALLOC_NORMAL);R=allocate([117,110,107,110,111,119,110,32,114,117,110,116,105,109,101,32,101,114,114,111,114,0],"i8",ALLOC_NORMAL);K=allocate([101,110,99,111,100,105,110,103,32,101,114,114,111,114,32,104,97,110,100,108,101,114,32,109,117,115,116,32,114,101,116,117,114,110,32,40,117,110,105,99,111,100,101,44,32,105,110,116,41,32,116,117,112,108,101,0],"i8",ALLOC_NORMAL);H=allocate([112,111,115,105,116,105,111,110,32,37,122,100,32,
102,114,111,109,32,101,114,114,111,114,32,104,97,110,100,108,101,114,32,111,117,116,32,111,102,32,98,111,117,110,100,115,0],"i8",ALLOC_NORMAL);S=allocate([100,101,99,111,100,105,110,103,32,101,114,114,111,114,32,104,97,110,100,108,101,114,32,109,117,115,116,32,114,101,116,117,114,110,32,40,117,110,105,99,111,100,101,44,32,105,110,116,41,32,116,117,112,108,101,0],"i8",ALLOC_NORMAL);U=allocate(1,"i8",ALLOC_NORMAL);z=allocate([79,124,122,58,101,110,99,111,100,101,0],"i8",ALLOC_NORMAL);aa=allocate([99,
111,117,108,100,110,39,116,32,99,111,110,118,101,114,116,32,116,104,101,32,111,98,106,101,99,116,32,116,111,32,117,110,105,99,111,100,101,46,0],"i8",ALLOC_NORMAL);ja=allocate([115,42,124,122,58,100,101,99,111,100,101,0],"i8",ALLOC_NORMAL);la=allocate([101,110,99,111,100,101,0],"i8",ALLOC_NORMAL);da=allocate([100,101,99,111,100,101,0],"i8",ALLOC_NORMAL);Ka=allocate([0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],["i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",
0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8"],ALLOC_NORMAL);Ma=allocate([77,117,108,116,105,98,121,116,101,67,111,100,101,99,0],"i8",ALLOC_NORMAL);wa=allocate([1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,131563,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],["i32",0,0,0,"%struct._typeobject*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i32",0,0,0,"i32",0,0,0,"void (%struct.PyObject*)*",0,0,0,"i32 (%struct.PyObject*, %struct.FILE*, i32)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, i8*)*",0,0,0,"i32 (%struct.PyObject*, i8*, %struct.PyObject*)*",
0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*)*",0,0,0,"%struct.PyNumberMethods*",0,0,0,"%struct.PySequenceMethods*",0,0,0,"%struct.PyMappingMethods*",0,0,0,"i32 (%struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",
0,0,0,"%struct.PyBufferProcs*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i32 (%struct.PyObject*, i32 (%struct.PyObject*, i8*)*, i8*)*",0,0,0,"i32 (%struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*, i32)*",0,0,0,"i32",0,0,0,"%struct.PyObject* (%struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*)*",0,0,0,"%struct.PyMethodDef*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8",
"i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8"],ALLOC_NORMAL);ib=allocate([112,101,110,100,105,110,103,32,98,117,102,102,101,114,32,111,118,101,114,102,108,111,119,0],"i8",ALLOC_NORMAL);cb=allocate([79,124,105,58,101,110,99,111,100,101,0],"i8",ALLOC_NORMAL);db=allocate([114,101,115,101,116,0],"i8",ALLOC_NORMAL);
Da=allocate([0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],["i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8"],ALLOC_NORMAL);gb=allocate([124,115,58,73,110,99,114,101,109,101,110,
116,97,108,69,110,99,111,100,101,114,0],"i8",ALLOC_NORMAL);Xa=allocate([99,111,100,101,99,0],"i8",ALLOC_NORMAL);Ca=allocate([99,111,100,101,99,32,105,115,32,117,110,101,120,112,101,99,116,101,100,32,116,121,112,101,0],"i8",ALLOC_NORMAL);Za=allocate([77,117,108,116,105,98,121,116,101,73,110,99,114,101,109,101,110,116,97,108,69,110,99,111,100,101,114,0],"i8",ALLOC_NORMAL);Va=allocate([1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,148971,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],["i32",0,0,0,"%struct._typeobject*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i32",0,0,0,"i32",0,0,0,"void (%struct.PyObject*)*",0,0,0,"i32 (%struct.PyObject*, %struct.FILE*, i32)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, i8*)*",
0,0,0,"i32 (%struct.PyObject*, i8*, %struct.PyObject*)*",0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*)*",0,0,0,"%struct.PyNumberMethods*",0,0,0,"%struct.PySequenceMethods*",0,0,0,"%struct.PyMappingMethods*",0,0,0,"i32 (%struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",
0,0,0,"%struct.PyBufferProcs*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i32 (%struct.PyObject*, i32 (%struct.PyObject*, i8*)*, i8*)*",0,0,0,"i32 (%struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*, i32)*",0,0,0,"i32",0,0,0,"%struct.PyObject* (%struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*)*",0,0,0,"%struct.PyMethodDef*",0,0,0,"%struct.PyMemberDef*",0,0,0,"%struct.PyGetSetDef*",0,0,0,"%struct._typeobject*",0,0,0,"%struct.PyObject*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",
0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct._typeobject*, i32)*",0,0,0,"%struct.PyObject* (%struct._typeobject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8"],ALLOC_NORMAL);Ga=
allocate([115,42,124,105,58,100,101,99,111,100,101,0],"i8",ALLOC_NORMAL);ha=allocate([0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],["i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i8","i8","i8","i8","i8","i8","i8",
"i8"],ALLOC_NORMAL);Na=allocate([124,115,58,73,110,99,114,101,109,101,110,116,97,108,68,101,99,111,100,101,114,0],"i8",ALLOC_NORMAL);jb=allocate([77,117,108,116,105,98,121,116,101,73,110,99,114,101,109,101,110,116,97,108,68,101,99,111,100,101,114,0],"i8",ALLOC_NORMAL);hb=allocate([1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,36,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,148971,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],["i32",0,0,0,"%struct._typeobject*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i32",0,0,0,"i32",0,0,0,"void (%struct.PyObject*)*",0,0,0,"i32 (%struct.PyObject*, %struct.FILE*, i32)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, i8*)*",0,0,0,"i32 (%struct.PyObject*, i8*, %struct.PyObject*)*",0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*)*",
0,0,0,"%struct.PyObject* (%struct.PyObject*)*",0,0,0,"%struct.PyNumberMethods*",0,0,0,"%struct.PySequenceMethods*",0,0,0,"%struct.PyMappingMethods*",0,0,0,"i32 (%struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"%struct.PyBufferProcs*",0,0,0,"i32",0,0,0,"i8*",
0,0,0,"i32 (%struct.PyObject*, i32 (%struct.PyObject*, i8*)*, i8*)*",0,0,0,"i32 (%struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*, i32)*",0,0,0,"i32",0,0,0,"%struct.PyObject* (%struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*)*",0,0,0,"%struct.PyMethodDef*",0,0,0,"%struct.PyMemberDef*",0,0,0,"%struct.PyGetSetDef*",0,0,0,"%struct._typeobject*",0,0,0,"%struct.PyObject*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",
0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct._typeobject*, i32)*",0,0,0,"%struct.PyObject* (%struct._typeobject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8"],ALLOC_NORMAL);Qa=
allocate([105,0],"i8",ALLOC_NORMAL);Ha=allocate([115,116,114,101,97,109,32,102,117,110,99,116,105,111,110,32,114,101,116,117,114,110,101,100,32,97,32,110,111,110,45,115,116,114,105,110,103,32,111,98,106,101,99,116,0],"i8",ALLOC_NORMAL);Ra=allocate([114,101,97,100,0],"i8",ALLOC_NORMAL);Ia=allocate([97,114,103,32,49,32,109,117,115,116,32,98,101,32,97,110,32,105,110,116,101,103,101,114,0],"i8",ALLOC_NORMAL);Fa=allocate([114,101,97,100,108,105,110,101,0],"i8",ALLOC_NORMAL);$a=allocate([114,101,97,100,
108,105,110,101,115,0],"i8",ALLOC_NORMAL);Wa=allocate([0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],["i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",
0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8"],ALLOC_NORMAL);Y=allocate([0,0,0,0,6,0,0,0,36,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],["i8*",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8"],
ALLOC_NORMAL);kb=allocate([79,124,115,58,83,116,114,101,97,109,82,101,97,100,101,114,0],"i8",ALLOC_NORMAL);ra=allocate([77,117,108,116,105,98,121,116,101,83,116,114,101,97,109,82,101,97,100,101,114,0],"i8",ALLOC_NORMAL);Ta=allocate([1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,148971,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],["i32",0,0,0,"%struct._typeobject*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i32",0,0,0,"i32",0,0,0,"void (%struct.PyObject*)*",0,0,0,"i32 (%struct.PyObject*, %struct.FILE*, i32)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, i8*)*",0,0,0,"i32 (%struct.PyObject*, i8*, %struct.PyObject*)*",0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*)*",
0,0,0,"%struct.PyNumberMethods*",0,0,0,"%struct.PySequenceMethods*",0,0,0,"%struct.PyMappingMethods*",0,0,0,"i32 (%struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"%struct.PyBufferProcs*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i32 (%struct.PyObject*, i32 (%struct.PyObject*, i8*)*, i8*)*",
0,0,0,"i32 (%struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*, i32)*",0,0,0,"i32",0,0,0,"%struct.PyObject* (%struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*)*",0,0,0,"%struct.PyMethodDef*",0,0,0,"%struct.PyMemberDef*",0,0,0,"%struct.PyGetSetDef*",0,0,0,"%struct._typeobject*",0,0,0,"%struct.PyObject*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",
0,0,0,"i32",0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct._typeobject*, i32)*",0,0,0,"%struct.PyObject* (%struct._typeobject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8"],ALLOC_NORMAL);ia=allocate([119,114,105,116,101,0],"i8",ALLOC_NORMAL);ba=allocate([79,0],
"i8",ALLOC_NORMAL);Ya=allocate([97,114,103,32,109,117,115,116,32,98,101,32,97,32,115,101,113,117,101,110,99,101,32,111,98,106,101,99,116,0],"i8",ALLOC_NORMAL);ta=allocate([79,124,115,58,83,116,114,101,97,109,87,114,105,116,101,114,0],"i8",ALLOC_NORMAL);O=allocate([119,114,105,116,101,108,105,110,101,115,0],"i8",ALLOC_NORMAL);wb=allocate([0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],["i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",
0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8"],ALLOC_NORMAL);bb=allocate([0,0,0,0,6,0,0,0,32,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],["i8*",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",
0,0,0,"i8*",0,0,0,"i8*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8"],ALLOC_NORMAL);vb=allocate([77,117,108,116,105,98,121,116,101,83,116,114,101,97,109,87,114,105,116,101,114,0],"i8",ALLOC_NORMAL);ka=allocate([1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,36,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,148971,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],["i32",0,0,0,"%struct._typeobject*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i32",0,0,0,"i32",0,0,0,"void (%struct.PyObject*)*",0,0,0,"i32 (%struct.PyObject*, %struct.FILE*, i32)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, i8*)*",0,0,0,"i32 (%struct.PyObject*, i8*, %struct.PyObject*)*",0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*)*",
0,0,0,"%struct.PyNumberMethods*",0,0,0,"%struct.PySequenceMethods*",0,0,0,"%struct.PyMappingMethods*",0,0,0,"i32 (%struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"%struct.PyBufferProcs*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i32 (%struct.PyObject*, i32 (%struct.PyObject*, i8*)*, i8*)*",
0,0,0,"i32 (%struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*, i32)*",0,0,0,"i32",0,0,0,"%struct.PyObject* (%struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*)*",0,0,0,"%struct.PyMethodDef*",0,0,0,"%struct.PyMemberDef*",0,0,0,"%struct.PyGetSetDef*",0,0,0,"%struct._typeobject*",0,0,0,"%struct.PyObject*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",
0,0,0,"i32",0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct._typeobject*, i32)*",0,0,0,"%struct.PyObject* (%struct._typeobject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8"],ALLOC_NORMAL);za=allocate([109,117,108,116,105,98,121,116,101,99,111,100,101,99,46,95,95,
109,97,112,95,42,0],"i8",ALLOC_NORMAL);Aa=allocate([97,114,103,117,109,101,110,116,32,116,121,112,101,32,105,110,118,97,108,105,100,0],"i8",ALLOC_NORMAL);La=allocate([95,95,99,114,101,97,116,101,95,99,111,100,101,99,0],"i8",ALLOC_NORMAL);ya=allocate([0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],["i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8","i8","i8","i8","i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,
0,0,"i8","i8","i8","i8","i8","i8","i8","i8"],ALLOC_NORMAL);ub=allocate([95,109,117,108,116,105,98,121,116,101,99,111,100,101,99,0],"i8",ALLOC_NORMAL);Z=allocate([99,97,110,39,116,32,105,110,105,116,105,97,108,105,122,101,32,116,104,101,32,95,109,117,108,116,105,98,121,116,101,99,111,100,101,99,32,109,111,100,117,108,101,0],"i8",ALLOC_NORMAL);HEAP[u]=v;HEAP[u+4]=w;HEAP[x]=w;HEAP[y]=v;HEAP[y+4]=B;HEAP[A]=C;HEAP[A+4]=w;HEAP[D]=w;HEAP[D+4]=g+2;HEAP[D+8]=g+4;HEAP[D+12]=P;HEAP[Ka]=la;HEAP[Ka+4]=g+6;HEAP[Ka+
12]=t;HEAP[Ka+16]=da;HEAP[Ka+20]=g+8;HEAP[Ka+28]=s;HEAP[wa+12]=Ma;HEAP[wa+24]=g+10;HEAP[wa+72]=g+12;HEAP[wa+116]=Ka;HEAP[Da]=la;HEAP[Da+4]=g+14;HEAP[Da+16]=db;HEAP[Da+20]=g+16;HEAP[Va+12]=Za;HEAP[Va+24]=g+18;HEAP[Va+72]=g+12;HEAP[Va+92]=g+20;HEAP[Va+116]=Da;HEAP[Va+124]=D;HEAP[Va+148]=g+22;HEAP[Va+156]=g+24;HEAP[ha]=da;HEAP[ha+4]=g+26;HEAP[ha+16]=db;HEAP[ha+20]=g+28;HEAP[hb+12]=jb;HEAP[hb+24]=g+30;HEAP[hb+72]=g+12;HEAP[hb+92]=g+32;HEAP[hb+116]=ha;HEAP[hb+124]=D;HEAP[hb+148]=g+34;HEAP[hb+156]=g+36;
HEAP[Wa]=Ra;HEAP[Wa+4]=g+38;HEAP[Wa+16]=Fa;HEAP[Wa+20]=g+40;HEAP[Wa+32]=$a;HEAP[Wa+36]=g+42;HEAP[Wa+48]=db;HEAP[Wa+52]=g+44;HEAP[Y]=C;HEAP[Ta+12]=ra;HEAP[Ta+24]=g+46;HEAP[Ta+72]=g+12;HEAP[Ta+92]=g+48;HEAP[Ta+116]=Wa;HEAP[Ta+120]=Y;HEAP[Ta+124]=D;HEAP[Ta+148]=g+50;HEAP[Ta+156]=g+52;HEAP[wb]=ia;HEAP[wb+4]=g+54;HEAP[wb+16]=O;HEAP[wb+20]=g+56;HEAP[wb+32]=db;HEAP[wb+36]=g+58;HEAP[bb]=C;HEAP[ka+12]=vb;HEAP[ka+24]=g+60;HEAP[ka+72]=g+12;HEAP[ka+92]=g+62;HEAP[ka+116]=wb;HEAP[ka+120]=bb;HEAP[ka+124]=D;HEAP[ka+
148]=g+64;HEAP[ka+156]=g+66;HEAP[ya]=La;HEAP[ya+4]=g+68}var r={arguments:[]};Runtime.QUANTUM_SIZE=4;var t,s,u,v,w,x,y,B,A,C,G,F,E,N,Q,I,J,P,D,T,L,$,R,K,H,S,U,z,aa,ja,la,da,Ka,Ma,wa,ib,cb,db,Da,gb,Xa,Ca,Za,Va,Ga,ha,Na,jb,hb,Qa,Ha,Ra,Ia,Fa,$a,Wa,Y,kb,ra,Ta,ia,ba,Ya,ta,O,wb,bb,vb,ka,za,Aa,La,ya,ub,Z;r._init_multibytecodec=function(){var a=STACKTOP;STACKTOP+=20;_memset(a,0,20);var b;for(b=-1;;)switch(b){case -1:var c,d,e=a;HEAP[e]=Va;HEAP[e+4]=hb;HEAP[e+8]=Ta;HEAP[e+12]=ka;HEAP[e+16]=0;b=_PyType_Ready(wa)<
0?8:1;break;case 1:d=_Py_InitModule4(ub,ya,0,0,1013);b=d==0?8:2;break;case 2:c=0;b=5;break;case 3:b=_PyType_Ready(HEAP[e+c*4])<0?8:4;break;case 4:HEAP[HEAP[e+c*4]]+=1;_PyModule_AddObject(d,HEAP[HEAP[e+c*4]+12],HEAP[e+c*4]);c+=1;b=5;break;case 5:b=HEAP[e+c*4]!=0?3:6;break;case 6:b=_PyErr_Occurred()!=0?7:8;break;case 7:_Py_FatalError(Z);b=8;break;case 8:STACKTOP=a;return;default:assert(0,"bad label: "+b)}};FUNCTION_TABLE=FUNCTION_TABLE.concat([0,0,function(a){var b;for(b=-1;;)switch(b){case -1:var c,
d,e;c=a;b=HEAP[c+20]==1?1:2;break;case 1:e=G;b=7;break;case 2:b=HEAP[c+20]==2?3:4;break;case 3:e=F;b=7;break;case 4:b=HEAP[c+20]==3?5:6;break;case 5:e=E;b=7;break;case 6:HEAP[HEAP[c+20]]+=1;d=HEAP[c+20];b=8;break;case 7:d=_PyString_FromString(e);b=8;break;case 8:return a=d;default:assert(0,"bad label: "+b)}},0,function(a,c){var d;for(d=-1;;)switch(d){case -1:var e,f,g,h;e=a;f=c;d=(HEAP[HEAP[f+4]+84]&134217728)==0?1:2;break;case 1:_PyErr_SetString(HEAP[_PyExc_TypeError],J);g=-1;d=10;break;case 2:h=
b(f+20);d=h==0?3:4;break;case 3:g=-1;d=10;break;case 4:d=HEAP[e+20]!=0?5:9;break;case 5:d=HEAP[e+20]==0?7:6;break;case 6:d=HEAP[e+20]>3?7:9;break;case 7:d=HEAP[e+20];HEAP[d]-=1;d=HEAP[d]==0?8:9;break;case 8:FUNCTION_TABLE[HEAP[HEAP[HEAP[e+20]+4]+24]](HEAP[e+20]);d=9;break;case 9:HEAP[e+20]=h;g=0;d=10;break;case 10:return e=g;default:assert(0,"bad label: "+d)}},0,function(a,c,d){var f=STACKTOP;STACKTOP+=20;_memset(f,0,20);var g;for(g=-1;;)switch(g){case -1:var h,k,l,m=f,n=f+8,o,p,q=f+12,r,s=f+16,t;
h=a;g=c;k=d;HEAP[s]=0;g=__PyArg_ParseTupleAndKeywords_SizeT(g,k,z,u,allocate([q,0,0,0,s,0,0,0],["%struct.PyObject**",0,0,0,"i8**",0,0,0],ALLOC_STACK))==0?1:2;break;case 1:l=0;g=34;break;case 2:g=(HEAP[HEAP[HEAP[q]+4]+84]&268435456)!=0?3:4;break;case 3:r=0;g=10;break;case 4:r=_PyObject_Unicode(HEAP[q]);HEAP[q]=r;g=HEAP[q]==0?5:6;break;case 5:l=0;g=34;break;case 6:g=(HEAP[HEAP[HEAP[q]+4]+84]&268435456)==0?7:10;break;case 7:_PyErr_SetString(HEAP[_PyExc_TypeError],aa);HEAP[r]-=1;g=HEAP[r]==0?8:9;break;
case 8:FUNCTION_TABLE[HEAP[HEAP[r+4]+24]](r);g=9;break;case 9:l=0;g=34;break;case 10:HEAP[n]=HEAP[HEAP[q]+12];t=HEAP[HEAP[q]+8];o=g=b(HEAP[s]);g=g==0?11:15;break;case 11:g=r!=0?12:14;break;case 12:HEAP[r]-=1;g=HEAP[r]==0?13:14;break;case 13:FUNCTION_TABLE[HEAP[HEAP[r+4]+24]](r);g=14;break;case 14:l=0;g=34;break;case 15:g=HEAP[HEAP[h+8]+16]!=0?16:17;break;case 16:g=FUNCTION_TABLE[HEAP[HEAP[h+8]+16]](m,HEAP[HEAP[h+8]+4])!=0?26:17;break;case 17:p=g=j(HEAP[h+8],m,n,t,o,3);g=g==0?26:18;break;case 18:g=
o!=0?19:22;break;case 19:g=o==0|o>3?20:22;break;case 20:HEAP[o]-=1;g=HEAP[o]==0?21:22;break;case 21:FUNCTION_TABLE[HEAP[HEAP[o+4]+24]](o);g=22;break;case 22:g=r!=0?23:25;break;case 23:HEAP[r]-=1;g=HEAP[r]==0?24:25;break;case 24:FUNCTION_TABLE[HEAP[HEAP[r+4]+24]](r);g=25;break;case 25:l=e(p,t);g=34;break;case 26:g=o!=0?27:30;break;case 27:g=o==0|o>3?28:30;break;case 28:HEAP[o]-=1;g=HEAP[o]==0?29:30;break;case 29:FUNCTION_TABLE[HEAP[HEAP[o+4]+24]](o);g=30;break;case 30:g=r!=0?31:33;break;case 31:HEAP[r]-=
1;g=HEAP[r]==0?32:33;break;case 32:FUNCTION_TABLE[HEAP[HEAP[r+4]+24]](r);g=33;break;case 33:l=0;g=34;break;case 34:return a=l,STACKTOP=f,a;default:assert(0,"bad label: "+g)}},0,function(a,c,d){var f=STACKTOP;STACKTOP+=92;_memset(f,0,92);var g;for(g=-1;;)switch(g){case -1:var j,k,l,m=f,n=f+8,o,p=f+36,q,r=f+88,s,t,v;j=a;g=c;k=d;HEAP[r]=0;g=__PyArg_ParseTupleAndKeywords_SizeT(g,k,ja,u,allocate([p,0,0,0,r,0,0,0],["%struct.Py_buffer*",0,0,0,"i8**",0,0,0],ALLOC_STACK))==0?1:2;break;case 1:l=0;g=38;break;
case 2:q=HEAP[p];s=HEAP[p+8];o=b(HEAP[r]);g=o==0?3:4;break;case 3:_PyBuffer_Release(p);l=0;g=38;break;case 4:g=s==0?5:10;break;case 5:_PyBuffer_Release(p);g=o!=0?6:9;break;case 6:g=o==0|o>3?7:9;break;case 7:HEAP[o]-=1;g=HEAP[o]==0?8:9;break;case 8:FUNCTION_TABLE[HEAP[HEAP[o+4]+24]](o);g=9;break;case 9:l=_PyUnicodeUCS2_FromUnicode(0,0);l=e(l,0);g=38;break;case 10:HEAP[n+20]=0;HEAP[n+4]=q;HEAP[n]=HEAP[n+4];HEAP[n+8]=HEAP[n+4]+s;g=_PyUnicodeUCS2_FromUnicode(0,s);HEAP[n+24]=g;g=HEAP[n+24]==0?27:11;break;
case 11:HEAP[n+12]=HEAP[HEAP[n+24]+12];HEAP[n+16]=HEAP[n+12]+2*HEAP[HEAP[n+24]+8];g=HEAP[HEAP[j+8]+28]!=0?12:13;break;case 12:g=FUNCTION_TABLE[HEAP[HEAP[j+8]+28]](m,HEAP[HEAP[j+8]+4])!=0?27:13;break;case 13:var w=n,x=n+8,D=n+8,y=n,H=n+16,z=n+12,K=n,A=n+12;g=16;break;case 14:v=HEAP[D]-HEAP[y];g=(HEAP[H]-HEAP[z])/2|0;v=FUNCTION_TABLE[HEAP[HEAP[j+8]+24]](m,HEAP[HEAP[j+8]+4],K,v,A,g);g=v==0?17:15;break;case 15:g=h(HEAP[j+8],m,n,o,v)!=0?27:16;break;case 16:g=HEAP[w]<HEAP[x]?14:17;break;case 17:t=(HEAP[n+
12]-HEAP[HEAP[n+24]+12])/2|0;g=HEAP[HEAP[n+24]+8]!=t?18:19;break;case 18:g=_PyUnicodeUCS2_Resize(n+24,t)==-1?27:19;break;case 19:_PyBuffer_Release(p);g=HEAP[n+20]!=0?20:22;break;case 20:g=HEAP[n+20];HEAP[g]-=1;g=HEAP[g]==0?21:22;break;case 21:FUNCTION_TABLE[HEAP[HEAP[HEAP[n+20]+4]+24]](HEAP[n+20]);g=22;break;case 22:g=o!=0?23:26;break;case 23:g=o==0|o>3?24:26;break;case 24:HEAP[o]-=1;g=HEAP[o]==0?25:26;break;case 25:FUNCTION_TABLE[HEAP[HEAP[o+4]+24]](o);g=26;break;case 26:l=e(HEAP[n+24],s);g=38;break;
case 27:_PyBuffer_Release(p);g=o!=0?28:31;break;case 28:g=o==0|o>3?29:31;break;case 29:HEAP[o]-=1;g=HEAP[o]==0?30:31;break;case 30:FUNCTION_TABLE[HEAP[HEAP[o+4]+24]](o);g=31;break;case 31:g=HEAP[n+20]!=0?32:34;break;case 32:g=HEAP[n+20];HEAP[g]-=1;g=HEAP[g]==0?33:34;break;case 33:FUNCTION_TABLE[HEAP[HEAP[HEAP[n+20]+4]+24]](HEAP[n+20]);g=34;break;case 34:g=HEAP[n+24]!=0?35:37;break;case 35:g=HEAP[n+24];HEAP[g]-=1;g=HEAP[g]==0?36:37;break;case 36:FUNCTION_TABLE[HEAP[HEAP[HEAP[n+24]+4]+24]](HEAP[n+24]);
g=37;break;case 37:l=0;g=38;break;case 38:return a=l,STACKTOP=f,a;default:assert(0,"bad label: "+g)}},0,function(a){_PyObject_Free(a)},0,_PyObject_GenericGetAttr,0,function(a,b,c){var d=STACKTOP;STACKTOP+=8;_memset(d,0,8);var e;for(e=-1;;)switch(e){case -1:var f,g,h,j=d,l=d+4;f=a;e=b;g=c;HEAP[l]=0;e=__PyArg_ParseTupleAndKeywords_SizeT(e,g,cb,y,allocate([j,0,0,0,l,0,0,0],["%struct.PyObject**",0,0,0,"i32*",0,0,0],ALLOC_STACK))==0?1:2;break;case 1:h=0;e=3;break;case 2:h=k(f,HEAP[j],HEAP[l]);e=3;break;
case 3:return a=h,STACKTOP=d,a;default:assert(0,"bad label: "+e)}},0,function(a){var b;for(b=-1;;)switch(b){case -1:var c,d;c=a;b=HEAP[HEAP[c+8]+32]!=0?1:3;break;case 1:b=FUNCTION_TABLE[HEAP[HEAP[c+8]+32]](c+12,HEAP[HEAP[c+8]+4])!=0?2:3;break;case 2:d=0;b=4;break;case 3:HEAP[c+28]=0;HEAP[__Py_NoneStruct]+=1;d=__Py_NoneStruct;b=4;break;case 4:return a=d;default:assert(0,"bad label: "+b)}},0,function(a){var b;for(b=-1;;)switch(b){case -1:var c;c=a;_PyObject_GC_UnTrack(c);b=HEAP[c+20]!=0?1:5;break;case 1:b=
HEAP[c+20]==0?3:2;break;case 2:b=HEAP[c+20]>3?3:5;break;case 3:b=HEAP[c+20];HEAP[b]-=1;b=HEAP[b]==0?4:5;break;case 4:FUNCTION_TABLE[HEAP[HEAP[HEAP[c+20]+4]+24]](HEAP[c+20]);b=5;break;case 5:FUNCTION_TABLE[HEAP[HEAP[c+4]+160]](c);return;default:assert(0,"bad label: "+b)}},0,function(a,b,c){var d;for(d=-1;;)switch(d){case -1:var e,f,g,h,j;e=a;f=b;g=c;d=HEAP[e+20]==0?2:1;break;case 1:d=HEAP[e+20]>3?2:5;break;case 2:d=HEAP[e+20]!=0?3:5;break;case 3:j=FUNCTION_TABLE[f](HEAP[e+20],g);d=j!=0?4:5;break;case 4:h=
j;d=6;break;case 5:h=0;d=6;break;case 6:return a=h;default:assert(0,"bad label: "+d)}},0,function(){return 0},0,function(a,c,d){var e=STACKTOP;STACKTOP+=4;_memset(e,0,4);var f,g=null;for(f=-1;;)switch(f){case -1:var h,j,k,l,m,n=e;h=a;f=c;j=d;m=0;HEAP[n]=0;f=__PyArg_ParseTupleAndKeywords_SizeT(f,j,gb,x,allocate([n,0,0,0],["i8**",0,0,0],ALLOC_STACK))==0?1:2;break;case 1:k=0;f=21;break;case 2:l=FUNCTION_TABLE[HEAP[h+152]](h,0);f=l==0?3:4;break;case 3:k=0;f=21;break;case 4:m=_PyObject_GetAttrString(h,
Xa);f=m==0?13:5;break;case 5:f=HEAP[m+4]!=wa?6:7;break;case 6:_PyErr_SetString(HEAP[_PyExc_TypeError],Ca);f=13;break;case 7:HEAP[l+8]=HEAP[m+8];HEAP[l+28]=0;g=b(HEAP[n]);HEAP[l+20]=g;var o=l;HEAP[o+20]==0?(g=7,f=14):(g=7,f=8);break;case 8:f=HEAP[HEAP[l+8]+16]!=0?9:10;break;case 9:f=FUNCTION_TABLE[HEAP[HEAP[l+8]+16]](l+12,HEAP[HEAP[l+8]+4])!=0?13:10;break;case 10:HEAP[m]-=1;f=HEAP[m]==0?11:12;break;case 11:FUNCTION_TABLE[HEAP[HEAP[m+4]+24]](m);f=12;break;case 12:k=l;f=21;break;case 13:var p=l,g=13;
f=14;break;case 14:f=(g==13?p:o)!=0?15:17;break;case 15:HEAP[l]-=1;f=HEAP[l]==0?16:17;break;case 16:FUNCTION_TABLE[HEAP[HEAP[l+4]+24]](l);f=17;break;case 17:f=m!=0?18:20;break;case 18:HEAP[m]-=1;f=HEAP[m]==0?19:20;break;case 19:FUNCTION_TABLE[HEAP[HEAP[m+4]+24]](m);f=20;break;case 20:k=0;f=21;break;case 21:return a=k,STACKTOP=e,a;default:assert(0,"bad label: "+f)}},0,function(a,b,c){var d=STACKTOP;STACKTOP+=84;_memset(d,0,84);var e;for(e=-1;;)switch(e){case -1:var f,g,j,k=d,o,p,q=d+28,r,s,t,u,v=d+
80;f=a;e=b;g=c;s=p=0;HEAP[v]=0;e=__PyArg_ParseTupleAndKeywords_SizeT(e,g,Ga,y,allocate([q,0,0,0,v,0,0,0],["%struct.Py_buffer*",0,0,0,"i32*",0,0,0],ALLOC_STACK))==0?1:2;break;case 1:j=0;e=34;break;case 2:o=HEAP[q];t=HEAP[q+8];HEAP[k+20]=0;HEAP[k+24]=HEAP[k+20];u=HEAP[f+32];e=HEAP[f+32]==0?3:4;break;case 3:r=t;p=o;e=8;break;case 4:e=2147483647-HEAP[f+32]<t?5:6;break;case 5:_PyErr_NoMemory();e=24;break;case 6:r=t+HEAP[f+32];p=_PyMem_Malloc(r);e=p==0?24:7;break;case 7:_llvm_memcpy_p0i8_p0i8_i32(p,f+24,
HEAP[f+32],1,0);_llvm_memcpy_p0i8_p0i8_i32(p+HEAP[f+32],o,t,1,0);HEAP[f+32]=0;e=8;break;case 8:e=m(k,p,r)!=0?24:9;break;case 9:e=n(f,k)!=0?24:10;break;case 10:e=HEAP[v]!=0?11:14;break;case 11:e=HEAP[k]<HEAP[k+8]?12:14;break;case 12:e=h(HEAP[f+8],f+12,k,HEAP[f+20],-2)!=0?13:14;break;case 13:_llvm_memcpy_p0i8_p0i8_i32(f+24,p,u,1,0);HEAP[f+32]=u;e=24;break;case 14:e=HEAP[k]<HEAP[k+8]?15:16;break;case 15:e=l(f,k)!=0?24:16;break;case 16:s=(HEAP[k+12]-HEAP[HEAP[k+24]+12])/2|0;e=HEAP[HEAP[k+24]+8]!=s?17:
18;break;case 17:e=_PyUnicodeUCS2_Resize(k+24,s)==-1?24:18;break;case 18:_PyBuffer_Release(q);e=p!=o?19:20;break;case 19:_PyMem_Free(p);e=20;break;case 20:e=HEAP[k+20]!=0?21:23;break;case 21:e=HEAP[k+20];HEAP[e]-=1;e=HEAP[e]==0?22:23;break;case 22:FUNCTION_TABLE[HEAP[HEAP[HEAP[k+20]+4]+24]](HEAP[k+20]);e=23;break;case 23:j=HEAP[k+24];e=34;break;case 24:_PyBuffer_Release(q);e=p!=0?25:27;break;case 25:e=p!=o?26:27;break;case 26:_PyMem_Free(p);e=27;break;case 27:e=HEAP[k+20]!=0?28:30;break;case 28:e=
HEAP[k+20];HEAP[e]-=1;e=HEAP[e]==0?29:30;break;case 29:FUNCTION_TABLE[HEAP[HEAP[HEAP[k+20]+4]+24]](HEAP[k+20]);e=30;break;case 30:e=HEAP[k+24]!=0?31:33;break;case 31:e=HEAP[k+24];HEAP[e]-=1;e=HEAP[e]==0?32:33;break;case 32:FUNCTION_TABLE[HEAP[HEAP[HEAP[k+24]+4]+24]](HEAP[k+24]);e=33;break;case 33:j=0;e=34;break;case 34:return a=j,STACKTOP=d,a;default:assert(0,"bad label: "+e)}},0,function(a){var b;for(b=-1;;)switch(b){case -1:var c,d;c=a;b=HEAP[HEAP[c+8]+32]!=0?1:3;break;case 1:b=FUNCTION_TABLE[HEAP[HEAP[c+
8]+32]](c+12,HEAP[HEAP[c+8]+4])!=0?2:3;break;case 2:d=0;b=4;break;case 3:HEAP[c+32]=0;HEAP[__Py_NoneStruct]+=1;d=__Py_NoneStruct;b=4;break;case 4:return a=d;default:assert(0,"bad label: "+b)}},0,function(a){var b;for(b=-1;;)switch(b){case -1:var c;c=a;_PyObject_GC_UnTrack(c);b=HEAP[c+20]!=0?1:5;break;case 1:b=HEAP[c+20]==0?3:2;break;case 2:b=HEAP[c+20]>3?3:5;break;case 3:b=HEAP[c+20];HEAP[b]-=1;b=HEAP[b]==0?4:5;break;case 4:FUNCTION_TABLE[HEAP[HEAP[HEAP[c+20]+4]+24]](HEAP[c+20]);b=5;break;case 5:FUNCTION_TABLE[HEAP[HEAP[c+
4]+160]](c);return;default:assert(0,"bad label: "+b)}},0,function(a,b,c){var d;for(d=-1;;)switch(d){case -1:var e,f,g,h,j;e=a;f=b;g=c;d=HEAP[e+20]==0?2:1;break;case 1:d=HEAP[e+20]>3?2:5;break;case 2:d=HEAP[e+20]!=0?3:5;break;case 3:j=FUNCTION_TABLE[f](HEAP[e+20],g);d=j!=0?4:5;break;case 4:h=j;d=6;break;case 5:h=0;d=6;break;case 6:return a=h;default:assert(0,"bad label: "+d)}},0,function(){return 0},0,function(a,c,d){var e=STACKTOP;STACKTOP+=4;_memset(e,0,4);var f,g=null;for(f=-1;;)switch(f){case -1:var h,
j,k,l,m,n=e;h=a;f=c;j=d;m=0;HEAP[n]=0;f=__PyArg_ParseTupleAndKeywords_SizeT(f,j,Na,x,allocate([n,0,0,0],["i8**",0,0,0],ALLOC_STACK))==0?1:2;break;case 1:k=0;f=21;break;case 2:l=FUNCTION_TABLE[HEAP[h+152]](h,0);f=l==0?3:4;break;case 3:k=0;f=21;break;case 4:m=_PyObject_GetAttrString(h,Xa);f=m==0?13:5;break;case 5:f=HEAP[m+4]!=wa?6:7;break;case 6:_PyErr_SetString(HEAP[_PyExc_TypeError],Ca);f=13;break;case 7:HEAP[l+8]=HEAP[m+8];HEAP[l+32]=0;g=b(HEAP[n]);HEAP[l+20]=g;var o=l;HEAP[o+20]==0?(g=7,f=14):(g=
7,f=8);break;case 8:f=HEAP[HEAP[l+8]+28]!=0?9:10;break;case 9:f=FUNCTION_TABLE[HEAP[HEAP[l+8]+28]](l+12,HEAP[HEAP[l+8]+4])!=0?13:10;break;case 10:HEAP[m]-=1;f=HEAP[m]==0?11:12;break;case 11:FUNCTION_TABLE[HEAP[HEAP[m+4]+24]](m);f=12;break;case 12:k=l;f=21;break;case 13:var p=l,g=13;f=14;break;case 14:f=(g==13?p:o)!=0?15:17;break;case 15:HEAP[l]-=1;f=HEAP[l]==0?16:17;break;case 16:FUNCTION_TABLE[HEAP[HEAP[l+4]+24]](l);f=17;break;case 17:f=m!=0?18:20;break;case 18:HEAP[m]-=1;f=HEAP[m]==0?19:20;break;
case 19:FUNCTION_TABLE[HEAP[HEAP[m+4]+24]](m);f=20;break;case 20:k=0;f=21;break;case 21:return a=k,STACKTOP=e,a;default:assert(0,"bad label: "+f)}},0,function(a,b){var c=STACKTOP;STACKTOP+=4;_memset(c,0,4);var d;for(d=-1;;)switch(d){case -1:var e,f,g=c,h;e=a;d=b;HEAP[g]=0;d=_PyArg_UnpackTuple(d,Ra,0,1,allocate([g,0,0,0],["%struct.PyObject**",0,0,0],ALLOC_STACK))==0?1:2;break;case 1:f=0;d=8;break;case 2:d=HEAP[g]==__Py_NoneStruct|HEAP[g]==0?3:4;break;case 3:h=-1;d=7;break;case 4:d=(HEAP[HEAP[HEAP[g]+
4]+84]&8388608)!=0?5:6;break;case 5:h=_PyInt_AsSsize_t(HEAP[g]);d=7;break;case 6:_PyErr_SetString(HEAP[_PyExc_TypeError],Ia);f=0;d=8;break;case 7:f=o(e,Ra,h);d=8;break;case 8:return e=f,STACKTOP=c,e;default:assert(0,"bad label: "+d)}},0,function(a,b){var c=STACKTOP;STACKTOP+=4;_memset(c,0,4);var d;for(d=-1;;)switch(d){case -1:var e,f,g=c,h;e=a;d=b;HEAP[g]=0;d=_PyArg_UnpackTuple(d,Fa,0,1,allocate([g,0,0,0],["%struct.PyObject**",0,0,0],ALLOC_STACK))==0?1:2;break;case 1:f=0;d=8;break;case 2:d=HEAP[g]==
__Py_NoneStruct|HEAP[g]==0?3:4;break;case 3:h=-1;d=7;break;case 4:d=(HEAP[HEAP[HEAP[g]+4]+84]&8388608)!=0?5:6;break;case 5:h=_PyInt_AsSsize_t(HEAP[g]);d=7;break;case 6:_PyErr_SetString(HEAP[_PyExc_TypeError],Ia);f=0;d=8;break;case 7:f=o(e,Fa,h);d=8;break;case 8:return e=f,STACKTOP=c,e;default:assert(0,"bad label: "+d)}},0,function(a,b){var c=STACKTOP;STACKTOP+=4;_memset(c,0,4);var d;for(d=-1;;)switch(d){case -1:var e,f,g=c,h,j,k;e=a;d=b;HEAP[g]=0;d=_PyArg_UnpackTuple(d,$a,0,1,allocate([g,0,0,0],["%struct.PyObject**",
0,0,0],ALLOC_STACK))==0?1:2;break;case 1:f=0;d=12;break;case 2:d=HEAP[g]==__Py_NoneStruct|HEAP[g]==0?3:4;break;case 3:k=-1;d=7;break;case 4:d=(HEAP[HEAP[HEAP[g]+4]+84]&8388608)!=0?5:6;break;case 5:k=_PyInt_AsSsize_t(HEAP[g]);d=7;break;case 6:_PyErr_SetString(HEAP[_PyExc_TypeError],Ia);f=0;d=12;break;case 7:h=d=o(e,Ra,k);d=d==0?8:9;break;case 8:f=0;d=12;break;case 9:j=_PyUnicodeUCS2_Splitlines(h,1);HEAP[h]-=1;d=HEAP[h]==0?10:11;break;case 10:FUNCTION_TABLE[HEAP[HEAP[h+4]+24]](h);d=11;break;case 11:f=
j;d=12;break;case 12:return e=f,STACKTOP=c,e;default:assert(0,"bad label: "+d)}},0,function(a){var b;for(b=-1;;)switch(b){case -1:var c,d;c=a;b=HEAP[HEAP[c+8]+32]!=0?1:3;break;case 1:b=FUNCTION_TABLE[HEAP[HEAP[c+8]+32]](c+12,HEAP[HEAP[c+8]+4])!=0?2:3;break;case 2:d=0;b=4;break;case 3:HEAP[c+32]=0;HEAP[__Py_NoneStruct]+=1;d=__Py_NoneStruct;b=4;break;case 4:return a=d;default:assert(0,"bad label: "+b)}},0,function(a){var b;for(b=-1;;)switch(b){case -1:var c;c=a;_PyObject_GC_UnTrack(c);b=HEAP[c+20]!=
0?1:5;break;case 1:b=HEAP[c+20]==0?3:2;break;case 2:b=HEAP[c+20]>3?3:5;break;case 3:b=HEAP[c+20];HEAP[b]-=1;b=HEAP[b]==0?4:5;break;case 4:FUNCTION_TABLE[HEAP[HEAP[HEAP[c+20]+4]+24]](HEAP[c+20]);b=5;break;case 5:b=HEAP[c+36]!=0?6:8;break;case 6:b=HEAP[c+36];HEAP[b]-=1;b=HEAP[b]==0?7:8;break;case 7:FUNCTION_TABLE[HEAP[HEAP[HEAP[c+36]+4]+24]](HEAP[c+36]);b=8;break;case 8:FUNCTION_TABLE[HEAP[HEAP[c+4]+160]](c);return;default:assert(0,"bad label: "+b)}},0,function(a,b,c){var d;for(d=-1;;)switch(d){case -1:var e,
f,g,h,j,k;e=a;f=b;g=c;d=HEAP[e+20]==0?2:1;break;case 1:d=HEAP[e+20]>3?2:5;break;case 2:d=HEAP[e+20]!=0?3:5;break;case 3:j=FUNCTION_TABLE[f](HEAP[e+20],g);d=j!=0?4:5;break;case 4:h=j;d=9;break;case 5:d=HEAP[e+36]!=0?6:8;break;case 6:k=FUNCTION_TABLE[f](HEAP[e+36],g);d=k!=0?7:8;break;case 7:h=k;d=9;break;case 8:h=0;d=9;break;case 9:return a=h;default:assert(0,"bad label: "+d)}},0,function(){return 0},0,function(a,c,d){var e=STACKTOP;STACKTOP+=8;_memset(e,0,8);var f,g=null;for(f=-1;;)switch(f){case -1:var h,
j,k,l,m=e,n,o=e+4;h=a;f=c;j=d;n=0;HEAP[o]=0;f=__PyArg_ParseTupleAndKeywords_SizeT(f,j,kb,A,allocate([m,0,0,0,o,0,0,0],["%struct.PyObject**",0,0,0,"i8**",0,0,0],ALLOC_STACK))==0?1:2;break;case 1:k=0;f=21;break;case 2:l=FUNCTION_TABLE[HEAP[h+152]](h,0);f=l==0?3:4;break;case 3:k=0;f=21;break;case 4:n=_PyObject_GetAttrString(h,Xa);f=n==0?13:5;break;case 5:f=HEAP[n+4]!=wa?6:7;break;case 6:_PyErr_SetString(HEAP[_PyExc_TypeError],Ca);f=13;break;case 7:HEAP[l+8]=HEAP[n+8];HEAP[l+36]=HEAP[m];HEAP[HEAP[m]]+=
1;HEAP[l+32]=0;g=b(HEAP[o]);HEAP[l+20]=g;var p=l;HEAP[p+20]==0?(g=7,f=14):(g=7,f=8);break;case 8:f=HEAP[HEAP[l+8]+28]!=0?9:10;break;case 9:f=FUNCTION_TABLE[HEAP[HEAP[l+8]+28]](l+12,HEAP[HEAP[l+8]+4])!=0?13:10;break;case 10:HEAP[n]-=1;f=HEAP[n]==0?11:12;break;case 11:FUNCTION_TABLE[HEAP[HEAP[n+4]+24]](n);f=12;break;case 12:k=l;f=21;break;case 13:var q=l,g=13;f=14;break;case 14:f=(g==13?q:p)!=0?15:17;break;case 15:HEAP[l]-=1;f=HEAP[l]==0?16:17;break;case 16:FUNCTION_TABLE[HEAP[HEAP[l+4]+24]](l);f=17;
break;case 17:f=n!=0?18:20;break;case 18:HEAP[n]-=1;f=HEAP[n]==0?19:20;break;case 19:FUNCTION_TABLE[HEAP[HEAP[n+4]+24]](n);f=20;break;case 20:k=0;f=21;break;case 21:return a=k,STACKTOP=e,a;default:assert(0,"bad label: "+f)}},0,function(a,b){var c;for(c=-1;;)switch(c){case -1:var d;c=p(a,b)!=0?1:2;break;case 1:d=0;c=3;break;case 2:HEAP[__Py_NoneStruct]+=1;d=__Py_NoneStruct;c=3;break;case 3:return c=d;default:assert(0,"bad label: "+c)}},0,function(a,b){var c;for(c=-1;;)switch(c){case -1:var d,e,f,g,
h,j;d=a;e=b;c=_PySequence_Check(e)==0?1:2;break;case 1:_PyErr_SetString(HEAP[_PyExc_TypeError],Ya);f=0;c=12;break;case 2:h=0;c=10;break;case 3:g=_PySequence_GetItem(e,h);c=g==0?4:5;break;case 4:f=0;c=12;break;case 5:j=p(d,g);HEAP[g]-=1;c=HEAP[g]==0?6:7;break;case 6:FUNCTION_TABLE[HEAP[HEAP[g+4]+24]](g);c=7;break;case 7:c=j==-1?8:9;break;case 8:f=0;c=12;break;case 9:h+=1;c=10;break;case 10:c=_PySequence_Size(e)>h?3:11;break;case 11:HEAP[__Py_NoneStruct]+=1;f=__Py_NoneStruct;c=12;break;case 12:return c=
f;default:assert(0,"bad label: "+c)}},0,function(a){var b=STACKTOP;STACKTOP+=4;_memset(b,0,4);var c;for(c=-1;;)switch(c){case -1:var d,e,f=b;d=a;HEAP[f]=d+24;f=j(HEAP[d+8],d+12,f,HEAP[d+28],HEAP[d+20],3);HEAP[d+28]=0;c=f==0?1:2;break;case 1:e=0;c=10;break;case 2:c=_PyString_Size(f)>0?3:7;break;case 3:c=__PyObject_CallMethod_SizeT(HEAP[d+32],ia,ba,allocate([f,0,0,0],["%struct.PyObject*",0,0,0],ALLOC_STACK));c=c==0?4:7;break;case 4:HEAP[f]-=1;c=HEAP[f]==0?5:6;break;case 5:FUNCTION_TABLE[HEAP[HEAP[f+
4]+24]](f);c=6;break;case 6:e=0;c=10;break;case 7:HEAP[f]-=1;c=HEAP[f]==0?8:9;break;case 8:FUNCTION_TABLE[HEAP[HEAP[f+4]+24]](f);c=9;break;case 9:HEAP[__Py_NoneStruct]+=1;e=__Py_NoneStruct;c=10;break;case 10:return a=e,STACKTOP=b,a;default:assert(0,"bad label: "+c)}},0,function(a){var b;for(b=-1;;)switch(b){case -1:var c;c=a;_PyObject_GC_UnTrack(c);b=HEAP[c+20]!=0?1:5;break;case 1:b=HEAP[c+20]==0?3:2;break;case 2:b=HEAP[c+20]>3?3:5;break;case 3:b=HEAP[c+20];HEAP[b]-=1;b=HEAP[b]==0?4:5;break;case 4:FUNCTION_TABLE[HEAP[HEAP[HEAP[c+
20]+4]+24]](HEAP[c+20]);b=5;break;case 5:b=HEAP[c+32]!=0?6:8;break;case 6:b=HEAP[c+32];HEAP[b]-=1;b=HEAP[b]==0?7:8;break;case 7:FUNCTION_TABLE[HEAP[HEAP[HEAP[c+32]+4]+24]](HEAP[c+32]);b=8;break;case 8:FUNCTION_TABLE[HEAP[HEAP[c+4]+160]](c);return;default:assert(0,"bad label: "+b)}},0,function(a,b,c){var d;for(d=-1;;)switch(d){case -1:var e,f,g,h,j,k;e=a;f=b;g=c;d=HEAP[e+20]==0?2:1;break;case 1:d=HEAP[e+20]>3?2:5;break;case 2:d=HEAP[e+20]!=0?3:5;break;case 3:j=FUNCTION_TABLE[f](HEAP[e+20],g);d=j!=
0?4:5;break;case 4:h=j;d=9;break;case 5:d=HEAP[e+32]!=0?6:8;break;case 6:k=FUNCTION_TABLE[f](HEAP[e+32],g);d=k!=0?7:8;break;case 7:h=k;d=9;break;case 8:h=0;d=9;break;case 9:return a=h;default:assert(0,"bad label: "+d)}},0,function(){return 0},0,function(a,c,d){var e=STACKTOP;STACKTOP+=8;_memset(e,0,8);var f,g=null;for(f=-1;;)switch(f){case -1:var h,j,k,l,m=e,n,o=e+4;h=a;f=c;j=d;n=0;HEAP[o]=0;f=__PyArg_ParseTupleAndKeywords_SizeT(f,j,ta,A,allocate([m,0,0,0,o,0,0,0],["%struct.PyObject**",0,0,0,"i8**",
0,0,0],ALLOC_STACK))==0?1:2;break;case 1:k=0;f=21;break;case 2:l=FUNCTION_TABLE[HEAP[h+152]](h,0);f=l==0?3:4;break;case 3:k=0;f=21;break;case 4:n=_PyObject_GetAttrString(h,Xa);f=n==0?13:5;break;case 5:f=HEAP[n+4]!=wa?6:7;break;case 6:_PyErr_SetString(HEAP[_PyExc_TypeError],Ca);f=13;break;case 7:HEAP[l+8]=HEAP[n+8];HEAP[l+32]=HEAP[m];HEAP[HEAP[m]]+=1;HEAP[l+28]=0;g=b(HEAP[o]);HEAP[l+20]=g;var p=l;HEAP[p+20]==0?(g=7,f=14):(g=7,f=8);break;case 8:f=HEAP[HEAP[l+8]+16]!=0?9:10;break;case 9:f=FUNCTION_TABLE[HEAP[HEAP[l+
8]+16]](l+12,HEAP[HEAP[l+8]+4])!=0?13:10;break;case 10:HEAP[n]-=1;f=HEAP[n]==0?11:12;break;case 11:FUNCTION_TABLE[HEAP[HEAP[n+4]+24]](n);f=12;break;case 12:k=l;f=21;break;case 13:var q=l,g=13;f=14;break;case 14:f=(g==13?q:p)!=0?15:17;break;case 15:HEAP[l]-=1;f=HEAP[l]==0?16:17;break;case 16:FUNCTION_TABLE[HEAP[HEAP[l+4]+24]](l);f=17;break;case 17:f=n!=0?18:20;break;case 18:HEAP[n]-=1;f=HEAP[n]==0?19:20;break;case 19:FUNCTION_TABLE[HEAP[HEAP[n+4]+24]](n);f=20;break;case 20:k=0;f=21;break;case 21:return a=
k,STACKTOP=e,a;default:assert(0,"bad label: "+f)}},0,function(a,b){var c;for(c=-1;;)switch(c){case -1:var d,e,f,g;d=b;c=_PyCapsule_IsValid(d,za)==0?1:2;break;case 1:_PyErr_SetString(HEAP[_PyExc_ValueError],Aa);e=0;c=8;break;case 2:g=_PyCapsule_GetPointer(d,za);c=HEAP[g+8]!=0?3:5;break;case 3:c=FUNCTION_TABLE[HEAP[g+8]](HEAP[g+4])!=0?4:5;break;case 4:e=0;c=8;break;case 5:f=c=__PyObject_New(wa);c=c==0?6:7;break;case 6:e=0;c=8;break;case 7:HEAP[f+8]=g;e=f;c=8;break;case 8:return d=e;default:assert(0,
"bad label: "+c)}},0]);r.run=q;q();return r});