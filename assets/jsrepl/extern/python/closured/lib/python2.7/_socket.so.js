(function(g){function e(){return _PyErr_SetFromErrno(HEAP[u])}function b(a){var b;for(b=-1;;)switch(b){case -1:var c,d;c=a;b=c==-11?1:2;break;case 1:e();b=6;break;case 2:b=_gai_strerror(c);d=_Py_BuildValue(v,allocate([c,0,0,0,b,0,0,0],["i32",0,0,0,"i8*",0,0,0],ALLOC_STACK));b=d!=0?3:5;break;case 3:_PyErr_SetObject(HEAP[x],d);HEAP[d]-=1;b=HEAP[d]==0?4:5;break;case 4:FUNCTION_TABLE[HEAP[HEAP[d+4]+24]](d);b=5;break;case 5:b=6;break;case 6:return;
default:assert(0,"bad label: "+b)}}function a(a,b){var c;for(c=-1;;)switch(c){case -1:var d,e;d=a;c=b;var f=e=_fcntl(HEAP[d+8],3,allocate(4,"i32",ALLOC_STACK));c=c!=0?1:2;break;case 1:e=f&-2049;c=3;break;case 2:e=f|2048;c=3;break;case 3:_fcntl(HEAP[d+8],4,allocate([e,0,0,0],["i32",0,0,0],ALLOC_STACK));return;default:assert(0,"bad label: "+c)}}function c(a,b){var c=STACKTOP;STACKTOP+=8;_memset(c,0,8);var d;for(d=-1;;)switch(d){case -1:var e,f,g,h,j,k=c;e=a;f=b;d=HEAP[e+28]<=0?1:2;break;case 1:h=0;
d=12;break;case 2:d=HEAP[e+8]<0?3:4;break;case 3:h=0;d=12;break;case 4:HEAP[k]=HEAP[e+8];d=f!=0?5:6;break;case 5:g=4;d=7;break;case 6:g=1;d=7;break;case 7:HEAP[k+4]=g;j=HEAP[e+28]*1E3+0.5|0;j=d=_poll(k,1,j);d=d<0?8:9;break;case 8:h=-1;d=12;break;case 9:d=j==0?10:11;break;case 10:h=1;d=12;break;case 11:h=0;d=12;break;case 12:return e=h,STACKTOP=c,e;default:assert(0,"bad label: "+d)}}function d(b,c,d,e,f){var h;for(h=-1;;)switch(h){case -1:var j,k,l,m;j=b;h=c;k=d;l=e;m=f;HEAP[j+8]=h;HEAP[j+12]=k;HEAP[j+
16]=l;HEAP[j+20]=m;HEAP[j+28]=HEAP[y];HEAP[j+24]=g+2;h=HEAP[y]>=0?1:2;break;case 1:a(j,0);h=2;break;case 2:return;default:assert(0,"bad label: "+h)}}function f(a,b,c,e){var f;for(f=-1;;)switch(f){case -1:var g,h,j,k,l;g=a;h=b;j=c;k=e;l=_PyType_GenericNew(ac,0,0);f=l!=0?1:2;break;case 1:d(l,g,h,j,k);f=2;break;case 2:return a=l;default:assert(0,"bad label: "+f)}}function h(a,c,d,e){var f=STACKTOP;STACKTOP+=53;_memset(f,0,53);var g;for(g=-1;;)switch(g){case -1:var h,j,k,l,m,n=f,o=f+32,p,q=f+36,r=f+40,
s=f+44,t=f+48,v=f+52,w;h=a;j=c;k=d;l=e;_llvm_memset_p0i8_i32(j,0,16,1,0);g=HEAP[h]==0?1:12;break;case 1:_llvm_memset_p0i8_i32(n,0,32,1,0);HEAP[n+4]=l;HEAP[n+8]=2;HEAP[n]=1;p=_getaddrinfo(0,B,n,o);g=p!=0?2:3;break;case 2:b(p);m=-1;g=30;break;case 3:g=HEAP[HEAP[o]+4];g=g==2?4:g==10?5:6;break;case 4:w=4;g=7;break;case 5:w=16;g=7;break;case 6:_freeaddrinfo(HEAP[o]);_PyErr_SetString(HEAP[u],A);m=-1;g=30;break;case 7:var x=HEAP[o];g=HEAP[HEAP[o]+28]!=0?8:9;break;case 8:_freeaddrinfo(x);_PyErr_SetString(HEAP[u],
C);m=-1;g=30;break;case 9:g=HEAP[x+16]<k?10:11;break;case 10:k=HEAP[HEAP[o]+16];g=11;break;case 11:_llvm_memcpy_p0i8_p0i8_i32(j,HEAP[HEAP[o]+20],k,1,0);_freeaddrinfo(HEAP[o]);m=w;g=30;break;case 12:g=HEAP[h]==60?13:17;break;case 13:g=_strcmp(h,G)==0?14:17;break;case 14:g=l!=2&l!=0?15:16;break;case 15:_PyErr_SetString(HEAP[u],F);m=-1;g=30;break;case 16:m=j;_llvm_memset_p0i8_i32(m,0,16,1,0);HEAP[m]=2;HEAP[m+4]=-1;m=4;g=30;break;case 17:g=_sscanf(h,E,allocate([q,0,0,0,r,0,0,0,s,0,0,0,t,0,0,0,v,0,0,0],
["i32*",0,0,0,"i32*",0,0,0,"i32*",0,0,0,"i32*",0,0,0,"i8*",0,0,0],ALLOC_STACK))==4&HEAP[q]>=0&HEAP[q]<=255?18:22;break;case 18:g=HEAP[r]>=0&HEAP[r]<=255?19:22;break;case 19:g=HEAP[s]>=0&HEAP[s]<=255?20:22;break;case 20:g=HEAP[t]>=0&HEAP[t]<=255?21:22;break;case 21:m=j;g=_htonl(HEAP[r]<<16|HEAP[q]<<24|HEAP[t]|HEAP[s]<<8);HEAP[m+4]=g;HEAP[m]=2;m=4;g=30;break;case 22:_llvm_memset_p0i8_i32(n,0,32,1,0);HEAP[n+4]=l;p=g=_getaddrinfo(h,0,n,o);g=g!=0?23:24;break;case 23:b(p);m=-1;g=30;break;case 24:g=HEAP[HEAP[o]+
16]<k?25:26;break;case 25:k=HEAP[HEAP[o]+16];g=26;break;case 26:_llvm_memcpy_p0i8_p0i8_i32(j,HEAP[HEAP[o]+20],k,1,0);_freeaddrinfo(HEAP[o]);g=HEAP[j];g=g==2?27:g==10?28:29;break;case 27:m=4;g=30;break;case 28:m=16;g=30;break;case 29:_PyErr_SetString(HEAP[u],N);m=-1;g=30;break;case 30:return a=m,STACKTOP=f,a;default:assert(0,"bad label: "+g)}}function j(a,c){var d=STACKTOP;STACKTOP+=1025;_memset(d,0,1025);var e;for(e=-1;;)switch(e){case -1:var f,g=d,h;h=_getnameinfo(a,c,g,1025,0,0,1);e=h!=0?1:2;break;
case 1:b(h);f=0;e=3;break;case 2:f=_PyString_FromString(g);e=3;break;case 3:return e=f,STACKTOP=d,e;default:assert(0,"bad label: "+e)}}function k(a,b,c){var d=STACKTOP;STACKTOP+=32;_memset(d,0,32);var e;for(e=-1;;)switch(e){case -1:var f,g,h,k,l,m,n,o,p,q,r,s,t=d,u;f=a;g=b;h=c;e=h==0?1:2;break;case 1:HEAP[__Py_NoneStruct]+=1;k=__Py_NoneStruct;e=27;break;case 2:e=HEAP[g];e=e==1?7:e==2?3:e==10?11:e==16?10:e==17?15:e==30?19:26;break;case 3:m=j(g,16);l=0;e=m!=0?4:6;break;case 4:l=g;l=_ntohs(HEAP[l+2]&
65535);l=_Py_BuildValue(Q,allocate([m,0,0,0,l,0,0,0],["%struct.PyObject*",0,0,0,"i32",0,0,0],ALLOC_STACK));HEAP[m]-=1;e=HEAP[m]==0?5:6;break;case 5:FUNCTION_TABLE[HEAP[HEAP[m+4]+24]](m);e=6;break;case 6:k=l;e=27;break;case 7:n=g;e=HEAP[n+2]==0?8:9;break;case 8:h-=2;k=_PyString_FromStringAndSize(n+2,h);e=27;break;case 9:k=_PyString_FromString(n+2);e=27;break;case 10:k=g;k=_Py_BuildValue(I,allocate([HEAP[k+4],0,0,0,HEAP[k+8],0,0,0],["i32",0,0,0,"i32",0,0,0],ALLOC_STACK));e=27;break;case 11:p=j(g,28);
q=0;e=p!=0?12:14;break;case 12:o=g;q=HEAP[o+24];e=HEAP[o+4];o=_ntohs(HEAP[o+2]&65535);q=_Py_BuildValue(J,allocate([p,0,0,0,o,0,0,0,e,0,0,0,q,0,0,0],["%struct.PyObject*",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0],ALLOC_STACK));HEAP[p]-=1;e=HEAP[p]==0?13:14;break;case 13:FUNCTION_TABLE[HEAP[HEAP[p+4]+24]](p);e=14;break;case 14:k=q;e=27;break;case 15:r=g;s=P;e=HEAP[r+4]!=0?16:18;break;case 16:HEAP[t+16]=HEAP[r+4];e=_ioctl(f,35088,allocate([t,0,0,0],["%struct.ifreq*",0,0,0],ALLOC_STACK))==0?17:18;break;
case 17:s=t;e=18;break;case 18:k=HEAP[r+11];e=r+12;o=HEAP[r+8];var v=HEAP[r+10],w=_ntohs(HEAP[r+2]&65535);k=_Py_BuildValue(D,allocate([s,0,0,0,w,0,0,0,v,0,0,0,o,0,0,0,e,0,0,0,k,0,0,0],["i8*",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i32",0,0,0],ALLOC_STACK));e=27;break;case 19:var x=u=g;e=HEAP[u+2]==1?20:21;break;case 20:k=_Py_BuildValue(T,allocate([HEAP[u+2],0,0,0,HEAP[u+4],0,0,0,HEAP[u+4+4],0,0,0,HEAP[u+4+8],0,0,0,HEAP[x+3],0,0,0],["i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",
0,0,0],ALLOC_STACK));e=27;break;case 21:var M=u;e=HEAP[x+2]==2?22:23;break;case 22:k=_Py_BuildValue(T,allocate([HEAP[u+2],0,0,0,HEAP[u+4],0,0,0,HEAP[u+4+4],0,0,0,HEAP[u+4+4],0,0,0,HEAP[M+3],0,0,0],["i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0],ALLOC_STACK));e=27;break;case 23:e=HEAP[M+2]==3?24:25;break;case 24:k=_Py_BuildValue(T,allocate([HEAP[u+2],0,0,0,HEAP[u+4+4],0,0,0,HEAP[u+4],0,0,0,0,0,0,0,HEAP[u+3],0,0,0],["i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0],ALLOC_STACK));
e=27;break;case 25:_PyErr_SetString(HEAP[_PyExc_ValueError],L);k=0;e=27;break;case 26:k=_Py_BuildValue($,allocate([HEAP[g],0,0,0,g+2,0,0,0,14,0,0,0],["i32",0,0,0,"i8*",0,0,0,"i32",0,0,0],ALLOC_STACK));e=27;break;case 27:return a=k,STACKTOP=d,a;default:assert(0,"bad label: "+e)}}function l(a,b,c,d){var e=STACKTOP;STACKTOP+=116;_memset(e,0,116);var f,g=null;for(f=-1;;)switch(f){case -1:var j,k,l,m,n,o,p=e,q=e+4,r,s=e+8,t=e+12,v,w=e+16,x=e+20,M,y=e+24,A=e+28,V=e+32,B=e+36,C,D=e+40,E=e+72,F=e+76,G=e+
80,I=e+84,J=e+88,rc=e+92,lb=e+96,P=e+100,N=e+104,O=e+108,Q=e+112,Ba;j=a;k=b;l=c;m=d;f=HEAP[j+12];f=f==1?1:f==2?16:f==10?25:f==16?11:f==17?34:f==30?47:59;break;case 1:f=_PyArg_Parse(k,R,allocate([p,0,0,0,q,0,0,0],["i8**",0,0,0,"i32*",0,0,0],ALLOC_STACK))==0?2:3;break;case 2:n=0;f=60;break;case 3:o=l;var ma=HEAP[q];ma<=0?(g=3,f=7):(g=3,f=4);break;case 4:var fa=HEAP[q];HEAP[HEAP[p]]!=0?(g=4,f=7):(g=4,f=5);break;case 5:f=fa>108?6:10;break;case 6:_PyErr_SetString(HEAP[u],K);n=0;f=60;break;case 7:f=(g==
3?ma:fa)>107?8:9;break;case 8:_PyErr_SetString(HEAP[u],K);n=0;f=60;break;case 9:HEAP[o+2+HEAP[q]]=0;f=10;break;case 10:HEAP[o]=HEAP[j+12]&65535;_llvm_memcpy_p0i8_p0i8_i32(o+2,HEAP[p],HEAP[q],1,0);HEAP[m]=HEAP[q]+2;n=1;f=60;break;case 11:r=l;var T=k;f=(HEAP[HEAP[k+4]+84]&67108864)==0?12:13;break;case 12:_PyErr_Format(HEAP[_PyExc_TypeError],H,allocate([HEAP[HEAP[T+4]+12],0,0,0],["i8*",0,0,0],ALLOC_STACK));n=0;f=60;break;case 13:f=_PyArg_ParseTuple(T,S,allocate([s,0,0,0,t,0,0,0],["i32*",0,0,0,"i32*",
0,0,0],ALLOC_STACK))==0?14:15;break;case 14:n=0;f=60;break;case 15:HEAP[r]=16;HEAP[r+4]=HEAP[s];HEAP[r+8]=HEAP[t];HEAP[m]=12;n=1;f=60;break;case 16:var na=k;f=(HEAP[HEAP[k+4]+84]&67108864)==0?17:18;break;case 17:_PyErr_Format(HEAP[_PyExc_TypeError],U,allocate([HEAP[HEAP[na+4]+12],0,0,0],["i8*",0,0,0],ALLOC_STACK));n=0;f=60;break;case 18:f=_PyArg_ParseTuple(na,z,allocate([aa,0,0,0,w,0,0,0,x,0,0,0],["i8*",0,0,0,"i8**",0,0,0,"i32*",0,0,0],ALLOC_STACK))==0?19:20;break;case 19:n=0;f=60;break;case 20:v=
l;f=h(HEAP[w],v,16,2);_PyMem_Free(HEAP[w]);f=f<0?21:22;break;case 21:n=0;f=60;break;case 22:f=HEAP[x]<0|HEAP[x]>65535?23:24;break;case 23:_PyErr_SetString(HEAP[_PyExc_OverflowError],ja);n=0;f=60;break;case 24:HEAP[v]=2;n=_htons(HEAP[x]&65535);HEAP[v+2]=n;HEAP[m]=16;n=1;f=60;break;case 25:HEAP[B]=0;HEAP[V]=HEAP[B];var ca=k;f=(HEAP[HEAP[k+4]+84]&67108864)==0?26:27;break;case 26:_PyErr_Format(HEAP[_PyExc_TypeError],la,allocate([HEAP[HEAP[ca+4]+12],0,0,0],["i8*",0,0,0],ALLOC_STACK));n=0;f=60;break;case 27:f=
_PyArg_ParseTuple(ca,da,allocate([aa,0,0,0,y,0,0,0,A,0,0,0,V,0,0,0,B,0,0,0],["i8*",0,0,0,"i8**",0,0,0,"i32*",0,0,0,"i32*",0,0,0,"i32*",0,0,0],ALLOC_STACK))==0?28:29;break;case 28:n=0;f=60;break;case 29:M=l;f=h(HEAP[y],M,28,10);_PyMem_Free(HEAP[y]);f=f<0?30:31;break;case 30:n=0;f=60;break;case 31:f=HEAP[A]<0|HEAP[A]>65535?32:33;break;case 32:_PyErr_SetString(HEAP[_PyExc_OverflowError],ja);n=0;f=60;break;case 33:HEAP[M]=HEAP[j+12]&65535;n=_htons(HEAP[A]&65535);HEAP[M+2]=n;HEAP[M+4]=HEAP[V];HEAP[M+24]=
HEAP[B];HEAP[m]=28;n=1;f=60;break;case 34:HEAP[G]=0;HEAP[I]=0;HEAP[J]=0;HEAP[rc]=0;var xa=k;f=(HEAP[HEAP[k+4]+84]&67108864)==0?35:36;break;case 35:_PyErr_Format(HEAP[_PyExc_TypeError],Ka,allocate([HEAP[HEAP[xa+4]+12],0,0,0],["i8*",0,0,0],ALLOC_STACK));n=0;f=60;break;case 36:f=_PyArg_ParseTuple(xa,Ma,allocate([E,0,0,0,F,0,0,0,I,0,0,0,G,0,0,0,J,0,0,0,rc,0,0,0],["i8**",0,0,0,"i32*",0,0,0,"i32*",0,0,0,"i32*",0,0,0,"i8**",0,0,0,"i32*",0,0,0],ALLOC_STACK))==0?37:38;break;case 37:n=0;f=60;break;case 38:_strncpy(D,
HEAP[E],16);HEAP[D+15]=0;f=_ioctl(HEAP[j+8],35123,allocate([D,0,0,0],["%struct.ifreq*",0,0,0],ALLOC_STACK))<0?39:40;break;case 39:FUNCTION_TABLE[HEAP[j+24]]();n=0;f=60;break;case 40:f=HEAP[rc]>8?41:42;break;case 41:_PyErr_SetString(HEAP[_PyExc_ValueError],wa);n=0;f=60;break;case 42:f=HEAP[F]<0|HEAP[F]>65535?43:44;break;case 43:_PyErr_SetString(HEAP[_PyExc_OverflowError],ib);n=0;f=60;break;case 44:C=l;HEAP[C]=17;f=_htons(HEAP[F]&65535);HEAP[C+2]=f;HEAP[C+4]=HEAP[D+16];HEAP[C+10]=HEAP[I]&255;HEAP[C+
8]=HEAP[G]&65535;f=HEAP[rc]!=0?45:46;break;case 45:_llvm_memcpy_p0i8_p0i8_i32(C+12,HEAP[J],HEAP[rc],1,0);f=46;break;case 46:HEAP[C+11]=HEAP[rc]&255;HEAP[m]=20;n=1;f=60;break;case 47:HEAP[Q]=2;var qa=k;f=(HEAP[HEAP[k+4]+84]&67108864)==0?48:49;break;case 48:_PyErr_Format(HEAP[_PyExc_TypeError],cb,allocate([HEAP[HEAP[qa+4]+12],0,0,0],["i8*",0,0,0],ALLOC_STACK));n=0;f=60;break;case 49:f=_PyArg_ParseTuple(qa,db,allocate([lb,0,0,0,P,0,0,0,N,0,0,0,O,0,0,0,Q,0,0,0],["i32*",0,0,0,"i32*",0,0,0,"i32*",0,0,0,
"i32*",0,0,0,"i32*",0,0,0],ALLOC_STACK))==0?50:51;break;case 50:n=0;f=60;break;case 51:Ba=l;_llvm_memset_p0i8_i32(Ba,0,16,1,0);HEAP[Ba]=30;HEAP[Ba+3]=HEAP[Q]&255;HEAP[Ba+2]=HEAP[lb]&255;f=HEAP[lb]==1?52:53;break;case 52:HEAP[Ba+4]=HEAP[P];HEAP[Ba+4+4]=HEAP[N];HEAP[Ba+4+8]=HEAP[O];f=58;break;case 53:f=HEAP[lb]==2?54:55;break;case 54:HEAP[Ba+4]=HEAP[P];HEAP[Ba+4+4]=HEAP[N];f=58;break;case 55:f=HEAP[lb]==3?56:57;break;case 56:HEAP[Ba+4+4]=HEAP[P];HEAP[Ba+4]=HEAP[N];f=58;break;case 57:_PyErr_SetString(HEAP[_PyExc_TypeError],
L);n=0;f=60;break;case 58:HEAP[m]=16;n=1;f=60;break;case 59:_PyErr_SetString(HEAP[u],Da);n=0;f=60;break;case 60:return a=n,STACKTOP=e,a;default:assert(0,"bad label: "+f)}}function m(a,b){var c;for(c=-1;;)switch(c){case -1:var d,e;c=a;d=b;c=HEAP[c+12];c=c==1?1:c==2?3:c==10?4:c==16?2:c==17?5:c==30?6:7;break;case 1:HEAP[d]=110;e=1;c=8;break;case 2:HEAP[d]=12;e=1;c=8;break;case 3:HEAP[d]=16;e=1;c=8;break;case 4:HEAP[d]=28;e=1;c=8;break;case 5:HEAP[d]=20;e=1;c=8;break;case 6:HEAP[d]=16;e=1;c=8;break;case 7:_PyErr_SetString(HEAP[u],
gb);e=0;c=8;break;case 8:return d=e;default:assert(0,"bad label: "+c)}}function n(a,b,d,e){var f=STACKTOP;STACKTOP+=12;_memset(f,0,12);var g,h=null;for(g=-1;;)switch(g){case -1:var j,k,l;g=f;var m=f+4,n,o=f+8;j=a;k=b;h=d;l=e;n=0;HEAP[g]=k;k=_connect(HEAP[j+8],HEAP[g],h);HEAP[m]=k;HEAP[j+28]>0?(h=-1,g=1):(h=-1,g=11);break;case 1:g=HEAP[m]<0?2:13;break;case 2:g=___errno_location();g=HEAP[g]==115?3:10;break;case 3:n=c(j,1);g=n==0?4:7;break;case 4:HEAP[o]=4;_getsockopt(HEAP[j+8],1,4,m,o);g=HEAP[m]==106?
5:6;break;case 5:HEAP[m]=0;g=6;break;case 6:g=___errno_location();HEAP[g]=HEAP[m];g=10;break;case 7:g=n==-1?8:9;break;case 8:var p=___errno_location(),p=HEAP[p];HEAP[m]=p;h=8;g=11;break;case 9:HEAP[m]=11;g=13;break;case 10:var q=HEAP[m],h=10;g=11;break;case 11:g=(h==10?q:h==8?p:k)<0?12:13;break;case 12:g=___errno_location();HEAP[m]=HEAP[g];g=13;break;case 13:return HEAP[l]=n,a=HEAP[m],STACKTOP=f,a;default:assert(0,"bad label: "+g)}}function o(a,b,d,e){var f,g=null;for(f=-1;;)switch(f){case -1:var h,
j,k,l,m,n,o;h=a;j=b;k=d;l=e;n=-1;var p=o=c(h,0);p==0?(g=-1,f=1):(g=-1,f=2);break;case 1:n=_recv(HEAP[h+8],j,k,l);var q=o,g=1;f=2;break;case 2:f=(g==1?q:p)==1?3:4;break;case 3:_PyErr_SetString(HEAP[Xa],Ca);m=-1;f=7;break;case 4:f=n<0?5:6;break;case 5:FUNCTION_TABLE[HEAP[h+24]]();m=-1;f=7;break;case 6:m=n;f=7;break;case 7:return a=m;default:assert(0,"bad label: "+f)}}function p(a,b,d,e,f){var g=STACKTOP;STACKTOP+=136;_memset(g,0,136);var h,j=null;for(h=-1;;)switch(h){case -1:var l,n,o,p,q,r=g,s,t=g+
4,u,v,w=g+132;l=a;n=b;o=d;p=e;q=f;v=-1;HEAP[q]=0;h=m(l,w)==0?1:2;break;case 1:s=-1;h=11;break;case 2:_llvm_memset_p0i8_i32(t,0,HEAP[w],1,0);var x=u=c(l,0);x==0?(j=2,h=3):(j=2,h=4);break;case 3:HEAP[r]=t;v=_recvfrom(HEAP[l+8],n,o,p,HEAP[r],w);var M=u,j=3;h=4;break;case 4:h=(j==3?M:x)==1?5:6;break;case 5:_PyErr_SetString(HEAP[Xa],Ca);s=-1;h=11;break;case 6:var y=l;h=v<0?7:8;break;case 7:FUNCTION_TABLE[HEAP[y+24]]();s=-1;h=11;break;case 8:h=k(HEAP[l+8],t,HEAP[w],HEAP[y+20]);HEAP[q]=h;h=HEAP[q]==0?9:
10;break;case 9:s=-1;h=11;break;case 10:s=v;h=11;break;case 11:return a=s,STACKTOP=g,a;default:assert(0,"bad label: "+h)}}function q(a,b,c){var d=STACKTOP;STACKTOP+=44;_memset(d,0,44);var e;for(e=-1;;)switch(e){case -1:var f,g,h,k,l,m,n,o,p,q,r,s,t=d,x=d+16;f=a;g=b;h=128;k=c;p=o=n=0;e=f==0?1:2;break;case 1:l=___h_errno_location();a:{l=HEAP[l];e=void 0;for(e=-1;;)switch(e){case -1:var M;M=l;e=_hstrerror(M);M=_Py_BuildValue(v,allocate([M,0,0,0,e,0,0,0],["i32",0,0,0,"i8*",0,0,0],ALLOC_STACK));e=M!=0?
1:3;break;case 1:_PyErr_SetObject(HEAP[w],M);HEAP[M]-=1;e=HEAP[M]==0?2:3;break;case 2:FUNCTION_TABLE[HEAP[HEAP[M+4]+24]](M);e=3;break;case 3:break a;default:assert(0,"bad label: "+e)}}l=0;e=42;break;case 2:e=HEAP[f+8]!=k?3:4;break;case 3:l=_strerror(97);_PyErr_SetString(HEAP[u],l);l=0;e=42;break;case 4:e=k;e=e==2?5:e==10?7:9;break;case 5:e=h<=15?6:9;break;case 6:l=0;e=42;break;case 7:e=h<=27?8:9;break;case 8:l=0;e=42;break;case 9:o=e=_PyList_New(0);e=e==0?38:10;break;case 10:p=_PyList_New(0);e=p==
0?35:11;break;case 11:e=HEAP[f+4]!=0?12:19;break;case 12:m=HEAP[f+4];e=18;break;case 13:q=_PyString_FromString(HEAP[m]);e=q==0?35:14;break;case 14:r=_PyList_Append(o,q);HEAP[q]-=1;e=HEAP[q]==0?15:16;break;case 15:FUNCTION_TABLE[HEAP[HEAP[q+4]+24]](q);e=16;break;case 16:e=r!=0?35:17;break;case 17:m+=4;e=18;break;case 18:e=HEAP[m]!=0?13:19;break;case 19:m=HEAP[f+16];var y=t,z=t,V=t+4,H=t,B=t,C=x,D=x,E=x+8,F=x,G=x;e=33;break;case 20:e=k;e=e==2?21:e==10?24:27;break;case 21:_llvm_memset_p0i8_i32(y,0,16,
1,0);HEAP[z]=k&65535;_llvm_memcpy_p0i8_p0i8_i32(V,HEAP[m],4,1,0);q=j(H,16);e=HEAP[f+16]==m?22:28;break;case 22:e=h>15?23:28;break;case 23:_llvm_memcpy_p0i8_p0i8_i32(g,B,16,1,0);e=28;break;case 24:_llvm_memset_p0i8_i32(C,0,28,1,0);HEAP[D]=k&65535;_llvm_memcpy_p0i8_p0i8_i32(E,HEAP[m],16,1,0);q=j(F,28);e=HEAP[f+16]==m?25:28;break;case 25:e=h>27?26:28;break;case 26:_llvm_memcpy_p0i8_p0i8_i32(g,G,28,1,0);e=28;break;case 27:_PyErr_SetString(HEAP[u],A);l=0;e=42;break;case 28:e=q==0?35:29;break;case 29:s=
_PyList_Append(p,q);HEAP[q]-=1;e=HEAP[q]==0?30:31;break;case 30:FUNCTION_TABLE[HEAP[HEAP[q+4]+24]](q);e=31;break;case 31:e=s!=0?35:32;break;case 32:m+=4;e=33;break;case 33:e=HEAP[m]!=0?20:34;break;case 34:n=_Py_BuildValue(Ac,allocate([HEAP[f],0,0,0,o,0,0,0,p,0,0,0],["i8*",0,0,0,"%struct.PyObject*",0,0,0,"%struct.PyObject*",0,0,0],ALLOC_STACK));e=35;break;case 35:e=o!=0?36:38;break;case 36:HEAP[o]-=1;e=HEAP[o]==0?37:38;break;case 37:FUNCTION_TABLE[HEAP[HEAP[o+4]+24]](o);e=38;break;case 38:e=p!=0?39:
41;break;case 39:HEAP[p]-=1;e=HEAP[p]==0?40:41;break;case 40:FUNCTION_TABLE[HEAP[HEAP[p+4]+24]](p);e=41;break;case 41:l=n;e=42;break;case 42:return a=l,STACKTOP=d,a;default:assert(0,"bad label: "+e)}}function r(){s=allocate([115,111,99,107,101,116,40,91,102,97,109,105,108,121,91,44,32,116,121,112,101,91,44,32,112,114,111,116,111,93,93,93,41,32,45,62,32,115,111,99,107,101,116,32,111,98,106,101,99,116,10,10,79,112,101,110,32,97,32,115,111,99,107,101,116,32,111,102,32,116,104,101,32,103,105,118,101,
110,32,116,121,112,101,46,32,32,84,104,101,32,102,97,109,105,108,121,32,97,114,103,117,109,101,110,116,32,115,112,101,99,105,102,105,101,115,32,116,104,101,10,97,100,100,114,101,115,115,32,102,97,109,105,108,121,59,32,105,116,32,100,101,102,97,117,108,116,115,32,116,111,32,65,70,95,73,78,69,84,46,32,32,84,104,101,32,116,121,112,101,32,97,114,103,117,109,101,110,116,32,115,112,101,99,105,102,105,101,115,10,119,104,101,116,104,101,114,32,116,104,105,115,32,105,115,32,97,32,115,116,114,101,97,109,32,
40,83,79,67,75,95,83,84,82,69,65,77,44,32,116,104,105,115,32,105,115,32,116,104,101,32,100,101,102,97,117,108,116,41,10,111,114,32,100,97,116,97,103,114,97,109,32,40,83,79,67,75,95,68,71,82,65,77,41,32,115,111,99,107,101,116,46,32,32,84,104,101,32,112,114,111,116,111,99,111,108,32,97,114,103,117,109,101,110,116,32,100,101,102,97,117,108,116,115,32,116,111,32,48,44,10,115,112,101,99,105,102,121,105,110,103,32,116,104,101,32,100,101,102,97,117,108,116,32,112,114,111,116,111,99,111,108,46,32,32,75,101,
121,119,111,114,100,32,97,114,103,117,109,101,110,116,115,32,97,114,101,32,97,99,99,101,112,116,101,100,46,10,10,65,32,115,111,99,107,101,116,32,111,98,106,101,99,116,32,114,101,112,114,101,115,101,110,116,115,32,111,110,101,32,101,110,100,112,111,105,110,116,32,111,102,32,97,32,110,101,116,119,111,114,107,32,99,111,110,110,101,99,116,105,111,110,46,10,10,77,101,116,104,111,100,115,32,111,102,32,115,111,99,107,101,116,32,111,98,106,101,99,116,115,32,40,107,101,121,119,111,114,100,32,97,114,103,117,
109,101,110,116,115,32,110,111,116,32,97,108,108,111,119,101,100,41,58,10,10,97,99,99,101,112,116,40,41,32,45,45,32,97,99,99,101,112,116,32,97,32,99,111,110,110,101,99,116,105,111,110,44,32,114,101,116,117,114,110,105,110,103,32,110,101,119,32,115,111,99,107,101,116,32,97,110,100,32,99,108,105,101,110,116,32,97,100,100,114,101,115,115,10,98,105,110,100,40,97,100,100,114,41,32,45,45,32,98,105,110,100,32,116,104,101,32,115,111,99,107,101,116,32,116,111,32,97,32,108,111,99,97,108,32,97,100,100,114,101,
115,115,10,99,108,111,115,101,40,41,32,45,45,32,99,108,111,115,101,32,116,104,101,32,115,111,99,107,101,116,10,99,111,110,110,101,99,116,40,97,100,100,114,41,32,45,45,32,99,111,110,110,101,99,116,32,116,104,101,32,115,111,99,107,101,116,32,116,111,32,97,32,114,101,109,111,116,101,32,97,100,100,114,101,115,115,10,99,111,110,110,101,99,116,95,101,120,40,97,100,100,114,41,32,45,45,32,99,111,110,110,101,99,116,44,32,114,101,116,117,114,110,32,97,110,32,101,114,114,111,114,32,99,111,100,101,32,105,110,
115,116,101,97,100,32,111,102,32,97,110,32,101,120,99,101,112,116,105,111,110,10,100,117,112,40,41,32,45,45,32,114,101,116,117,114,110,32,97,32,110,101,119,32,115,111,99,107,101,116,32,111,98,106,101,99,116,32,105,100,101,110,116,105,99,97,108,32,116,111,32,116,104,101,32,99,117,114,114,101,110,116,32,111,110,101,32,91,42,93,10,102,105,108,101,110,111,40,41,32,45,45,32,114,101,116,117,114,110,32,117,110,100,101,114,108,121,105,110,103,32,102,105,108,101,32,100,101,115,99,114,105,112,116,111,114,10,
103,101,116,112,101,101,114,110,97,109,101,40,41,32,45,45,32,114,101,116,117,114,110,32,114,101,109,111,116,101,32,97,100,100,114,101,115,115,32,91,42,93,10,103,101,116,115,111,99,107,110,97,109,101,40,41,32,45,45,32,114,101,116,117,114,110,32,108,111,99,97,108,32,97,100,100,114,101,115,115,10,103,101,116,115,111,99,107,111,112,116,40,108,101,118,101,108,44,32,111,112,116,110,97,109,101,91,44,32,98,117,102,108,101,110,93,41,32,45,45,32,103,101,116,32,115,111,99,107,101,116,32,111,112,116,105,111,
110,115,10,103,101,116,116,105,109,101,111,117,116,40,41,32,45,45,32,114,101,116,117,114,110,32,116,105,109,101,111,117,116,32,111,114,32,78,111,110,101,10,108,105,115,116,101,110,40,110,41,32,45,45,32,115,116,97,114,116,32,108,105,115,116,101,110,105,110,103,32,102,111,114,32,105,110,99,111,109,105,110,103,32,99,111,110,110,101,99,116,105,111,110,115,10,109,97,107,101,102,105,108,101,40,91,109,111,100,101,44,32,91,98,117,102,115,105,122,101,93,93,41,32,45,45,32,114,101,116,117,114,110,32,97,32,102,
105,108,101,32,111,98,106,101,99,116,32,102,111,114,32,116,104,101,32,115,111,99,107,101,116,32,91,42,93,10,114,101,99,118,40,98,117,102,108,101,110,91,44,32,102,108,97,103,115,93,41,32,45,45,32,114,101,99,101,105,118,101,32,100,97,116,97,10,114,101,99,118,95,105,110,116,111,40,98,117,102,102,101,114,91,44,32,110,98,121,116,101,115,91,44,32,102,108,97,103,115,93,93,41,32,45,45,32,114,101,99,101,105,118,101,32,100,97,116,97,32,40,105,110,116,111,32,97,32,98,117,102,102,101,114,41,10,114,101,99,118,
102,114,111,109,40,98,117,102,108,101,110,91,44,32,102,108,97,103,115,93,41,32,45,45,32,114,101,99,101,105,118,101,32,100,97,116,97,32,97,110,100,32,115,101,110,100,101,114,39,115,32,97,100,100,114,101,115,115,10,114,101,99,118,102,114,111,109,95,105,110,116,111,40,98,117,102,102,101,114,91,44,32,110,98,121,116,101,115,44,32,91,44,32,102,108,97,103,115,93,41,10,32,32,45,45,32,114,101,99,101,105,118,101,32,100,97,116,97,32,97,110,100,32,115,101,110,100,101,114,39,115,32,97,100,100,114,101,115,115,
32,40,105,110,116,111,32,97,32,98,117,102,102,101,114,41,10,115,101,110,100,97,108,108,40,100,97,116,97,91,44,32,102,108,97,103,115,93,41,32,45,45,32,115,101,110,100,32,97,108,108,32,100,97,116,97,10,115,101,110,100,40,100,97,116,97,91,44,32,102,108,97,103,115,93,41,32,45,45,32,115,101,110,100,32,100,97,116,97,44,32,109,97,121,32,110,111,116,32,115,101,110,100,32,97,108,108,32,111,102,32,105,116,10,115,101,110,100,116,111,40,100,97,116,97,91,44,32,102,108,97,103,115,93,44,32,97,100,100,114,41,32,
45,45,32,115,101,110,100,32,100,97,116,97,32,116,111,32,97,32,103,105,118,101,110,32,97,100,100,114,101,115,115,10,115,101,116,98,108,111,99,107,105,110,103,40,48,32,124,32,49,41,32,45,45,32,115,101,116,32,111,114,32,99,108,101,97,114,32,116,104,101,32,98,108,111,99,107,105,110,103,32,73,47,79,32,102,108,97,103,10,115,101,116,115,111,99,107,111,112,116,40,108,101,118,101,108,44,32,111,112,116,110,97,109,101,44,32,118,97,108,117,101,41,32,45,45,32,115,101,116,32,115,111,99,107,101,116,32,111,112,116,
105,111,110,115,10,115,101,116,116,105,109,101,111,117,116,40,78,111,110,101,32,124,32,102,108,111,97,116,41,32,45,45,32,115,101,116,32,111,114,32,99,108,101,97,114,32,116,104,101,32,116,105,109,101,111,117,116,10,115,104,117,116,100,111,119,110,40,104,111,119,41,32,45,45,32,115,104,117,116,32,100,111,119,110,32,116,114,97,102,102,105,99,32,105,110,32,111,110,101,32,111,114,32,98,111,116,104,32,100,105,114,101,99,116,105,111,110,115,10,10,32,91,42,93,32,110,111,116,32,97,118,97,105,108,97,98,108,
101,32,111,110,32,97,108,108,32,112,108,97,116,102,111,114,109,115,33,0],"i8",ALLOC_NORMAL);u=allocate(1,"%struct.PyObject*",ALLOC_NORMAL);v=allocate([40,105,115,41,0],"i8",ALLOC_NORMAL);w=allocate(1,"%struct.PyObject*",ALLOC_NORMAL);x=allocate(1,"%struct.PyObject*",ALLOC_NORMAL);y=allocate([-1],["double",0,0,0,0,0,0,0,0],ALLOC_NORMAL);B=allocate([48,0],"i8",ALLOC_NORMAL);A=allocate([117,110,115,117,112,112,111,114,116,101,100,32,97,100,100,114,101,115,115,32,102,97,109,105,108,121,0],"i8",ALLOC_NORMAL);
C=allocate([119,105,108,100,99,97,114,100,32,114,101,115,111,108,118,101,100,32,116,111,32,109,117,108,116,105,112,108,101,32,97,100,100,114,101,115,115,0],"i8",ALLOC_NORMAL);G=allocate([60,98,114,111,97,100,99,97,115,116,62,0],"i8",ALLOC_NORMAL);F=allocate([97,100,100,114,101,115,115,32,102,97,109,105,108,121,32,109,105,115,109,97,116,99,104,101,100,0],"i8",ALLOC_NORMAL);E=allocate([37,100,46,37,100,46,37,100,46,37,100,37,99,0],"i8",ALLOC_NORMAL);N=allocate([117,110,107,110,111,119,110,32,97,100,
100,114,101,115,115,32,102,97,109,105,108,121,0],"i8",ALLOC_NORMAL);Q=allocate([79,105,0],"i8",ALLOC_NORMAL);I=allocate([73,73,0],"i8",ALLOC_NORMAL);J=allocate([79,105,105,105,0],"i8",ALLOC_NORMAL);P=allocate(1,"i8",ALLOC_NORMAL);D=allocate([115,104,98,104,115,35,0],"i8",ALLOC_NORMAL);T=allocate([73,73,73,73,73,0],"i8",ALLOC_NORMAL);L=allocate([73,110,118,97,108,105,100,32,97,100,100,114,101,115,115,32,116,121,112,101,0],"i8",ALLOC_NORMAL);$=allocate([105,115,35,0],"i8",ALLOC_NORMAL);R=allocate([116,
35,0],"i8",ALLOC_NORMAL);K=allocate([65,70,95,85,78,73,88,32,112,97,116,104,32,116,111,111,32,108,111,110,103,0],"i8",ALLOC_NORMAL);H=allocate([103,101,116,115,111,99,107,97,100,100,114,97,114,103,58,32,65,70,95,78,69,84,76,73,78,75,32,97,100,100,114,101,115,115,32,109,117,115,116,32,98,101,32,116,117,112,108,101,44,32,110,111,116,32,37,46,53,48,48,115,0],"i8",ALLOC_NORMAL);S=allocate([73,73,58,103,101,116,115,111,99,107,97,100,100,114,97,114,103,0],"i8",ALLOC_NORMAL);U=allocate([103,101,116,115,
111,99,107,97,100,100,114,97,114,103,58,32,65,70,95,73,78,69,84,32,97,100,100,114,101,115,115,32,109,117,115,116,32,98,101,32,116,117,112,108,101,44,32,110,111,116,32,37,46,53,48,48,115,0],"i8",ALLOC_NORMAL);z=allocate([101,116,105,58,103,101,116,115,111,99,107,97,100,100,114,97,114,103,0],"i8",ALLOC_NORMAL);aa=allocate([105,100,110,97,0],"i8",ALLOC_NORMAL);ja=allocate([103,101,116,115,111,99,107,97,100,100,114,97,114,103,58,32,112,111,114,116,32,109,117,115,116,32,98,101,32,48,45,54,53,53,51,53,
46,0],"i8",ALLOC_NORMAL);la=allocate([103,101,116,115,111,99,107,97,100,100,114,97,114,103,58,32,65,70,95,73,78,69,84,54,32,97,100,100,114,101,115,115,32,109,117,115,116,32,98,101,32,116,117,112,108,101,44,32,110,111,116,32,37,46,53,48,48,115,0],"i8",ALLOC_NORMAL);da=allocate([101,116,105,124,105,105,0],"i8",ALLOC_NORMAL);Ka=allocate([103,101,116,115,111,99,107,97,100,100,114,97,114,103,58,32,65,70,95,80,65,67,75,69,84,32,97,100,100,114,101,115,115,32,109,117,115,116,32,98,101,32,116,117,112,108,
101,44,32,110,111,116,32,37,46,53,48,48,115,0],"i8",ALLOC_NORMAL);Ma=allocate([115,105,124,105,105,115,35,0],"i8",ALLOC_NORMAL);wa=allocate([72,97,114,100,119,97,114,101,32,97,100,100,114,101,115,115,32,109,117,115,116,32,98,101,32,56,32,98,121,116,101,115,32,111,114,32,108,101,115,115,0],"i8",ALLOC_NORMAL);ib=allocate([103,101,116,115,111,99,107,97,100,100,114,97,114,103,58,32,112,114,111,116,111,78,117,109,98,101,114,32,109,117,115,116,32,98,101,32,48,45,54,53,53,51,53,46,0],"i8",ALLOC_NORMAL);
cb=allocate([103,101,116,115,111,99,107,97,100,100,114,97,114,103,58,32,65,70,95,84,73,80,67,32,97,100,100,114,101,115,115,32,109,117,115,116,32,98,101,32,116,117,112,108,101,44,32,110,111,116,32,37,46,53,48,48,115,0],"i8",ALLOC_NORMAL);db=allocate([73,73,73,73,124,73,59,73,110,118,97,108,105,100,32,84,73,80,67,32,97,100,100,114,101,115,115,32,102,111,114,109,97,116,0],"i8",ALLOC_NORMAL);Da=allocate([103,101,116,115,111,99,107,97,100,100,114,97,114,103,58,32,98,97,100,32,102,97,109,105,108,121,0],
"i8",ALLOC_NORMAL);gb=allocate([103,101,116,115,111,99,107,97,100,100,114,108,101,110,58,32,98,97,100,32,102,97,109,105,108,121,0],"i8",ALLOC_NORMAL);Xa=allocate(1,"%struct.PyObject*",ALLOC_NORMAL);Ca=allocate([116,105,109,101,100,32,111,117,116,0],"i8",ALLOC_NORMAL);Za=allocate([97,99,99,101,112,116,40,41,32,45,62,32,40,115,111,99,107,101,116,32,111,98,106,101,99,116,44,32,97,100,100,114,101,115,115,32,105,110,102,111,41,10,10,87,97,105,116,32,102,111,114,32,97,110,32,105,110,99,111,109,105,110,
103,32,99,111,110,110,101,99,116,105,111,110,46,32,32,82,101,116,117,114,110,32,97,32,110,101,119,32,115,111,99,107,101,116,32,114,101,112,114,101,115,101,110,116,105,110,103,32,116,104,101,10,99,111,110,110,101,99,116,105,111,110,44,32,97,110,100,32,116,104,101,32,97,100,100,114,101,115,115,32,111,102,32,116,104,101,32,99,108,105,101,110,116,46,32,32,70,111,114,32,73,80,32,115,111,99,107,101,116,115,44,32,116,104,101,32,97,100,100,114,101,115,115,10,105,110,102,111,32,105,115,32,97,32,112,97,105,
114,32,40,104,111,115,116,97,100,100,114,44,32,112,111,114,116,41,46,0],"i8",ALLOC_NORMAL);Va=allocate([115,101,116,98,108,111,99,107,105,110,103,40,102,108,97,103,41,10,10,83,101,116,32,116,104,101,32,115,111,99,107,101,116,32,116,111,32,98,108,111,99,107,105,110,103,32,40,102,108,97,103,32,105,115,32,116,114,117,101,41,32,111,114,32,110,111,110,45,98,108,111,99,107,105,110,103,32,40,102,97,108,115,101,41,46,10,115,101,116,98,108,111,99,107,105,110,103,40,84,114,117,101,41,32,105,115,32,101,113,
117,105,118,97,108,101,110,116,32,116,111,32,115,101,116,116,105,109,101,111,117,116,40,78,111,110,101,41,59,10,115,101,116,98,108,111,99,107,105,110,103,40,70,97,108,115,101,41,32,105,115,32,101,113,117,105,118,97,108,101,110,116,32,116,111,32,115,101,116,116,105,109,101,111,117,116,40,48,46,48,41,46,0],"i8",ALLOC_NORMAL);Ga=allocate([84,105,109,101,111,117,116,32,118,97,108,117,101,32,111,117,116,32,111,102,32,114,97,110,103,101,0],"i8",ALLOC_NORMAL);ha=allocate([115,101,116,116,105,109,101,111,
117,116,40,116,105,109,101,111,117,116,41,10,10,83,101,116,32,97,32,116,105,109,101,111,117,116,32,111,110,32,115,111,99,107,101,116,32,111,112,101,114,97,116,105,111,110,115,46,32,32,39,116,105,109,101,111,117,116,39,32,99,97,110,32,98,101,32,97,32,102,108,111,97,116,44,10,103,105,118,105,110,103,32,105,110,32,115,101,99,111,110,100,115,44,32,111,114,32,78,111,110,101,46,32,32,83,101,116,116,105,110,103,32,97,32,116,105,109,101,111,117,116,32,111,102,32,78,111,110,101,32,100,105,115,97,98,108,101,
115,10,116,104,101,32,116,105,109,101,111,117,116,32,102,101,97,116,117,114,101,32,97,110,100,32,105,115,32,101,113,117,105,118,97,108,101,110,116,32,116,111,32,115,101,116,98,108,111,99,107,105,110,103,40,49,41,46,10,83,101,116,116,105,110,103,32,97,32,116,105,109,101,111,117,116,32,111,102,32,122,101,114,111,32,105,115,32,116,104,101,32,115,97,109,101,32,97,115,32,115,101,116,98,108,111,99,107,105,110,103,40,48,41,46,0],"i8",ALLOC_NORMAL);Na=allocate([103,101,116,116,105,109,101,111,117,116,40,
41,32,45,62,32,116,105,109,101,111,117,116,10,10,82,101,116,117,114,110,115,32,116,104,101,32,116,105,109,101,111,117,116,32,105,110,32,102,108,111,97,116,105,110,103,32,115,101,99,111,110,100,115,32,97,115,115,111,99,105,97,116,101,100,32,119,105,116,104,32,115,111,99,107,101,116,32,10,111,112,101,114,97,116,105,111,110,115,46,32,65,32,116,105,109,101,111,117,116,32,111,102,32,78,111,110,101,32,105,110,100,105,99,97,116,101,115,32,116,104,97,116,32,116,105,109,101,111,117,116,115,32,111,110,32,115,
111,99,107,101,116,32,10,111,112,101,114,97,116,105,111,110,115,32,97,114,101,32,100,105,115,97,98,108,101,100,46,0],"i8",ALLOC_NORMAL);jb=allocate([105,105,105,58,115,101,116,115,111,99,107,111,112,116,0],"i8",ALLOC_NORMAL);hb=allocate([105,105,115,35,58,115,101,116,115,111,99,107,111,112,116,0],"i8",ALLOC_NORMAL);Qa=allocate([115,101,116,115,111,99,107,111,112,116,40,108,101,118,101,108,44,32,111,112,116,105,111,110,44,32,118,97,108,117,101,41,10,10,83,101,116,32,97,32,115,111,99,107,101,116,32,
111,112,116,105,111,110,46,32,32,83,101,101,32,116,104,101,32,85,110,105,120,32,109,97,110,117,97,108,32,102,111,114,32,108,101,118,101,108,32,97,110,100,32,111,112,116,105,111,110,46,10,84,104,101,32,118,97,108,117,101,32,97,114,103,117,109,101,110,116,32,99,97,110,32,101,105,116,104,101,114,32,98,101,32,97,110,32,105,110,116,101,103,101,114,32,111,114,32,97,32,115,116,114,105,110,103,46,0],"i8",ALLOC_NORMAL);Ha=allocate([105,105,124,105,58,103,101,116,115,111,99,107,111,112,116,0],"i8",ALLOC_NORMAL);
Ra=allocate([103,101,116,115,111,99,107,111,112,116,32,98,117,102,108,101,110,32,111,117,116,32,111,102,32,114,97,110,103,101,0],"i8",ALLOC_NORMAL);Ia=allocate([103,101,116,115,111,99,107,111,112,116,40,108,101,118,101,108,44,32,111,112,116,105,111,110,91,44,32,98,117,102,102,101,114,115,105,122,101,93,41,32,45,62,32,118,97,108,117,101,10,10,71,101,116,32,97,32,115,111,99,107,101,116,32,111,112,116,105,111,110,46,32,32,83,101,101,32,116,104,101,32,85,110,105,120,32,109,97,110,117,97,108,32,102,111,
114,32,108,101,118,101,108,32,97,110,100,32,111,112,116,105,111,110,46,10,73,102,32,97,32,110,111,110,122,101,114,111,32,98,117,102,102,101,114,115,105,122,101,32,97,114,103,117,109,101,110,116,32,105,115,32,103,105,118,101,110,44,32,116,104,101,32,114,101,116,117,114,110,32,118,97,108,117,101,32,105,115,32,97,10,115,116,114,105,110,103,32,111,102,32,116,104,97,116,32,108,101,110,103,116,104,59,32,111,116,104,101,114,119,105,115,101,32,105,116,32,105,115,32,97,110,32,105,110,116,101,103,101,114,46,
0],"i8",ALLOC_NORMAL);Fa=allocate([98,105,110,100,40,97,100,100,114,101,115,115,41,10,10,66,105,110,100,32,116,104,101,32,115,111,99,107,101,116,32,116,111,32,97,32,108,111,99,97,108,32,97,100,100,114,101,115,115,46,32,32,70,111,114,32,73,80,32,115,111,99,107,101,116,115,44,32,116,104,101,32,97,100,100,114,101,115,115,32,105,115,32,97,10,112,97,105,114,32,40,104,111,115,116,44,32,112,111,114,116,41,59,32,116,104,101,32,104,111,115,116,32,109,117,115,116,32,114,101,102,101,114,32,116,111,32,116,104,
101,32,108,111,99,97,108,32,104,111,115,116,46,32,70,111,114,32,114,97,119,32,112,97,99,107,101,116,10,115,111,99,107,101,116,115,32,116,104,101,32,97,100,100,114,101,115,115,32,105,115,32,97,32,116,117,112,108,101,32,40,105,102,110,97,109,101,44,32,112,114,111,116,111,32,91,44,112,107,116,116,121,112,101,32,91,44,104,97,116,121,112,101,93,93,41,0],"i8",ALLOC_NORMAL);$a=allocate([99,108,111,115,101,40,41,10,10,67,108,111,115,101,32,116,104,101,32,115,111,99,107,101,116,46,32,32,73,116,32,99,97,110,
110,111,116,32,98,101,32,117,115,101,100,32,97,102,116,101,114,32,116,104,105,115,32,99,97,108,108,46,0],"i8",ALLOC_NORMAL);Wa=allocate([99,111,110,110,101,99,116,40,97,100,100,114,101,115,115,41,10,10,67,111,110,110,101,99,116,32,116,104,101,32,115,111,99,107,101,116,32,116,111,32,97,32,114,101,109,111,116,101,32,97,100,100,114,101,115,115,46,32,32,70,111,114,32,73,80,32,115,111,99,107,101,116,115,44,32,116,104,101,32,97,100,100,114,101,115,115,10,105,115,32,97,32,112,97,105,114,32,40,104,111,115,
116,44,32,112,111,114,116,41,46,0],"i8",ALLOC_NORMAL);Y=allocate([99,111,110,110,101,99,116,95,101,120,40,97,100,100,114,101,115,115,41,32,45,62,32,101,114,114,110,111,10,10,84,104,105,115,32,105,115,32,108,105,107,101,32,99,111,110,110,101,99,116,40,97,100,100,114,101,115,115,41,44,32,98,117,116,32,114,101,116,117,114,110,115,32,97,110,32,101,114,114,111,114,32,99,111,100,101,32,40,116,104,101,32,101,114,114,110,111,32,118,97,108,117,101,41,10,105,110,115,116,101,97,100,32,111,102,32,114,97,105,
115,105,110,103,32,97,110,32,101,120,99,101,112,116,105,111,110,32,119,104,101,110,32,97,110,32,101,114,114,111,114,32,111,99,99,117,114,115,46,0],"i8",ALLOC_NORMAL);kb=allocate([102,105,108,101,110,111,40,41,32,45,62,32,105,110,116,101,103,101,114,10,10,82,101,116,117,114,110,32,116,104,101,32,105,110,116,101,103,101,114,32,102,105,108,101,32,100,101,115,99,114,105,112,116,111,114,32,111,102,32,116,104,101,32,115,111,99,107,101,116,46,0],"i8",ALLOC_NORMAL);ra=allocate([100,117,112,40,41,32,45,62,
32,115,111,99,107,101,116,32,111,98,106,101,99,116,10,10,82,101,116,117,114,110,32,97,32,110,101,119,32,115,111,99,107,101,116,32,111,98,106,101,99,116,32,99,111,110,110,101,99,116,101,100,32,116,111,32,116,104,101,32,115,97,109,101,32,115,121,115,116,101,109,32,114,101,115,111,117,114,99,101,46,0],"i8",ALLOC_NORMAL);Ta=allocate([103,101,116,115,111,99,107,110,97,109,101,40,41,32,45,62,32,97,100,100,114,101,115,115,32,105,110,102,111,10,10,82,101,116,117,114,110,32,116,104,101,32,97,100,100,114,101,
115,115,32,111,102,32,116,104,101,32,108,111,99,97,108,32,101,110,100,112,111,105,110,116,46,32,32,70,111,114,32,73,80,32,115,111,99,107,101,116,115,44,32,116,104,101,32,97,100,100,114,101,115,115,10,105,110,102,111,32,105,115,32,97,32,112,97,105,114,32,40,104,111,115,116,97,100,100,114,44,32,112,111,114,116,41,46,0],"i8",ALLOC_NORMAL);ia=allocate([103,101,116,112,101,101,114,110,97,109,101,40,41,32,45,62,32,97,100,100,114,101,115,115,32,105,110,102,111,10,10,82,101,116,117,114,110,32,116,104,101,
32,97,100,100,114,101,115,115,32,111,102,32,116,104,101,32,114,101,109,111,116,101,32,101,110,100,112,111,105,110,116,46,32,32,70,111,114,32,73,80,32,115,111,99,107,101,116,115,44,32,116,104,101,32,97,100,100,114,101,115,115,10,105,110,102,111,32,105,115,32,97,32,112,97,105,114,32,40,104,111,115,116,97,100,100,114,44,32,112,111,114,116,41,46,0],"i8",ALLOC_NORMAL);ba=allocate([108,105,115,116,101,110,40,98,97,99,107,108,111,103,41,10,10,69,110,97,98,108,101,32,97,32,115,101,114,118,101,114,32,116,
111,32,97,99,99,101,112,116,32,99,111,110,110,101,99,116,105,111,110,115,46,32,32,84,104,101,32,98,97,99,107,108,111,103,32,97,114,103,117,109,101,110,116,32,109,117,115,116,32,98,101,32,97,116,10,108,101,97,115,116,32,48,32,40,105,102,32,105,116,32,105,115,32,108,111,119,101,114,44,32,105,116,32,105,115,32,115,101,116,32,116,111,32,48,41,59,32,105,116,32,115,112,101,99,105,102,105,101,115,32,116,104,101,32,110,117,109,98,101,114,32,111,102,10,117,110,97,99,99,101,112,116,101,100,32,99,111,110,110,
101,99,116,105,111,110,115,32,116,104,97,116,32,116,104,101,32,115,121,115,116,101,109,32,119,105,108,108,32,97,108,108,111,119,32,98,101,102,111,114,101,32,114,101,102,117,115,105,110,103,32,110,101,119,10,99,111,110,110,101,99,116,105,111,110,115,46,0],"i8",ALLOC_NORMAL);Ya=allocate([114,0],"i8",ALLOC_NORMAL);ta=allocate([124,115,105,58,109,97,107,101,102,105,108,101,0],"i8",ALLOC_NORMAL);O=allocate([60,115,111,99,107,101,116,62,0],"i8",ALLOC_NORMAL);wb=allocate([109,97,107,101,102,105,108,101,
40,91,109,111,100,101,91,44,32,98,117,102,102,101,114,115,105,122,101,93,93,41,32,45,62,32,102,105,108,101,32,111,98,106,101,99,116,10,10,82,101,116,117,114,110,32,97,32,114,101,103,117,108,97,114,32,102,105,108,101,32,111,98,106,101,99,116,32,99,111,114,114,101,115,112,111,110,100,105,110,103,32,116,111,32,116,104,101,32,115,111,99,107,101,116,46,10,84,104,101,32,109,111,100,101,32,97,110,100,32,98,117,102,102,101,114,115,105,122,101,32,97,114,103,117,109,101,110,116,115,32,97,114,101,32,97,115,
32,102,111,114,32,116,104,101,32,98,117,105,108,116,45,105,110,32,111,112,101,110,40,41,32,102,117,110,99,116,105,111,110,46,0],"i8",ALLOC_NORMAL);bb=allocate([105,124,105,58,114,101,99,118,0],"i8",ALLOC_NORMAL);vb=allocate([110,101,103,97,116,105,118,101,32,98,117,102,102,101,114,115,105,122,101,32,105,110,32,114,101,99,118,0],"i8",ALLOC_NORMAL);ka=allocate([114,101,99,118,40,98,117,102,102,101,114,115,105,122,101,91,44,32,102,108,97,103,115,93,41,32,45,62,32,100,97,116,97,10,10,82,101,99,101,105,
118,101,32,117,112,32,116,111,32,98,117,102,102,101,114,115,105,122,101,32,98,121,116,101,115,32,102,114,111,109,32,116,104,101,32,115,111,99,107,101,116,46,32,32,70,111,114,32,116,104,101,32,111,112,116,105,111,110,97,108,32,102,108,97,103,115,10,97,114,103,117,109,101,110,116,44,32,115,101,101,32,116,104,101,32,85,110,105,120,32,109,97,110,117,97,108,46,32,32,87,104,101,110,32,110,111,32,100,97,116,97,32,105,115,32,97,118,97,105,108,97,98,108,101,44,32,98,108,111,99,107,32,117,110,116,105,108,10,
97,116,32,108,101,97,115,116,32,111,110,101,32,98,121,116,101,32,105,115,32,97,118,97,105,108,97,98,108,101,32,111,114,32,117,110,116,105,108,32,116,104,101,32,114,101,109,111,116,101,32,101,110,100,32,105,115,32,99,108,111,115,101,100,46,32,32,87,104,101,110,10,116,104,101,32,114,101,109,111,116,101,32,101,110,100,32,105,115,32,99,108,111,115,101,100,32,97,110,100,32,97,108,108,32,100,97,116,97,32,105,115,32,114,101,97,100,44,32,114,101,116,117,114,110,32,116,104,101,32,101,109,112,116,121,32,115,
116,114,105,110,103,46,0],"i8",ALLOC_NORMAL);za=allocate([119,42,124,105,105,58,114,101,99,118,95,105,110,116,111,0],"i8",ALLOC_NORMAL);Aa=allocate(16,"i8*",ALLOC_NORMAL);La=allocate([98,117,102,102,101,114,0],"i8",ALLOC_NORMAL);ya=allocate([110,98,121,116,101,115,0],"i8",ALLOC_NORMAL);ub=allocate([102,108,97,103,115,0],"i8",ALLOC_NORMAL);Z=allocate([98,117,102,46,98,117,102,32,33,61,32,48,32,38,38,32,98,117,102,108,101,110,32,62,32,48,0],"i8",ALLOC_NORMAL);qa=allocate([46,46,47,99,112,121,116,104,
111,110,47,77,111,100,117,108,101,115,47,115,111,99,107,101,116,109,111,100,117,108,101,46,99,0],"i8",ALLOC_NORMAL);M=allocate([115,111,99,107,95,114,101,99,118,95,105,110,116,111,0],"i8",ALLOC_NORMAL);na=allocate([110,101,103,97,116,105,118,101,32,98,117,102,102,101,114,115,105,122,101,32,105,110,32,114,101,99,118,95,105,110,116,111,0],"i8",ALLOC_NORMAL);nb=allocate([98,117,102,102,101,114,32,116,111,111,32,115,109,97,108,108,32,102,111,114,32,114,101,113,117,101,115,116,101,100,32,98,121,116,101,
115,0],"i8",ALLOC_NORMAL);ca=allocate([114,101,99,118,95,105,110,116,111,40,98,117,102,102,101,114,44,32,91,110,98,121,116,101,115,91,44,32,102,108,97,103,115,93,93,41,32,45,62,32,110,98,121,116,101,115,95,114,101,97,100,10,10,65,32,118,101,114,115,105,111,110,32,111,102,32,114,101,99,118,40,41,32,116,104,97,116,32,115,116,111,114,101,115,32,105,116,115,32,100,97,116,97,32,105,110,116,111,32,97,32,98,117,102,102,101,114,32,114,97,116,104,101,114,32,116,104,97,110,32,99,114,101,97,116,105,110,103,
32,10,97,32,110,101,119,32,115,116,114,105,110,103,46,32,32,82,101,99,101,105,118,101,32,117,112,32,116,111,32,98,117,102,102,101,114,115,105,122,101,32,98,121,116,101,115,32,102,114,111,109,32,116,104,101,32,115,111,99,107,101,116,46,32,32,73,102,32,98,117,102,102,101,114,115,105,122,101,32,10,105,115,32,110,111,116,32,115,112,101,99,105,102,105,101,100,32,40,111,114,32,48,41,44,32,114,101,99,101,105,118,101,32,117,112,32,116,111,32,116,104,101,32,115,105,122,101,32,97,118,97,105,108,97,98,108,101,
32,105,110,32,116,104,101,32,103,105,118,101,110,32,98,117,102,102,101,114,46,10,10,83,101,101,32,114,101,99,118,40,41,32,102,111,114,32,100,111,99,117,109,101,110,116,97,116,105,111,110,32,97,98,111,117,116,32,116,104,101,32,102,108,97,103,115,46,0],"i8",ALLOC_NORMAL);ua=allocate([105,124,105,58,114,101,99,118,102,114,111,109,0],"i8",ALLOC_NORMAL);Ea=allocate([110,101,103,97,116,105,118,101,32,98,117,102,102,101,114,115,105,122,101,32,105,110,32,114,101,99,118,102,114,111,109,0],"i8",ALLOC_NORMAL);
Eb=allocate([114,101,99,118,102,114,111,109,40,98,117,102,102,101,114,115,105,122,101,91,44,32,102,108,97,103,115,93,41,32,45,62,32,40,100,97,116,97,44,32,97,100,100,114,101,115,115,32,105,110,102,111,41,10,10,76,105,107,101,32,114,101,99,118,40,98,117,102,102,101,114,115,105,122,101,44,32,102,108,97,103,115,41,32,98,117,116,32,97,108,115,111,32,114,101,116,117,114,110,32,116,104,101,32,115,101,110,100,101,114,39,115,32,97,100,100,114,101,115,115,32,105,110,102,111,46,0],"i8",ALLOC_NORMAL);zb=allocate([119,
42,124,105,105,58,114,101,99,118,102,114,111,109,95,105,110,116,111,0],"i8",ALLOC_NORMAL);va=allocate(16,"i8*",ALLOC_NORMAL);xa=allocate([115,111,99,107,95,114,101,99,118,102,114,111,109,95,105,110,116,111,0],"i8",ALLOC_NORMAL);V=allocate([110,101,103,97,116,105,118,101,32,98,117,102,102,101,114,115,105,122,101,32,105,110,32,114,101,99,118,102,114,111,109,95,105,110,116,111,0],"i8",ALLOC_NORMAL);sa=allocate([108,78,0],"i8",ALLOC_NORMAL);pa=allocate([114,101,99,118,102,114,111,109,95,105,110,116,111,
40,98,117,102,102,101,114,91,44,32,110,98,121,116,101,115,91,44,32,102,108,97,103,115,93,93,41,32,45,62,32,40,110,98,121,116,101,115,44,32,97,100,100,114,101,115,115,32,105,110,102,111,41,10,10,76,105,107,101,32,114,101,99,118,95,105,110,116,111,40,98,117,102,102,101,114,91,44,32,110,98,121,116,101,115,91,44,32,102,108,97,103,115,93,93,41,32,98,117,116,32,97,108,115,111,32,114,101,116,117,114,110,32,116,104,101,32,115,101,110,100,101,114,39,115,32,97,100,100,114,101,115,115,32,105,110,102,111,46,
0],"i8",ALLOC_NORMAL);fb=allocate([115,42,124,105,58,115,101,110,100,0],"i8",ALLOC_NORMAL);ma=allocate([115,101,110,100,40,100,97,116,97,91,44,32,102,108,97,103,115,93,41,32,45,62,32,99,111,117,110,116,10,10,83,101,110,100,32,97,32,100,97,116,97,32,115,116,114,105,110,103,32,116,111,32,116,104,101,32,115,111,99,107,101,116,46,32,32,70,111,114,32,116,104,101,32,111,112,116,105,111,110,97,108,32,102,108,97,103,115,10,97,114,103,117,109,101,110,116,44,32,115,101,101,32,116,104,101,32,85,110,105,120,
32,109,97,110,117,97,108,46,32,32,82,101,116,117,114,110,32,116,104,101,32,110,117,109,98,101,114,32,111,102,32,98,121,116,101,115,10,115,101,110,116,59,32,116,104,105,115,32,109,97,121,32,98,101,32,108,101,115,115,32,116,104,97,110,32,108,101,110,40,100,97,116,97,41,32,105,102,32,116,104,101,32,110,101,116,119,111,114,107,32,105,115,32,98,117,115,121,46,0],"i8",ALLOC_NORMAL);sb=allocate([115,42,124,105,58,115,101,110,100,97,108,108,0],"i8",ALLOC_NORMAL);mb=allocate([115,101,110,100,97,108,108,40,
100,97,116,97,91,44,32,102,108,97,103,115,93,41,10,10,83,101,110,100,32,97,32,100,97,116,97,32,115,116,114,105,110,103,32,116,111,32,116,104,101,32,115,111,99,107,101,116,46,32,32,70,111,114,32,116,104,101,32,111,112,116,105,111,110,97,108,32,102,108,97,103,115,10,97,114,103,117,109,101,110,116,44,32,115,101,101,32,116,104,101,32,85,110,105,120,32,109,97,110,117,97,108,46,32,32,84,104,105,115,32,99,97,108,108,115,32,115,101,110,100,40,41,32,114,101,112,101,97,116,101,100,108,121,10,117,110,116,105,
108,32,97,108,108,32,100,97,116,97,32,105,115,32,115,101,110,116,46,32,32,73,102,32,97,110,32,101,114,114,111,114,32,111,99,99,117,114,115,44,32,105,116,39,115,32,105,109,112,111,115,115,105,98,108,101,10,116,111,32,116,101,108,108,32,104,111,119,32,109,117,99,104,32,100,97,116,97,32,104,97,115,32,98,101,101,110,32,115,101,110,116,46,0],"i8",ALLOC_NORMAL);yb=allocate([115,42,79,58,115,101,110,100,116,111,0],"i8",ALLOC_NORMAL);Nb=allocate([115,42,105,79,58,115,101,110,100,116,111,0],"i8",ALLOC_NORMAL);
Ib=allocate([115,101,110,100,116,111,40,41,32,116,97,107,101,115,32,50,32,111,114,32,51,32,97,114,103,117,109,101,110,116,115,32,40,37,100,32,103,105,118,101,110,41,0],"i8",ALLOC_NORMAL);Db=allocate([115,101,110,100,116,111,40,100,97,116,97,91,44,32,102,108,97,103,115,93,44,32,97,100,100,114,101,115,115,41,32,45,62,32,99,111,117,110,116,10,10,76,105,107,101,32,115,101,110,100,40,100,97,116,97,44,32,102,108,97,103,115,41,32,98,117,116,32,97,108,108,111,119,115,32,115,112,101,99,105,102,121,105,110,
103,32,116,104,101,32,100,101,115,116,105,110,97,116,105,111,110,32,97,100,100,114,101,115,115,46,10,70,111,114,32,73,80,32,115,111,99,107,101,116,115,44,32,116,104,101,32,97,100,100,114,101,115,115,32,105,115,32,97,32,112,97,105,114,32,40,104,111,115,116,97,100,100,114,44,32,112,111,114,116,41,46,0],"i8",ALLOC_NORMAL);Ub=allocate([115,104,117,116,100,111,119,110,40,102,108,97,103,41,10,10,83,104,117,116,32,100,111,119,110,32,116,104,101,32,114,101,97,100,105,110,103,32,115,105,100,101,32,111,102,
32,116,104,101,32,115,111,99,107,101,116,32,40,102,108,97,103,32,61,61,32,83,72,85,84,95,82,68,41,44,32,116,104,101,32,119,114,105,116,105,110,103,32,115,105,100,101,10,111,102,32,116,104,101,32,115,111,99,107,101,116,32,40,102,108,97,103,32,61,61,32,83,72,85,84,95,87,82,41,44,32,111,114,32,98,111,116,104,32,101,110,100,115,32,40,102,108,97,103,32,61,61,32,83,72,85,84,95,82,68,87,82,41,46,0],"i8",ALLOC_NORMAL);Tb=allocate([97,99,99,101,112,116,0],"i8",ALLOC_NORMAL);qb=allocate([98,105,110,100,0],
"i8",ALLOC_NORMAL);Mb=allocate([99,108,111,115,101,0],"i8",ALLOC_NORMAL);Hb=allocate([99,111,110,110,101,99,116,0],"i8",ALLOC_NORMAL);Wb=allocate([99,111,110,110,101,99,116,95,101,120,0],"i8",ALLOC_NORMAL);ea=allocate([100,117,112,0],"i8",ALLOC_NORMAL);Qb=allocate([102,105,108,101,110,111,0],"i8",ALLOC_NORMAL);Bb=allocate([103,101,116,112,101,101,114,110,97,109,101,0],"i8",ALLOC_NORMAL);ic=allocate([103,101,116,115,111,99,107,110,97,109,101,0],"i8",ALLOC_NORMAL);Vb=allocate([103,101,116,115,111,99,
107,111,112,116,0],"i8",ALLOC_NORMAL);Oa=allocate([108,105,115,116,101,110,0],"i8",ALLOC_NORMAL);eb=allocate([109,97,107,101,102,105,108,101,0],"i8",ALLOC_NORMAL);Ob=allocate([114,101,99,118,0],"i8",ALLOC_NORMAL);Sa=allocate([114,101,99,118,95,105,110,116,111,0],"i8",ALLOC_NORMAL);Yb=allocate([114,101,99,118,102,114,111,109,0],"i8",ALLOC_NORMAL);xb=allocate([114,101,99,118,102,114,111,109,95,105,110,116,111,0],"i8",ALLOC_NORMAL);Xb=allocate([115,101,110,100,0],"i8",ALLOC_NORMAL);lb=allocate([115,
101,110,100,97,108,108,0],"i8",ALLOC_NORMAL);fc=allocate([115,101,110,100,116,111,0],"i8",ALLOC_NORMAL);jc=allocate([115,101,116,98,108,111,99,107,105,110,103,0],"i8",ALLOC_NORMAL);Pb=allocate([115,101,116,116,105,109,101,111,117,116,0],"i8",ALLOC_NORMAL);nc=allocate([103,101,116,116,105,109,101,111,117,116,0],"i8",ALLOC_NORMAL);rb=allocate([115,101,116,115,111,99,107,111,112,116,0],"i8",ALLOC_NORMAL);fa=allocate([115,104,117,116,100,111,119,110,0],"i8",ALLOC_NORMAL);tb=allocate([0,0,0,0,0,0,0,0,
4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],["i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",
0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",
0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",
0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",
0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",
0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8"],ALLOC_NORMAL);Jb=allocate([102,97,109,105,108,121,0],"i8",ALLOC_NORMAL);lc=allocate([116,104,101,32,115,111,99,107,101,116,32,102,97,109,105,108,121,0],"i8",ALLOC_NORMAL);Rb=allocate([116,121,112,101,0],"i8",ALLOC_NORMAL);Ba=allocate([116,104,101,32,
115,111,99,107,101,116,32,116,121,112,101,0],"i8",ALLOC_NORMAL);Fb=allocate([112,114,111,116,111,0],"i8",ALLOC_NORMAL);vc=allocate([116,104,101,32,115,111,99,107,101,116,32,112,114,111,116,111,99,111,108,0],"i8",ALLOC_NORMAL);dc=allocate([116,105,109,101,111,117,116,0],"i8",ALLOC_NORMAL);kc=allocate([116,104,101,32,115,111,99,107,101,116,32,116,105,109,101,111,117,116,0],"i8",ALLOC_NORMAL);Pa=allocate([0,0,0,0,1,0,0,0,12,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,16,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,
0,20,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,28,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],["i8*",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8"],ALLOC_NORMAL);Ua=allocate([60,115,111,99,107,101,116,32,111,
98,106,101,99,116,44,32,102,100,61,37,108,100,44,32,102,97,109,105,108,121,61,37,100,44,32,116,121,112,101,61,37,100,44,32,112,114,111,116,111,99,111,108,61,37,100,62,0],"i8",ALLOC_NORMAL);Ab=allocate([124,105,105,105,58,115,111,99,107,101,116,0],"i8",ALLOC_NORMAL);oc=allocate(16,"i8*",ALLOC_NORMAL);tc=allocate([95,115,111,99,107,101,116,46,115,111,99,107,101,116,0],"i8",ALLOC_NORMAL);ac=allocate([1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,36,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,132587,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],["i32",0,0,0,"%struct._typeobject*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i32",0,0,0,"i32",0,0,0,"void (%struct.PyObject*)*",0,0,0,"i32 (%struct.PyObject*, %struct.FILE*, i32)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, i8*)*",
0,0,0,"i32 (%struct.PyObject*, i8*, %struct.PyObject*)*",0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*)*",0,0,0,"%struct.PyNumberMethods*",0,0,0,"%struct.PySequenceMethods*",0,0,0,"%struct.PyMappingMethods*",0,0,0,"i32 (%struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",
0,0,0,"%struct.PyBufferProcs*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i32 (%struct.PyObject*, i32 (%struct.PyObject*, i8*)*, i8*)*",0,0,0,"i32 (%struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*, i32)*",0,0,0,"i32",0,0,0,"%struct.PyObject* (%struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*)*",0,0,0,"%struct.PyMethodDef*",0,0,0,"%struct.PyMemberDef*",0,0,0,"%struct.PyGetSetDef*",0,0,0,"%struct._typeobject*",0,0,0,"%struct.PyObject*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",
0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct._typeobject*, i32)*",0,0,0,"%struct.PyObject* (%struct._typeobject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"void (i8*)*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8"],ALLOC_NORMAL);$b=
allocate([103,101,116,104,111,115,116,110,97,109,101,40,41,32,45,62,32,115,116,114,105,110,103,10,10,82,101,116,117,114,110,32,116,104,101,32,99,117,114,114,101,110,116,32,104,111,115,116,32,110,97,109,101,46,0],"i8",ALLOC_NORMAL);Dc=allocate([115,58,103,101,116,104,111,115,116,98,121,110,97,109,101,0],"i8",ALLOC_NORMAL);Kc=allocate([103,101,116,104,111,115,116,98,121,110,97,109,101,40,104,111,115,116,41,32,45,62,32,97,100,100,114,101,115,115,10,10,82,101,116,117,114,110,32,116,104,101,32,73,80,32,
97,100,100,114,101,115,115,32,40,97,32,115,116,114,105,110,103,32,111,102,32,116,104,101,32,102,111,114,109,32,39,50,53,53,46,50,53,53,46,50,53,53,46,50,53,53,39,41,32,102,111,114,32,97,32,104,111,115,116,46,0],"i8",ALLOC_NORMAL);Ac=allocate([115,79,79,0],"i8",ALLOC_NORMAL);mc=allocate([115,58,103,101,116,104,111,115,116,98,121,110,97,109,101,95,101,120,0],"i8",ALLOC_NORMAL);Oc=allocate([103,101,116,104,111,115,116,98,121,110,97,109,101,95,101,120,40,104,111,115,116,41,32,45,62,32,40,110,97,109,101,
44,32,97,108,105,97,115,108,105,115,116,44,32,97,100,100,114,101,115,115,108,105,115,116,41,10,10,82,101,116,117,114,110,32,116,104,101,32,116,114,117,101,32,104,111,115,116,32,110,97,109,101,44,32,97,32,108,105,115,116,32,111,102,32,97,108,105,97,115,101,115,44,32,97,110,100,32,97,32,108,105,115,116,32,111,102,32,73,80,32,97,100,100,114,101,115,115,101,115,44,10,102,111,114,32,97,32,104,111,115,116,46,32,32,84,104,101,32,104,111,115,116,32,97,114,103,117,109,101,110,116,32,105,115,32,97,32,115,116,
114,105,110,103,32,103,105,118,105,110,103,32,97,32,104,111,115,116,32,110,97,109,101,32,111,114,32,73,80,32,110,117,109,98,101,114,46,0],"i8",ALLOC_NORMAL);Fc=allocate([115,58,103,101,116,104,111,115,116,98,121,97,100,100,114,0],"i8",ALLOC_NORMAL);Pc=allocate([103,101,116,104,111,115,116,98,121,97,100,100,114,40,104,111,115,116,41,32,45,62,32,40,110,97,109,101,44,32,97,108,105,97,115,108,105,115,116,44,32,97,100,100,114,101,115,115,108,105,115,116,41,10,10,82,101,116,117,114,110,32,116,104,101,32,
116,114,117,101,32,104,111,115,116,32,110,97,109,101,44,32,97,32,108,105,115,116,32,111,102,32,97,108,105,97,115,101,115,44,32,97,110,100,32,97,32,108,105,115,116,32,111,102,32,73,80,32,97,100,100,114,101,115,115,101,115,44,10,102,111,114,32,97,32,104,111,115,116,46,32,32,84,104,101,32,104,111,115,116,32,97,114,103,117,109,101,110,116,32,105,115,32,97,32,115,116,114,105,110,103,32,103,105,118,105,110,103,32,97,32,104,111,115,116,32,110,97,109,101,32,111,114,32,73,80,32,110,117,109,98,101,114,46,0],
"i8",ALLOC_NORMAL);hd=allocate([115,124,115,58,103,101,116,115,101,114,118,98,121,110,97,109,101,0],"i8",ALLOC_NORMAL);Id=allocate([115,101,114,118,105,99,101,47,112,114,111,116,111,32,110,111,116,32,102,111,117,110,100,0],"i8",ALLOC_NORMAL);Rc=allocate([103,101,116,115,101,114,118,98,121,110,97,109,101,40,115,101,114,118,105,99,101,110,97,109,101,91,44,32,112,114,111,116,111,99,111,108,110,97,109,101,93,41,32,45,62,32,105,110,116,101,103,101,114,10,10,82,101,116,117,114,110,32,97,32,112,111,114,
116,32,110,117,109,98,101,114,32,102,114,111,109,32,97,32,115,101,114,118,105,99,101,32,110,97,109,101,32,97,110,100,32,112,114,111,116,111,99,111,108,32,110,97,109,101,46,10,84,104,101,32,111,112,116,105,111,110,97,108,32,112,114,111,116,111,99,111,108,32,110,97,109,101,44,32,105,102,32,103,105,118,101,110,44,32,115,104,111,117,108,100,32,98,101,32,39,116,99,112,39,32,111,114,32,39,117,100,112,39,44,10,111,116,104,101,114,119,105,115,101,32,97,110,121,32,112,114,111,116,111,99,111,108,32,119,105,
108,108,32,109,97,116,99,104,46,0],"i8",ALLOC_NORMAL);Jd=allocate([105,124,115,58,103,101,116,115,101,114,118,98,121,112,111,114,116,0],"i8",ALLOC_NORMAL);Vd=allocate([103,101,116,115,101,114,118,98,121,112,111,114,116,58,32,112,111,114,116,32,109,117,115,116,32,98,101,32,48,45,54,53,53,51,53,46,0],"i8",ALLOC_NORMAL);Lc=allocate([112,111,114,116,47,112,114,111,116,111,32,110,111,116,32,102,111,117,110,100,0],"i8",ALLOC_NORMAL);Zc=allocate([103,101,116,115,101,114,118,98,121,112,111,114,116,40,112,
111,114,116,91,44,32,112,114,111,116,111,99,111,108,110,97,109,101,93,41,32,45,62,32,115,116,114,105,110,103,10,10,82,101,116,117,114,110,32,116,104,101,32,115,101,114,118,105,99,101,32,110,97,109,101,32,102,114,111,109,32,97,32,112,111,114,116,32,110,117,109,98,101,114,32,97,110,100,32,112,114,111,116,111,99,111,108,32,110,97,109,101,46,10,84,104,101,32,111,112,116,105,111,110,97,108,32,112,114,111,116,111,99,111,108,32,110,97,109,101,44,32,105,102,32,103,105,118,101,110,44,32,115,104,111,117,108,
100,32,98,101,32,39,116,99,112,39,32,111,114,32,39,117,100,112,39,44,10,111,116,104,101,114,119,105,115,101,32,97,110,121,32,112,114,111,116,111,99,111,108,32,119,105,108,108,32,109,97,116,99,104,46,0],"i8",ALLOC_NORMAL);Mc=allocate([115,58,103,101,116,112,114,111,116,111,98,121,110,97,109,101,0],"i8",ALLOC_NORMAL);Kd=allocate([112,114,111,116,111,99,111,108,32,110,111,116,32,102,111,117,110,100,0],"i8",ALLOC_NORMAL);uc=allocate([103,101,116,112,114,111,116,111,98,121,110,97,109,101,40,110,97,109,
101,41,32,45,62,32,105,110,116,101,103,101,114,10,10,82,101,116,117,114,110,32,116,104,101,32,112,114,111,116,111,99,111,108,32,110,117,109,98,101,114,32,102,111,114,32,116,104,101,32,110,97,109,101,100,32,112,114,111,116,111,99,111,108,46,32,32,40,82,97,114,101,108,121,32,117,115,101,100,46,41,0],"i8",ALLOC_NORMAL);Gb=allocate([124,105,105,105,58,115,111,99,107,101,116,112,97,105,114,0],"i8",ALLOC_NORMAL);oa=allocate([115,111,99,107,101,116,112,97,105,114,40,91,102,97,109,105,108,121,91,44,32,116,
121,112,101,91,44,32,112,114,111,116,111,93,93,93,41,32,45,62,32,40,115,111,99,107,101,116,32,111,98,106,101,99,116,44,32,115,111,99,107,101,116,32,111,98,106,101,99,116,41,10,10,67,114,101,97,116,101,32,97,32,112,97,105,114,32,111,102,32,115,111,99,107,101,116,32,111,98,106,101,99,116,115,32,102,114,111,109,32,116,104,101,32,115,111,99,107,101,116,115,32,114,101,116,117,114,110,101,100,32,98,121,32,116,104,101,32,112,108,97,116,102,111,114,109,10,115,111,99,107,101,116,112,97,105,114,40,41,32,102,
117,110,99,116,105,111,110,46,10,84,104,101,32,97,114,103,117,109,101,110,116,115,32,97,114,101,32,116,104,101,32,115,97,109,101,32,97,115,32,102,111,114,32,115,111,99,107,101,116,40,41,32,101,120,99,101,112,116,32,116,104,101,32,100,101,102,97,117,108,116,32,102,97,109,105,108,121,32,105,115,10,65,70,95,85,78,73,88,32,105,102,32,100,101,102,105,110,101,100,32,111,110,32,116,104,101,32,112,108,97,116,102,111,114,109,59,32,111,116,104,101,114,119,105,115,101,44,32,116,104,101,32,100,101,102,97,117,
108,116,32,105,115,32,65,70,95,73,78,69,84,46,0],"i8",ALLOC_NORMAL);Ja=allocate([105,105,105,124,105,58,102,114,111,109,102,100,0],"i8",ALLOC_NORMAL);vd=allocate([102,114,111,109,102,100,40,102,100,44,32,102,97,109,105,108,121,44,32,116,121,112,101,91,44,32,112,114,111,116,111,93,41,32,45,62,32,115,111,99,107,101,116,32,111,98,106,101,99,116,10,10,67,114,101,97,116,101,32,97,32,115,111,99,107,101,116,32,111,98,106,101,99,116,32,102,114,111,109,32,97,32,100,117,112,108,105,99,97,116,101,32,111,102,
32,116,104,101,32,103,105,118,101,110,10,102,105,108,101,32,100,101,115,99,114,105,112,116,111,114,46,10,84,104,101,32,114,101,109,97,105,110,105,110,103,32,97,114,103,117,109,101,110,116,115,32,97,114,101,32,116,104,101,32,115,97,109,101,32,97,115,32,102,111,114,32,115,111,99,107,101,116,40,41,46,0],"i8",ALLOC_NORMAL);cd=allocate([105,58,110,116,111,104,115,0],"i8",ALLOC_NORMAL);gc=allocate([99,97,110,39,116,32,99,111,110,118,101,114,116,32,110,101,103,97,116,105,118,101,32,110,117,109,98,101,114,
32,116,111,32,117,110,115,105,103,110,101,100,32,108,111,110,103,0],"i8",ALLOC_NORMAL);Sc=allocate([110,116,111,104,115,40,105,110,116,101,103,101,114,41,32,45,62,32,105,110,116,101,103,101,114,10,10,67,111,110,118,101,114,116,32,97,32,49,54,45,98,105,116,32,105,110,116,101,103,101,114,32,102,114,111,109,32,110,101,116,119,111,114,107,32,116,111,32,104,111,115,116,32,98,121,116,101,32,111,114,100,101,114,46,0],"i8",ALLOC_NORMAL);yc=allocate([101,120,112,101,99,116,101,100,32,105,110,116,47,108,111,
110,103,44,32,37,115,32,102,111,117,110,100,0],"i8",ALLOC_NORMAL);id=allocate([110,116,111,104,108,40,105,110,116,101,103,101,114,41,32,45,62,32,105,110,116,101,103,101,114,10,10,67,111,110,118,101,114,116,32,97,32,51,50,45,98,105,116,32,105,110,116,101,103,101,114,32,102,114,111,109,32,110,101,116,119,111,114,107,32,116,111,32,104,111,115,116,32,98,121,116,101,32,111,114,100,101,114,46,0],"i8",ALLOC_NORMAL);$c=allocate([105,58,104,116,111,110,115,0],"i8",ALLOC_NORMAL);Pd=allocate([104,116,111,110,
115,40,105,110,116,101,103,101,114,41,32,45,62,32,105,110,116,101,103,101,114,10,10,67,111,110,118,101,114,116,32,97,32,49,54,45,98,105,116,32,105,110,116,101,103,101,114,32,102,114,111,109,32,104,111,115,116,32,116,111,32,110,101,116,119,111,114,107,32,98,121,116,101,32,111,114,100,101,114,46,0],"i8",ALLOC_NORMAL);jd=allocate([104,116,111,110,108,40,105,110,116,101,103,101,114,41,32,45,62,32,105,110,116,101,103,101,114,10,10,67,111,110,118,101,114,116,32,97,32,51,50,45,98,105,116,32,105,110,116,
101,103,101,114,32,102,114,111,109,32,104,111,115,116,32,116,111,32,110,101,116,119,111,114,107,32,98,121,116,101,32,111,114,100,101,114,46,0],"i8",ALLOC_NORMAL);ie=allocate([105,110,101,116,95,97,116,111,110,40,115,116,114,105,110,103,41,32,45,62,32,112,97,99,107,101,100,32,51,50,45,98,105,116,32,73,80,32,114,101,112,114,101,115,101,110,116,97,116,105,111,110,10,10,67,111,110,118,101,114,116,32,97,110,32,73,80,32,97,100,100,114,101,115,115,32,105,110,32,115,116,114,105,110,103,32,102,111,114,109,
97,116,32,40,49,50,51,46,52,53,46,54,55,46,56,57,41,32,116,111,32,116,104,101,32,51,50,45,98,105,116,32,112,97,99,107,101,100,10,98,105,110,97,114,121,32,102,111,114,109,97,116,32,117,115,101,100,32,105,110,32,108,111,119,45,108,101,118,101,108,32,110,101,116,119,111,114,107,32,102,117,110,99,116,105,111,110,115,46,0],"i8",ALLOC_NORMAL);Ld=allocate([115,58,105,110,101,116,95,97,116,111,110,0],"i8",ALLOC_NORMAL);Uc=allocate([105,108,108,101,103,97,108,32,73,80,32,97,100,100,114,101,115,115,32,115,
116,114,105,110,103,32,112,97,115,115,101,100,32,116,111,32,105,110,101,116,95,97,116,111,110,0],"i8",ALLOC_NORMAL);kd=allocate([105,110,101,116,95,110,116,111,97,40,112,97,99,107,101,100,95,105,112,41,32,45,62,32,105,112,95,97,100,100,114,101,115,115,95,115,116,114,105,110,103,10,10,67,111,110,118,101,114,116,32,97,110,32,73,80,32,97,100,100,114,101,115,115,32,102,114,111,109,32,51,50,45,98,105,116,32,112,97,99,107,101,100,32,98,105,110,97,114,121,32,102,111,114,109,97,116,32,116,111,32,115,116,
114,105,110,103,32,102,111,114,109,97,116,0],"i8",ALLOC_NORMAL);Qd=allocate([115,35,58,105,110,101,116,95,110,116,111,97,0],"i8",ALLOC_NORMAL);Md=allocate([112,97,99,107,101,100,32,73,80,32,119,114,111,110,103,32,108,101,110,103,116,104,32,102,111,114,32,105,110,101,116,95,110,116,111,97,0],"i8",ALLOC_NORMAL);Nd=allocate([105,110,101,116,95,112,116,111,110,40,97,102,44,32,105,112,41,32,45,62,32,112,97,99,107,101,100,32,73,80,32,97,100,100,114,101,115,115,32,115,116,114,105,110,103,10,10,67,111,110,
118,101,114,116,32,97,110,32,73,80,32,97,100,100,114,101,115,115,32,102,114,111,109,32,115,116,114,105,110,103,32,102,111,114,109,97,116,32,116,111,32,97,32,112,97,99,107,101,100,32,115,116,114,105,110,103,32,115,117,105,116,97,98,108,101,10,102,111,114,32,117,115,101,32,119,105,116,104,32,108,111,119,45,108,101,118,101,108,32,110,101,116,119,111,114,107,32,102,117,110,99,116,105,111,110,115,46,0],"i8",ALLOC_NORMAL);Bc=allocate([105,115,58,105,110,101,116,95,112,116,111,110,0],"i8",ALLOC_NORMAL);
dd=allocate([105,108,108,101,103,97,108,32,73,80,32,97,100,100,114,101,115,115,32,115,116,114,105,110,103,32,112,97,115,115,101,100,32,116,111,32,105,110,101,116,95,112,116,111,110,0],"i8",ALLOC_NORMAL);ge=allocate([105,110,101,116,95,110,116,111,112,40,97,102,44,32,112,97,99,107,101,100,95,105,112,41,32,45,62,32,115,116,114,105,110,103,32,102,111,114,109,97,116,116,101,100,32,73,80,32,97,100,100,114,101,115,115,10,10,67,111,110,118,101,114,116,32,97,32,112,97,99,107,101,100,32,73,80,32,97,100,100,
114,101,115,115,32,111,102,32,116,104,101,32,103,105,118,101,110,32,102,97,109,105,108,121,32,116,111,32,115,116,114,105,110,103,32,102,111,114,109,97,116,46,0],"i8",ALLOC_NORMAL);Ed=allocate([105,115,35,58,105,110,101,116,95,110,116,111,112,0],"i8",ALLOC_NORMAL);pd=allocate([105,110,118,97,108,105,100,32,108,101,110,103,116,104,32,111,102,32,112,97,99,107,101,100,32,73,80,32,97,100,100,114,101,115,115,32,115,116,114,105,110,103,0],"i8",ALLOC_NORMAL);Xd=allocate([117,110,107,110,111,119,110,32,97,
100,100,114,101,115,115,32,102,97,109,105,108,121,32,37,100,0],"i8",ALLOC_NORMAL);Ec=allocate([79,79,124,105,105,105,105,58,103,101,116,97,100,100,114,105,110,102,111,0],"i8",ALLOC_NORMAL);qd=allocate([101,110,99,111,100,101,0],"i8",ALLOC_NORMAL);Ad=allocate([115,0],"i8",ALLOC_NORMAL);ld=allocate([103,101,116,97,100,100,114,105,110,102,111,40,41,32,97,114,103,117,109,101,110,116,32,49,32,109,117,115,116,32,98,101,32,115,116,114,105,110,103,32,111,114,32,78,111,110,101,0],"i8",ALLOC_NORMAL);ne=allocate([37,
108,100,0],"i8",ALLOC_NORMAL);Cb=allocate([73,110,116,32,111,114,32,83,116,114,105,110,103,32,101,120,112,101,99,116,101,100,0],"i8",ALLOC_NORMAL);Fd=allocate([105,105,105,115,79,0],"i8",ALLOC_NORMAL);ad=allocate([103,101,116,97,100,100,114,105,110,102,111,40,104,111,115,116,44,32,112,111,114,116,32,91,44,32,102,97,109,105,108,121,44,32,115,111,99,107,116,121,112,101,44,32,112,114,111,116,111,44,32,102,108,97,103,115,93,41,10,32,32,32,32,45,62,32,108,105,115,116,32,111,102,32,40,102,97,109,105,108,
121,44,32,115,111,99,107,116,121,112,101,44,32,112,114,111,116,111,44,32,99,97,110,111,110,110,97,109,101,44,32,115,111,99,107,97,100,100,114,41,10,10,82,101,115,111,108,118,101,32,104,111,115,116,32,97,110,100,32,112,111,114,116,32,105,110,116,111,32,97,100,100,114,105,110,102,111,32,115,116,114,117,99,116,46,0],"i8",ALLOC_NORMAL);Yd=allocate([79,105,58,103,101,116,110,97,109,101,105,110,102,111,0],"i8",ALLOC_NORMAL);wd=allocate([103,101,116,110,97,109,101,105,110,102,111,40,41,32,97,114,103,117,
109,101,110,116,32,49,32,109,117,115,116,32,98,101,32,97,32,116,117,112,108,101,0],"i8",ALLOC_NORMAL);md=allocate([115,105,124,105,105,0],"i8",ALLOC_NORMAL);Bd=allocate([37,100,0],"i8",ALLOC_NORMAL);rd=allocate([115,111,99,107,97,100,100,114,32,114,101,115,111,108,118,101,100,32,116,111,32,109,117,108,116,105,112,108,101,32,97,100,100,114,101,115,115,101,115,0],"i8",ALLOC_NORMAL);sc=allocate([73,80,118,52,32,115,111,99,107,97,100,100,114,32,109,117,115,116,32,98,101,32,50,32,116,117,112,108,101,0],
"i8",ALLOC_NORMAL);Cd=allocate([115,115,0],"i8",ALLOC_NORMAL);nd=allocate([103,101,116,110,97,109,101,105,110,102,111,40,115,111,99,107,97,100,100,114,44,32,102,108,97,103,115,41,32,45,45,62,32,40,104,111,115,116,44,32,112,111,114,116,41,10,10,71,101,116,32,104,111,115,116,32,97,110,100,32,112,111,114,116,32,102,111,114,32,97,32,115,111,99,107,97,100,100,114,46,0],"i8",ALLOC_NORMAL);oe=allocate([103,101,116,100,101,102,97,117,108,116,116,105,109,101,111,117,116,40,41,32,45,62,32,116,105,109,101,111,
117,116,10,10,82,101,116,117,114,110,115,32,116,104,101,32,100,101,102,97,117,108,116,32,116,105,109,101,111,117,116,32,105,110,32,102,108,111,97,116,105,110,103,32,115,101,99,111,110,100,115,32,102,111,114,32,110,101,119,32,115,111,99,107,101,116,32,111,98,106,101,99,116,115,46,10,65,32,118,97,108,117,101,32,111,102,32,78,111,110,101,32,105,110,100,105,99,97,116,101,115,32,116,104,97,116,32,110,101,119,32,115,111,99,107,101,116,32,111,98,106,101,99,116,115,32,104,97,118,101,32,110,111,32,116,105,
109,101,111,117,116,46,10,87,104,101,110,32,116,104,101,32,115,111,99,107,101,116,32,109,111,100,117,108,101,32,105,115,32,102,105,114,115,116,32,105,109,112,111,114,116,101,100,44,32,116,104,101,32,100,101,102,97,117,108,116,32,105,115,32,78,111,110,101,46,0],"i8",ALLOC_NORMAL);Zb=allocate([115,101,116,100,101,102,97,117,108,116,116,105,109,101,111,117,116,40,116,105,109,101,111,117,116,41,10,10,83,101,116,32,116,104,101,32,100,101,102,97,117,108,116,32,116,105,109,101,111,117,116,32,105,110,32,
102,108,111,97,116,105,110,103,32,115,101,99,111,110,100,115,32,102,111,114,32,110,101,119,32,115,111,99,107,101,116,32,111,98,106,101,99,116,115,46,10,65,32,118,97,108,117,101,32,111,102,32,78,111,110,101,32,105,110,100,105,99,97,116,101,115,32,116,104,97,116,32,110,101,119,32,115,111,99,107,101,116,32,111,98,106,101,99,116,115,32,104,97,118,101,32,110,111,32,116,105,109,101,111,117,116,46,10,87,104,101,110,32,116,104,101,32,115,111,99,107,101,116,32,109,111,100,117,108,101,32,105,115,32,102,105,
114,115,116,32,105,109,112,111,114,116,101,100,44,32,116,104,101,32,100,101,102,97,117,108,116,32,105,115,32,78,111,110,101,46,0],"i8",ALLOC_NORMAL);pe=allocate([103,101,116,104,111,115,116,98,121,110,97,109,101,0],"i8",ALLOC_NORMAL);Rd=allocate([103,101,116,104,111,115,116,98,121,110,97,109,101,95,101,120,0],"i8",ALLOC_NORMAL);pb=allocate([103,101,116,104,111,115,116,98,121,97,100,100,114,0],"i8",ALLOC_NORMAL);W=allocate([103,101,116,104,111,115,116,110,97,109,101,0],"i8",ALLOC_NORMAL);Hc=allocate([103,
101,116,115,101,114,118,98,121,110,97,109,101,0],"i8",ALLOC_NORMAL);ed=allocate([103,101,116,115,101,114,118,98,121,112,111,114,116,0],"i8",ALLOC_NORMAL);xd=allocate([103,101,116,112,114,111,116,111,98,121,110,97,109,101,0],"i8",ALLOC_NORMAL);Qc=allocate([102,114,111,109,102,100,0],"i8",ALLOC_NORMAL);Gc=allocate([115,111,99,107,101,116,112,97,105,114,0],"i8",ALLOC_NORMAL);Tc=allocate([110,116,111,104,115,0],"i8",ALLOC_NORMAL);ue=allocate([110,116,111,104,108,0],"i8",ALLOC_NORMAL);Le=allocate([104,
116,111,110,115,0],"i8",ALLOC_NORMAL);Vc=allocate([104,116,111,110,108,0],"i8",ALLOC_NORMAL);ae=allocate([105,110,101,116,95,97,116,111,110,0],"i8",ALLOC_NORMAL);Ic=allocate([105,110,101,116,95,110,116,111,97,0],"i8",ALLOC_NORMAL);je=allocate([105,110,101,116,95,112,116,111,110,0],"i8",ALLOC_NORMAL);ve=allocate([105,110,101,116,95,110,116,111,112,0],"i8",ALLOC_NORMAL);od=allocate([103,101,116,97,100,100,114,105,110,102,111,0],"i8",ALLOC_NORMAL);Gd=allocate([103,101,116,110,97,109,101,105,110,102,
111,0],"i8",ALLOC_NORMAL);Wc=allocate([103,101,116,100,101,102,97,117,108,116,116,105,109,101,111,117,116,0],"i8",ALLOC_NORMAL);Fe=allocate([115,101,116,100,101,102,97,117,108,116,116,105,109,101,111,117,116,0],"i8",ALLOC_NORMAL);Kb=allocate([0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],["i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",
0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",
0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",
0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",
0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",
0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8"],ALLOC_NORMAL);ze=allocate(8,["%struct._typeobject*",0,0,0,"%struct.PyObject*",0,0,0],ALLOC_NORMAL);bc=allocate([73,109,112,108,101,109,101,110,116,97,116,105,111,110,32,109,111,100,117,108,101,32,102,111,114,32,115,111,99,107,101,116,32,111,112,101,114,97,116,105,111,110,115,46,10,10,83,101,101,32,116,104,101,32,115,111,99,107,101,116,32,109,111,100,
117,108,101,32,102,111,114,32,100,111,99,117,109,101,110,116,97,116,105,111,110,46,0],"i8",ALLOC_NORMAL);Ge=allocate([95,115,111,99,107,101,116,0],"i8",ALLOC_NORMAL);He=allocate([115,111,99,107,101,116,46,101,114,114,111,114,0],"i8",ALLOC_NORMAL);Xc=allocate([101,114,114,111,114,0],"i8",ALLOC_NORMAL);qe=allocate([115,111,99,107,101,116,46,104,101,114,114,111,114,0],"i8",ALLOC_NORMAL);he=allocate([104,101,114,114,111,114,0],"i8",ALLOC_NORMAL);Ie=allocate([115,111,99,107,101,116,46,103,97,105,101,114,
114,111,114,0],"i8",ALLOC_NORMAL);be=allocate([103,97,105,101,114,114,111,114,0],"i8",ALLOC_NORMAL);rc=allocate([115,111,99,107,101,116,46,116,105,109,101,111,117,116,0],"i8",ALLOC_NORMAL);ce=allocate([83,111,99,107,101,116,84,121,112,101,0],"i8",ALLOC_NORMAL);Zd=allocate([115,111,99,107,101,116,0],"i8",ALLOC_NORMAL);Hd=allocate([104,97,115,95,105,112,118,54,0],"i8",ALLOC_NORMAL);sd=allocate([95,115,111,99,107,101,116,46,67,65,80,73,0],"i8",ALLOC_NORMAL);fd=allocate([67,65,80,73,0],"i8",ALLOC_NORMAL);
$e=allocate([65,70,95,85,78,83,80,69,67,0],"i8",ALLOC_NORMAL);yd=allocate([65,70,95,73,78,69,84,0],"i8",ALLOC_NORMAL);xf=allocate([65,70,95,73,78,69,84,54,0],"i8",ALLOC_NORMAL);Mf=allocate([65,70,95,85,78,73,88,0],"i8",ALLOC_NORMAL);Nf=allocate([65,70,95,65,88,50,53,0],"i8",ALLOC_NORMAL);yf=allocate([65,70,95,73,80,88,0],"i8",ALLOC_NORMAL);nf=allocate([65,70,95,65,80,80,76,69,84,65,76,75,0],"i8",ALLOC_NORMAL);Je=allocate([65,70,95,78,69,84,82,79,77,0],"i8",ALLOC_NORMAL);Of=allocate([65,70,95,66,82,
73,68,71,69,0],"i8",ALLOC_NORMAL);Pf=allocate([65,70,95,65,84,77,80,86,67,0],"i8",ALLOC_NORMAL);zf=allocate([65,70,95,88,50,53,0],"i8",ALLOC_NORMAL);pc=allocate([65,70,95,82,79,83,69,0],"i8",ALLOC_NORMAL);cf=allocate([65,70,95,68,69,67,110,101,116,0],"i8",ALLOC_NORMAL);Af=allocate([65,70,95,78,69,84,66,69,85,73,0],"i8",ALLOC_NORMAL);Ae=allocate([65,70,95,83,69,67,85,82,73,84,89,0],"i8",ALLOC_NORMAL);Ve=allocate([65,70,95,75,69,89,0],"i8",ALLOC_NORMAL);ff=allocate([65,70,95,78,69,84,76,73,78,75,0],
"i8",ALLOC_NORMAL);Bf=allocate([78,69,84,76,73,78,75,95,82,79,85,84,69,0],"i8",ALLOC_NORMAL);Cf=allocate([78,69,84,76,73,78,75,95,85,83,69,82,83,79,67,75,0],"i8",ALLOC_NORMAL);of=allocate([78,69,84,76,73,78,75,95,70,73,82,69,87,65,76,76,0],"i8",ALLOC_NORMAL);pf=allocate([78,69,84,76,73,78,75,95,78,70,76,79,71,0],"i8",ALLOC_NORMAL);$f=allocate([78,69,84,76,73,78,75,95,88,70,82,77,0],"i8",ALLOC_NORMAL);ag=allocate([78,69,84,76,73,78,75,95,73,80,54,95,70,87,0],"i8",ALLOC_NORMAL);Df=allocate([78,69,84,
76,73,78,75,95,68,78,82,84,77,83,71,0],"i8",ALLOC_NORMAL);qf=allocate([65,70,95,82,79,85,84,69,0],"i8",ALLOC_NORMAL);zd=allocate([65,70,95,65,83,72,0],"i8",ALLOC_NORMAL);rf=allocate([65,70,95,69,67,79,78,69,84,0],"i8",ALLOC_NORMAL);sf=allocate([65,70,95,65,84,77,83,86,67,0],"i8",ALLOC_NORMAL);Cc=allocate([65,70,95,83,78,65,0],"i8",ALLOC_NORMAL);bg=allocate([65,70,95,73,82,68,65,0],"i8",ALLOC_NORMAL);zc=allocate([65,70,95,80,80,80,79,88,0],"i8",ALLOC_NORMAL);Qf=allocate([65,70,95,87,65,78,80,73,80,
69,0],"i8",ALLOC_NORMAL);cc=allocate([65,70,95,76,76,67,0],"i8",ALLOC_NORMAL);We=allocate([65,70,95,80,65,67,75,69,84,0],"i8",ALLOC_NORMAL);Rf=allocate([80,70,95,80,65,67,75,69,84,0],"i8",ALLOC_NORMAL);Be=allocate([80,65,67,75,69,84,95,72,79,83,84,0],"i8",ALLOC_NORMAL);cg=allocate([80,65,67,75,69,84,95,66,82,79,65,68,67,65,83,84,0],"i8",ALLOC_NORMAL);bd=allocate([80,65,67,75,69,84,95,77,85,76,84,73,67,65,83,84,0],"i8",ALLOC_NORMAL);Sf=allocate([80,65,67,75,69,84,95,79,84,72,69,82,72,79,83,84,0],"i8",
ALLOC_NORMAL);Ef=allocate([80,65,67,75,69,84,95,79,85,84,71,79,73,78,71,0],"i8",ALLOC_NORMAL);Ff=allocate([80,65,67,75,69,84,95,76,79,79,80,66,65,67,75,0],"i8",ALLOC_NORMAL);Gf=allocate([80,65,67,75,69,84,95,70,65,83,84,82,79,85,84,69,0],"i8",ALLOC_NORMAL);Hf=allocate([65,70,95,84,73,80,67,0],"i8",ALLOC_NORMAL);Mg=allocate([84,73,80,67,95,65,68,68,82,95,78,65,77,69,83,69,81,0],"i8",ALLOC_NORMAL);ob=allocate([84,73,80,67,95,65,68,68,82,95,78,65,77,69,0],"i8",ALLOC_NORMAL);dg=allocate([84,73,80,67,
95,65,68,68,82,95,73,68,0],"i8",ALLOC_NORMAL);ab=allocate([84,73,80,67,95,90,79,78,69,95,83,67,79,80,69,0],"i8",ALLOC_NORMAL);yg=allocate([84,73,80,67,95,67,76,85,83,84,69,82,95,83,67,79,80,69,0],"i8",ALLOC_NORMAL);Re=allocate([84,73,80,67,95,78,79,68,69,95,83,67,79,80,69,0],"i8",ALLOC_NORMAL);zg=allocate([83,79,76,95,84,73,80,67,0],"i8",ALLOC_NORMAL);Tf=allocate([84,73,80,67,95,73,77,80,79,82,84,65,78,67,69,0],"i8",ALLOC_NORMAL);gd=allocate([84,73,80,67,95,83,82,67,95,68,82,79,80,80,65,66,76,69,
0],"i8",ALLOC_NORMAL);jg=allocate([84,73,80,67,95,68,69,83,84,95,68,82,79,80,80,65,66,76,69,0],"i8",ALLOC_NORMAL);hg=allocate([84,73,80,67,95,67,79,78,78,95,84,73,77,69,79,85,84,0],"i8",ALLOC_NORMAL);kg=allocate([84,73,80,67,95,76,79,87,95,73,77,80,79,82,84,65,78,67,69,0],"i8",ALLOC_NORMAL);lg=allocate([84,73,80,67,95,77,69,68,73,85,77,95,73,77,80,79,82,84,65,78,67,69,0],"i8",ALLOC_NORMAL);ef=allocate([84,73,80,67,95,72,73,71,72,95,73,77,80,79,82,84,65,78,67,69,0],"i8",ALLOC_NORMAL);If=allocate([84,
73,80,67,95,67,82,73,84,73,67,65,76,95,73,77,80,79,82,84,65,78,67,69,0],"i8",ALLOC_NORMAL);Ag=allocate([84,73,80,67,95,83,85,66,95,80,79,82,84,83,0],"i8",ALLOC_NORMAL);Bg=allocate([84,73,80,67,95,83,85,66,95,83,69,82,86,73,67,69,0],"i8",ALLOC_NORMAL);Cg=allocate([84,73,80,67,95,83,85,66,95,67,65,78,67,69,76,0],"i8",ALLOC_NORMAL);Dg=allocate([84,73,80,67,95,87,65,73,84,95,70,79,82,69,86,69,82,0],"i8",ALLOC_NORMAL);qg=allocate([84,73,80,67,95,80,85,66,76,73,83,72,69,68,0],"i8",ALLOC_NORMAL);Ng=allocate([84,
73,80,67,95,87,73,84,72,68,82,65,87,78,0],"i8",ALLOC_NORMAL);rg=allocate([84,73,80,67,95,83,85,66,83,67,82,95,84,73,77,69,79,85,84,0],"i8",ALLOC_NORMAL);Og=allocate([84,73,80,67,95,67,70,71,95,83,82,86,0],"i8",ALLOC_NORMAL);Jf=allocate([84,73,80,67,95,84,79,80,95,83,82,86,0],"i8",ALLOC_NORMAL);tf=allocate([83,79,67,75,95,83,84,82,69,65,77,0],"i8",ALLOC_NORMAL);nh=allocate([83,79,67,75,95,68,71,82,65,77,0],"i8",ALLOC_NORMAL);Dd=allocate([83,79,67,75,95,82,65,87,0],"i8",ALLOC_NORMAL);X=allocate([83,
79,67,75,95,83,69,81,80,65,67,75,69,84,0],"i8",ALLOC_NORMAL);ga=allocate([83,79,67,75,95,82,68,77,0],"i8",ALLOC_NORMAL);Sb=allocate([83,79,95,68,69,66,85,71,0],"i8",ALLOC_NORMAL);we=allocate([83,79,95,65,67,67,69,80,84,67,79,78,78,0],"i8",ALLOC_NORMAL);Wd=allocate([83,79,95,82,69,85,83,69,65,68,68,82,0],"i8",ALLOC_NORMAL);Lb=allocate([83,79,95,75,69,69,80,65,76,73,86,69,0],"i8",ALLOC_NORMAL);Pg=allocate([83,79,95,68,79,78,84,82,79,85,84,69,0],"i8",ALLOC_NORMAL);Yc=allocate([83,79,95,66,82,79,65,68,
67,65,83,84,0],"i8",ALLOC_NORMAL);Mh=allocate([83,79,95,76,73,78,71,69,82,0],"i8",ALLOC_NORMAL);oh=allocate([83,79,95,79,79,66,73,78,76,73,78,69,0],"i8",ALLOC_NORMAL);ph=allocate([83,79,95,83,78,68,66,85,70,0],"i8",ALLOC_NORMAL);qh=allocate([83,79,95,82,67,86,66,85,70,0],"i8",ALLOC_NORMAL);Nh=allocate([83,79,95,83,78,68,76,79,87,65,84,0],"i8",ALLOC_NORMAL);re=allocate([83,79,95,82,67,86,76,79,87,65,84,0],"i8",ALLOC_NORMAL);Oh=allocate([83,79,95,83,78,68,84,73,77,69,79,0],"i8",ALLOC_NORMAL);rh=allocate([83,
79,95,82,67,86,84,73,77,69,79,0],"i8",ALLOC_NORMAL);sh=allocate([83,79,95,69,82,82,79,82,0],"i8",ALLOC_NORMAL);Sd=allocate([83,79,95,84,89,80,69,0],"i8",ALLOC_NORMAL);Kf=allocate([83,79,77,65,88,67,79,78,78,0],"i8",ALLOC_NORMAL);wc=allocate([77,83,71,95,79,79,66,0],"i8",ALLOC_NORMAL);th=allocate([77,83,71,95,80,69,69,75,0],"i8",ALLOC_NORMAL);Eg=allocate([77,83,71,95,68,79,78,84,82,79,85,84,69,0],"i8",ALLOC_NORMAL);Ph=allocate([77,83,71,95,68,79,78,84,87,65,73,84,0],"i8",ALLOC_NORMAL);Me=allocate([77,
83,71,95,69,79,82,0],"i8",ALLOC_NORMAL);Yg=allocate([77,83,71,95,84,82,85,78,67,0],"i8",ALLOC_NORMAL);Zg=allocate([77,83,71,95,67,84,82,85,78,67,0],"i8",ALLOC_NORMAL);uh=allocate([77,83,71,95,87,65,73,84,65,76,76,0],"i8",ALLOC_NORMAL);$g=allocate([83,79,76,95,83,79,67,75,69,84,0],"i8",ALLOC_NORMAL);sg=allocate([83,79,76,95,73,80,0],"i8",ALLOC_NORMAL);Qh=allocate([83,79,76,95,84,67,80,0],"i8",ALLOC_NORMAL);gf=allocate([83,79,76,95,85,68,80,0],"i8",ALLOC_NORMAL);Qg=allocate([73,80,80,82,79,84,79,95,
73,80,0],"i8",ALLOC_NORMAL);ah=allocate([73,80,80,82,79,84,79,95,72,79,80,79,80,84,83,0],"i8",ALLOC_NORMAL);vh=allocate([73,80,80,82,79,84,79,95,73,67,77,80,0],"i8",ALLOC_NORMAL);wh=allocate([73,80,80,82,79,84,79,95,73,71,77,80,0],"i8",ALLOC_NORMAL);xh=allocate([73,80,80,82,79,84,79,95,73,80,86,54,0],"i8",ALLOC_NORMAL);bh=allocate([73,80,80,82,79,84,79,95,73,80,73,80,0],"i8",ALLOC_NORMAL);Rg=allocate([73,80,80,82,79,84,79,95,84,67,80,0],"i8",ALLOC_NORMAL);ch=allocate([73,80,80,82,79,84,79,95,69,71,
80,0],"i8",ALLOC_NORMAL);Rh=allocate([73,80,80,82,79,84,79,95,80,85,80,0],"i8",ALLOC_NORMAL);hf=allocate([73,80,80,82,79,84,79,95,85,68,80,0],"i8",ALLOC_NORMAL);yh=allocate([73,80,80,82,79,84,79,95,73,68,80,0],"i8",ALLOC_NORMAL);zh=allocate([73,80,80,82,79,84,79,95,84,80,0],"i8",ALLOC_NORMAL);Sh=allocate([73,80,80,82,79,84,79,95,82,79,85,84,73,78,71,0],"i8",ALLOC_NORMAL);Ah=allocate([73,80,80,82,79,84,79,95,70,82,65,71,77,69,78,84,0],"i8",ALLOC_NORMAL);Th=allocate([73,80,80,82,79,84,79,95,82,83,86,
80,0],"i8",ALLOC_NORMAL);Uh=allocate([73,80,80,82,79,84,79,95,71,82,69,0],"i8",ALLOC_NORMAL);Vh=allocate([73,80,80,82,79,84,79,95,69,83,80,0],"i8",ALLOC_NORMAL);Bh=allocate([73,80,80,82,79,84,79,95,65,72,0],"i8",ALLOC_NORMAL);tg=allocate([73,80,80,82,79,84,79,95,73,67,77,80,86,54,0],"i8",ALLOC_NORMAL);Wh=allocate([73,80,80,82,79,84,79,95,78,79,78,69,0],"i8",ALLOC_NORMAL);Xh=allocate([73,80,80,82,79,84,79,95,68,83,84,79,80,84,83,0],"i8",ALLOC_NORMAL);dh=allocate([73,80,80,82,79,84,79,95,80,73,77,0],
"i8",ALLOC_NORMAL);Ch=allocate([73,80,80,82,79,84,79,95,82,65,87,0],"i8",ALLOC_NORMAL);eh=allocate([73,80,80,79,82,84,95,82,69,83,69,82,86,69,68,0],"i8",ALLOC_NORMAL);Yh=allocate([73,80,80,79,82,84,95,85,83,69,82,82,69,83,69,82,86,69,68,0],"i8",ALLOC_NORMAL);Zh=allocate([73,78,65,68,68,82,95,65,78,89,0],"i8",ALLOC_NORMAL);mg=allocate([73,78,65,68,68,82,95,66,82,79,65,68,67,65,83,84,0],"i8",ALLOC_NORMAL);$h=allocate([73,78,65,68,68,82,95,76,79,79,80,66,65,67,75,0],"i8",ALLOC_NORMAL);ai=allocate([73,
78,65,68,68,82,95,85,78,83,80,69,67,95,71,82,79,85,80,0],"i8",ALLOC_NORMAL);bi=allocate([73,78,65,68,68,82,95,65,76,76,72,79,83,84,83,95,71,82,79,85,80,0],"i8",ALLOC_NORMAL);fh=allocate([73,78,65,68,68,82,95,77,65,88,95,76,79,67,65,76,95,71,82,79,85,80,0],"i8",ALLOC_NORMAL);Dh=allocate([73,78,65,68,68,82,95,78,79,78,69,0],"i8",ALLOC_NORMAL);ci=allocate([73,80,95,79,80,84,73,79,78,83,0],"i8",ALLOC_NORMAL);di=allocate([73,80,95,72,68,82,73,78,67,76,0],"i8",ALLOC_NORMAL);ei=allocate([73,80,95,84,79,
83,0],"i8",ALLOC_NORMAL);Eh=allocate([73,80,95,84,84,76,0],"i8",ALLOC_NORMAL);fi=allocate([73,80,95,82,69,67,86,79,80,84,83,0],"i8",ALLOC_NORMAL);gi=allocate([73,80,95,82,69,67,86,82,69,84,79,80,84,83,0],"i8",ALLOC_NORMAL);hi=allocate([73,80,95,82,69,84,79,80,84,83,0],"i8",ALLOC_NORMAL);ii=allocate([73,80,95,77,85,76,84,73,67,65,83,84,95,73,70,0],"i8",ALLOC_NORMAL);Fh=allocate([73,80,95,77,85,76,84,73,67,65,83,84,95,84,84,76,0],"i8",ALLOC_NORMAL);ug=allocate([73,80,95,77,85,76,84,73,67,65,83,84,95,
76,79,79,80,0],"i8",ALLOC_NORMAL);Sg=allocate([73,80,95,65,68,68,95,77,69,77,66,69,82,83,72,73,80,0],"i8",ALLOC_NORMAL);Uf=allocate([73,80,95,68,82,79,80,95,77,69,77,66,69,82,83,72,73,80,0],"i8",ALLOC_NORMAL);Gh=allocate([73,80,95,68,69,70,65,85,76,84,95,77,85,76,84,73,67,65,83,84,95,84,84,76,0],"i8",ALLOC_NORMAL);Fg=allocate([73,80,95,68,69,70,65,85,76,84,95,77,85,76,84,73,67,65,83,84,95,76,79,79,80,0],"i8",ALLOC_NORMAL);ji=allocate([73,80,95,77,65,88,95,77,69,77,66,69,82,83,72,73,80,83,0],"i8",
ALLOC_NORMAL);ki=allocate([73,80,86,54,95,74,79,73,78,95,71,82,79,85,80,0],"i8",ALLOC_NORMAL);Hh=allocate([73,80,86,54,95,76,69,65,86,69,95,71,82,79,85,80,0],"i8",ALLOC_NORMAL);xc=allocate([73,80,86,54,95,77,85,76,84,73,67,65,83,84,95,72,79,80,83,0],"i8",ALLOC_NORMAL);Ih=allocate([73,80,86,54,95,77,85,76,84,73,67,65,83,84,95,73,70,0],"i8",ALLOC_NORMAL);gh=allocate([73,80,86,54,95,77,85,76,84,73,67,65,83,84,95,76,79,79,80,0],"i8",ALLOC_NORMAL);li=allocate([73,80,86,54,95,85,78,73,67,65,83,84,95,72,
79,80,83,0],"i8",ALLOC_NORMAL);Nc=allocate([73,80,86,54,95,86,54,79,78,76,89,0],"i8",ALLOC_NORMAL);mi=allocate([73,80,86,54,95,67,72,69,67,75,83,85,77,0],"i8",ALLOC_NORMAL);uf=allocate([73,80,86,54,95,68,83,84,79,80,84,83,0],"i8",ALLOC_NORMAL);hh=allocate([73,80,86,54,95,72,79,80,76,73,77,73,84,0],"i8",ALLOC_NORMAL);ni=allocate([73,80,86,54,95,72,79,80,79,80,84,83,0],"i8",ALLOC_NORMAL);ng=allocate([73,80,86,54,95,78,69,88,84,72,79,80,0],"i8",ALLOC_NORMAL);Gg=allocate([73,80,86,54,95,80,75,84,73,78,
70,79,0],"i8",ALLOC_NORMAL);og=allocate([73,80,86,54,95,82,69,67,86,68,83,84,79,80,84,83,0],"i8",ALLOC_NORMAL);eg=allocate([73,80,86,54,95,82,69,67,86,72,79,80,76,73,77,73,84,0],"i8",ALLOC_NORMAL);Jc=allocate([73,80,86,54,95,82,69,67,86,72,79,80,79,80,84,83,0],"i8",ALLOC_NORMAL);ke=allocate([73,80,86,54,95,82,69,67,86,80,75,84,73,78,70,79,0],"i8",ALLOC_NORMAL);xe=allocate([73,80,86,54,95,82,69,67,86,82,84,72,68,82,0],"i8",ALLOC_NORMAL);Td=allocate([73,80,86,54,95,82,69,67,86,84,67,76,65,83,83,0],
"i8",ALLOC_NORMAL);de=allocate([73,80,86,54,95,82,84,72,68,82,0],"i8",ALLOC_NORMAL);td=allocate([73,80,86,54,95,82,84,72,68,82,68,83,84,79,80,84,83,0],"i8",ALLOC_NORMAL);le=allocate([73,80,86,54,95,82,84,72,68,82,95,84,89,80,69,95,48,0],"i8",ALLOC_NORMAL);Ce=allocate([73,80,86,54,95,84,67,76,65,83,83,0],"i8",ALLOC_NORMAL);se=allocate([84,67,80,95,78,79,68,69,76,65,89,0],"i8",ALLOC_NORMAL);Ne=allocate([84,67,80,95,77,65,88,83,69,71,0],"i8",ALLOC_NORMAL);Oe=allocate([84,67,80,95,67,79,82,75,0],"i8",
ALLOC_NORMAL);Ue=allocate([84,67,80,95,75,69,69,80,73,68,76,69,0],"i8",ALLOC_NORMAL);me=allocate([84,67,80,95,75,69,69,80,73,78,84,86,76,0],"i8",ALLOC_NORMAL);Xe=allocate([84,67,80,95,75,69,69,80,67,78,84,0],"i8",ALLOC_NORMAL);De=allocate([84,67,80,95,83,89,78,67,78,84,0],"i8",ALLOC_NORMAL);vg=allocate([84,67,80,95,76,73,78,71,69,82,50,0],"i8",ALLOC_NORMAL);Se=allocate([84,67,80,95,68,69,70,69,82,95,65,67,67,69,80,84,0],"i8",ALLOC_NORMAL);Ee=allocate([84,67,80,95,87,73,78,68,79,87,95,67,76,65,77,
80,0],"i8",ALLOC_NORMAL);oi=allocate([84,67,80,95,73,78,70,79,0],"i8",ALLOC_NORMAL);Tg=allocate([84,67,80,95,81,85,73,67,75,65,67,75,0],"i8",ALLOC_NORMAL);pi=allocate([69,65,73,95,65,68,68,82,70,65,77,73,76,89,0],"i8",ALLOC_NORMAL);ih=allocate([69,65,73,95,65,71,65,73,78,0],"i8",ALLOC_NORMAL);qi=allocate([69,65,73,95,66,65,68,70,76,65,71,83,0],"i8",ALLOC_NORMAL);Ug=allocate([69,65,73,95,70,65,73,76,0],"i8",ALLOC_NORMAL);jh=allocate([69,65,73,95,70,65,77,73,76,89,0],"i8",ALLOC_NORMAL);Vg=allocate([69,
65,73,95,77,69,77,79,82,89,0],"i8",ALLOC_NORMAL);ri=allocate([69,65,73,95,78,79,68,65,84,65,0],"i8",ALLOC_NORMAL);Vf=allocate([69,65,73,95,78,79,78,65,77,69,0],"i8",ALLOC_NORMAL);Wf=allocate([69,65,73,95,79,86,69,82,70,76,79,87,0],"i8",ALLOC_NORMAL);df=allocate([69,65,73,95,83,69,82,86,73,67,69,0],"i8",ALLOC_NORMAL);Ni=allocate([69,65,73,95,83,79,67,75,84,89,80,69,0],"i8",ALLOC_NORMAL);Pe=allocate([69,65,73,95,83,89,83,84,69,77,0],"i8",ALLOC_NORMAL);Ei=allocate([65,73,95,80,65,83,83,73,86,69,0],"i8",
ALLOC_NORMAL);si=allocate([65,73,95,67,65,78,79,78,78,65,77,69,0],"i8",ALLOC_NORMAL);Ii=allocate([65,73,95,78,85,77,69,82,73,67,72,79,83,84,0],"i8",ALLOC_NORMAL);ti=allocate([65,73,95,78,85,77,69,82,73,67,83,69,82,86,0],"i8",ALLOC_NORMAL);Oi=allocate([65,73,95,65,76,76,0],"i8",ALLOC_NORMAL);ui=allocate([65,73,95,65,68,68,82,67,79,78,70,73,71,0],"i8",ALLOC_NORMAL);Ji=allocate([65,73,95,86,52,77,65,80,80,69,68,0],"i8",ALLOC_NORMAL);vi=allocate([78,73,95,77,65,88,72,79,83,84,0],"i8",ALLOC_NORMAL);Pi=
allocate([78,73,95,77,65,88,83,69,82,86,0],"i8",ALLOC_NORMAL);wi=allocate([78,73,95,78,79,70,81,68,78,0],"i8",ALLOC_NORMAL);Ki=allocate([78,73,95,78,85,77,69,82,73,67,72,79,83,84,0],"i8",ALLOC_NORMAL);Jh=allocate([78,73,95,78,65,77,69,82,69,81,68,0],"i8",ALLOC_NORMAL);Qi=allocate([78,73,95,78,85,77,69,82,73,67,83,69,82,86,0],"i8",ALLOC_NORMAL);xi=allocate([78,73,95,68,71,82,65,77,0],"i8",ALLOC_NORMAL);yi=allocate([83,72,85,84,95,82,68,0],"i8",ALLOC_NORMAL);hc=allocate([83,72,85,84,95,87,82,0],"i8",
ALLOC_NORMAL);fg=allocate([83,72,85,84,95,82,68,87,82,0],"i8",ALLOC_NORMAL);HEAP[Aa]=La;HEAP[Aa+4]=ya;HEAP[Aa+8]=ub;HEAP[va]=La;HEAP[va+4]=ya;HEAP[va+8]=ub;HEAP[tb]=Tb;HEAP[tb+4]=g+6;HEAP[tb+12]=Za;HEAP[tb+16]=qb;HEAP[tb+20]=g+8;HEAP[tb+28]=Fa;HEAP[tb+32]=Mb;HEAP[tb+36]=g+10;HEAP[tb+44]=$a;HEAP[tb+48]=Hb;HEAP[tb+52]=g+12;HEAP[tb+60]=Wa;HEAP[tb+64]=Wb;HEAP[tb+68]=g+14;HEAP[tb+76]=Y;HEAP[tb+80]=ea;HEAP[tb+84]=g+16;HEAP[tb+92]=ra;HEAP[tb+96]=Qb;HEAP[tb+100]=g+18;HEAP[tb+108]=kb;HEAP[tb+112]=Bb;HEAP[tb+
116]=g+20;HEAP[tb+124]=ia;HEAP[tb+128]=ic;HEAP[tb+132]=g+22;HEAP[tb+140]=Ta;HEAP[tb+144]=Vb;HEAP[tb+148]=g+24;HEAP[tb+156]=Ia;HEAP[tb+160]=Oa;HEAP[tb+164]=g+26;HEAP[tb+172]=ba;HEAP[tb+176]=eb;HEAP[tb+180]=g+28;HEAP[tb+188]=wb;HEAP[tb+192]=Ob;HEAP[tb+196]=g+30;HEAP[tb+204]=ka;HEAP[tb+208]=Sa;HEAP[tb+212]=g+32;HEAP[tb+220]=ca;HEAP[tb+224]=Yb;HEAP[tb+228]=g+34;HEAP[tb+236]=Eb;HEAP[tb+240]=xb;HEAP[tb+244]=g+36;HEAP[tb+252]=pa;HEAP[tb+256]=Xb;HEAP[tb+260]=g+38;HEAP[tb+268]=ma;HEAP[tb+272]=lb;HEAP[tb+276]=
g+40;HEAP[tb+284]=mb;HEAP[tb+288]=fc;HEAP[tb+292]=g+42;HEAP[tb+300]=Db;HEAP[tb+304]=jc;HEAP[tb+308]=g+44;HEAP[tb+316]=Va;HEAP[tb+320]=Pb;HEAP[tb+324]=g+46;HEAP[tb+332]=ha;HEAP[tb+336]=nc;HEAP[tb+340]=g+48;HEAP[tb+348]=Na;HEAP[tb+352]=rb;HEAP[tb+356]=g+50;HEAP[tb+364]=Qa;HEAP[tb+368]=fa;HEAP[tb+372]=g+52;HEAP[tb+380]=Ub;HEAP[Pa]=Jb;HEAP[Pa+16]=lc;HEAP[Pa+20]=Rb;HEAP[Pa+36]=Ba;HEAP[Pa+40]=Fb;HEAP[Pa+56]=vc;HEAP[Pa+60]=dc;HEAP[Pa+76]=kc;HEAP[oc]=Jb;HEAP[oc+4]=Rb;HEAP[oc+8]=Fb;HEAP[ac+12]=tc;HEAP[ac+
24]=g+54;HEAP[ac+44]=g+56;HEAP[ac+72]=g+58;HEAP[ac+88]=s;HEAP[ac+116]=tb;HEAP[ac+120]=Pa;HEAP[ac+148]=g+60;HEAP[ac+152]=g+62;HEAP[ac+156]=g+64;HEAP[ac+160]=g+66;HEAP[Kb]=pe;HEAP[Kb+4]=g+68;HEAP[Kb+12]=Kc;HEAP[Kb+16]=Rd;HEAP[Kb+20]=g+70;HEAP[Kb+28]=Oc;HEAP[Kb+32]=pb;HEAP[Kb+36]=g+72;HEAP[Kb+44]=Pc;HEAP[Kb+48]=W;HEAP[Kb+52]=g+74;HEAP[Kb+60]=$b;HEAP[Kb+64]=Hc;HEAP[Kb+68]=g+76;HEAP[Kb+76]=Rc;HEAP[Kb+80]=ed;HEAP[Kb+84]=g+78;HEAP[Kb+92]=Zc;HEAP[Kb+96]=xd;HEAP[Kb+100]=g+80;HEAP[Kb+108]=uc;HEAP[Kb+112]=Qc;
HEAP[Kb+116]=g+82;HEAP[Kb+124]=vd;HEAP[Kb+128]=Gc;HEAP[Kb+132]=g+84;HEAP[Kb+140]=oa;HEAP[Kb+144]=Tc;HEAP[Kb+148]=g+86;HEAP[Kb+156]=Sc;HEAP[Kb+160]=ue;HEAP[Kb+164]=g+88;HEAP[Kb+172]=id;HEAP[Kb+176]=Le;HEAP[Kb+180]=g+90;HEAP[Kb+188]=Pd;HEAP[Kb+192]=Vc;HEAP[Kb+196]=g+92;HEAP[Kb+204]=jd;HEAP[Kb+208]=ae;HEAP[Kb+212]=g+94;HEAP[Kb+220]=ie;HEAP[Kb+224]=Ic;HEAP[Kb+228]=g+96;HEAP[Kb+236]=kd;HEAP[Kb+240]=je;HEAP[Kb+244]=g+98;HEAP[Kb+252]=Nd;HEAP[Kb+256]=ve;HEAP[Kb+260]=g+100;HEAP[Kb+268]=ge;HEAP[Kb+272]=od;
HEAP[Kb+276]=g+102;HEAP[Kb+284]=ad;HEAP[Kb+288]=Gd;HEAP[Kb+292]=g+104;HEAP[Kb+300]=nd;HEAP[Kb+304]=Wc;HEAP[Kb+308]=g+106;HEAP[Kb+316]=oe;HEAP[Kb+320]=Fe;HEAP[Kb+324]=g+108;HEAP[Kb+332]=Zb;HEAP[ze]=ac}var t={arguments:[]};Runtime.QUANTUM_SIZE=4;var s,u,v,w,x,y,B,A,C,G,F,E,N,Q,I,J,P,D,T,L,$,R,K,H,S,U,z,aa,ja,la,da,Ka,Ma,wa,ib,cb,db,Da,gb,Xa,Ca,Za,Va,Ga,ha,Na,jb,hb,Qa,Ha,Ra,Ia,Fa,$a,Wa,Y,kb,ra,Ta,ia,ba,Ya,ta,O,wb,bb,vb,ka,za,Aa,La,ya,ub,Z,qa,M,na,nb,ca,ua,Ea,Eb,zb,va,xa,V,sa,pa,fb,ma,sb,mb,yb,Nb,Ib,
Db,Ub,Tb,qb,Mb,Hb,Wb,ea,Qb,Bb,ic,Vb,Oa,eb,Ob,Sa,Yb,xb,Xb,lb,fc,jc,Pb,nc,rb,fa,tb,Jb,lc,Rb,Ba,Fb,vc,dc,kc,Pa,Ua,Ab,oc,tc,ac,$b,Dc,Kc,Ac,mc,Oc,Fc,Pc,hd,Id,Rc,Jd,Vd,Lc,Zc,Mc,Kd,uc,Gb,oa,Ja,vd,cd,gc,Sc,yc,id,$c,Pd,jd,ie,Ld,Uc,kd,Qd,Md,Nd,Bc,dd,ge,Ed,pd,Xd,Ec,qd,Ad,ld,ne,Cb,Fd,ad,Yd,wd,md,Bd,rd,sc,Cd,nd,oe,Zb,pe,Rd,pb,W,Hc,ed,xd,Qc,Gc,Tc,ue,Le,Vc,ae,Ic,je,ve,od,Gd,Wc,Fe,Kb,ze,bc,Ge,He,Xc,qe,he,Ie,be,rc,ce,Zd,Hd,sd,fd,$e,yd,xf,Mf,Nf,yf,nf,Je,Of,Pf,zf,pc,cf,Af,Ae,Ve,ff,Bf,Cf,of,pf,$f,ag,Df,qf,zd,rf,sf,Cc,
bg,zc,Qf,cc,We,Rf,Be,cg,bd,Sf,Ef,Ff,Gf,Hf,Mg,ob,dg,ab,yg,Re,zg,Tf,gd,jg,hg,kg,lg,ef,If,Ag,Bg,Cg,Dg,qg,Ng,rg,Og,Jf,tf,nh,Dd,X,ga,Sb,we,Wd,Lb,Pg,Yc,Mh,oh,ph,qh,Nh,re,Oh,rh,sh,Sd,Kf,wc,th,Eg,Ph,Me,Yg,Zg,uh,$g,sg,Qh,gf,Qg,ah,vh,wh,xh,bh,Rg,ch,Rh,hf,yh,zh,Sh,Ah,Th,Uh,Vh,Bh,tg,Wh,Xh,dh,Ch,eh,Yh,Zh,mg,$h,ai,bi,fh,Dh,ci,di,ei,Eh,fi,gi,hi,ii,Fh,ug,Sg,Uf,Gh,Fg,ji,ki,Hh,xc,Ih,gh,li,Nc,mi,uf,hh,ni,ng,Gg,og,eg,Jc,ke,xe,Td,de,td,le,Ce,se,Ne,Oe,Ue,me,Xe,De,vg,Se,Ee,oi,Tg,pi,ih,qi,Ug,jh,Vg,ri,Vf,Wf,df,Ni,Pe,Ei,si,
Ii,ti,Oi,ui,Ji,vi,Pi,wi,Ki,Jh,Qi,xi,yi,hc,fg;t._init_socket=function(){var a;for(a=-1;;)switch(a){case -1:var b;a=void 0;a=1;a=a==0?10:1;break;case 1:HEAP[ac+4]=_PyType_Type;b=_Py_InitModule4(Ge,Kb,bc,0,1013);a=b==0?10:2;break;case 2:a=_PyErr_NewException(He,HEAP[_PyExc_IOError],0);HEAP[u]=a;a=HEAP[u]==0?10:3;break;case 3:HEAP[ze+4]=HEAP[u];HEAP[HEAP[u]]+=1;_PyModule_AddObject(b,Xc,HEAP[u]);a=_PyErr_NewException(qe,HEAP[u],0);HEAP[w]=a;a=HEAP[w]==0?10:4;break;case 4:HEAP[HEAP[w]]+=1;_PyModule_AddObject(b,
he,HEAP[w]);a=_PyErr_NewException(Ie,HEAP[u],0);HEAP[x]=a;a=HEAP[x]==0?10:5;break;case 5:HEAP[HEAP[x]]+=1;_PyModule_AddObject(b,be,HEAP[x]);a=_PyErr_NewException(rc,HEAP[u],0);HEAP[Xa]=a;a=HEAP[Xa]==0?10:6;break;case 6:HEAP[HEAP[Xa]]+=1;_PyModule_AddObject(b,dc,HEAP[Xa]);HEAP[ac]+=1;a=_PyModule_AddObject(b,ce,ac)!=0?10:7;break;case 7:HEAP[ac]+=1;a=_PyModule_AddObject(b,Zd,ac)!=0?10:8;break;case 8:a=__Py_TrueStruct;HEAP[a]+=1;_PyModule_AddObject(b,Hd,a);a=_PyCapsule_New(ze,sd,0);a=_PyModule_AddObject(b,
fd,a)!=0?10:9;break;case 9:_PyModule_AddIntConstant(b,$e,0);_PyModule_AddIntConstant(b,yd,2);_PyModule_AddIntConstant(b,xf,10);_PyModule_AddIntConstant(b,Mf,1);_PyModule_AddIntConstant(b,Nf,3);_PyModule_AddIntConstant(b,yf,4);_PyModule_AddIntConstant(b,nf,5);_PyModule_AddIntConstant(b,Je,6);_PyModule_AddIntConstant(b,Of,7);_PyModule_AddIntConstant(b,Pf,8);_PyModule_AddIntConstant(b,zf,9);_PyModule_AddIntConstant(b,xf,10);_PyModule_AddIntConstant(b,pc,11);_PyModule_AddIntConstant(b,cf,12);_PyModule_AddIntConstant(b,
Af,13);_PyModule_AddIntConstant(b,Ae,14);_PyModule_AddIntConstant(b,Ve,15);_PyModule_AddIntConstant(b,ff,16);_PyModule_AddIntConstant(b,Bf,0);_PyModule_AddIntConstant(b,Cf,2);_PyModule_AddIntConstant(b,of,3);_PyModule_AddIntConstant(b,pf,5);_PyModule_AddIntConstant(b,$f,6);_PyModule_AddIntConstant(b,ag,13);_PyModule_AddIntConstant(b,Df,14);_PyModule_AddIntConstant(b,qf,16);_PyModule_AddIntConstant(b,zd,18);_PyModule_AddIntConstant(b,rf,19);_PyModule_AddIntConstant(b,sf,20);_PyModule_AddIntConstant(b,
Cc,22);_PyModule_AddIntConstant(b,bg,23);_PyModule_AddIntConstant(b,zc,24);_PyModule_AddIntConstant(b,Qf,25);_PyModule_AddIntConstant(b,cc,26);_PyModule_AddIntConstant(b,We,17);_PyModule_AddIntConstant(b,Rf,17);_PyModule_AddIntConstant(b,Be,0);_PyModule_AddIntConstant(b,cg,1);_PyModule_AddIntConstant(b,bd,2);_PyModule_AddIntConstant(b,Sf,3);_PyModule_AddIntConstant(b,Ef,4);_PyModule_AddIntConstant(b,Ff,5);_PyModule_AddIntConstant(b,Gf,6);_PyModule_AddIntConstant(b,Hf,30);_PyModule_AddIntConstant(b,
Mg,1);_PyModule_AddIntConstant(b,ob,2);_PyModule_AddIntConstant(b,dg,3);_PyModule_AddIntConstant(b,ab,1);_PyModule_AddIntConstant(b,yg,2);_PyModule_AddIntConstant(b,Re,3);_PyModule_AddIntConstant(b,zg,271);_PyModule_AddIntConstant(b,Tf,127);_PyModule_AddIntConstant(b,gd,128);_PyModule_AddIntConstant(b,jg,129);_PyModule_AddIntConstant(b,hg,130);_PyModule_AddIntConstant(b,kg,0);_PyModule_AddIntConstant(b,lg,1);_PyModule_AddIntConstant(b,ef,2);_PyModule_AddIntConstant(b,If,3);_PyModule_AddIntConstant(b,
Ag,1);_PyModule_AddIntConstant(b,Bg,2);_PyModule_AddIntConstant(b,Cg,4);_PyModule_AddIntConstant(b,Dg,-1);_PyModule_AddIntConstant(b,qg,1);_PyModule_AddIntConstant(b,Ng,2);_PyModule_AddIntConstant(b,rg,3);_PyModule_AddIntConstant(b,Og,0);_PyModule_AddIntConstant(b,Jf,1);_PyModule_AddIntConstant(b,tf,1);_PyModule_AddIntConstant(b,nh,2);_PyModule_AddIntConstant(b,Dd,3);_PyModule_AddIntConstant(b,X,5);_PyModule_AddIntConstant(b,ga,4);_PyModule_AddIntConstant(b,Sb,1);_PyModule_AddIntConstant(b,we,30);
_PyModule_AddIntConstant(b,Wd,2);_PyModule_AddIntConstant(b,Lb,9);_PyModule_AddIntConstant(b,Pg,5);_PyModule_AddIntConstant(b,Yc,6);_PyModule_AddIntConstant(b,Mh,13);_PyModule_AddIntConstant(b,oh,10);_PyModule_AddIntConstant(b,ph,7);_PyModule_AddIntConstant(b,qh,8);_PyModule_AddIntConstant(b,Nh,19);_PyModule_AddIntConstant(b,re,18);_PyModule_AddIntConstant(b,Oh,21);_PyModule_AddIntConstant(b,rh,20);_PyModule_AddIntConstant(b,sh,4);_PyModule_AddIntConstant(b,Sd,3);_PyModule_AddIntConstant(b,Kf,128);
_PyModule_AddIntConstant(b,wc,1);_PyModule_AddIntConstant(b,th,2);_PyModule_AddIntConstant(b,Eg,4);_PyModule_AddIntConstant(b,Ph,64);_PyModule_AddIntConstant(b,Me,128);_PyModule_AddIntConstant(b,Yg,32);_PyModule_AddIntConstant(b,Zg,8);_PyModule_AddIntConstant(b,uh,256);_PyModule_AddIntConstant(b,$g,1);_PyModule_AddIntConstant(b,sg,0);_PyModule_AddIntConstant(b,Qh,6);_PyModule_AddIntConstant(b,gf,17);_PyModule_AddIntConstant(b,Qg,0);_PyModule_AddIntConstant(b,ah,0);_PyModule_AddIntConstant(b,vh,1);
_PyModule_AddIntConstant(b,wh,2);_PyModule_AddIntConstant(b,xh,41);_PyModule_AddIntConstant(b,bh,4);_PyModule_AddIntConstant(b,Rg,6);_PyModule_AddIntConstant(b,ch,8);_PyModule_AddIntConstant(b,Rh,12);_PyModule_AddIntConstant(b,hf,17);_PyModule_AddIntConstant(b,yh,22);_PyModule_AddIntConstant(b,zh,29);_PyModule_AddIntConstant(b,xh,41);_PyModule_AddIntConstant(b,Sh,43);_PyModule_AddIntConstant(b,Ah,44);_PyModule_AddIntConstant(b,Th,46);_PyModule_AddIntConstant(b,Uh,47);_PyModule_AddIntConstant(b,Vh,
50);_PyModule_AddIntConstant(b,Bh,51);_PyModule_AddIntConstant(b,tg,58);_PyModule_AddIntConstant(b,Wh,59);_PyModule_AddIntConstant(b,Xh,60);_PyModule_AddIntConstant(b,dh,103);_PyModule_AddIntConstant(b,Ch,255);_PyModule_AddIntConstant(b,eh,1024);_PyModule_AddIntConstant(b,Yh,5E3);_PyModule_AddIntConstant(b,Zh,0);_PyModule_AddIntConstant(b,mg,-1);_PyModule_AddIntConstant(b,$h,2130706433);_PyModule_AddIntConstant(b,ai,-536870912);_PyModule_AddIntConstant(b,bi,-536870911);_PyModule_AddIntConstant(b,
fh,-536870657);_PyModule_AddIntConstant(b,Dh,-1);_PyModule_AddIntConstant(b,ci,4);_PyModule_AddIntConstant(b,di,3);_PyModule_AddIntConstant(b,ei,1);_PyModule_AddIntConstant(b,Eh,2);_PyModule_AddIntConstant(b,fi,6);_PyModule_AddIntConstant(b,gi,7);_PyModule_AddIntConstant(b,hi,7);_PyModule_AddIntConstant(b,ii,32);_PyModule_AddIntConstant(b,Fh,33);_PyModule_AddIntConstant(b,ug,34);_PyModule_AddIntConstant(b,Sg,35);_PyModule_AddIntConstant(b,Uf,36);_PyModule_AddIntConstant(b,Gh,1);_PyModule_AddIntConstant(b,
Fg,1);_PyModule_AddIntConstant(b,ji,20);_PyModule_AddIntConstant(b,ki,20);_PyModule_AddIntConstant(b,Hh,21);_PyModule_AddIntConstant(b,xc,18);_PyModule_AddIntConstant(b,Ih,17);_PyModule_AddIntConstant(b,gh,19);_PyModule_AddIntConstant(b,li,16);_PyModule_AddIntConstant(b,Nc,26);_PyModule_AddIntConstant(b,mi,7);_PyModule_AddIntConstant(b,uf,59);_PyModule_AddIntConstant(b,hh,52);_PyModule_AddIntConstant(b,ni,54);_PyModule_AddIntConstant(b,ng,9);_PyModule_AddIntConstant(b,Gg,50);_PyModule_AddIntConstant(b,
og,58);_PyModule_AddIntConstant(b,eg,51);_PyModule_AddIntConstant(b,Jc,53);_PyModule_AddIntConstant(b,ke,49);_PyModule_AddIntConstant(b,xe,56);_PyModule_AddIntConstant(b,Td,66);_PyModule_AddIntConstant(b,de,57);_PyModule_AddIntConstant(b,td,55);_PyModule_AddIntConstant(b,le,0);_PyModule_AddIntConstant(b,Ce,67);_PyModule_AddIntConstant(b,se,1);_PyModule_AddIntConstant(b,Ne,2);_PyModule_AddIntConstant(b,Oe,3);_PyModule_AddIntConstant(b,Ue,4);_PyModule_AddIntConstant(b,me,5);_PyModule_AddIntConstant(b,
Xe,6);_PyModule_AddIntConstant(b,De,7);_PyModule_AddIntConstant(b,vg,8);_PyModule_AddIntConstant(b,Se,9);_PyModule_AddIntConstant(b,Ee,10);_PyModule_AddIntConstant(b,oi,11);_PyModule_AddIntConstant(b,Tg,12);_PyModule_AddIntConstant(b,pi,-9);_PyModule_AddIntConstant(b,ih,-3);_PyModule_AddIntConstant(b,qi,-1);_PyModule_AddIntConstant(b,Ug,-4);_PyModule_AddIntConstant(b,jh,-6);_PyModule_AddIntConstant(b,Vg,-10);_PyModule_AddIntConstant(b,ri,-5);_PyModule_AddIntConstant(b,Vf,-2);_PyModule_AddIntConstant(b,
Wf,-12);_PyModule_AddIntConstant(b,df,-8);_PyModule_AddIntConstant(b,Ni,-7);_PyModule_AddIntConstant(b,Pe,-11);_PyModule_AddIntConstant(b,Ei,1);_PyModule_AddIntConstant(b,si,2);_PyModule_AddIntConstant(b,Ii,4);_PyModule_AddIntConstant(b,ti,1024);_PyModule_AddIntConstant(b,Oi,16);_PyModule_AddIntConstant(b,ui,32);_PyModule_AddIntConstant(b,Ji,8);_PyModule_AddIntConstant(b,vi,1025);_PyModule_AddIntConstant(b,Pi,32);_PyModule_AddIntConstant(b,wi,4);_PyModule_AddIntConstant(b,Ki,1);_PyModule_AddIntConstant(b,
Jh,8);_PyModule_AddIntConstant(b,Qi,2);_PyModule_AddIntConstant(b,xi,16);_PyModule_AddIntConstant(b,yi,0);_PyModule_AddIntConstant(b,hc,1);_PyModule_AddIntConstant(b,fg,2);a=10;break;case 10:return;default:assert(0,"bad label: "+a)}};FUNCTION_TABLE=FUNCTION_TABLE.concat([0,0,e,0,_fclose,0,function(a){var b=STACKTOP;STACKTOP+=136;_memset(b,0,136);var d,e=null;for(d=-1;;)switch(d){case -1:var g,h=b,j,l=b+4,n,o=b+132,p,q,r,s;g=a;r=q=p=0;d=m(g,o)==0?1:2;break;case 1:j=0;d=19;break;case 2:_llvm_memset_p0i8_i32(l,
0,HEAP[o],1,0);n=-1;var t=s=c(g,0);t==0?(e=2,d=3):(e=2,d=4);break;case 3:HEAP[h]=l;n=_accept(HEAP[g+8],HEAP[h],o);var u=s,e=3;d=4;break;case 4:d=(e==3?u:t)==1?5:6;break;case 5:_PyErr_SetString(HEAP[Xa],Ca);j=0;d=19;break;case 6:var v=g;d=n<0?7:8;break;case 7:j=FUNCTION_TABLE[HEAP[v+24]]();d=19;break;case 8:p=f(n,HEAP[g+12],HEAP[g+16],HEAP[v+20]);d=p==0?9:10;break;case 9:_close(n);d=12;break;case 10:q=k(HEAP[g+8],l,HEAP[o],HEAP[g+20]);d=q==0?12:11;break;case 11:r=_PyTuple_Pack(2,allocate([p,0,0,0,
q,0,0,0],["%struct.PyObject*",0,0,0,"%struct.PyObject*",0,0,0],ALLOC_STACK));d=12;break;case 12:d=p!=0?13:15;break;case 13:HEAP[p]-=1;d=HEAP[p]==0?14:15;break;case 14:FUNCTION_TABLE[HEAP[HEAP[p+4]+24]](p);d=15;break;case 15:d=q!=0?16:18;break;case 16:HEAP[q]-=1;d=HEAP[q]==0?17:18;break;case 17:FUNCTION_TABLE[HEAP[HEAP[q+4]+24]](q);d=18;break;case 18:j=r;d=19;break;case 19:return a=j,STACKTOP=b,a;default:assert(0,"bad label: "+d)}},0,function(a,b){var c=STACKTOP;STACKTOP+=136;_memset(c,0,136);var d;
for(d=-1;;)switch(d){case -1:var e,f=c,g,h=c+4,j=c+132;e=a;d=l(e,b,h,j)==0?1:2;break;case 1:g=0;d=5;break;case 2:d=HEAP[j];HEAP[f]=h;d=_bind(HEAP[e+8],HEAP[f],d);d=d<0?3:4;break;case 3:g=FUNCTION_TABLE[HEAP[e+24]]();d=5;break;case 4:HEAP[__Py_NoneStruct]+=1;g=__Py_NoneStruct;d=5;break;case 5:return e=g,STACKTOP=c,e;default:assert(0,"bad label: "+d)}},0,function(a){var b;for(b=-1;;)switch(b){case -1:var c,d;c=a;d=HEAP[c+8];b=d!=-1?1:2;break;case 1:HEAP[c+8]=-1;_close(d);b=2;break;case 2:return HEAP[__Py_NoneStruct]+=
1,a=__Py_NoneStruct;default:assert(0,"bad label: "+b)}},0,function(a,b){var c=STACKTOP;STACKTOP+=136;_memset(c,0,136);var d;for(d=-1;;)switch(d){case -1:var e,f,g=c,h=c+128,j,k=c+132;e=a;d=l(e,b,g,h)==0?1:2;break;case 1:f=0;d=7;break;case 2:j=n(e,g,HEAP[h],k);d=HEAP[k]==1?3:4;break;case 3:_PyErr_SetString(HEAP[Xa],Ca);f=0;d=7;break;case 4:d=j!=0?5:6;break;case 5:f=FUNCTION_TABLE[HEAP[e+24]]();d=7;break;case 6:HEAP[__Py_NoneStruct]+=1;f=__Py_NoneStruct;d=7;break;case 7:return d=f,STACKTOP=c,d;default:assert(0,
"bad label: "+d)}},0,function(a,b){var c=STACKTOP;STACKTOP+=136;_memset(c,0,136);var d;for(d=-1;;)switch(d){case -1:var e,f,g=c,h=c+128,j,k=c+132;e=a;d=l(e,b,g,h)==0?1:2;break;case 1:f=0;d=6;break;case 2:j=n(e,g,HEAP[h],k);d=j==4?3:5;break;case 3:d=_PyErr_CheckSignals()!=0?4:5;break;case 4:f=0;d=6;break;case 5:f=_PyInt_FromLong(j);d=6;break;case 6:return d=f,STACKTOP=c,d;default:assert(0,"bad label: "+d)}},0,function(a){var b;for(b=-1;;)switch(b){case -1:var c,d,e,g;c=a;e=_dup(HEAP[c+8]);var h=c;
b=e<0?1:2;break;case 1:d=FUNCTION_TABLE[HEAP[h+24]]();b=5;break;case 2:g=f(e,HEAP[c+12],HEAP[c+16],HEAP[h+20]);b=g==0?3:4;break;case 3:_close(e);b=4;break;case 4:d=g;b=5;break;case 5:return a=d;default:assert(0,"bad label: "+b)}},0,function(a){return _PyInt_FromLong(HEAP[a+8])},0,function(a){var b=STACKTOP;STACKTOP+=136;_memset(b,0,136);var c;for(c=-1;;)switch(c){case -1:var d,e=b,f,g=b+4,h=b+132;d=a;c=m(d,h)==0?1:2;break;case 1:f=0;c=5;break;case 2:_llvm_memset_p0i8_i32(g,0,HEAP[h],1,0);HEAP[e]=
g;c=_getpeername(HEAP[d+8],HEAP[e],h);var j=d;c=c<0?3:4;break;case 3:f=FUNCTION_TABLE[HEAP[j+24]]();c=5;break;case 4:f=k(HEAP[d+8],g,HEAP[h],HEAP[j+20]);c=5;break;case 5:return a=f,STACKTOP=b,a;default:assert(0,"bad label: "+c)}},0,function(a){var b=STACKTOP;STACKTOP+=136;_memset(b,0,136);var c;for(c=-1;;)switch(c){case -1:var d,e=b,f,g=b+4,h=b+132;d=a;c=m(d,h)==0?1:2;break;case 1:f=0;c=5;break;case 2:_llvm_memset_p0i8_i32(g,0,HEAP[h],1,0);HEAP[e]=g;c=_getsockname(HEAP[d+8],HEAP[e],h);var j=d;c=c<
0?3:4;break;case 3:f=FUNCTION_TABLE[HEAP[j+24]]();c=5;break;case 4:f=k(HEAP[d+8],g,HEAP[h],HEAP[j+20]);c=5;break;case 5:return a=f,STACKTOP=b,a;default:assert(0,"bad label: "+c)}},0,function(a,b){var c=STACKTOP;STACKTOP+=24;_memset(c,0,24);var d;for(d=-1;;)switch(d){case -1:var e,f,g=c,h=c+4,j=c+8,k=c+12,l=c+16,m=c+20;e=a;d=b;HEAP[k]=0;d=_PyArg_ParseTuple(d,Ha,allocate([g,0,0,0,h,0,0,0,k,0,0,0],["i32*",0,0,0,"i32*",0,0,0,"i32*",0,0,0],ALLOC_STACK))==0?1:2;break;case 1:f=0;d=15;break;case 2:d=HEAP[k]==
0?3:6;break;case 3:HEAP[l]=0;HEAP[m]=4;d=_getsockopt(HEAP[e+8],HEAP[g],HEAP[h],l,m);d=d<0?4:5;break;case 4:f=FUNCTION_TABLE[HEAP[e+24]]();d=15;break;case 5:f=_PyInt_FromLong(HEAP[l]);d=15;break;case 6:d=HEAP[k]==0|HEAP[k]>1024?7:8;break;case 7:_PyErr_SetString(HEAP[u],Ra);f=0;d=15;break;case 8:d=_PyString_FromStringAndSize(0,HEAP[k]);HEAP[j]=d;d=HEAP[j]==0?9:10;break;case 9:f=0;d=15;break;case 10:d=_getsockopt(HEAP[e+8],HEAP[g],HEAP[h],HEAP[j]+20,k);d=d<0?11:14;break;case 11:d=HEAP[j];HEAP[d]-=1;
d=HEAP[d]==0?12:13;break;case 12:FUNCTION_TABLE[HEAP[HEAP[HEAP[j]+4]+24]](HEAP[j]);d=13;break;case 13:f=FUNCTION_TABLE[HEAP[e+24]]();d=15;break;case 14:__PyString_Resize(j,HEAP[k]);f=HEAP[j];d=15;break;case 15:return e=f,STACKTOP=c,e;default:assert(0,"bad label: "+d)}},0,function(a,b){var c,d=null;for(c=-1;;)switch(c){case -1:var e,f,g;e=a;var h=g=_PyInt_AsLong(b);h==-1?(d=-1,c=1):(d=-1,c=4);break;case 1:c=_PyErr_Occurred()!=0?2:3;break;case 2:f=0;c=9;break;case 3:var j=g,d=3;c=4;break;case 4:c=(d==
3?j:h)<0?5:6;break;case 5:g=0;c=6;break;case 6:c=_listen(HEAP[e+8],g)<0?7:8;break;case 7:f=FUNCTION_TABLE[HEAP[e+24]]();c=9;break;case 8:HEAP[__Py_NoneStruct]+=1;f=__Py_NoneStruct;c=9;break;case 9:return c=f;default:assert(0,"bad label: "+c)}},0,function(a,b){var c=STACKTOP;STACKTOP+=8;_memset(c,0,8);var d;for(d=-1;;)switch(d){case -1:var e,f,h=c,j=c+4,k,l,m;e=a;d=b;HEAP[h]=Ya;HEAP[j]=-1;d=_PyArg_ParseTuple(d,ta,allocate([h,0,0,0,j,0,0,0],["i8**",0,0,0,"i32*",0,0,0],ALLOC_STACK))==0?1:2;break;case 1:f=
0;d=10;break;case 2:k=_dup(HEAP[e+8]);d=k<0?6:3;break;case 3:l=_fdopen(k,HEAP[h]);d=l==0?4:7;break;case 4:d=k>=0?5:6;break;case 5:_close(k);d=6;break;case 6:f=FUNCTION_TABLE[HEAP[e+24]]();d=10;break;case 7:m=_PyFile_FromFile(l,O,HEAP[h],g+4);d=m!=0?8:9;break;case 8:_PyFile_SetBufSize(m,HEAP[j]);d=9;break;case 9:f=m;d=10;break;case 10:return e=f,STACKTOP=c,e;default:assert(0,"bad label: "+d)}},0,function(a,b){var c=STACKTOP;STACKTOP+=12;_memset(c,0,12);var d;for(d=-1;;)switch(d){case -1:var e,f,g=
c,h=c+4,j,k=c+8;e=a;d=b;HEAP[h]=0;d=_PyArg_ParseTuple(d,bb,allocate([g,0,0,0,h,0,0,0],["i32*",0,0,0,"i32*",0,0,0],ALLOC_STACK))==0?1:2;break;case 1:f=0;d=14;break;case 2:d=HEAP[g]<0?3:4;break;case 3:_PyErr_SetString(HEAP[_PyExc_ValueError],vb);f=0;d=14;break;case 4:d=_PyString_FromStringAndSize(0,HEAP[g]);HEAP[k]=d;d=HEAP[k]==0?5:6;break;case 5:f=0;d=14;break;case 6:j=o(e,HEAP[k]+20,HEAP[g],HEAP[h]);d=j<0?7:10;break;case 7:d=HEAP[k];HEAP[d]-=1;d=HEAP[d]==0?8:9;break;case 8:FUNCTION_TABLE[HEAP[HEAP[HEAP[k]+
4]+24]](HEAP[k]);d=9;break;case 9:f=0;d=14;break;case 10:d=j!=HEAP[g]?11:13;break;case 11:d=__PyString_Resize(k,j)<0?12:13;break;case 12:f=0;d=14;break;case 13:f=HEAP[k];d=14;break;case 14:return e=f,STACKTOP=c,e;default:assert(0,"bad label: "+d)}},0,function(a,b,c){var d=STACKTOP;STACKTOP+=60;_memset(d,0,60);var e;for(e=-1;;)switch(e){case -1:var f,g,h,j=d,k=d+4,l,m=d+8,n;f=a;e=b;g=c;HEAP[j]=0;HEAP[k]=0;e=_PyArg_ParseTupleAndKeywords(e,g,za,Aa,allocate([m,0,0,0,j,0,0,0,k,0,0,0],["%struct.Py_buffer*",
0,0,0,"i32*",0,0,0,"i32*",0,0,0],ALLOC_STACK))==0?1:2;break;case 1:h=0;e=14;break;case 2:n=HEAP[m+8];e=HEAP[m]==0?4:3;break;case 3:e=n<=0?4:5;break;case 4:throw ___assert_fail(Z,qa,2483,M),"Reached an unreachable!";case 5:e=HEAP[j]<0?6:7;break;case 6:_PyErr_SetString(HEAP[_PyExc_ValueError],na);e=13;break;case 7:e=HEAP[j]==0?8:9;break;case 8:HEAP[j]=n;e=9;break;case 9:e=n<HEAP[j]?10:11;break;case 10:_PyErr_SetString(HEAP[_PyExc_ValueError],nb);e=13;break;case 11:l=o(f,HEAP[m],HEAP[j],HEAP[k]);e=l<
0?13:12;break;case 12:_PyBuffer_Release(m);h=_PyInt_FromSsize_t(l);e=14;break;case 13:_PyBuffer_Release(m);h=0;e=14;break;case 14:return a=h,STACKTOP=d,a;default:assert(0,"bad label: "+e)}},0,function(a,b){var c=STACKTOP;STACKTOP+=16;_memset(c,0,16);var d;for(d=-1;;)switch(d){case -1:var e,f,g=c,h=c+4,j,k=c+8,l=c+12,m;e=a;d=b;HEAP[g]=0;j=HEAP[h]=0;HEAP[l]=0;d=_PyArg_ParseTuple(d,ua,allocate([k,0,0,0,l,0,0,0],["i32*",0,0,0,"i32*",0,0,0],ALLOC_STACK))==0?1:2;break;case 1:f=0;d=17;break;case 2:d=HEAP[k]<
0?3:4;break;case 3:_PyErr_SetString(HEAP[_PyExc_ValueError],Ea);f=0;d=17;break;case 4:d=_PyString_FromStringAndSize(0,HEAP[k]);HEAP[g]=d;d=HEAP[g]==0?5:6;break;case 5:f=0;d=17;break;case 6:m=p(e,HEAP[g]+20,HEAP[k],HEAP[l],h);d=m<0?10:7;break;case 7:d=m!=HEAP[k]?8:9;break;case 8:d=__PyString_Resize(g,m)<0?10:9;break;case 9:j=_PyTuple_Pack(2,allocate([HEAP[g],0,0,0,HEAP[h],0,0,0],["%struct.PyObject*",0,0,0,"%struct.PyObject*",0,0,0],ALLOC_STACK));d=10;break;case 10:d=HEAP[g]!=0?11:13;break;case 11:d=
HEAP[g];HEAP[d]-=1;d=HEAP[d]==0?12:13;break;case 12:FUNCTION_TABLE[HEAP[HEAP[HEAP[g]+4]+24]](HEAP[g]);d=13;break;case 13:d=HEAP[h]!=0?14:16;break;case 14:d=HEAP[h];HEAP[d]-=1;d=HEAP[d]==0?15:16;break;case 15:FUNCTION_TABLE[HEAP[HEAP[HEAP[h]+4]+24]](HEAP[h]);d=16;break;case 16:f=j;d=17;break;case 17:return e=f,STACKTOP=c,e;default:assert(0,"bad label: "+d)}},0,function(a,b,c){var d=STACKTOP;STACKTOP+=64;_memset(d,0,64);var e;for(e=-1;;)switch(e){case -1:var f,g,h,j=d,k=d+4,l,m=d+8,n,o=d+60;f=a;e=b;
g=c;HEAP[j]=0;HEAP[k]=0;HEAP[o]=0;e=_PyArg_ParseTupleAndKeywords(e,g,zb,va,allocate([m,0,0,0,j,0,0,0,k,0,0,0],["%struct.Py_buffer*",0,0,0,"i32*",0,0,0,"i32*",0,0,0],ALLOC_STACK))==0?1:2;break;case 1:h=0;e=15;break;case 2:n=HEAP[m+8];e=HEAP[m]==0?4:3;break;case 3:e=n<=0?4:5;break;case 4:throw ___assert_fail(Z,qa,2665,xa),"Reached an unreachable!";case 5:e=HEAP[j]<0?6:7;break;case 6:_PyErr_SetString(HEAP[_PyExc_ValueError],V);e=11;break;case 7:e=HEAP[j]==0?8:9;break;case 8:HEAP[j]=n;e=9;break;case 9:l=
e=p(f,HEAP[m],HEAP[j],HEAP[k],o);e=e<0?11:10;break;case 10:_PyBuffer_Release(m);h=_Py_BuildValue(sa,allocate([l,0,0,0,HEAP[o],0,0,0],["i32",0,0,0,"%struct.PyObject*",0,0,0],ALLOC_STACK));e=15;break;case 11:e=HEAP[o]!=0?12:14;break;case 12:e=HEAP[o];HEAP[e]-=1;e=HEAP[e]==0?13:14;break;case 13:FUNCTION_TABLE[HEAP[HEAP[HEAP[o]+4]+24]](HEAP[o]);e=14;break;case 14:_PyBuffer_Release(m);h=0;e=15;break;case 15:return a=h,STACKTOP=d,a;default:assert(0,"bad label: "+e)}},0,function(a,b){var d=STACKTOP;STACKTOP+=
56;_memset(d,0,56);var e;for(e=-1;;)switch(e){case -1:var f,g,h,j,k,l=d,m,n=d+4;f=a;e=b;k=-1;HEAP[l]=0;e=_PyArg_ParseTuple(e,fb,allocate([n,0,0,0,l,0,0,0],["%struct.Py_buffer*",0,0,0,"i32*",0,0,0],ALLOC_STACK))==0?1:2;break;case 1:g=0;e=9;break;case 2:h=HEAP[n];j=HEAP[n+8];m=c(f,1);e=m==0?3:4;break;case 3:k=_send(HEAP[f+8],h,j,HEAP[l]);e=4;break;case 4:_PyBuffer_Release(n);e=m==1?5:6;break;case 5:_PyErr_SetString(HEAP[Xa],Ca);g=0;e=9;break;case 6:e=k<0?7:8;break;case 7:g=FUNCTION_TABLE[HEAP[f+24]]();
e=9;break;case 8:g=_PyInt_FromLong(k);e=9;break;case 9:return f=g,STACKTOP=d,f;default:assert(0,"bad label: "+e)}},0,function(a,b){var d=STACKTOP;STACKTOP+=56;_memset(d,0,56);var e,f=null;for(e=-1;;)switch(e){case -1:var g,h,j,k,l,m=d,n,o,p=d+4;g=a;e=b;l=-1;HEAP[m]=0;e=_PyArg_ParseTuple(e,sb,allocate([p,0,0,0,m,0,0,0],["%struct.Py_buffer*",0,0,0,"i32*",0,0,0],ALLOC_STACK))==0?1:2;break;case 1:h=0;e=17;break;case 2:j=HEAP[p];k=HEAP[p+8];e=3;break;case 3:var q=c(g,1);n=q;l=-1;q==0?(f=3,e=4):(f=3,e=
5);break;case 4:l=_send(HEAP[g+8],j,k,HEAP[m]);var r=n,f=4;e=5;break;case 5:e=(f==4?r:q)==1?6:7;break;case 6:_PyBuffer_Release(p);_PyErr_SetString(HEAP[Xa],Ca);h=0;e=17;break;case 7:o=___errno_location();o=HEAP[o];e=_PyErr_CheckSignals()!=0?8:9;break;case 8:_PyBuffer_Release(p);h=0;e=17;break;case 9:e=l<0?10:11;break;case 10:e=o==4?12:14;break;case 11:j+=l;var s=k-l;k=s;f=11;e=13;break;case 12:var t=k,f=12;e=13;break;case 13:e=(f==12?t:s)>0?3:14;break;case 14:_PyBuffer_Release(p);e=l<0?15:16;break;
case 15:h=FUNCTION_TABLE[HEAP[g+24]]();e=17;break;case 16:HEAP[__Py_NoneStruct]+=1;h=__Py_NoneStruct;e=17;break;case 17:return f=h,STACKTOP=d,f;default:assert(0,"bad label: "+e)}},0,function(a,b){var d=STACKTOP;STACKTOP+=196;_memset(d,0,196);var e;for(e=-1;;)switch(e){case -1:var f,g,h=d,j,k=d+4,m=d+56,n,o,p=d+60,q=d+188,r,s=d+192,t,u;f=a;g=b;r=-1;HEAP[s]=0;e=u=_PyTuple_Size(g);e=e==2?1:e==3?2:3;break;case 1:_PyArg_ParseTuple(g,yb,allocate([k,0,0,0,m,0,0,0],["%struct.Py_buffer*",0,0,0,"%struct.PyObject**",
0,0,0],ALLOC_STACK));e=4;break;case 2:_PyArg_ParseTuple(g,Nb,allocate([k,0,0,0,s,0,0,0,m,0,0,0],["%struct.Py_buffer*",0,0,0,"i32*",0,0,0,"%struct.PyObject**",0,0,0],ALLOC_STACK));e=4;break;case 3:_PyErr_Format(HEAP[_PyExc_TypeError],Ib,allocate([u,0,0,0],["i32",0,0,0],ALLOC_STACK));e=4;break;case 4:e=_PyErr_Occurred()!=0?5:6;break;case 5:j=0;e=15;break;case 6:n=HEAP[k];o=HEAP[k+8];e=l(f,HEAP[m],p,q)==0?7:8;break;case 7:_PyBuffer_Release(k);j=0;e=15;break;case 8:t=c(f,1);e=t==0?9:10;break;case 9:r=
HEAP[q];HEAP[h]=p;r=_sendto(HEAP[f+8],n,o,HEAP[s],HEAP[h],r);e=10;break;case 10:_PyBuffer_Release(k);e=t==1?11:12;break;case 11:_PyErr_SetString(HEAP[Xa],Ca);j=0;e=15;break;case 12:e=r<0?13:14;break;case 13:j=FUNCTION_TABLE[HEAP[f+24]]();e=15;break;case 14:j=_PyInt_FromLong(r);e=15;break;case 15:return f=j,STACKTOP=d,f;default:assert(0,"bad label: "+e)}},0,function(b,c){var d,e=null;for(d=-1;;)switch(d){case -1:var f,g,h,j;f=b;var k=j=_PyInt_AsLong(c);k==-1?(e=-1,d=1):(e=-1,d=4);break;case 1:d=_PyErr_Occurred()!=
0?2:3;break;case 2:h=0;d=8;break;case 3:var l=j,e=3;d=4;break;case 4:d=(e==3?l:k)!=0?5:6;break;case 5:g=-1;d=7;break;case 6:g=0;d=7;break;case 7:HEAP[f+28]=g;a(f,j);HEAP[__Py_NoneStruct]+=1;h=__Py_NoneStruct;d=8;break;case 8:return d=h;default:assert(0,"bad label: "+d)}},0,function(b,c){var d;for(d=-1;;)switch(d){case -1:var e,f,g,h;e=b;f=c;d=f==__Py_NoneStruct?1:2;break;case 1:h=-1;d=6;break;case 2:h=_PyFloat_AsDouble(f);d=h<0?3:6;break;case 3:d=_PyErr_Occurred()==0?4:5;break;case 4:_PyErr_SetString(HEAP[_PyExc_ValueError],
Ga);d=5;break;case 5:g=0;d=7;break;case 6:HEAP[e+28]=h;a(e,h<0);HEAP[__Py_NoneStruct]+=1;g=__Py_NoneStruct;d=7;break;case 7:return d=g;default:assert(0,"bad label: "+d)}},0,function(a){var b;for(b=-1;;)switch(b){case -1:var c,d;c=a;b=HEAP[c+28]<0?1:2;break;case 1:HEAP[__Py_NoneStruct]+=1;d=__Py_NoneStruct;b=3;break;case 2:d=_PyFloat_FromDouble(HEAP[c+28]);b=3;break;case 3:return a=d;default:assert(0,"bad label: "+b)}},0,function(a,b){var c=STACKTOP;STACKTOP+=20;_memset(c,0,20);var d;for(d=-1;;)switch(d){case -1:var e,
f,g,h=c,j=c+4,k=c+8,l=c+12,m=c+16;e=a;f=b;d=_PyArg_ParseTuple(f,jb,allocate([h,0,0,0,j,0,0,0,m,0,0,0],["i32*",0,0,0,"i32*",0,0,0,"i32*",0,0,0],ALLOC_STACK))!=0?1:2;break;case 1:HEAP[k]=m;d=HEAP[l]=4;break;case 2:_PyErr_Clear();d=_PyArg_ParseTuple(f,hb,allocate([h,0,0,0,j,0,0,0,k,0,0,0,l,0,0,0],["i32*",0,0,0,"i32*",0,0,0,"i8**",0,0,0,"i32*",0,0,0],ALLOC_STACK))==0?3:4;break;case 3:g=0;d=7;break;case 4:d=_setsockopt(HEAP[e+8],HEAP[h],HEAP[j],HEAP[k],HEAP[l])<0?5:6;break;case 5:g=FUNCTION_TABLE[HEAP[e+
24]]();d=7;break;case 6:HEAP[__Py_NoneStruct]+=1;g=__Py_NoneStruct;d=7;break;case 7:return d=g,STACKTOP=c,d;default:assert(0,"bad label: "+d)}},0,function(a,b){var c;for(c=-1;;)switch(c){case -1:var d,e,f;d=a;f=_PyInt_AsLong(b);c=f==-1?1:3;break;case 1:c=_PyErr_Occurred()!=0?2:3;break;case 2:e=0;c=6;break;case 3:c=_shutdown(HEAP[d+8],f)<0?4:5;break;case 4:e=FUNCTION_TABLE[HEAP[d+24]]();c=6;break;case 5:HEAP[__Py_NoneStruct]+=1;e=__Py_NoneStruct;c=6;break;case 6:return c=e;default:assert(0,"bad label: "+
c)}},0,function(a){var b;for(b=-1;;)switch(b){case -1:var c;c=a;b=HEAP[c+8]!=-1?1:2;break;case 1:_close(HEAP[c+8]);b=2;break;case 2:FUNCTION_TABLE[HEAP[HEAP[c+4]+160]](c);return;default:assert(0,"bad label: "+b)}},0,function(a){var b=STACKTOP;STACKTOP+=512;_memset(b,0,512);_PyOS_snprintf(b,512,Ua,allocate([HEAP[a+8],0,0,0,HEAP[a+12],0,0,0,HEAP[a+16],0,0,0,HEAP[a+20],0,0,0],["i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0],ALLOC_STACK));a=_PyString_FromString(b);STACKTOP=b;return a},0,_PyObject_GenericGetAttr,
0,function(a,b,c){var f=STACKTOP;STACKTOP+=12;_memset(f,0,12);var g;for(g=-1;;)switch(g){case -1:var h,j,k,l,m=f,n=f+4,o=f+8;h=a;g=b;j=c;HEAP[m]=2;HEAP[n]=1;HEAP[o]=0;g=_PyArg_ParseTupleAndKeywords(g,j,Ab,oc,allocate([m,0,0,0,n,0,0,0,o,0,0,0],["i32*",0,0,0,"i32*",0,0,0,"i32*",0,0,0],ALLOC_STACK))==0?1:2;break;case 1:k=-1;g=5;break;case 2:l=_socket(HEAP[m],HEAP[n],HEAP[o]);g=l<0?3:4;break;case 3:e();k=-1;g=5;break;case 4:d(h,l,HEAP[m],HEAP[n],HEAP[o]);k=0;g=5;break;case 5:return a=k,STACKTOP=f,a;default:assert(0,
"bad label: "+g)}},0,_PyType_GenericAlloc,0,function(a){var b;for(b=-1;;)switch(b){case -1:var c;b=a;c=FUNCTION_TABLE[HEAP[b+152]](b,0);b=c!=0?1:2;break;case 1:HEAP[c+8]=-1;HEAP[c+28]=-1;HEAP[c+24]=g+2;b=2;break;case 2:return a=c;default:assert(0,"bad label: "+b)}},0,_PyObject_Free,0,function(a,b){var c=STACKTOP;STACKTOP+=132;_memset(c,0,132);var d;for(d=-1;;)switch(d){case -1:var e,f=c,g=c+4;d=_PyArg_ParseTuple(b,Dc,allocate([f,0,0,0],["i8**",0,0,0],ALLOC_STACK))==0?1:2;break;case 1:e=0;d=5;break;
case 2:d=h(HEAP[f],g,128,2)<0?3:4;break;case 3:e=0;d=5;break;case 4:e=j(g,16);d=5;break;case 5:return d=e,STACKTOP=c,d;default:assert(0,"bad label: "+d)}},0,function(a,b){var ec;var c=STACKTOP;STACKTOP+=132;_memset(c,0,132);var d;for(d=-1;;)switch(d){case -1:var e,f;e=c;var g=c+4;d=_PyArg_ParseTuple(b,mc,allocate([e,0,0,0],["i8**",0,0,0],ALLOC_STACK))==0?1:2;break;case 1:f=0;d=5;break;case 2:d=h(HEAP[e],g,128,2)<0?3:4;break;case 3:f=0;d=5;break;case 4:d=_gethostbyname(HEAP[e]);f=g;ec=d=q(d,g,HEAP[f]),
f=ec;d=5;break;case 5:return e=f,STACKTOP=c,e;default:assert(0,"bad label: "+d)}},0,function(a,b){var c=STACKTOP;STACKTOP+=132;_memset(c,0,132);var d;for(d=-1;;)switch(d){case -1:var e,f;e=c;var g,j=c+128,k,l,m;d=b;g=e;d=_PyArg_ParseTuple(d,Fc,allocate([j,0,0,0],["i8**",0,0,0],ALLOC_STACK))==0?1:2;break;case 1:f=0;d=9;break;case 2:m=0;d=h(HEAP[j],g,128,m)<0?3:4;break;case 3:f=0;d=9;break;case 4:m=HEAP[g];k=0;d=m;d=d==2?5:d==10?6:7;break;case 5:k=g+4;l=4;d=8;break;case 6:k=g+8;l=16;d=8;break;case 7:_PyErr_SetString(HEAP[u],
A);f=0;d=9;break;case 8:f=_gethostbyaddr(k,l,m);f=q(f,e,m);d=9;break;case 9:return e=f,STACKTOP=c,e;default:assert(0,"bad label: "+d)}},0,function(){var a=STACKTOP;STACKTOP+=1024;_memset(a,0,1024);var b;for(b=-1;;)switch(b){case -1:var c,d=a;b=_gethostname(d,1023)<0?1:2;break;case 1:c=e();b=3;break;case 2:HEAP[d+1023]=0;c=_PyString_FromString(d);b=3;break;case 3:return b=c,STACKTOP=a,b;default:assert(0,"bad label: "+b)}},0,function(a,b){var c=STACKTOP;STACKTOP+=8;_memset(c,0,8);var d;for(d=-1;;)switch(d){case -1:var e,
f;e=c;var g=c+4,h;d=b;HEAP[g]=0;d=_PyArg_ParseTuple(d,hd,allocate([e,0,0,0,g,0,0,0],["i8**",0,0,0,"i8**",0,0,0],ALLOC_STACK))==0?1:2;break;case 1:f=0;d=5;break;case 2:h=_getservbyname(HEAP[e],HEAP[g]);d=h==0?3:4;break;case 3:_PyErr_SetString(HEAP[u],Id);f=0;d=5;break;case 4:f=_ntohs(HEAP[h+8]&65535);f=_PyInt_FromLong(f);d=5;break;case 5:return e=f,STACKTOP=c,e;default:assert(0,"bad label: "+d)}},0,function(a,b){var c=STACKTOP;STACKTOP+=8;_memset(c,0,8);var d;for(d=-1;;)switch(d){case -1:var e,f=c,
g=c+4,h;d=b;HEAP[g]=0;d=_PyArg_ParseTuple(d,Jd,allocate([f,0,0,0,g,0,0,0],["i32*",0,0,0,"i8**",0,0,0],ALLOC_STACK))==0?1:2;break;case 1:e=0;d=7;break;case 2:d=HEAP[f]<0|HEAP[f]>65535?3:4;break;case 3:_PyErr_SetString(HEAP[_PyExc_OverflowError],Vd);e=0;d=7;break;case 4:h=HEAP[g];d=_htons(HEAP[f]&65535);h=_getservbyport(d,h);d=h==0?5:6;break;case 5:_PyErr_SetString(HEAP[u],Lc);e=0;d=7;break;case 6:e=_PyString_FromString(HEAP[h]);d=7;break;case 7:return STACKTOP=c,e;default:assert(0,"bad label: "+d)}},
0,function(a,b){var c=STACKTOP;STACKTOP+=4;_memset(c,0,4);var d;for(d=-1;;)switch(d){case -1:var e,f=c,g;d=_PyArg_ParseTuple(b,Mc,allocate([f,0,0,0],["i8**",0,0,0],ALLOC_STACK))==0?1:2;break;case 1:e=0;d=5;break;case 2:g=_getprotobyname(HEAP[f]);d=g==0?3:4;break;case 3:_PyErr_SetString(HEAP[u],Kd);e=0;d=5;break;case 4:e=_PyInt_FromLong(HEAP[g+8]);d=5;break;case 5:return d=e,STACKTOP=c,d;default:assert(0,"bad label: "+d)}},0,function(a,b){var c=STACKTOP;STACKTOP+=16;_memset(c,0,16);var d;for(d=-1;;)switch(d){case -1:var g,
h;g=c;var j=c+4,k=c+8,l=c+12;d=b;HEAP[l]=0;d=_PyArg_ParseTuple(d,Ja,allocate([g,0,0,0,j,0,0,0,k,0,0,0,l,0,0,0],["i32*",0,0,0,"i32*",0,0,0,"i32*",0,0,0,"i32*",0,0,0],ALLOC_STACK))==0?1:2;break;case 1:h=0;d=5;break;case 2:d=_dup(HEAP[g]);HEAP[g]=d;d=HEAP[g]<0?3:4;break;case 3:h=e();d=5;break;case 4:h=f(HEAP[g],HEAP[j],HEAP[k],HEAP[l]);d=5;break;case 5:return g=h,STACKTOP=c,g;default:assert(0,"bad label: "+d)}},0,function(a,b){var c=STACKTOP;STACKTOP+=20;_memset(c,0,20);var d,g=null;for(d=-1;;)switch(d){case -1:var h,
j,k,l=c,m=c+8,n=c+12,o=c+16,p;d=b;k=j=0;HEAP[n]=1;p=HEAP[o]=0;HEAP[m]=1;d=_PyArg_ParseTuple(d,Gb,allocate([m,0,0,0,n,0,0,0,o,0,0,0],["i32*",0,0,0,"i32*",0,0,0,"i32*",0,0,0],ALLOC_STACK))==0?1:2;break;case 1:h=0;d=20;break;case 2:d=_socketpair(HEAP[m],HEAP[n],HEAP[o],l)<0?3:4;break;case 3:h=e();d=20;break;case 4:j=f(HEAP[l],HEAP[m],HEAP[n],HEAP[o]);d=j==0?7:5;break;case 5:k=f(HEAP[l+4],HEAP[m],HEAP[n],HEAP[o]);d=k==0?7:6;break;case 6:var q=_PyTuple_Pack(2,allocate([j,0,0,0,k,0,0,0],["%struct.PySocketSockObject*",
0,0,0,"%struct.PySocketSockObject*",0,0,0],ALLOC_STACK));p=q;g=6;d=8;break;case 7:var r=p,g=7;d=8;break;case 8:d=(g==7?r:q)==0?9:13;break;case 9:d=j==0?10:11;break;case 10:_close(HEAP[l]);d=11;break;case 11:d=k==0?12:13;break;case 12:_close(HEAP[l+4]);d=13;break;case 13:d=j!=0?14:16;break;case 14:HEAP[j]-=1;d=HEAP[j]==0?15:16;break;case 15:FUNCTION_TABLE[HEAP[HEAP[j+4]+24]](j);d=16;break;case 16:d=k!=0?17:19;break;case 17:HEAP[k]-=1;d=HEAP[k]==0?18:19;break;case 18:FUNCTION_TABLE[HEAP[HEAP[k+4]+24]](k);
d=19;break;case 19:h=p;d=20;break;case 20:return g=h,STACKTOP=c,g;default:assert(0,"bad label: "+d)}},0,function(a,b){var c=STACKTOP;STACKTOP+=4;_memset(c,0,4);var d;for(d=-1;;)switch(d){case -1:var e,f;e=c;d=_PyArg_ParseTuple(b,cd,allocate([e,0,0,0],["i32*",0,0,0],ALLOC_STACK))==0?1:2;break;case 1:f=0;d=5;break;case 2:d=HEAP[e]<0?3:4;break;case 3:_PyErr_SetString(HEAP[_PyExc_OverflowError],gc);f=0;d=5;break;case 4:d=_ntohs(HEAP[e]&65535);f=_PyInt_FromLong(d);d=5;break;case 5:return e=f,STACKTOP=
c,e;default:assert(0,"bad label: "+d)}},0,function(a,b){var c,d=null;for(c=-1;;)switch(c){case -1:var e,f,g,h=e=b;c=(HEAP[HEAP[e+4]+84]&8388608)!=0?1:7;break;case 1:var j=g=HEAP[h+8];j==-1?(d=1,c=2):(d=1,c=5);break;case 2:c=_PyErr_Occurred()!=0?3:4;break;case 3:f=0;c=16;break;case 4:var k=g,d=4;c=5;break;case 5:c=(d==4?k:j)<0?6:12;break;case 6:_PyErr_SetString(HEAP[_PyExc_OverflowError],gc);f=0;c=16;break;case 7:var l=e;c=(HEAP[HEAP[h+4]+84]&16777216)!=0?8:11;break;case 8:g=_PyLong_AsUnsignedLong(l);
c=g==-1?9:15;break;case 9:c=_PyErr_Occurred()!=0?10:12;break;case 10:f=0;c=16;break;case 11:f=_PyErr_Format(HEAP[_PyExc_TypeError],yc,allocate([HEAP[HEAP[l+4]+12],0,0,0],["i8*",0,0,0],ALLOC_STACK));c=16;break;case 12:c=g==-1?13:15;break;case 13:c=_PyErr_Occurred()!=0?14:15;break;case 14:f=0;c=16;break;case 15:c=_ntohl(g);f=_PyLong_FromUnsignedLong(c);c=16;break;case 16:return d=f;default:assert(0,"bad label: "+c)}},0,function(a,b){var c=STACKTOP;STACKTOP+=4;_memset(c,0,4);var d;for(d=-1;;)switch(d){case -1:var e,
f;e=c;d=_PyArg_ParseTuple(b,$c,allocate([e,0,0,0],["i32*",0,0,0],ALLOC_STACK))==0?1:2;break;case 1:f=0;d=5;break;case 2:d=HEAP[e]<0?3:4;break;case 3:_PyErr_SetString(HEAP[_PyExc_OverflowError],gc);f=0;d=5;break;case 4:d=_htons(HEAP[e]&65535);f=_PyInt_FromLong(d);d=5;break;case 5:return e=f,STACKTOP=c,e;default:assert(0,"bad label: "+d)}},0,function(a,b){var c,d=null;for(c=-1;;)switch(c){case -1:var e,f,g,h=e=b;c=(HEAP[HEAP[e+4]+84]&8388608)!=0?1:7;break;case 1:var j=g=HEAP[h+8];j==-1?(d=1,c=2):(d=
1,c=5);break;case 2:c=_PyErr_Occurred()!=0?3:4;break;case 3:f=0;c=13;break;case 4:var k=g,d=4;c=5;break;case 5:c=(d==4?k:j)<0?6:12;break;case 6:_PyErr_SetString(HEAP[_PyExc_OverflowError],gc);f=0;c=13;break;case 7:var l=e;c=(HEAP[HEAP[h+4]+84]&16777216)!=0?8:11;break;case 8:g=_PyLong_AsUnsignedLong(l);c=g==-1?9:12;break;case 9:c=_PyErr_Occurred()!=0?10:12;break;case 10:f=0;c=13;break;case 11:f=_PyErr_Format(HEAP[_PyExc_TypeError],yc,allocate([HEAP[HEAP[l+4]+12],0,0,0],["i8*",0,0,0],ALLOC_STACK));
c=13;break;case 12:c=_htonl(g);f=_PyLong_FromUnsignedLong(c);c=13;break;case 13:return d=f;default:assert(0,"bad label: "+c)}},0,function(a,b){var c=STACKTOP;STACKTOP+=8;_memset(c,0,8);var d;for(d=-1;;)switch(d){case -1:var e,f=c,g=c+4;d=_PyArg_ParseTuple(b,Ld,allocate([g,0,0,0],["i8**",0,0,0],ALLOC_STACK))==0?1:2;break;case 1:e=0;d=5;break;case 2:d=_inet_aton(HEAP[g],f)!=0?3:4;break;case 3:e=_PyString_FromStringAndSize(f,4);d=5;break;case 4:_PyErr_SetString(HEAP[u],Uc);e=0;d=5;break;case 5:return d=
e,STACKTOP=c,d;default:assert(0,"bad label: "+d)}},0,function(a,b){var c=STACKTOP;STACKTOP+=12;_memset(c,0,12);var d;for(d=-1;;)switch(d){case -1:var e,f;e=c;var g=c+4,h=c+8;d=_PyArg_ParseTuple(b,Qd,allocate([e,0,0,0,g,0,0,0],["i8**",0,0,0,"i32*",0,0,0],ALLOC_STACK))==0?1:2;break;case 1:f=0;d=5;break;case 2:d=HEAP[g]!=4?3:4;break;case 3:_PyErr_SetString(HEAP[u],Md);f=0;d=5;break;case 4:_llvm_memcpy_p0i8_p0i8_i32(h,HEAP[e],HEAP[g],1,0);d=_inet_ntoa(HEAP[h]);f=_PyString_FromString(d);d=5;break;case 5:return e=
f,STACKTOP=c,e;default:assert(0,"bad label: "+d)}},0,function(a,b){var c=STACKTOP;STACKTOP+=24;_memset(c,0,24);var d;for(d=-1;;)switch(d){case -1:var e,f=c,g=c+4,h,j=c+8;d=_PyArg_ParseTuple(b,Bc,allocate([f,0,0,0,g,0,0,0],["i32*",0,0,0,"i8**",0,0,0],ALLOC_STACK))==0?1:2;break;case 1:e=0;d=11;break;case 2:h=_inet_pton(HEAP[f],HEAP[g],j);d=h<0?3:4;break;case 3:_PyErr_SetFromErrno(HEAP[u]);e=0;d=11;break;case 4:d=h==0?5:6;break;case 5:_PyErr_SetString(HEAP[u],dd);e=0;d=11;break;case 6:d=HEAP[f]==2?7:
8;break;case 7:e=_PyString_FromStringAndSize(j,4);d=11;break;case 8:d=HEAP[f]==10?9:10;break;case 9:e=_PyString_FromStringAndSize(j,16);d=11;break;case 10:_PyErr_SetString(HEAP[u],N);e=0;d=11;break;case 11:return d=e,STACKTOP=c,d;default:assert(0,"bad label: "+d)}},0,function(a,b){var c=STACKTOP;STACKTOP+=59;_memset(c,0,59);var d;for(d=-1;;)switch(d){case -1:var e,f=c,g=c+4,h=c+8,j,k=c+12;d=b;_llvm_memset_p0i8_i32(k,0,47,1,0);d=_PyArg_ParseTuple(d,Ed,allocate([f,0,0,0,g,0,0,0,h,0,0,0],["i32*",0,0,
0,"i8**",0,0,0,"i32*",0,0,0],ALLOC_STACK))==0?1:2;break;case 1:e=0;d=12;break;case 2:d=HEAP[f]==2?3:5;break;case 3:d=HEAP[h]!=4?4:9;break;case 4:_PyErr_SetString(HEAP[_PyExc_ValueError],pd);e=0;d=12;break;case 5:d=HEAP[f]==10?6:8;break;case 6:d=HEAP[h]!=16?7:9;break;case 7:_PyErr_SetString(HEAP[_PyExc_ValueError],pd);e=0;d=12;break;case 8:_PyErr_Format(HEAP[_PyExc_ValueError],Xd,allocate([HEAP[f],0,0,0],["i32",0,0,0],ALLOC_STACK));e=0;d=12;break;case 9:j=d=_inet_ntop(HEAP[f],HEAP[g],k,47);d=d==0?
10:11;break;case 10:_PyErr_SetFromErrno(HEAP[u]);e=0;d=12;break;case 11:e=_PyString_FromString(j);d=12;break;case 12:return STACKTOP=c,e;default:assert(0,"bad label: "+d)}},0,function(a,c){var d=STACKTOP;STACKTOP+=90;_memset(d,0,90);var e,f=null;for(e=-1;;)switch(e){case -1:var g,h,j=d,l,m=d+32,n=d+36,o=d+40,p=d+44,q,r,s=d+74,t=d+78,v=d+82,w=d+86,x,M,y,z,A;e=c;HEAP[m]=0;HEAP[n]=0;z=y=M=HEAP[o]=0;HEAP[w]=0;HEAP[v]=HEAP[w];HEAP[t]=HEAP[v];HEAP[s]=0;e=_PyArg_ParseTuple(e,Ec,allocate([n,0,0,0,o,0,0,0,
s,0,0,0,t,0,0,0,v,0,0,0,w,0,0,0],["%struct.PyObject**",0,0,0,"%struct.PyObject**",0,0,0,"i32*",0,0,0,"i32*",0,0,0,"i32*",0,0,0,"i32*",0,0,0],ALLOC_STACK))==0?1:2;break;case 1:h=0;e=53;break;case 2:e=HEAP[n]==__Py_NoneStruct?3:4;break;case 3:q=0;e=11;break;case 4:var V=HEAP[n];e=(HEAP[HEAP[HEAP[n]+4]+84]&268435456)!=0?5:8;break;case 5:z=_PyObject_CallMethod(V,qd,Ad,allocate([aa,0,0,0],["i8*",0,0,0],ALLOC_STACK));e=z==0?6:7;break;case 6:h=0;e=53;break;case 7:q=_PyString_AsString(z);e=11;break;case 8:e=
(HEAP[HEAP[V+4]+84]&134217728)!=0?9:10;break;case 9:q=_PyString_AsString(HEAP[n]);e=11;break;case 10:_PyErr_SetString(HEAP[_PyExc_TypeError],ld);h=0;e=53;break;case 11:var H=HEAP[o];e=(HEAP[HEAP[HEAP[o]+4]+84]&8388608)!=0?12:13;break;case 12:r=_PyInt_AsLong(H);_PyOS_snprintf(p,30,ne,allocate([r,0,0,0],["i32",0,0,0],ALLOC_STACK));r=p;e=18;break;case 13:var B=HEAP[o];e=(HEAP[HEAP[H+4]+84]&134217728)!=0?14:15;break;case 14:r=_PyString_AsString(B);e=18;break;case 15:e=B==__Py_NoneStruct?16:17;break;case 16:r=
0;e=18;break;case 17:_PyErr_SetString(HEAP[u],Cb);e=41;break;case 18:_llvm_memset_p0i8_i32(j,0,32,1,0);HEAP[j+4]=HEAP[s];HEAP[j+8]=HEAP[t];HEAP[j+12]=HEAP[v];HEAP[j]=HEAP[w];x=e=_getaddrinfo(q,r,j,m);e=e!=0?19:20;break;case 19:b(x);e=41;break;case 20:M=_PyList_New(0);e=M==0?41:21;break;case 21:var C=HEAP[m];l=C;f=21;e=34;break;case 22:A=k(-1,HEAP[l+20],HEAP[l+16],HEAP[v]);e=A==0?41:23;break;case 23:e=HEAP[l+24]!=0?24:25;break;case 24:g=HEAP[l+24];e=26;break;case 25:g=P;e=26;break;case 26:y=_Py_BuildValue(Fd,
allocate([HEAP[l+4],0,0,0,HEAP[l+8],0,0,0,HEAP[l+12],0,0,0,g,0,0,0,A,0,0,0],["i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i8*",0,0,0,"%struct.PyObject*",0,0,0],ALLOC_STACK));HEAP[A]-=1;e=HEAP[A]==0?27:28;break;case 27:FUNCTION_TABLE[HEAP[HEAP[A+4]+24]](A);e=28;break;case 28:e=y==0?44:29;break;case 29:e=_PyList_Append(M,y)!=0?41:30;break;case 30:e=y!=0?31:33;break;case 31:HEAP[y]-=1;e=HEAP[y]==0?32:33;break;case 32:FUNCTION_TABLE[HEAP[HEAP[y+4]+24]](y);e=33;break;case 33:var D=HEAP[l+28];l=D;f=33;e=34;break;
case 34:e=(f==33?D:C)!=0?22:35;break;case 35:e=z!=0?36:38;break;case 36:HEAP[z]-=1;e=HEAP[z]==0?37:38;break;case 37:FUNCTION_TABLE[HEAP[HEAP[z+4]+24]](z);e=38;break;case 38:e=HEAP[m]!=0?39:40;break;case 39:_freeaddrinfo(HEAP[m]);e=40;break;case 40:h=M;e=53;break;case 41:e=y!=0?42:44;break;case 42:HEAP[y]-=1;e=HEAP[y]==0?43:44;break;case 43:FUNCTION_TABLE[HEAP[HEAP[y+4]+24]](y);e=44;break;case 44:e=M!=0?45:47;break;case 45:HEAP[M]-=1;e=HEAP[M]==0?46:47;break;case 46:FUNCTION_TABLE[HEAP[HEAP[M+4]+24]](M);
e=47;break;case 47:e=z!=0?48:50;break;case 48:HEAP[z]-=1;e=HEAP[z]==0?49:50;break;case 49:FUNCTION_TABLE[HEAP[HEAP[z+4]+24]](z);e=50;break;case 50:e=HEAP[m]!=0?51:52;break;case 51:_freeaddrinfo(HEAP[m]);e=52;break;case 52:h=0;e=53;break;case 53:return f=h,STACKTOP=d,f;default:assert(0,"bad label: "+e)}},0,function(a,c){var d=STACKTOP;STACKTOP+=1117;_memset(d,0,1117);var e;for(e=-1;;)switch(e){case -1:var f,g=d,h=d+4,j=d+8,k=d+12,l=d+16,m=d+20,n=d+24,o=d+1049,p=d+1081,q=d+1113,r,s;e=c;HEAP[g]=0;s=
HEAP[q]=0;HEAP[m]=0;HEAP[l]=HEAP[m];HEAP[h]=HEAP[l];e=_PyArg_ParseTuple(e,Yd,allocate([g,0,0,0,h,0,0,0],["%struct.PyObject**",0,0,0,"i32*",0,0,0],ALLOC_STACK))==0?1:2;break;case 1:f=0;e=20;break;case 2:e=(HEAP[HEAP[HEAP[g]+4]+84]&67108864)==0?3:4;break;case 3:_PyErr_SetString(HEAP[_PyExc_TypeError],wd);f=0;e=20;break;case 4:e=_PyArg_ParseTuple(HEAP[g],md,allocate([j,0,0,0,k,0,0,0,l,0,0,0,m,0,0,0],["i8**",0,0,0,"i32*",0,0,0,"i32*",0,0,0,"i32*",0,0,0],ALLOC_STACK))==0?5:6;break;case 5:f=0;e=20;break;
case 6:_PyOS_snprintf(o,32,Bd,allocate([HEAP[k],0,0,0],["i32",0,0,0],ALLOC_STACK));r=p+8;_llvm_memset_p0i8_i64(p,0,32,1,0);HEAP[r]=2;r=_getaddrinfo(HEAP[j],o,p,q);e=r!=0?7:8;break;case 7:b(r);e=17;break;case 8:e=HEAP[HEAP[q]+28]!=0?9:10;break;case 9:_PyErr_SetString(HEAP[u],rd);e=17;break;case 10:e=HEAP[HEAP[q]+4];e=e==2?11:e==10?13:14;break;case 11:e=HEAP[HEAP[g]+8]!=2?12:14;break;case 12:_PyErr_SetString(HEAP[u],sc);e=17;break;case 13:e=HEAP[HEAP[q]+20];HEAP[e+4]=HEAP[l];HEAP[e+24]=HEAP[m];e=14;
break;case 14:r=e=_getnameinfo(HEAP[HEAP[q]+20],HEAP[HEAP[q]+16],n,1025,o,32,HEAP[h]);e=e!=0?15:16;break;case 15:b(r);e=17;break;case 16:s=_Py_BuildValue(Cd,allocate([n,0,0,0,o,0,0,0],["i8*",0,0,0,"i8*",0,0,0],ALLOC_STACK));e=17;break;case 17:e=HEAP[q]!=0?18:19;break;case 18:_freeaddrinfo(HEAP[q]);e=19;break;case 19:f=s;e=20;break;case 20:return STACKTOP=d,f;default:assert(0,"bad label: "+e)}},0,function(){var a;for(a=-1;;)switch(a){case -1:var b;a=HEAP[y]<0?1:2;break;case 1:HEAP[__Py_NoneStruct]+=
1;b=__Py_NoneStruct;a=3;break;case 2:b=_PyFloat_FromDouble(HEAP[y]);a=3;break;case 3:return a=b;default:assert(0,"bad label: "+a)}},0,function(a,b){var c;for(c=-1;;)switch(c){case -1:var d,e,f;d=b;c=d==__Py_NoneStruct?1:2;break;case 1:f=-1;c=6;break;case 2:f=_PyFloat_AsDouble(d);c=f<0?3:6;break;case 3:c=_PyErr_Occurred()==0?4:5;break;case 4:_PyErr_SetString(HEAP[_PyExc_ValueError],Ga);c=5;break;case 5:e=0;c=7;break;case 6:HEAP[y]=f;HEAP[__Py_NoneStruct]+=1;e=__Py_NoneStruct;c=7;break;case 7:return c=
e;default:assert(0,"bad label: "+c)}},0]);t.run=r;r();return t});