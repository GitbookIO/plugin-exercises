(function(g){function e(a){var b;for(b=-1;;)switch(b){case -1:var c,e,d,f,g,h;c=a;g=0;b=c==0?1:2;break;case 1:throw ___assert_fail(u,v,112,w),"Reached an unreachable!";case 2:b=(HEAP[HEAP[c+4]+84]&8388608)!=0?29:3;break;case 3:b=(HEAP[HEAP[c+4]+84]&16777216)!=0?29:4;break;case 4:h=HEAP[HEAP[c+4]+48];b=HEAP[HEAP[c+4]+48]!=0?5:12;break;case 5:b=(HEAP[HEAP[c+4]+84]&131072)!=0?6:12;break;case 6:b=HEAP[HEAP[HEAP[c+4]+48]+152]!=0?7:12;break;case 7:f=
_PyNumber_Index(c);b=f!=0?8:9;break;case 8:c=f;g=1;b=30;break;case 9:b=_PyErr_ExceptionMatches(HEAP[_PyExc_TypeError])!=0?10:11;break;case 10:_PyErr_Clear();b=12;break;case 11:e=0;b=42;break;case 12:b=g==0?13:30;break;case 13:b=h!=0?14:27;break;case 14:b=HEAP[h+72]!=0?15:27;break;case 15:b=HEAP[c+4]==_PyFloat_Type?17:16;break;case 16:b=_PyType_IsSubtype(HEAP[c+4],_PyFloat_Type)!=0?17:19;break;case 17:b=_PyErr_WarnEx(HEAP[_PyExc_DeprecationWarning],x,1)!=0?18:21;break;case 18:e=0;b=42;break;case 19:b=
_PyErr_WarnEx(HEAP[_PyExc_DeprecationWarning],y,1)!=0?20:21;break;case 20:e=0;b=42;break;case 21:c=b=FUNCTION_TABLE[HEAP[h+72]](c);b=b==0?22:23;break;case 22:e=0;b=42;break;case 23:b=(HEAP[HEAP[c+4]+84]&8388608)==0?24:26;break;case 24:b=(HEAP[HEAP[c+4]+84]&16777216)==0?25:26;break;case 25:_PyErr_SetString(HEAP[_PyExc_TypeError],B);e=0;b=42;break;case 26:g=1;b=30;break;case 27:b=g==0?28:30;break;case 28:_PyErr_SetString(HEAP[A],C);e=0;b=42;break;case 29:HEAP[c]+=1;b=30;break;case 30:b=(HEAP[HEAP[c+
4]+84]&8388608)==0?31:33;break;case 31:b=(HEAP[HEAP[c+4]+84]&16777216)==0?32:33;break;case 32:throw ___assert_fail(G,v,172,w),"Reached an unreachable!";case 33:var j=c;b=(HEAP[HEAP[c+4]+84]&8388608)!=0?34:36;break;case 34:d=_PyLong_FromLong(HEAP[j+8]);HEAP[c]-=1;b=HEAP[c]==0?35:41;break;case 35:FUNCTION_TABLE[HEAP[HEAP[c+4]+24]](c);b=41;break;case 36:b=(HEAP[HEAP[j+4]+84]&16777216)!=0?37:40;break;case 37:b=(HEAP[HEAP[c+4]+84]&16777216)==0?38:39;break;case 38:throw ___assert_fail(F,v,178,w),"Reached an unreachable!";
case 39:d=c;b=41;break;case 40:throw ___assert_fail(E,v,184,w),"Reached an unreachable!";case 41:e=d;b=42;break;case 42:return a=e;default:assert(0,"bad label: "+b)}}function b(a,b){var c;for(c=-1;;)switch(c){case -1:var d,f,g,h;d=a;f=b;d=e(d);c=d==0?1:2;break;case 1:g=-1;c=10;break;case 2:c=(HEAP[HEAP[d+4]+84]&16777216)==0?3:4;break;case 3:throw ___assert_fail(F,v,202,N),"Reached an unreachable!";case 4:h=_PyLong_AsLong(d);HEAP[d]-=1;c=HEAP[d]==0?5:6;break;case 5:FUNCTION_TABLE[HEAP[HEAP[d+4]+24]](d);
c=6;break;case 6:c=h==-1?7:9;break;case 7:c=_PyErr_Occurred()!=0?8:9;break;case 8:g=-1;c=10;break;case 9:HEAP[f]=h;g=0;c=10;break;case 10:return c=g;default:assert(0,"bad label: "+c)}}function a(a,b){var c;for(c=-1;;)switch(c){case -1:var d,f,g,h;d=a;f=b;d=e(d);c=d==0?1:2;break;case 1:g=-1;c=10;break;case 2:c=(HEAP[HEAP[d+4]+84]&16777216)==0?3:4;break;case 3:throw ___assert_fail(F,v,221,Q),"Reached an unreachable!";case 4:h=_PyLong_AsUnsignedLong(d);HEAP[d]-=1;c=HEAP[d]==0?5:6;break;case 5:FUNCTION_TABLE[HEAP[HEAP[d+
4]+24]](d);c=6;break;case 6:c=h==-1?7:9;break;case 7:c=_PyErr_Occurred()!=0?8:9;break;case 8:g=-1;c=10;break;case 9:HEAP[f]=h;g=0;c=10;break;case 10:return c=g;default:assert(0,"bad label: "+c)}}function c(a,b){var c;for(c=-1;;)switch(c){case -1:var e,d;d=__PyFloat_Unpack4(a,b);c=d==-1?1:3;break;case 1:c=_PyErr_Occurred()!=0?2:3;break;case 2:e=0;c=4;break;case 3:e=_PyFloat_FromDouble(d);c=4;break;case 4:return c=e;default:assert(0,"bad label: "+c)}}function d(a,b){var c;for(c=-1;;)switch(c){case -1:var e,
d;d=__PyFloat_Unpack8(a,b);c=d==-1?1:3;break;case 1:c=_PyErr_Occurred()!=0?2:3;break;case 2:e=0;c=4;break;case 3:e=_PyFloat_FromDouble(d);c=4;break;case 4:return c=e;default:assert(0,"bad label: "+c)}}function f(a,b){var c;for(c=-1;;)switch(c){case -1:var e,d,f;e=a;d=b;f=4294967295>>>(4-HEAP[e+4])*8;c=HEAP[e+4]<=0?2:1;break;case 1:c=HEAP[e+4]>4?2:3;break;case 2:throw ___assert_fail(P,v,311,D),"Reached an unreachable!";case 3:c=d!=0?4:5;break;case 4:_PyErr_Format(HEAP[A],T,allocate([HEAP[e],0,0,0,
f,0,0,0],["i32",0,0,0,"i32",0,0,0],ALLOC_STACK));c=6;break;case 5:c=f>>>1;_PyErr_Format(HEAP[A],L,allocate([HEAP[e],0,0,0,c^-1,0,0,0,c,0,0,0],["i32",0,0,0,"i32",0,0,0,"i32",0,0,0],ALLOC_STACK));c=6;break;case 6:return-1;default:assert(0,"bad label: "+c)}}function h(a,b){var c;for(c=-1;;)switch(c){case -1:var e,d,f;e=a;d=b;c=4;break;case 1:var g=d;c=HEAP[d]==e?2:3;break;case 2:f=g;c=6;break;case 3:d=g+20;c=4;break;case 4:c=HEAP[d]!=0?1:5;break;case 5:_PyErr_SetString(HEAP[A],da);f=0;c=6;break;case 6:return c=
f;default:assert(0,"bad label: "+c)}}function j(a,b,c){var e;for(e=-1;;)switch(e){case -1:var d,f,g,h;d=a;e=b;f=c;e=HEAP[f]==e?1:6;break;case 1:e=HEAP[f+8]!=0?2:6;break;case 2:e=d>0?3:6;break;case 3:h=HEAP[f+8]+-1+(0-(d-1)%HEAP[f+8]);e=2147483647-d<h?4:5;break;case 4:g=-1;e=7;break;case 5:d=h+d;e=6;break;case 6:g=d;e=7;break;case 7:return a=g;default:assert(0,"bad label: "+e)}}function k(a,b){var c,e=null;for(c=-1;;)switch(c){case -1:var d,f,g,h,j,k,l,m,n,o;d=a;f=b;j=0;k=_PyTuple_New(HEAP[d+12]);
c=k==0?1:2;break;case 1:g=0;c=17;break;case 2:h=HEAP[d+16];c=12;break;case 3:m=HEAP[h];n=f+HEAP[h+4];c=HEAP[m]==115?4:5;break;case 4:var p=_PyString_FromStringAndSize(n,HEAP[h+8]);l=p;e=4;c=10;break;case 5:c=HEAP[m]==112?6:9;break;case 6:o=HEAP[n];c=HEAP[h+8]<=o?7:8;break;case 7:o=HEAP[h+8]-1;c=8;break;case 8:var q=_PyString_FromStringAndSize(n+1,o);l=q;e=8;c=10;break;case 9:var z=FUNCTION_TABLE[HEAP[m+12]](n,m);l=z;e=9;c=10;break;case 10:var r=k;c=(e==9?z:e==8?q:p)==0?14:11;break;case 11:HEAP[r+
12+j*4]=l;j+=1;h+=12;c=12;break;case 12:c=HEAP[h]!=0?3:13;break;case 13:g=k;c=17;break;case 14:HEAP[k]=HEAP[r]-1;c=HEAP[k]==0?15:16;break;case 15:FUNCTION_TABLE[HEAP[HEAP[k+4]+24]](k);c=16;break;case 16:g=0;c=17;break;case 17:return c=g;default:assert(0,"bad label: "+c)}}function l(a,b){var c=STACKTOP;STACKTOP+=8;_memset(c,0,8);var e;for(e=-1;;)switch(e){case -1:var d,f,g,h=c,j=c+4,l,m,n;d=a;f=b;l=0;n=d;e=HEAP[d+4]!=qa?1:3;break;case 1:e=_PyType_IsSubtype(HEAP[d+4],qa)==0?2:3;break;case 2:throw ___assert_fail(ib,
v,1446,Ca),"Reached an unreachable!";case 3:e=HEAP[n+16]==0?4:5;break;case 4:throw ___assert_fail(Za,v,1447,Ca),"Reached an unreachable!";case 5:e=f==0?16:6;break;case 6:e=(HEAP[HEAP[f+4]+84]&134217728)!=0?7:9;break;case 7:e=HEAP[f+8]==HEAP[n+8]?8:9;break;case 8:g=k(n,f+20);e=20;break;case 9:l=e=_PyTuple_Pack(1,allocate([f,0,0,0],["%struct.PyObject*",0,0,0],ALLOC_STACK));e=e==0?10:11;break;case 10:g=0;e=20;break;case 11:e=__PyArg_ParseTuple_SizeT(l,Va,allocate([h,0,0,0,j,0,0,0],["i8**",0,0,0,"i32*",
0,0,0],ALLOC_STACK))==0?16:12;break;case 12:e=HEAP[n+8]!=HEAP[j]?16:13;break;case 13:m=k(n,HEAP[h]);HEAP[l]-=1;e=HEAP[l]==0?14:15;break;case 14:FUNCTION_TABLE[HEAP[HEAP[l+4]+24]](l);e=15;break;case 15:g=m;e=20;break;case 16:e=l!=0?17:19;break;case 17:HEAP[l]-=1;e=HEAP[l]==0?18:19;break;case 18:FUNCTION_TABLE[HEAP[HEAP[l+4]+24]](l);e=19;break;case 19:_PyErr_Format(HEAP[A],Ga,allocate([HEAP[n+8],0,0,0],["i32",0,0,0],ALLOC_STACK));g=0;e=20;break;case 20:return d=g,STACKTOP=c,d;default:assert(0,"bad label: "+
e)}}function m(a,b,c){var e=STACKTOP;STACKTOP+=12;_memset(e,0,12);var d;for(d=-1;;)switch(d){case -1:var f,g,h,j,l=e,m=e+4,n=e+8,o;f=a;g=b;h=c;HEAP[l]=0;HEAP[m]=0;HEAP[n]=0;o=f;d=HEAP[f+4]!=qa?1:3;break;case 1:d=_PyType_IsSubtype(HEAP[f+4],qa)==0?2:3;break;case 2:throw ___assert_fail(ib,v,1493,Na),"Reached an unreachable!";case 3:d=HEAP[o+16]==0?4:5;break;case 4:throw ___assert_fail(Za,v,1494,Na),"Reached an unreachable!";case 5:d=__PyArg_ParseTupleAndKeywords_SizeT(g,h,jb,hb,allocate([n,0,0,0,l,
0,0,0,m,0,0,0],["i8**",0,0,0,"i32*",0,0,0,"i32*",0,0,0],ALLOC_STACK))==0?6:7;break;case 6:j=0;d=14;break;case 7:d=HEAP[n]==0?8:9;break;case 8:_PyErr_Format(HEAP[A],Ra,allocate(1,"i32",ALLOC_STACK));j=0;d=14;break;case 9:d=HEAP[m]<0?10:11;break;case 10:d=HEAP[l]+HEAP[m];HEAP[m]=d;d=d<0?12:11;break;case 11:d=HEAP[l]-HEAP[m]<HEAP[o+8]?12:13;break;case 12:_PyErr_Format(HEAP[A],Ia,allocate([HEAP[o+8],0,0,0],["i32",0,0,0],ALLOC_STACK));j=0;d=14;break;case 13:j=k(o,HEAP[n]+HEAP[m]);d=14;break;case 14:return a=
j,STACKTOP=e,a;default:assert(0,"bad label: "+d)}}function n(a,b,c,e){var d,f=null;for(d=-1;;)switch(d){case -1:var g,h,j,k,l,m,n,o,p;d=a;g=b;h=c;j=e;_llvm_memset_p0i8_i32(j,0,HEAP[d+8],1,0);l=HEAP[d+16];d=24;break;case 1:n=HEAP[g+12+h*4];h+=1;o=HEAP[l];p=j+HEAP[l+4];d=HEAP[o]==115?2:8;break;case 2:d=(HEAP[HEAP[n+4]+84]&134217728)==0?3:4;break;case 3:_PyErr_SetString(HEAP[A],Fa);k=-1;d=26;break;case 4:var q=m=HEAP[n+8];HEAP[l+8]<q?(f=4,d=5):(f=4,d=6);break;case 5:var z=HEAP[l+8];m=z;f=5;d=6;break;
case 6:d=(f==5?z:q)>0?7:23;break;case 7:_llvm_memcpy_p0i8_p0i8_i32(p,n+20,m,1,0);d=23;break;case 8:d=HEAP[o]==112?9:18;break;case 9:d=(HEAP[HEAP[n+4]+84]&134217728)==0?10:11;break;case 10:_PyErr_SetString(HEAP[A],$a);k=-1;d=26;break;case 11:var r=m=HEAP[n+8];HEAP[l+8]-1<r?(f=11,d=12):(f=11,d=13);break;case 12:var t=HEAP[l+8]-1;m=t;f=12;d=13;break;case 13:d=(f==12?t:r)>0?14:15;break;case 14:_llvm_memcpy_p0i8_p0i8_i32(p+1,n+20,m,1,0);d=15;break;case 15:d=m>255?16:17;break;case 16:m=255;d=17;break;case 17:HEAP[p]=
m&255;d=23;break;case 18:d=FUNCTION_TABLE[HEAP[o+16]](p,n,o)<0?19:23;break;case 19:d=_memchr(s,HEAP[o],11)!=0?20:22;break;case 20:d=_PyErr_ExceptionMatches(HEAP[_PyExc_OverflowError])!=0?21:22;break;case 21:_PyErr_Format(HEAP[A],Wa,allocate([HEAP[o],0,0,0],["i32",0,0,0],ALLOC_STACK));d=22;break;case 22:k=-1;d=26;break;case 23:l+=12;d=24;break;case 24:d=HEAP[l]!=0?1:25;break;case 25:k=0;d=26;break;case 26:return a=k;default:assert(0,"bad label: "+d)}}function o(a,b){var c;for(c=-1;;)switch(c){case -1:var d,
e,f,g,h;d=a;e=b;g=d;c=HEAP[d+4]!=qa?1:3;break;case 1:c=_PyType_IsSubtype(HEAP[d+4],qa)==0?2:3;break;case 2:throw ___assert_fail(ib,v,1601,kb),"Reached an unreachable!";case 3:c=HEAP[g+16]==0?4:5;break;case 4:throw ___assert_fail(Za,v,1602,kb),"Reached an unreachable!";case 5:var j=g;c=HEAP[e+8]!=HEAP[g+12]?6:7;break;case 6:_PyErr_Format(HEAP[A],ra,allocate([HEAP[j+12],0,0,0],["i32",0,0,0],ALLOC_STACK));f=0;c=14;break;case 7:h=_PyString_FromStringAndSize(0,HEAP[j+8]);c=h==0?8:9;break;case 8:f=0;c=
14;break;case 9:c=n(g,e,0,h+20);var k=h;c=c!=0?10:13;break;case 10:HEAP[h]=HEAP[k]-1;c=HEAP[h]==0?11:12;break;case 11:FUNCTION_TABLE[HEAP[HEAP[h+4]+24]](h);c=12;break;case 12:f=0;c=14;break;case 13:f=k;c=14;break;case 14:return d=f;default:assert(0,"bad label: "+c)}}function p(a,b){var c=STACKTOP;STACKTOP+=8;_memset(c,0,8);var d,e=null;for(d=-1;;)switch(d){case -1:var f,g,h,j,k=c,l=c+4,m;f=a;g=b;j=f;d=HEAP[f+4]!=qa?1:3;break;case 1:d=_PyType_IsSubtype(HEAP[f+4],qa)==0?2:3;break;case 2:throw ___assert_fail(ib,
v,1641,ia),"Reached an unreachable!";case 3:d=HEAP[j+16]==0?4:5;break;case 4:throw ___assert_fail(Za,v,1642,ia),"Reached an unreachable!";case 5:d=HEAP[g+8]!=HEAP[j+12]+2?6:7;break;case 6:_PyErr_Format(HEAP[A],ba,allocate([HEAP[j+12]+2,0,0,0],["i32",0,0,0],ALLOC_STACK));h=0;d=24;break;case 7:d=_PyObject_AsWriteBuffer(HEAP[g+12],k,l)==-1?8:9;break;case 8:h=0;d=24;break;case 9:d=HEAP[l]<0?10:11;break;case 10:throw ___assert_fail(Ya,v,1656,ia),"Reached an unreachable!";case 11:var o=m=_PyInt_AsSsize_t(HEAP[g+
12+4]);o==-1?(e=11,d=12):(e=11,d=15);break;case 12:d=_PyErr_Occurred()!=0?13:14;break;case 13:h=0;d=24;break;case 14:var p=m,e=14;d=15;break;case 15:d=(e==14?p:o)<0?16:17;break;case 16:var q=m+HEAP[l];m=q;e=16;d=18;break;case 17:var z=m,e=17;d=18;break;case 18:d=(e==17?z:q)<0?20:19;break;case 19:d=HEAP[l]-m<HEAP[j+8]?20:21;break;case 20:_PyErr_Format(HEAP[A],ta,allocate([HEAP[j+8],0,0,0],["i32",0,0,0],ALLOC_STACK));h=0;d=24;break;case 21:d=n(j,g,2,HEAP[k]+m)!=0?22:23;break;case 22:h=0;d=24;break;
case 23:HEAP[__Py_NoneStruct]+=1;h=__Py_NoneStruct;d=24;break;case 24:return d=h,STACKTOP=c,d;default:assert(0,"bad label: "+d)}}function q(a){var b;for(b=-1;;)switch(b){case -1:var c,d,e;c=a;b=HEAP[M]==0?1:3;break;case 1:b=_PyDict_New();HEAP[M]=b;b=HEAP[M]==0?2:3;break;case 2:d=0;b=11;break;case 3:e=b=_PyDict_GetItem(HEAP[M],c);b=b!=0?4:5;break;case 4:HEAP[e]+=1;d=e;b=11;break;case 5:e=_PyObject_CallFunctionObjArgs(qa,allocate([c,0,0,0,0,0,0,0],["%struct.PyObject*",0,0,0,"i8*",0,0,0],ALLOC_STACK));
b=e!=0?6:10;break;case 6:b=_PyDict_Size(HEAP[M])>99?7:8;break;case 7:_PyDict_Clear(HEAP[M]);b=8;break;case 8:b=_PyDict_SetItem(HEAP[M],c,e)==-1?9:10;break;case 9:_PyErr_Clear();b=10;break;case 10:d=e;b=11;break;case 11:return a=d;default:assert(0,"bad label: "+b)}}function r(){s=allocate([98,66,104,72,105,73,108,76,113,81,0],"i8",ALLOC_NORMAL);u=allocate([118,32,33,61,32,40,40,118,111,105,100,32,42,41,48,41,0],"i8",ALLOC_NORMAL);v=allocate([46,46,47,99,112,121,116,104,111,110,47,77,111,100,117,108,
101,115,47,95,115,116,114,117,99,116,46,99,0],"i8",ALLOC_NORMAL);w=allocate([103,101,116,95,112,121,108,111,110,103,0],"i8",ALLOC_NORMAL);x=allocate([105,110,116,101,103,101,114,32,97,114,103,117,109,101,110,116,32,101,120,112,101,99,116,101,100,44,32,103,111,116,32,102,108,111,97,116,0],"i8",ALLOC_NORMAL);y=allocate([105,110,116,101,103,101,114,32,97,114,103,117,109,101,110,116,32,101,120,112,101,99,116,101,100,44,32,103,111,116,32,110,111,110,45,105,110,116,101,103,101,114,32,40,105,109,112,108,
105,99,105,116,32,99,111,110,118,101,114,115,105,111,110,32,117,115,105,110,103,32,95,95,105,110,116,95,95,32,105,115,32,100,101,112,114,101,99,97,116,101,100,41,0],"i8",ALLOC_NORMAL);B=allocate([95,95,105,110,116,95,95,32,109,101,116,104,111,100,32,114,101,116,117,114,110,101,100,32,110,111,110,45,105,110,116,101,103,101,114,0],"i8",ALLOC_NORMAL);A=allocate(1,"%struct.PyObject*",ALLOC_NORMAL);C=allocate([99,97,110,110,111,116,32,99,111,110,118,101,114,116,32,97,114,103,117,109,101,110,116,32,116,
111,32,105,110,116,101,103,101,114,0],"i8",ALLOC_NORMAL);G=allocate([40,40,40,40,118,41,45,62,111,98,95,116,121,112,101,41,45,62,116,112,95,102,108,97,103,115,32,38,32,40,40,49,76,60,60,50,51,41,41,41,32,33,61,32,48,41,32,124,124,32,40,40,40,40,40,40,80,121,79,98,106,101,99,116,42,41,40,118,41,41,45,62,111,98,95,116,121,112,101,41,41,45,62,116,112,95,102,108,97,103,115,32,38,32,40,40,49,76,60,60,50,52,41,41,41,32,33,61,32,48,41,0],"i8",ALLOC_NORMAL);F=allocate([40,40,40,40,40,40,80,121,79,98,106,
101,99,116,42,41,40,118,41,41,45,62,111,98,95,116,121,112,101,41,41,45,62,116,112,95,102,108,97,103,115,32,38,32,40,40,49,76,60,60,50,52,41,41,41,32,33,61,32,48,41,0],"i8",ALLOC_NORMAL);E=allocate([48,0],"i8",ALLOC_NORMAL);N=allocate([103,101,116,95,108,111,110,103,0],"i8",ALLOC_NORMAL);Q=allocate([103,101,116,95,117,108,111,110,103,0],"i8",ALLOC_NORMAL);I=allocate([103,101,116,95,108,111,110,103,108,111,110,103,0],"i8",ALLOC_NORMAL);J=allocate([103,101,116,95,117,108,111,110,103,108,111,110,103,
0],"i8",ALLOC_NORMAL);P=allocate([102,45,62,115,105,122,101,32,62,61,32,49,32,38,38,32,102,45,62,115,105,122,101,32,60,61,32,52,0],"i8",ALLOC_NORMAL);D=allocate([95,114,97,110,103,101,95,101,114,114,111,114,0],"i8",ALLOC_NORMAL);T=allocate([39,37,99,39,32,102,111,114,109,97,116,32,114,101,113,117,105,114,101,115,32,48,32,60,61,32,110,117,109,98,101,114,32,60,61,32,37,122,117,0],"i8",ALLOC_NORMAL);L=allocate([39,37,99,39,32,102,111,114,109,97,116,32,114,101,113,117,105,114,101,115,32,37,122,100,32,
60,61,32,110,117,109,98,101,114,32,60,61,32,37,122,100,0],"i8",ALLOC_NORMAL);$=allocate([98,121,116,101,32,102,111,114,109,97,116,32,114,101,113,117,105,114,101,115,32,45,49,50,56,32,60,61,32,110,117,109,98,101,114,32,60,61,32,49,50,55,0],"i8",ALLOC_NORMAL);R=allocate([117,98,121,116,101,32,102,111,114,109,97,116,32,114,101,113,117,105,114,101,115,32,48,32,60,61,32,110,117,109,98,101,114,32,60,61,32,50,53,53,0],"i8",ALLOC_NORMAL);K=allocate([99,104,97,114,32,102,111,114,109,97,116,32,114,101,113,
117,105,114,101,32,115,116,114,105,110,103,32,111,102,32,108,101,110,103,116,104,32,49,0],"i8",ALLOC_NORMAL);H=allocate([115,104,111,114,116,32,102,111,114,109,97,116,32,114,101,113,117,105,114,101,115,32,83,72,82,84,95,77,73,78,32,60,61,32,110,117,109,98,101,114,32,60,61,32,83,72,82,84,95,77,65,88,0],"i8",ALLOC_NORMAL);S=allocate([117,115,104,111,114,116,32,102,111,114,109,97,116,32,114,101,113,117,105,114,101,115,32,48,32,60,61,32,110,117,109,98,101,114,32,60,61,32,85,83,72,82,84,95,77,65,88,0],
"i8",ALLOC_NORMAL);U=allocate([114,101,113,117,105,114,101,100,32,97,114,103,117,109,101,110,116,32,105,115,32,110,111,116,32,97,32,102,108,111,97,116,0],"i8",ALLOC_NORMAL);z=allocate([110,112,95,118,111,105,100,95,112,0],"i8",ALLOC_NORMAL);aa=allocate([120,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,98,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,66,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,99,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,115,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,104,0,0,0,2,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,72,0,0,0,2,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,105,0,0,0,4,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,73,0,0,0,4,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,108,0,0,0,4,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,76,0,0,0,4,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,113,0,0,0,8,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,81,0,0,0,8,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,63,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,102,0,0,0,4,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,100,0,0,0,8,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,80,0,0,0,4,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],["i8",0,0,0,"i32",0,0,0,"i32",0,0,0,"%struct.PyObject* (i8*, %struct.formatdef*)*",0,0,0,"i8","i8","i8","i8","i8",0,0,0,"i32",0,0,0,"i32",0,0,0,"%struct.PyObject* (i8*, %struct.formatdef*)*",0,0,0,"i32 (i8*, %struct.PyObject*, %struct.formatdef*)*",0,0,0,"i8",0,0,0,"i32",0,0,0,"i32",0,0,0,"%struct.PyObject* (i8*, %struct.formatdef*)*",0,0,0,"i32 (i8*, %struct.PyObject*, %struct.formatdef*)*",0,0,0,"i8",0,0,0,"i32",0,0,0,"i32",0,0,0,"%struct.PyObject* (i8*, %struct.formatdef*)*",
0,0,0,"i32 (i8*, %struct.PyObject*, %struct.formatdef*)*",0,0,0,"i8",0,0,0,"i32",0,0,0,"i32",0,0,0,"%struct.PyObject* (i8*, %struct.formatdef*)*",0,0,0,"i8","i8","i8","i8","i8",0,0,0,"i32",0,0,0,"i32",0,0,0,"%struct.PyObject* (i8*, %struct.formatdef*)*",0,0,0,"i8","i8","i8","i8","i8",0,0,0,"i32",0,0,0,"i32",0,0,0,"%struct.PyObject* (i8*, %struct.formatdef*)*",0,0,0,"i32 (i8*, %struct.PyObject*, %struct.formatdef*)*",0,0,0,"i8",0,0,0,"i32",0,0,0,"i32",0,0,0,"%struct.PyObject* (i8*, %struct.formatdef*)*",
0,0,0,"i32 (i8*, %struct.PyObject*, %struct.formatdef*)*",0,0,0,"i8",0,0,0,"i32",0,0,0,"i32",0,0,0,"%struct.PyObject* (i8*, %struct.formatdef*)*",0,0,0,"i32 (i8*, %struct.PyObject*, %struct.formatdef*)*",0,0,0,"i8",0,0,0,"i32",0,0,0,"i32",0,0,0,"%struct.PyObject* (i8*, %struct.formatdef*)*",0,0,0,"i32 (i8*, %struct.PyObject*, %struct.formatdef*)*",0,0,0,"i8",0,0,0,"i32",0,0,0,"i32",0,0,0,"%struct.PyObject* (i8*, %struct.formatdef*)*",0,0,0,"i32 (i8*, %struct.PyObject*, %struct.formatdef*)*",0,0,0,
"i8",0,0,0,"i32",0,0,0,"i32",0,0,0,"%struct.PyObject* (i8*, %struct.formatdef*)*",0,0,0,"i32 (i8*, %struct.PyObject*, %struct.formatdef*)*",0,0,0,"i8",0,0,0,"i32",0,0,0,"i32",0,0,0,"%struct.PyObject* (i8*, %struct.formatdef*)*",0,0,0,"i32 (i8*, %struct.PyObject*, %struct.formatdef*)*",0,0,0,"i8",0,0,0,"i32",0,0,0,"i32",0,0,0,"%struct.PyObject* (i8*, %struct.formatdef*)*",0,0,0,"i32 (i8*, %struct.PyObject*, %struct.formatdef*)*",0,0,0,"i8",0,0,0,"i32",0,0,0,"i32",0,0,0,"%struct.PyObject* (i8*, %struct.formatdef*)*",
0,0,0,"i32 (i8*, %struct.PyObject*, %struct.formatdef*)*",0,0,0,"i8",0,0,0,"i32",0,0,0,"i32",0,0,0,"%struct.PyObject* (i8*, %struct.formatdef*)*",0,0,0,"i32 (i8*, %struct.PyObject*, %struct.formatdef*)*",0,0,0,"i8",0,0,0,"i32",0,0,0,"i32",0,0,0,"%struct.PyObject* (i8*, %struct.formatdef*)*",0,0,0,"i32 (i8*, %struct.PyObject*, %struct.formatdef*)*",0,0,0,"i8",0,0,0,"i32",0,0,0,"i32",0,0,0,"%struct.PyObject* (i8*, %struct.formatdef*)*",0,0,0,"i32 (i8*, %struct.PyObject*, %struct.formatdef*)*",0,0,0,
"i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8"],ALLOC_NORMAL);ja=allocate([120,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,98,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,66,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,99,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,115,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,104,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,72,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,105,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
73,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,108,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,76,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,113,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,81,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,63,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,102,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,100,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],["i8",0,0,0,"i32",0,0,0,"i32",0,0,0,"%struct.PyObject* (i8*, %struct.formatdef*)*",0,0,0,"i8","i8","i8","i8","i8",0,0,0,"i32",0,
0,0,"i32",0,0,0,"%struct.PyObject* (i8*, %struct.formatdef*)*",0,0,0,"i32 (i8*, %struct.PyObject*, %struct.formatdef*)*",0,0,0,"i8",0,0,0,"i32",0,0,0,"i32",0,0,0,"%struct.PyObject* (i8*, %struct.formatdef*)*",0,0,0,"i32 (i8*, %struct.PyObject*, %struct.formatdef*)*",0,0,0,"i8",0,0,0,"i32",0,0,0,"i32",0,0,0,"%struct.PyObject* (i8*, %struct.formatdef*)*",0,0,0,"i32 (i8*, %struct.PyObject*, %struct.formatdef*)*",0,0,0,"i8",0,0,0,"i32",0,0,0,"i32",0,0,0,"%struct.PyObject* (i8*, %struct.formatdef*)*",
0,0,0,"i8","i8","i8","i8","i8",0,0,0,"i32",0,0,0,"i32",0,0,0,"%struct.PyObject* (i8*, %struct.formatdef*)*",0,0,0,"i8","i8","i8","i8","i8",0,0,0,"i32",0,0,0,"i32",0,0,0,"%struct.PyObject* (i8*, %struct.formatdef*)*",0,0,0,"i32 (i8*, %struct.PyObject*, %struct.formatdef*)*",0,0,0,"i8",0,0,0,"i32",0,0,0,"i32",0,0,0,"%struct.PyObject* (i8*, %struct.formatdef*)*",0,0,0,"i32 (i8*, %struct.PyObject*, %struct.formatdef*)*",0,0,0,"i8",0,0,0,"i32",0,0,0,"i32",0,0,0,"%struct.PyObject* (i8*, %struct.formatdef*)*",
0,0,0,"i32 (i8*, %struct.PyObject*, %struct.formatdef*)*",0,0,0,"i8",0,0,0,"i32",0,0,0,"i32",0,0,0,"%struct.PyObject* (i8*, %struct.formatdef*)*",0,0,0,"i32 (i8*, %struct.PyObject*, %struct.formatdef*)*",0,0,0,"i8",0,0,0,"i32",0,0,0,"i32",0,0,0,"%struct.PyObject* (i8*, %struct.formatdef*)*",0,0,0,"i32 (i8*, %struct.PyObject*, %struct.formatdef*)*",0,0,0,"i8",0,0,0,"i32",0,0,0,"i32",0,0,0,"%struct.PyObject* (i8*, %struct.formatdef*)*",0,0,0,"i32 (i8*, %struct.PyObject*, %struct.formatdef*)*",0,0,0,
"i8",0,0,0,"i32",0,0,0,"i32",0,0,0,"%struct.PyObject* (i8*, %struct.formatdef*)*",0,0,0,"i32 (i8*, %struct.PyObject*, %struct.formatdef*)*",0,0,0,"i8",0,0,0,"i32",0,0,0,"i32",0,0,0,"%struct.PyObject* (i8*, %struct.formatdef*)*",0,0,0,"i32 (i8*, %struct.PyObject*, %struct.formatdef*)*",0,0,0,"i8",0,0,0,"i32",0,0,0,"i32",0,0,0,"%struct.PyObject* (i8*, %struct.formatdef*)*",0,0,0,"i32 (i8*, %struct.PyObject*, %struct.formatdef*)*",0,0,0,"i8",0,0,0,"i32",0,0,0,"i32",0,0,0,"%struct.PyObject* (i8*, %struct.formatdef*)*",
0,0,0,"i32 (i8*, %struct.PyObject*, %struct.formatdef*)*",0,0,0,"i8",0,0,0,"i32",0,0,0,"i32",0,0,0,"%struct.PyObject* (i8*, %struct.formatdef*)*",0,0,0,"i32 (i8*, %struct.PyObject*, %struct.formatdef*)*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8"],ALLOC_NORMAL);la=allocate([120,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,98,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,66,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,99,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,115,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,104,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,72,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,105,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,73,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,108,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,76,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,113,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,81,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,63,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,102,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
100,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],["i8",0,0,0,"i32",0,0,0,"i32",0,0,0,"%struct.PyObject* (i8*, %struct.formatdef*)*",0,0,0,"i8","i8","i8","i8","i8",0,0,0,"i32",0,0,0,"i32",0,0,0,"%struct.PyObject* (i8*, %struct.formatdef*)*",0,0,0,"i32 (i8*, %struct.PyObject*, %struct.formatdef*)*",0,0,0,"i8",0,0,0,"i32",0,0,0,"i32",0,0,0,"%struct.PyObject* (i8*, %struct.formatdef*)*",0,0,0,"i32 (i8*, %struct.PyObject*, %struct.formatdef*)*",0,0,0,"i8",0,0,0,"i32",
0,0,0,"i32",0,0,0,"%struct.PyObject* (i8*, %struct.formatdef*)*",0,0,0,"i32 (i8*, %struct.PyObject*, %struct.formatdef*)*",0,0,0,"i8",0,0,0,"i32",0,0,0,"i32",0,0,0,"%struct.PyObject* (i8*, %struct.formatdef*)*",0,0,0,"i8","i8","i8","i8","i8",0,0,0,"i32",0,0,0,"i32",0,0,0,"%struct.PyObject* (i8*, %struct.formatdef*)*",0,0,0,"i8","i8","i8","i8","i8",0,0,0,"i32",0,0,0,"i32",0,0,0,"%struct.PyObject* (i8*, %struct.formatdef*)*",0,0,0,"i32 (i8*, %struct.PyObject*, %struct.formatdef*)*",0,0,0,"i8",0,0,0,
"i32",0,0,0,"i32",0,0,0,"%struct.PyObject* (i8*, %struct.formatdef*)*",0,0,0,"i32 (i8*, %struct.PyObject*, %struct.formatdef*)*",0,0,0,"i8",0,0,0,"i32",0,0,0,"i32",0,0,0,"%struct.PyObject* (i8*, %struct.formatdef*)*",0,0,0,"i32 (i8*, %struct.PyObject*, %struct.formatdef*)*",0,0,0,"i8",0,0,0,"i32",0,0,0,"i32",0,0,0,"%struct.PyObject* (i8*, %struct.formatdef*)*",0,0,0,"i32 (i8*, %struct.PyObject*, %struct.formatdef*)*",0,0,0,"i8",0,0,0,"i32",0,0,0,"i32",0,0,0,"%struct.PyObject* (i8*, %struct.formatdef*)*",
0,0,0,"i32 (i8*, %struct.PyObject*, %struct.formatdef*)*",0,0,0,"i8",0,0,0,"i32",0,0,0,"i32",0,0,0,"%struct.PyObject* (i8*, %struct.formatdef*)*",0,0,0,"i32 (i8*, %struct.PyObject*, %struct.formatdef*)*",0,0,0,"i8",0,0,0,"i32",0,0,0,"i32",0,0,0,"%struct.PyObject* (i8*, %struct.formatdef*)*",0,0,0,"i32 (i8*, %struct.PyObject*, %struct.formatdef*)*",0,0,0,"i8",0,0,0,"i32",0,0,0,"i32",0,0,0,"%struct.PyObject* (i8*, %struct.formatdef*)*",0,0,0,"i32 (i8*, %struct.PyObject*, %struct.formatdef*)*",0,0,0,
"i8",0,0,0,"i32",0,0,0,"i32",0,0,0,"%struct.PyObject* (i8*, %struct.formatdef*)*",0,0,0,"i32 (i8*, %struct.PyObject*, %struct.formatdef*)*",0,0,0,"i8",0,0,0,"i32",0,0,0,"i32",0,0,0,"%struct.PyObject* (i8*, %struct.formatdef*)*",0,0,0,"i32 (i8*, %struct.PyObject*, %struct.formatdef*)*",0,0,0,"i8",0,0,0,"i32",0,0,0,"i32",0,0,0,"%struct.PyObject* (i8*, %struct.formatdef*)*",0,0,0,"i32 (i8*, %struct.PyObject*, %struct.formatdef*)*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8",
"i8","i8","i8","i8","i8","i8","i8"],ALLOC_NORMAL);da=allocate([98,97,100,32,99,104,97,114,32,105,110,32,115,116,114,117,99,116,32,102,111,114,109,97,116,0],"i8",ALLOC_NORMAL);Ka=allocate([116,111,116,97,108,32,115,116,114,117,99,116,32,115,105,122,101,32,116,111,111,32,108,111,110,103,0],"i8",ALLOC_NORMAL);Ma=allocate([116,121,112,101,32,33,61,32,40,40,118,111,105,100,32,42,41,48,41,32,38,38,32,116,121,112,101,45,62,116,112,95,97,108,108,111,99,32,33,61,32,40,40,118,111,105,100,32,42,41,48,41,0],
"i8",ALLOC_NORMAL);wa=allocate([115,95,110,101,119,0],"i8",ALLOC_NORMAL);ib=allocate([40,40,40,40,80,121,79,98,106,101,99,116,42,41,40,115,101,108,102,41,41,45,62,111,98,95,116,121,112,101,41,32,61,61,32,40,38,80,121,83,116,114,117,99,116,84,121,112,101,41,32,124,124,32,80,121,84,121,112,101,95,73,115,83,117,98,116,121,112,101,40,40,40,40,80,121,79,98,106,101,99,116,42,41,40,115,101,108,102,41,41,45,62,111,98,95,116,121,112,101,41,44,32,40,38,80,121,83,116,114,117,99,116,84,121,112,101,41,41,41,0],
"i8",ALLOC_NORMAL);cb=allocate([115,95,105,110,105,116,0],"i8",ALLOC_NORMAL);db=allocate([83,58,83,116,114,117,99,116,0],"i8",ALLOC_NORMAL);Da=allocate(8,"i8*",ALLOC_NORMAL);gb=allocate([102,111,114,109,97,116,0],"i8",ALLOC_NORMAL);Xa=allocate([83,46,117,110,112,97,99,107,40,115,116,114,41,32,45,62,32,40,118,49,44,32,118,50,44,32,46,46,46,41,10,10,82,101,116,117,114,110,32,116,117,112,108,101,32,99,111,110,116,97,105,110,105,110,103,32,118,97,108,117,101,115,32,117,110,112,97,99,107,101,100,32,97,
99,99,111,114,100,105,110,103,32,116,111,32,116,104,105,115,32,83,116,114,117,99,116,39,115,32,102,111,114,109,97,116,46,10,82,101,113,117,105,114,101,115,32,108,101,110,40,115,116,114,41,32,61,61,32,115,101,108,102,46,115,105,122,101,46,32,83,101,101,32,115,116,114,117,99,116,46,95,95,100,111,99,95,95,32,102,111,114,32,109,111,114,101,32,111,110,32,102,111,114,109,97,116,10,115,116,114,105,110,103,115,46,0],"i8",ALLOC_NORMAL);Ca=allocate([115,95,117,110,112,97,99,107,0],"i8",ALLOC_NORMAL);Za=allocate([115,
111,115,101,108,102,45,62,115,95,99,111,100,101,115,32,33,61,32,40,40,118,111,105,100,32,42,41,48,41,0],"i8",ALLOC_NORMAL);Va=allocate([115,35,58,117,110,112,97,99,107,0],"i8",ALLOC_NORMAL);Ga=allocate([117,110,112,97,99,107,32,114,101,113,117,105,114,101,115,32,97,32,115,116,114,105,110,103,32,97,114,103,117,109,101,110,116,32,111,102,32,108,101,110,103,116,104,32,37,122,100,0],"i8",ALLOC_NORMAL);ha=allocate([83,46,117,110,112,97,99,107,95,102,114,111,109,40,98,117,102,102,101,114,91,44,32,111,102,
102,115,101,116,93,41,32,45,62,32,40,118,49,44,32,118,50,44,32,46,46,46,41,10,10,82,101,116,117,114,110,32,116,117,112,108,101,32,99,111,110,116,97,105,110,105,110,103,32,118,97,108,117,101,115,32,117,110,112,97,99,107,101,100,32,97,99,99,111,114,100,105,110,103,32,116,111,32,116,104,105,115,32,83,116,114,117,99,116,39,115,32,102,111,114,109,97,116,46,10,85,110,108,105,107,101,32,117,110,112,97,99,107,44,32,117,110,112,97,99,107,95,102,114,111,109,32,99,97,110,32,117,110,112,97,99,107,32,118,97,108,
117,101,115,32,102,114,111,109,32,97,110,121,32,111,98,106,101,99,116,32,115,117,112,112,111,114,116,105,110,103,10,116,104,101,32,98,117,102,102,101,114,32,65,80,73,44,32,110,111,116,32,106,117,115,116,32,115,116,114,46,32,82,101,113,117,105,114,101,115,32,108,101,110,40,98,117,102,102,101,114,91,111,102,102,115,101,116,58,93,41,32,62,61,32,115,101,108,102,46,115,105,122,101,46,10,83,101,101,32,115,116,114,117,99,116,46,95,95,100,111,99,95,95,32,102,111,114,32,109,111,114,101,32,111,110,32,102,111,
114,109,97,116,32,115,116,114,105,110,103,115,46,0],"i8",ALLOC_NORMAL);Na=allocate([115,95,117,110,112,97,99,107,95,102,114,111,109,0],"i8",ALLOC_NORMAL);jb=allocate([122,35,124,110,58,117,110,112,97,99,107,95,102,114,111,109,0],"i8",ALLOC_NORMAL);hb=allocate(12,"i8*",ALLOC_NORMAL);Qa=allocate([98,117,102,102,101,114,0],"i8",ALLOC_NORMAL);Ha=allocate([111,102,102,115,101,116,0],"i8",ALLOC_NORMAL);Ra=allocate([117,110,112,97,99,107,95,102,114,111,109,32,114,101,113,117,105,114,101,115,32,97,32,98,
117,102,102,101,114,32,97,114,103,117,109,101,110,116,0],"i8",ALLOC_NORMAL);Ia=allocate([117,110,112,97,99,107,95,102,114,111,109,32,114,101,113,117,105,114,101,115,32,97,32,98,117,102,102,101,114,32,111,102,32,97,116,32,108,101,97,115,116,32,37,122,100,32,98,121,116,101,115,0],"i8",ALLOC_NORMAL);Fa=allocate([97,114,103,117,109,101,110,116,32,102,111,114,32,39,115,39,32,109,117,115,116,32,98,101,32,97,32,115,116,114,105,110,103,0],"i8",ALLOC_NORMAL);$a=allocate([97,114,103,117,109,101,110,116,32,
102,111,114,32,39,112,39,32,109,117,115,116,32,98,101,32,97,32,115,116,114,105,110,103,0],"i8",ALLOC_NORMAL);Wa=allocate([105,110,116,101,103,101,114,32,111,117,116,32,111,102,32,114,97,110,103,101,32,102,111,114,32,39,37,99,39,32,102,111,114,109,97,116,32,99,111,100,101,0],"i8",ALLOC_NORMAL);Y=allocate([83,46,112,97,99,107,40,118,49,44,32,118,50,44,32,46,46,46,41,32,45,62,32,115,116,114,105,110,103,10,10,82,101,116,117,114,110,32,97,32,115,116,114,105,110,103,32,99,111,110,116,97,105,110,105,110,
103,32,118,97,108,117,101,115,32,118,49,44,32,118,50,44,32,46,46,46,32,112,97,99,107,101,100,32,97,99,99,111,114,100,105,110,103,32,116,111,32,116,104,105,115,10,83,116,114,117,99,116,39,115,32,102,111,114,109,97,116,46,32,83,101,101,32,115,116,114,117,99,116,46,95,95,100,111,99,95,95,32,102,111,114,32,109,111,114,101,32,111,110,32,102,111,114,109,97,116,32,115,116,114,105,110,103,115,46,0],"i8",ALLOC_NORMAL);kb=allocate([115,95,112,97,99,107,0],"i8",ALLOC_NORMAL);ra=allocate([112,97,99,107,32,114,
101,113,117,105,114,101,115,32,101,120,97,99,116,108,121,32,37,122,100,32,97,114,103,117,109,101,110,116,115,0],"i8",ALLOC_NORMAL);Ta=allocate([83,46,112,97,99,107,95,105,110,116,111,40,98,117,102,102,101,114,44,32,111,102,102,115,101,116,44,32,118,49,44,32,118,50,44,32,46,46,46,41,10,10,80,97,99,107,32,116,104,101,32,118,97,108,117,101,115,32,118,49,44,32,118,50,44,32,46,46,46,32,97,99,99,111,114,100,105,110,103,32,116,111,32,116,104,105,115,32,83,116,114,117,99,116,39,115,32,102,111,114,109,97,
116,44,32,119,114,105,116,101,32,10,116,104,101,32,112,97,99,107,101,100,32,98,121,116,101,115,32,105,110,116,111,32,116,104,101,32,119,114,105,116,97,98,108,101,32,98,117,102,102,101,114,32,98,117,102,32,115,116,97,114,116,105,110,103,32,97,116,32,111,102,102,115,101,116,46,32,32,78,111,116,101,10,116,104,97,116,32,116,104,101,32,111,102,102,115,101,116,32,105,115,32,110,111,116,32,97,110,32,111,112,116,105,111,110,97,108,32,97,114,103,117,109,101,110,116,46,32,32,83,101,101,32,115,116,114,117,99,
116,46,95,95,100,111,99,95,95,32,102,111,114,32,10,109,111,114,101,32,111,110,32,102,111,114,109,97,116,32,115,116,114,105,110,103,115,46,0],"i8",ALLOC_NORMAL);ia=allocate([115,95,112,97,99,107,95,105,110,116,111,0],"i8",ALLOC_NORMAL);ba=allocate([112,97,99,107,95,105,110,116,111,32,114,101,113,117,105,114,101,115,32,101,120,97,99,116,108,121,32,37,122,100,32,97,114,103,117,109,101,110,116,115,0],"i8",ALLOC_NORMAL);Ya=allocate([98,117,102,102,101,114,95,108,101,110,32,62,61,32,48,0],"i8",ALLOC_NORMAL);
ta=allocate([112,97,99,107,95,105,110,116,111,32,114,101,113,117,105,114,101,115,32,97,32,98,117,102,102,101,114,32,111,102,32,97,116,32,108,101,97,115,116,32,37,122,100,32,98,121,116,101,115,0],"i8",ALLOC_NORMAL);O=allocate([112,97,99,107,0],"i8",ALLOC_NORMAL);wb=allocate([112,97,99,107,95,105,110,116,111,0],"i8",ALLOC_NORMAL);bb=allocate([117,110,112,97,99,107,0],"i8",ALLOC_NORMAL);vb=allocate([117,110,112,97,99,107,95,102,114,111,109,0],"i8",ALLOC_NORMAL);ka=allocate([0,0,0,0,0,0,0,0,1,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],["i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",
0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8"],ALLOC_NORMAL);za=allocate([67,111,109,112,105,108,101,100,32,115,116,114,117,99,116,32,111,98,106,101,99,116,0],"i8",ALLOC_NORMAL);Aa=allocate([115,116,114,117,99,116,32,102,111,114,109,97,116,32,115,116,114,105,110,103,0],"i8",ALLOC_NORMAL);La=allocate([115,105,122,101,0],"i8",ALLOC_NORMAL);ya=allocate([115,116,114,117,99,116,32,115,105,122,101,32,105,
110,32,98,121,116,101,115,0],"i8",ALLOC_NORMAL);ub=allocate(60,["i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, i8*)*",0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*, i8*)*",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, i8*)*",0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*, i8*)*",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8"],ALLOC_NORMAL);Z=allocate([83,116,114,117,99,116,0],"i8",
ALLOC_NORMAL);qa=allocate([1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,28,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,132587,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],["i32",0,0,0,"%struct._typeobject*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i32",0,
0,0,"i32",0,0,0,"void (%struct.PyObject*)*",0,0,0,"i32 (%struct.PyObject*, %struct.FILE*, i32)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, i8*)*",0,0,0,"i32 (%struct.PyObject*, i8*, %struct.PyObject*)*",0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*)*",0,0,0,"%struct.PyNumberMethods*",0,0,0,"%struct.PySequenceMethods*",0,0,0,"%struct.PyMappingMethods*",0,0,0,"i32 (%struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",
0,0,0,"%struct.PyObject* (%struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"%struct.PyBufferProcs*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i32 (%struct.PyObject*, i32 (%struct.PyObject*, i8*)*, i8*)*",0,0,0,"i32 (%struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*, i32)*",0,0,0,"i32",0,0,0,"%struct.PyObject* (%struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*)*",
0,0,0,"%struct.PyMethodDef*",0,0,0,"%struct.PyMemberDef*",0,0,0,"%struct.PyGetSetDef*",0,0,0,"%struct._typeobject*",0,0,0,"%struct.PyObject*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct._typeobject*, i32)*",0,0,0,"%struct.PyObject* (%struct._typeobject*, %struct.PyObject*, %struct.PyObject*)*",
0,0,0,"void (i8*)*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8"],ALLOC_NORMAL);M=allocate(1,"%struct.PyObject*",ALLOC_NORMAL);na=allocate([67,108,101,97,114,32,116,104,101,32,105,110,116,101,114,110,97,108,32,99,97,99,104,101,46,0],"i8",ALLOC_NORMAL);nb=allocate([82,101,116,117,114,110,32,115,105,122,101,32,111,102,32,67,32,115,116,114,117,99,116,32,100,101,115,99,114,105,98,101,
100,32,98,121,32,102,111,114,109,97,116,32,115,116,114,105,110,103,32,102,109,116,46,0],"i8",ALLOC_NORMAL);ca=allocate([82,101,116,117,114,110,32,115,116,114,105,110,103,32,99,111,110,116,97,105,110,105,110,103,32,118,97,108,117,101,115,32,118,49,44,32,118,50,44,32,46,46,46,32,112,97,99,107,101,100,32,97,99,99,111,114,100,105,110,103,32,116,111,32,102,109,116,46,0],"i8",ALLOC_NORMAL);ua=allocate([109,105,115,115,105,110,103,32,102,111,114,109,97,116,32,97,114,103,117,109,101,110,116,0],"i8",ALLOC_NORMAL);
Ea=allocate([80,97,99,107,32,116,104,101,32,118,97,108,117,101,115,32,118,49,44,32,118,50,44,32,46,46,46,32,97,99,99,111,114,100,105,110,103,32,116,111,32,102,109,116,46,10,87,114,105,116,101,32,116,104,101,32,112,97,99,107,101,100,32,98,121,116,101,115,32,105,110,116,111,32,116,104,101,32,119,114,105,116,97,98,108,101,32,98,117,102,102,101,114,32,98,117,102,32,115,116,97,114,116,105,110,103,32,97,116,32,111,102,102,115,101,116,46,0],"i8",ALLOC_NORMAL);Eb=allocate([85,110,112,97,99,107,32,116,104,
101,32,115,116,114,105,110,103,32,99,111,110,116,97,105,110,105,110,103,32,112,97,99,107,101,100,32,67,32,115,116,114,117,99,116,117,114,101,32,100,97,116,97,44,32,97,99,99,111,114,100,105,110,103,32,116,111,32,102,109,116,46,10,82,101,113,117,105,114,101,115,32,108,101,110,40,115,116,114,105,110,103,41,32,61,61,32,99,97,108,99,115,105,122,101,40,102,109,116,41,46,0],"i8",ALLOC_NORMAL);zb=allocate([85,110,112,97,99,107,32,116,104,101,32,98,117,102,102,101,114,44,32,99,111,110,116,97,105,110,105,110,
103,32,112,97,99,107,101,100,32,67,32,115,116,114,117,99,116,117,114,101,32,100,97,116,97,44,32,97,99,99,111,114,100,105,110,103,32,116,111,10,102,109,116,44,32,115,116,97,114,116,105,110,103,32,97,116,32,111,102,102,115,101,116,46,32,82,101,113,117,105,114,101,115,32,108,101,110,40,98,117,102,102,101,114,91,111,102,102,115,101,116,58,93,41,32,62,61,32,99,97,108,99,115,105,122,101,40,102,109,116,41,46,0],"i8",ALLOC_NORMAL);va=allocate([95,99,108,101,97,114,99,97,99,104,101,0],"i8",ALLOC_NORMAL);xa=
allocate([99,97,108,99,115,105,122,101,0],"i8",ALLOC_NORMAL);V=allocate([0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],["i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,
0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i8","i8","i8",
"i8","i8","i8","i8","i8"],ALLOC_NORMAL);sa=allocate([70,117,110,99,116,105,111,110,115,32,116,111,32,99,111,110,118,101,114,116,32,98,101,116,119,101,101,110,32,80,121,116,104,111,110,32,118,97,108,117,101,115,32,97,110,100,32,67,32,115,116,114,117,99,116,115,32,114,101,112,114,101,115,101,110,116,101,100,10,97,115,32,80,121,116,104,111,110,32,115,116,114,105,110,103,115,46,32,73,116,32,117,115,101,115,32,102,111,114,109,97,116,32,115,116,114,105,110,103,115,32,40,101,120,112,108,97,105,110,101,100,
32,98,101,108,111,119,41,32,97,115,32,99,111,109,112,97,99,116,10,100,101,115,99,114,105,112,116,105,111,110,115,32,111,102,32,116,104,101,32,108,97,121,45,111,117,116,32,111,102,32,116,104,101,32,67,32,115,116,114,117,99,116,115,32,97,110,100,32,116,104,101,32,105,110,116,101,110,100,101,100,32,99,111,110,118,101,114,115,105,111,110,10,116,111,47,102,114,111,109,32,80,121,116,104,111,110,32,118,97,108,117,101,115,46,10,10,84,104,101,32,111,112,116,105,111,110,97,108,32,102,105,114,115,116,32,102,
111,114,109,97,116,32,99,104,97,114,32,105,110,100,105,99,97,116,101,115,32,98,121,116,101,32,111,114,100,101,114,44,32,115,105,122,101,32,97,110,100,32,97,108,105,103,110,109,101,110,116,58,10,32,32,64,58,32,110,97,116,105,118,101,32,111,114,100,101,114,44,32,115,105,122,101,32,38,32,97,108,105,103,110,109,101,110,116,32,40,100,101,102,97,117,108,116,41,10,32,32,61,58,32,110,97,116,105,118,101,32,111,114,100,101,114,44,32,115,116,100,46,32,115,105,122,101,32,38,32,97,108,105,103,110,109,101,110,
116,10,32,32,60,58,32,108,105,116,116,108,101,45,101,110,100,105,97,110,44,32,115,116,100,46,32,115,105,122,101,32,38,32,97,108,105,103,110,109,101,110,116,10,32,32,62,58,32,98,105,103,45,101,110,100,105,97,110,44,32,115,116,100,46,32,115,105,122,101,32,38,32,97,108,105,103,110,109,101,110,116,10,32,32,33,58,32,115,97,109,101,32,97,115,32,62,10,10,84,104,101,32,114,101,109,97,105,110,105,110,103,32,99,104,97,114,115,32,105,110,100,105,99,97,116,101,32,116,121,112,101,115,32,111,102,32,97,114,103,
115,32,97,110,100,32,109,117,115,116,32,109,97,116,99,104,32,101,120,97,99,116,108,121,59,10,116,104,101,115,101,32,99,97,110,32,98,101,32,112,114,101,99,101,100,101,100,32,98,121,32,97,32,100,101,99,105,109,97,108,32,114,101,112,101,97,116,32,99,111,117,110,116,58,10,32,32,120,58,32,112,97,100,32,98,121,116,101,32,40,110,111,32,100,97,116,97,41,59,32,99,58,99,104,97,114,59,32,98,58,115,105,103,110,101,100,32,98,121,116,101,59,32,66,58,117,110,115,105,103,110,101,100,32,98,121,116,101,59,10,32,32,
63,58,32,95,66,111,111,108,32,40,114,101,113,117,105,114,101,115,32,67,57,57,59,32,105,102,32,110,111,116,32,97,118,97,105,108,97,98,108,101,44,32,99,104,97,114,32,105,115,32,117,115,101,100,32,105,110,115,116,101,97,100,41,10,32,32,104,58,115,104,111,114,116,59,32,72,58,117,110,115,105,103,110,101,100,32,115,104,111,114,116,59,32,105,58,105,110,116,59,32,73,58,117,110,115,105,103,110,101,100,32,105,110,116,59,10,32,32,108,58,108,111,110,103,59,32,76,58,117,110,115,105,103,110,101,100,32,108,111,
110,103,59,32,102,58,102,108,111,97,116,59,32,100,58,100,111,117,98,108,101,46,10,83,112,101,99,105,97,108,32,99,97,115,101,115,32,40,112,114,101,99,101,100,105,110,103,32,100,101,99,105,109,97,108,32,99,111,117,110,116,32,105,110,100,105,99,97,116,101,115,32,108,101,110,103,116,104,41,58,10,32,32,115,58,115,116,114,105,110,103,32,40,97,114,114,97,121,32,111,102,32,99,104,97,114,41,59,32,112,58,32,112,97,115,99,97,108,32,115,116,114,105,110,103,32,40,119,105,116,104,32,99,111,117,110,116,32,98,121,
116,101,41,46,10,83,112,101,99,105,97,108,32,99,97,115,101,32,40,111,110,108,121,32,97,118,97,105,108,97,98,108,101,32,105,110,32,110,97,116,105,118,101,32,102,111,114,109,97,116,41,58,10,32,32,80,58,97,110,32,105,110,116,101,103,101,114,32,116,121,112,101,32,116,104,97,116,32,105,115,32,119,105,100,101,32,101,110,111,117,103,104,32,116,111,32,104,111,108,100,32,97,32,112,111,105,110,116,101,114,46,10,83,112,101,99,105,97,108,32,99,97,115,101,32,40,110,111,116,32,105,110,32,110,97,116,105,118,101,
32,109,111,100,101,32,117,110,108,101,115,115,32,39,108,111,110,103,32,108,111,110,103,39,32,105,110,32,112,108,97,116,102,111,114,109,32,67,41,58,10,32,32,113,58,108,111,110,103,32,108,111,110,103,59,32,81,58,117,110,115,105,103,110,101,100,32,108,111,110,103,32,108,111,110,103,10,87,104,105,116,101,115,112,97,99,101,32,98,101,116,119,101,101,110,32,102,111,114,109,97,116,115,32,105,115,32,105,103,110,111,114,101,100,46,10,10,84,104,101,32,118,97,114,105,97,98,108,101,32,115,116,114,117,99,116,46,
101,114,114,111,114,32,105,115,32,97,110,32,101,120,99,101,112,116,105,111,110,32,114,97,105,115,101,100,32,111,110,32,101,114,114,111,114,115,46,10,0],"i8",ALLOC_NORMAL);pa=allocate([48,46,50,0],"i8",ALLOC_NORMAL);fb=allocate([95,115,116,114,117,99,116,0],"i8",ALLOC_NORMAL);ma=allocate([115,116,114,117,99,116,46,101,114,114,111,114,0],"i8",ALLOC_NORMAL);sb=allocate([101,114,114,111,114,0],"i8",ALLOC_NORMAL);mb=allocate([95,95,118,101,114,115,105,111,110,95,95,0],"i8",ALLOC_NORMAL);yb=allocate([95,
80,89,95,83,84,82,85,67,84,95,82,65,78,71,69,95,67,72,69,67,75,73,78,71,0],"i8",ALLOC_NORMAL);Nb=allocate([95,80,89,95,83,84,82,85,67,84,95,70,76,79,65,84,95,67,79,69,82,67,69,0],"i8",ALLOC_NORMAL);HEAP[aa+32]=g+2;HEAP[aa+36]=g+4;HEAP[aa+52]=g+6;HEAP[aa+56]=g+8;HEAP[aa+72]=g+10;HEAP[aa+76]=g+12;HEAP[aa+132]=g+14;HEAP[aa+136]=g+16;HEAP[aa+152]=g+18;HEAP[aa+156]=g+20;HEAP[aa+172]=g+22;HEAP[aa+176]=g+24;HEAP[aa+192]=g+26;HEAP[aa+196]=g+28;HEAP[aa+212]=g+30;HEAP[aa+216]=g+32;HEAP[aa+232]=g+34;HEAP[aa+
236]=g+36;HEAP[aa+252]=g+38;HEAP[aa+256]=g+40;HEAP[aa+272]=g+42;HEAP[aa+276]=g+44;HEAP[aa+292]=g+46;HEAP[aa+296]=g+48;HEAP[aa+312]=g+50;HEAP[aa+316]=g+52;HEAP[aa+332]=g+54;HEAP[aa+336]=g+56;HEAP[aa+352]=g+58;HEAP[aa+356]=g+60;HEAP[ja+32]=g+2;HEAP[ja+36]=g+4;HEAP[ja+52]=g+6;HEAP[ja+56]=g+8;HEAP[ja+72]=g+10;HEAP[ja+76]=g+12;HEAP[ja+132]=g+62;HEAP[ja+136]=g+64;HEAP[ja+152]=g+66;HEAP[ja+156]=g+68;HEAP[ja+172]=g+62;HEAP[ja+176]=g+64;HEAP[ja+192]=g+66;HEAP[ja+196]=g+68;HEAP[ja+212]=g+62;HEAP[ja+216]=g+
64;HEAP[ja+232]=g+66;HEAP[ja+236]=g+68;HEAP[ja+252]=g+70;HEAP[ja+256]=g+72;HEAP[ja+272]=g+74;HEAP[ja+276]=g+76;HEAP[ja+292]=g+78;HEAP[ja+296]=g+80;HEAP[ja+312]=g+82;HEAP[ja+316]=g+84;HEAP[ja+332]=g+86;HEAP[ja+336]=g+88;HEAP[la+32]=g+2;HEAP[la+36]=g+4;HEAP[la+52]=g+6;HEAP[la+56]=g+8;HEAP[la+72]=g+10;HEAP[la+76]=g+12;HEAP[la+132]=g+90;HEAP[la+136]=g+92;HEAP[la+152]=g+94;HEAP[la+156]=g+96;HEAP[la+172]=g+90;HEAP[la+176]=g+92;HEAP[la+192]=g+94;HEAP[la+196]=g+96;HEAP[la+212]=g+90;HEAP[la+216]=g+92;HEAP[la+
232]=g+94;HEAP[la+236]=g+96;HEAP[la+252]=g+98;HEAP[la+256]=g+100;HEAP[la+272]=g+102;HEAP[la+276]=g+104;HEAP[la+292]=g+78;HEAP[la+296]=g+80;HEAP[la+312]=g+106;HEAP[la+316]=g+108;HEAP[la+332]=g+110;HEAP[la+336]=g+112;HEAP[Da]=gb;HEAP[hb]=Qa;HEAP[hb+4]=Ha;HEAP[ka]=O;HEAP[ka+4]=g+114;HEAP[ka+12]=Y;HEAP[ka+16]=wb;HEAP[ka+20]=g+116;HEAP[ka+28]=Ta;HEAP[ka+32]=bb;HEAP[ka+36]=g+118;HEAP[ka+44]=Xa;HEAP[ka+48]=vb;HEAP[ka+52]=g+120;HEAP[ka+60]=ha;HEAP[ub]=gb;HEAP[ub+4]=g+122;HEAP[ub+12]=Aa;HEAP[ub+20]=La;HEAP[ub+
24]=g+124;HEAP[ub+32]=ya;HEAP[qa+12]=Z;HEAP[qa+24]=g+126;HEAP[qa+72]=g+128;HEAP[qa+76]=g+130;HEAP[qa+88]=za;HEAP[qa+116]=ka;HEAP[qa+124]=ub;HEAP[qa+148]=g+132;HEAP[qa+152]=g+134;HEAP[qa+156]=g+136;HEAP[qa+160]=g+138;HEAP[V]=va;HEAP[V+4]=g+140;HEAP[V+12]=na;HEAP[V+16]=xa;HEAP[V+20]=g+142;HEAP[V+28]=nb;HEAP[V+32]=O;HEAP[V+36]=g+144;HEAP[V+44]=ca;HEAP[V+48]=wb;HEAP[V+52]=g+146;HEAP[V+60]=Ea;HEAP[V+64]=bb;HEAP[V+68]=g+148;HEAP[V+76]=Eb;HEAP[V+80]=vb;HEAP[V+84]=g+150;HEAP[V+92]=zb}var t={arguments:[]};
Runtime.QUANTUM_SIZE=4;var s,u,v,w,x,y,B,A,C,G,F,E,N,Q,I,J,P,D,T,L,$,R,K,H,S,U,z,aa,ja,la,da,Ka,Ma,wa,ib,cb,db,Da,gb,Xa,Ca,Za,Va,Ga,ha,Na,jb,hb,Qa,Ha,Ra,Ia,Fa,$a,Wa,Y,kb,ra,Ta,ia,ba,Ya,ta,O,wb,bb,vb,ka,za,Aa,La,ya,ub,Z,qa,M,na,nb,ca,ua,Ea,Eb,zb,va,xa,V,sa,pa,fb,ma,sb,mb,yb,Nb;t._init_struct=function(){var a=STACKTOP;STACKTOP+=4;_memset(a,0,4);var b;for(b=-1;;)switch(b){case -1:var c,d,e=a,f,g,h;c=_PyString_FromString(pa);b=c==0?22:1;break;case 1:d=_Py_InitModule4(fb,V,sa,0,1013);b=d==0?22:2;break;
case 2:HEAP[qa+4]=_PyType_Type;b=_PyType_Ready(qa)<0?22:3;break;case 3:HEAP[e]=1;f=aa;b=HEAP[e]!=0?4:5;break;case 4:g=la;b=17;break;case 5:g=ja;b=17;break;case 6:h=g;b=15;break;case 7:var j=h;b=HEAP[h]==HEAP[f]?8:14;break;case 8:b=j==g?9:10;break;case 9:g+=20;b=10;break;case 10:b=HEAP[h+4]!=HEAP[f+4]?16:11;break;case 11:b=HEAP[h]==100?16:12;break;case 12:b=HEAP[h]==102?16:13;break;case 13:HEAP[h+16]=HEAP[f+16];HEAP[h+12]=HEAP[f+12];b=16;break;case 14:h=j+20;b=15;break;case 15:b=HEAP[h]!=0?7:16;break;
case 16:f+=20;b=17;break;case 17:b=HEAP[f]==0?19:18;break;case 18:b=HEAP[g]!=0?6:19;break;case 19:b=HEAP[A]==0?20:21;break;case 20:b=_PyErr_NewException(ma,0,0);HEAP[A]=b;b=HEAP[A]==0?22:21;break;case 21:HEAP[HEAP[A]]+=1;_PyModule_AddObject(d,sb,HEAP[A]);HEAP[qa]+=1;_PyModule_AddObject(d,Z,qa);_PyModule_AddObject(d,mb,c);_PyModule_AddIntConstant(d,yb,1);_PyModule_AddIntConstant(d,Nb,1);b=22;break;case 22:STACKTOP=a;return;default:assert(0,"bad label: "+b)}};FUNCTION_TABLE=FUNCTION_TABLE.concat([0,
0,function(a){return _PyInt_FromLong(HEAP[a])},0,function(a,c){var d=STACKTOP;STACKTOP+=4;_memset(d,0,4);var e;for(e=-1;;)switch(e){case -1:var f,g,h=d;f=a;e=b(c,h)<0?1:2;break;case 1:g=-1;e=5;break;case 2:e=HEAP[h]<-128|HEAP[h]>127?3:4;break;case 3:_PyErr_SetString(HEAP[A],$);g=-1;e=5;break;case 4:HEAP[f]=HEAP[h]&255;g=0;e=5;break;case 5:return e=g,STACKTOP=d,e;default:assert(0,"bad label: "+e)}},0,function(a){return _PyInt_FromLong(HEAP[a])},0,function(a,c){var d=STACKTOP;STACKTOP+=4;_memset(d,
0,4);var e;for(e=-1;;)switch(e){case -1:var f,g,h=d;f=a;e=b(c,h)<0?1:2;break;case 1:g=-1;e=5;break;case 2:e=HEAP[h]<0|HEAP[h]>255?3:4;break;case 3:_PyErr_SetString(HEAP[A],R);g=-1;e=5;break;case 4:HEAP[f]=HEAP[h]&255;g=0;e=5;break;case 5:return e=g,STACKTOP=d,e;default:assert(0,"bad label: "+e)}},0,function(a){return _PyString_FromStringAndSize(a,1)},0,function(a,b){var c;for(c=-1;;)switch(c){case -1:var d,e,f;d=a;e=b;c=(HEAP[HEAP[e+4]+84]&134217728)==0?2:1;break;case 1:c=_PyString_Size(e)!=1?2:3;
break;case 2:_PyErr_SetString(HEAP[A],K);f=-1;c=4;break;case 3:c=_PyString_AsString(e);HEAP[d]=HEAP[c];f=0;c=4;break;case 4:return d=f;default:assert(0,"bad label: "+c)}},0,function(a){var b=STACKTOP;STACKTOP+=2;_memset(b,0,2);_llvm_memcpy_p0i8_p0i8_i32(b,a,2,1,0);a=_PyInt_FromLong(HEAP[b]);STACKTOP=b;return a},0,function(a,c){var d=STACKTOP;STACKTOP+=6;_memset(d,0,6);var e;for(e=-1;;)switch(e){case -1:var f,g,h=d,j=d+4;f=a;e=b(c,h)<0?1:2;break;case 1:g=-1;e=5;break;case 2:e=HEAP[h]<-32768|HEAP[h]>
32767?3:4;break;case 3:_PyErr_SetString(HEAP[A],H);g=-1;e=5;break;case 4:HEAP[j]=HEAP[h]&65535;_llvm_memcpy_p0i8_p0i8_i32(f,j,2,1,0);g=0;e=5;break;case 5:return e=g,STACKTOP=d,e;default:assert(0,"bad label: "+e)}},0,function(a){var b=STACKTOP;STACKTOP+=2;_memset(b,0,2);_llvm_memcpy_p0i8_p0i8_i32(b,a,2,1,0);a=_PyInt_FromLong(HEAP[b]);STACKTOP=b;return a},0,function(a,c){var d=STACKTOP;STACKTOP+=6;_memset(d,0,6);var e;for(e=-1;;)switch(e){case -1:var f,g,h=d,j=d+4;f=a;e=b(c,h)<0?1:2;break;case 1:g=
-1;e=5;break;case 2:e=HEAP[h]<0|HEAP[h]>65535?3:4;break;case 3:_PyErr_SetString(HEAP[A],S);g=-1;e=5;break;case 4:HEAP[j]=HEAP[h]&65535;_llvm_memcpy_p0i8_p0i8_i32(f,j,2,1,0);g=0;e=5;break;case 5:return e=g,STACKTOP=d,e;default:assert(0,"bad label: "+e)}},0,function(a){var b=STACKTOP;STACKTOP+=4;_memset(b,0,4);_llvm_memcpy_p0i8_p0i8_i32(b,a,4,1,0);a=_PyInt_FromLong(HEAP[b]);STACKTOP=b;return a},0,function(a,c){var d=STACKTOP;STACKTOP+=8;_memset(d,0,8);var e;for(e=-1;;)switch(e){case -1:var f,g,h=d,
j=d+4;f=a;e=b(c,h)<0?1:2;break;case 1:g=-1;e=3;break;case 2:HEAP[j]=HEAP[h];_llvm_memcpy_p0i8_p0i8_i32(f,j,4,1,0);g=0;e=3;break;case 3:return e=g,STACKTOP=d,e;default:assert(0,"bad label: "+e)}},0,function(a){var b=STACKTOP;STACKTOP+=4;_memset(b,0,4);var c;for(c=-1;;)switch(c){case -1:var e;c=b;_llvm_memcpy_p0i8_p0i8_i32(c,a,4,1,0);var d=HEAP[c];c=HEAP[c]>=0?1:2;break;case 1:e=_PyInt_FromLong(d);c=3;break;case 2:e=_PyLong_FromUnsignedLong(d);c=3;break;case 3:return a=e,STACKTOP=b,a;default:assert(0,
"bad label: "+c)}},0,function(b,c){var e=STACKTOP;STACKTOP+=8;_memset(e,0,8);var d;for(d=-1;;)switch(d){case -1:var f,g,h=e,j=e+4;f=b;d=a(c,h)<0?1:2;break;case 1:g=-1;d=3;break;case 2:HEAP[j]=HEAP[h];_llvm_memcpy_p0i8_p0i8_i32(f,j,4,1,0);g=0;d=3;break;case 3:return d=g,STACKTOP=e,d;default:assert(0,"bad label: "+d)}},0,function(a){var b=STACKTOP;STACKTOP+=4;_memset(b,0,4);_llvm_memcpy_p0i8_p0i8_i32(b,a,4,1,0);a=_PyInt_FromLong(HEAP[b]);STACKTOP=b;return a},0,function(a,c){var e=STACKTOP;STACKTOP+=
4;_memset(e,0,4);var d;for(d=-1;;)switch(d){case -1:var f,g,h=e;f=a;d=b(c,h)<0?1:2;break;case 1:g=-1;d=3;break;case 2:_llvm_memcpy_p0i8_p0i8_i32(f,h,4,1,0);g=0;d=3;break;case 3:return d=g,STACKTOP=e,d;default:assert(0,"bad label: "+d)}},0,function(a){var b=STACKTOP;STACKTOP+=4;_memset(b,0,4);var c;for(c=-1;;)switch(c){case -1:var d;c=b;_llvm_memcpy_p0i8_p0i8_i32(c,a,4,1,0);var e=HEAP[c];c=HEAP[c]>=0?1:2;break;case 1:d=_PyInt_FromLong(e);c=3;break;case 2:d=_PyLong_FromUnsignedLong(e);c=3;break;case 3:return a=
d,STACKTOP=b,a;default:assert(0,"bad label: "+c)}},0,function(b,c){var d=STACKTOP;STACKTOP+=4;_memset(d,0,4);var e;for(e=-1;;)switch(e){case -1:var f,g,h=d;f=b;e=a(c,h)<0?1:2;break;case 1:g=-1;e=3;break;case 2:_llvm_memcpy_p0i8_p0i8_i32(f,h,4,1,0);g=0;e=3;break;case 3:return e=g,STACKTOP=d,e;default:assert(0,"bad label: "+e)}},0,function(a){var b=STACKTOP;STACKTOP+=8;_memset(b,0,8);var c;for(c=-1;;)switch(c){case -1:var d;c=b;_llvm_memcpy_p0i8_p0i8_i32(c,a,8,1,0);var e=HEAP[c];c=HEAP[c]>=-2147483648&
HEAP[c]<=2147483647?1:2;break;case 1:d=_PyInt_FromLong(e&4294967295);c=3;break;case 2:d=_PyLong_FromLongLong(e);c=3;break;case 3:return a=d,STACKTOP=b,a;default:assert(0,"bad label: "+c)}},0,function(a,b){var c=STACKTOP;STACKTOP+=8;_memset(c,0,8);var d;for(d=-1;;)switch(d){case -1:var f,g,h=c;f=a;a:{d=b;for(var j=h,k=void 0,k=-1;;)switch(k){case -1:var l,m,n,o;l=d;m=j;l=e(l);k=l==0?1:2;break;case 1:n=-1;k=10;break;case 2:k=(HEAP[HEAP[l+4]+84]&16777216)==0?3:4;break;case 3:throw ___assert_fail(F,v,
242,I),"Reached an unreachable!";case 4:o=_PyLong_AsLongLong(l);HEAP[l]-=1;k=HEAP[l]==0?5:6;break;case 5:FUNCTION_TABLE[HEAP[HEAP[l+4]+24]](l);k=6;break;case 6:k=o==-1?7:9;break;case 7:k=_PyErr_Occurred()!=0?8:9;break;case 8:n=-1;k=10;break;case 9:HEAP[m]=o;n=0;k=10;break;case 10:d=n;break a;default:assert(0,"bad label: "+k)}d=void 0}d=d<0?1:2;break;case 1:g=-1;d=3;break;case 2:_llvm_memcpy_p0i8_p0i8_i32(f,h,8,1,0);g=0;d=3;break;case 3:return f=g,STACKTOP=c,f;default:assert(0,"bad label: "+d)}},0,
function(a){var b=STACKTOP;STACKTOP+=8;_memset(b,0,8);var c;for(c=-1;;)switch(c){case -1:var d;c=b;_llvm_memcpy_p0i8_p0i8_i32(c,a,8,1,0);var e=HEAP[c];c=HEAP[c]<=2147483647?1:2;break;case 1:d=_PyInt_FromLong(e&4294967295);c=3;break;case 2:d=_PyLong_FromUnsignedLongLong(e);c=3;break;case 3:return a=d,STACKTOP=b,a;default:assert(0,"bad label: "+c)}},0,function(a,b){var c=STACKTOP;STACKTOP+=8;_memset(c,0,8);var d;for(d=-1;;)switch(d){case -1:var f,g,h=c;f=a;a:{d=b;for(var j=h,k=void 0,k=-1;;)switch(k){case -1:var l,
m,n,o;l=d;m=j;l=e(l);k=l==0?1:2;break;case 1:n=-1;k=10;break;case 2:k=(HEAP[HEAP[l+4]+84]&16777216)==0?3:4;break;case 3:throw ___assert_fail(F,v,261,J),"Reached an unreachable!";case 4:o=_PyLong_AsUnsignedLongLong(l);HEAP[l]-=1;k=HEAP[l]==0?5:6;break;case 5:FUNCTION_TABLE[HEAP[HEAP[l+4]+24]](l);k=6;break;case 6:k=o==-1?7:9;break;case 7:k=_PyErr_Occurred()!=0?8:9;break;case 8:n=-1;k=10;break;case 9:HEAP[m]=o;n=0;k=10;break;case 10:d=n;break a;default:assert(0,"bad label: "+k)}d=void 0}d=d<0?1:2;break;
case 1:g=-1;d=3;break;case 2:_llvm_memcpy_p0i8_p0i8_i32(f,h,8,1,0);g=0;d=3;break;case 3:return f=g,STACKTOP=c,f;default:assert(0,"bad label: "+d)}},0,function(a){var b=STACKTOP;STACKTOP+=1;_memset(b,0,1);_llvm_memcpy_p0i8_p0i8_i32(b,a,1,1,0);a=_PyBool_FromLong(HEAP[b]);STACKTOP=b;return a},0,function(a,b){var c=STACKTOP;STACKTOP+=1;_memset(c,0,1);var d;for(d=-1;;)switch(d){case -1:var e,f,g,h=c;e=a;g=_PyObject_IsTrue(b);d=g<0?1:2;break;case 1:f=-1;d=3;break;case 2:HEAP[h]=g!=0;_llvm_memcpy_p0i8_p0i8_i32(e,
h,1,1,0);f=0;d=3;break;case 3:return d=f,STACKTOP=c,d;default:assert(0,"bad label: "+d)}},0,function(a){var b=STACKTOP;STACKTOP+=4;_memset(b,0,4);_llvm_memcpy_p0i8_p0i8_i32(b,a,4,1,0);a=_PyFloat_FromDouble(HEAP[b]);STACKTOP=b;return a},0,function(a,b){var c=STACKTOP;STACKTOP+=4;_memset(c,0,4);var d;for(d=-1;;)switch(d){case -1:var e,f,g=c;e=a;d=_PyFloat_AsDouble(b);HEAP[g]=d;d=HEAP[g]==-1?1:3;break;case 1:d=_PyErr_Occurred()!=0?2:3;break;case 2:_PyErr_SetString(HEAP[A],U);f=-1;d=4;break;case 3:_llvm_memcpy_p0i8_p0i8_i32(e,
g,4,1,0);f=0;d=4;break;case 4:return e=f,STACKTOP=c,e;default:assert(0,"bad label: "+d)}},0,function(a){var b=STACKTOP;STACKTOP+=8;_memset(b,0,8);_llvm_memcpy_p0i8_p0i8_i32(b,a,8,1,0);a=_PyFloat_FromDouble(HEAP[b]);STACKTOP=b;return a},0,function(a,b){var c=STACKTOP;STACKTOP+=8;_memset(c,0,8);var d;for(d=-1;;)switch(d){case -1:var e,f,g=c;e=a;d=_PyFloat_AsDouble(b);HEAP[g]=d;d=HEAP[g]==-1?1:3;break;case 1:d=_PyErr_Occurred()!=0?2:3;break;case 2:_PyErr_SetString(HEAP[A],U);f=-1;d=4;break;case 3:_llvm_memcpy_p0i8_p0i8_i32(e,
g,8,1,0);f=0;d=4;break;case 4:return e=f,STACKTOP=c,e;default:assert(0,"bad label: "+d)}},0,function(a){var b=STACKTOP;STACKTOP+=4;_memset(b,0,4);_llvm_memcpy_p0i8_p0i8_i32(b,a,4,1,0);a=_PyLong_FromVoidPtr(HEAP[b]);STACKTOP=b;return a},0,function(a,b){var c=STACKTOP;STACKTOP+=4;_memset(c,0,4);var d;for(d=-1;;)switch(d){case -1:var f,g,h,j=c;f=a;g=b;g=e(g);d=g==0?1:2;break;case 1:h=-1;d=10;break;case 2:d=(HEAP[HEAP[g+4]+84]&16777216)==0?3:4;break;case 3:throw ___assert_fail(F,v,683,z),"Reached an unreachable!";
case 4:d=_PyLong_AsVoidPtr(g);HEAP[j]=d;HEAP[g]-=1;d=HEAP[g]==0?5:6;break;case 5:FUNCTION_TABLE[HEAP[HEAP[g+4]+24]](g);d=6;break;case 6:d=HEAP[j]==0?7:9;break;case 7:d=_PyErr_Occurred()!=0?8:9;break;case 8:h=-1;d=10;break;case 9:_llvm_memcpy_p0i8_p0i8_i32(f,j,4,1,0);h=0;d=10;break;case 10:return f=h,STACKTOP=c,f;default:assert(0,"bad label: "+d)}},0,function(a,b){var c;for(c=-1;;)switch(c){case -1:var d,e,f,g;d=a;e=b;f=0;g=HEAP[e+4];c=1;break;case 1:f=HEAP[d]|f<<8;d+=1;g=c=g-1;c=c>0?1:2;break;case 2:c=
HEAP[e+4]<=3?3:4;break;case 3:f|=0-(1<<HEAP[e+4]*8-1&f);c=4;break;case 4:return e=_PyInt_FromLong(f);default:assert(0,"bad label: "+c)}},0,function(a,c,d){var e=STACKTOP;STACKTOP+=4;_memset(e,0,4);var g;for(g=-1;;)switch(g){case -1:var h,j,k,l=e,m;h=a;g=c;j=d;g=b(g,l)<0?1:2;break;case 1:k=-1;g=7;break;case 2:m=HEAP[j+4];g=m!=4&m==2?3:5;break;case 3:g=HEAP[l]<-32768|HEAP[l]>32767?4:5;break;case 4:k=f(j,0);g=7;break;case 5:m-=1;HEAP[h+m]=HEAP[l]&255;HEAP[l]>>=8;g=m>0?5:6;break;case 6:k=0;g=7;break;
case 7:return a=k,STACKTOP=e,a;default:assert(0,"bad label: "+g)}},0,function(a,b){var c;for(c=-1;;)switch(c){case -1:var d,e,f,g;d=a;e=b;g=0;e=HEAP[e+4];c=1;break;case 1:g=HEAP[d]|g<<8;d+=1;e=c=e-1;c=c>0?1:2;break;case 2:var h=g;c=g>=0?3:4;break;case 3:f=_PyInt_FromLong(h);c=5;break;case 4:f=_PyLong_FromUnsignedLong(h);c=5;break;case 5:return f;default:assert(0,"bad label: "+c)}},0,function(b,c,d){var e=STACKTOP;STACKTOP+=4;_memset(e,0,4);var g;for(g=-1;;)switch(g){case -1:var h,j,k,l=e,m;h=b;g=
c;j=d;g=a(g,l)<0?1:2;break;case 1:k=-1;g=7;break;case 2:m=HEAP[j+4];g=m!=4?3:5;break;case 3:g=1;g<<=m*8;g=HEAP[l]>=g?4:5;break;case 4:k=f(j,1);g=7;break;case 5:m-=1;HEAP[h+m]=HEAP[l]&255;HEAP[l]>>>=8;g=m>0?5:6;break;case 6:k=0;g=7;break;case 7:return b=k,STACKTOP=e,b;default:assert(0,"bad label: "+g)}},0,function(a,b){var c;for(c=-1;;)switch(c){case -1:var d,e,f,g,h;d=a;e=b;g=0;h=HEAP[e+4];c=1;break;case 1:g*=Math.pow(2,8);g=Runtime.or64(HEAP[d],g);d+=1;h=c=h-1;c=c>0?1:2;break;case 2:c=HEAP[e+4]<=
7?3:4;break;case 3:c=1*Math.pow(2,HEAP[e+4]*8-1);c=0-Runtime.and64(c,g);g=Runtime.or64(c,g);c=4;break;case 4:var j=g;c=g>=-2147483648&g<=2147483647?5:6;break;case 5:f=_PyInt_FromLong(j&4294967295);c=7;break;case 6:f=_PyLong_FromLongLong(j);c=7;break;case 7:return e=f;default:assert(0,"bad label: "+c)}},0,function(a,b){var c;for(c=-1;;)switch(c){case -1:var d,f,g,h;d=a;f=b;f=e(f);c=f==0?1:2;break;case 1:g=-1;c=5;break;case 2:h=__PyLong_AsByteArray(f,d,8,0,1);HEAP[f]-=1;c=HEAP[f]==0?3:4;break;case 3:FUNCTION_TABLE[HEAP[HEAP[f+
4]+24]](f);c=4;break;case 4:g=h;c=5;break;case 5:return c=g;default:assert(0,"bad label: "+c)}},0,function(a,b){var c;for(c=-1;;)switch(c){case -1:var d,e,f,g;d=a;e=b;g=0;e=HEAP[e+4];c=1;break;case 1:g*=Math.pow(2,8);g=Runtime.or64(HEAP[d],g);d+=1;e=c=e-1;c=c>0?1:2;break;case 2:var h=g;c=g<=2147483647?3:4;break;case 3:f=_PyInt_FromLong(h&4294967295);c=5;break;case 4:f=_PyLong_FromUnsignedLongLong(h);c=5;break;case 5:return f;default:assert(0,"bad label: "+c)}},0,function(a,b){var c;for(c=-1;;)switch(c){case -1:var d,
f,g,h;d=a;f=b;f=e(f);c=f==0?1:2;break;case 1:g=-1;c=5;break;case 2:h=__PyLong_AsByteArray(f,d,8,0,0);HEAP[f]-=1;c=HEAP[f]==0?3:4;break;case 3:FUNCTION_TABLE[HEAP[HEAP[f+4]+24]](f);c=4;break;case 4:g=h;c=5;break;case 5:return c=g;default:assert(0,"bad label: "+c)}},0,function(a){var b=STACKTOP;STACKTOP+=1;_memset(b,0,1);_llvm_memcpy_p0i8_p0i8_i32(b,a,1,1,0);a=_PyBool_FromLong(HEAP[b]!=0);STACKTOP=b;return a},0,function(a,b){var c;for(c=-1;;)switch(c){case -1:var d,e,f;d=a;f=_PyObject_IsTrue(b);c=f<
0?1:2;break;case 1:e=-1;c=3;break;case 2:HEAP[d]=f&255;e=0;c=3;break;case 3:return c=e;default:assert(0,"bad label: "+c)}},0,function(a){return c(a,0)},0,function(a,b){var c;for(c=-1;;)switch(c){case -1:var d,e,f;d=a;f=_PyFloat_AsDouble(b);c=f==-1?1:3;break;case 1:c=_PyErr_Occurred()!=0?2:3;break;case 2:_PyErr_SetString(HEAP[A],U);e=-1;c=4;break;case 3:e=__PyFloat_Pack4(f,d,0);c=4;break;case 4:return c=e;default:assert(0,"bad label: "+c)}},0,function(a){return d(a,0)},0,function(a,b){var c;for(c=
-1;;)switch(c){case -1:var d,e,f;d=a;f=_PyFloat_AsDouble(b);c=f==-1?1:3;break;case 1:c=_PyErr_Occurred()!=0?2:3;break;case 2:_PyErr_SetString(HEAP[A],U);e=-1;c=4;break;case 3:e=__PyFloat_Pack8(f,d,0);c=4;break;case 4:return c=e;default:assert(0,"bad label: "+c)}},0,function(a,b){var c;for(c=-1;;)switch(c){case -1:var d,e,f,g;d=a;e=b;f=0;g=HEAP[e+4];c=1;break;case 1:g=c=g-1;f=HEAP[d+c]|f<<8;c=c>0?1:2;break;case 2:c=HEAP[e+4]<=3?3:4;break;case 3:f|=0-(1<<HEAP[e+4]*8-1&f);c=4;break;case 4:return e=_PyInt_FromLong(f);
default:assert(0,"bad label: "+c)}},0,function(a,c,d){var e=STACKTOP;STACKTOP+=4;_memset(e,0,4);var g;for(g=-1;;)switch(g){case -1:var h,j,k,l=e,m;h=a;g=c;j=d;g=b(g,l)<0?1:2;break;case 1:k=-1;g=7;break;case 2:m=HEAP[j+4];g=m!=4&m==2?3:5;break;case 3:g=HEAP[l]<-32768|HEAP[l]>32767?4:5;break;case 4:k=f(j,0);g=7;break;case 5:HEAP[h]=HEAP[l]&255;h+=1;HEAP[l]>>=8;m=g=m-1;g=g>0?5:6;break;case 6:k=0;g=7;break;case 7:return a=k,STACKTOP=e,a;default:assert(0,"bad label: "+g)}},0,function(a,b){var c;for(c=
-1;;)switch(c){case -1:var d,e,f,g;d=a;e=b;g=0;e=HEAP[e+4];c=1;break;case 1:e=c=e-1;g=HEAP[d+c]|g<<8;c=c>0?1:2;break;case 2:var h=g;c=g>=0?3:4;break;case 3:f=_PyInt_FromLong(h);c=5;break;case 4:f=_PyLong_FromUnsignedLong(h);c=5;break;case 5:return f;default:assert(0,"bad label: "+c)}},0,function(b,c,d){var e=STACKTOP;STACKTOP+=4;_memset(e,0,4);var g;for(g=-1;;)switch(g){case -1:var h,j,k,l=e,m;h=b;g=c;j=d;g=a(g,l)<0?1:2;break;case 1:k=-1;g=7;break;case 2:m=HEAP[j+4];g=m!=4?3:5;break;case 3:g=1;g<<=
m*8;g=HEAP[l]>=g?4:5;break;case 4:k=f(j,1);g=7;break;case 5:HEAP[h]=HEAP[l]&255;h+=1;HEAP[l]>>>=8;m=g=m-1;g=g>0?5:6;break;case 6:k=0;g=7;break;case 7:return b=k,STACKTOP=e,b;default:assert(0,"bad label: "+g)}},0,function(a,b){var c;for(c=-1;;)switch(c){case -1:var d,e,f,g,h;d=a;e=b;g=0;h=HEAP[e+4];c=1;break;case 1:g*=Math.pow(2,8);h=c=h-1;g=Runtime.or64(HEAP[d+c],g);c=c>0?1:2;break;case 2:c=HEAP[e+4]<=7?3:4;break;case 3:c=1*Math.pow(2,HEAP[e+4]*8-1);c=0-Runtime.and64(c,g);g=Runtime.or64(c,g);c=4;
break;case 4:var j=g;c=g>=-2147483648&g<=2147483647?5:6;break;case 5:f=_PyInt_FromLong(j&4294967295);c=7;break;case 6:f=_PyLong_FromLongLong(j);c=7;break;case 7:return e=f;default:assert(0,"bad label: "+c)}},0,function(a,b){var c;for(c=-1;;)switch(c){case -1:var d,f,g,h;d=a;f=b;f=e(f);c=f==0?1:2;break;case 1:g=-1;c=5;break;case 2:h=__PyLong_AsByteArray(f,d,8,1,1);HEAP[f]-=1;c=HEAP[f]==0?3:4;break;case 3:FUNCTION_TABLE[HEAP[HEAP[f+4]+24]](f);c=4;break;case 4:g=h;c=5;break;case 5:return c=g;default:assert(0,
"bad label: "+c)}},0,function(a,b){var c;for(c=-1;;)switch(c){case -1:var d,e,f,g;d=a;e=b;g=0;e=HEAP[e+4];c=1;break;case 1:g*=Math.pow(2,8);e=c=e-1;g=Runtime.or64(HEAP[d+c],g);c=c>0?1:2;break;case 2:var h=g;c=g<=2147483647?3:4;break;case 3:f=_PyInt_FromLong(h&4294967295);c=5;break;case 4:f=_PyLong_FromUnsignedLongLong(h);c=5;break;case 5:return f;default:assert(0,"bad label: "+c)}},0,function(a,b){var c;for(c=-1;;)switch(c){case -1:var d,f,g,h;d=a;f=b;f=e(f);c=f==0?1:2;break;case 1:g=-1;c=5;break;
case 2:h=__PyLong_AsByteArray(f,d,8,1,0);HEAP[f]-=1;c=HEAP[f]==0?3:4;break;case 3:FUNCTION_TABLE[HEAP[HEAP[f+4]+24]](f);c=4;break;case 4:g=h;c=5;break;case 5:return c=g;default:assert(0,"bad label: "+c)}},0,function(a){return c(a,1)},0,function(a,b){var c;for(c=-1;;)switch(c){case -1:var d,e,f;d=a;f=_PyFloat_AsDouble(b);c=f==-1?1:3;break;case 1:c=_PyErr_Occurred()!=0?2:3;break;case 2:_PyErr_SetString(HEAP[A],U);e=-1;c=4;break;case 3:e=__PyFloat_Pack4(f,d,1);c=4;break;case 4:return c=e;default:assert(0,
"bad label: "+c)}},0,function(a){return d(a,1)},0,function(a,b){var c;for(c=-1;;)switch(c){case -1:var d,e,f;d=a;f=_PyFloat_AsDouble(b);c=f==-1?1:3;break;case 1:c=_PyErr_Occurred()!=0?2:3;break;case 2:_PyErr_SetString(HEAP[A],U);e=-1;c=4;break;case 3:e=__PyFloat_Pack8(f,d,1);c=4;break;case 4:return c=e;default:assert(0,"bad label: "+c)}},0,o,0,p,0,l,0,m,0,function(a){HEAP[HEAP[a+20]]+=1;return HEAP[a+20]},0,function(a){return _PyInt_FromSsize_t(HEAP[a+8])},0,function(a){var b;for(b=-1;;)switch(b){case -1:var c;
c=a;b=HEAP[c+24]!=0?1:2;break;case 1:_PyObject_ClearWeakRefs(c);b=2;break;case 2:b=HEAP[c+16]!=0?3:4;break;case 3:_free(HEAP[c+16]);b=4;break;case 4:b=HEAP[c+20]!=0?5:7;break;case 5:b=HEAP[c+20];HEAP[b]-=1;b=HEAP[b]==0?6:7;break;case 6:FUNCTION_TABLE[HEAP[HEAP[HEAP[c+20]+4]+24]](HEAP[c+20]);b=7;break;case 7:FUNCTION_TABLE[HEAP[HEAP[c+4]+160]](c);return;default:assert(0,"bad label: "+b)}},0,_PyObject_GenericGetAttr,0,_PyObject_GenericSetAttr,0,function(a,b,c){var d=STACKTOP;STACKTOP+=4;_memset(d,0,
4);var e;for(e=-1;;)switch(e){case -1:var f,g,k,l,m,n=d,o;f=a;g=b;k=c;m=f;HEAP[n]=0;e=HEAP[f+4]!=qa?1:3;break;case 1:e=_PyType_IsSubtype(HEAP[f+4],qa)==0?2:3;break;case 2:throw ___assert_fail(ib,v,1372,cb),"Reached an unreachable!";case 3:e=__PyArg_ParseTupleAndKeywords_SizeT(g,k,db,Da,allocate([n,0,0,0],["%struct.PyObject**",0,0,0],ALLOC_STACK))==0?4:5;break;case 4:l=-1;e=9;break;case 5:HEAP[HEAP[n]]+=1;e=HEAP[m+20]!=0?6:8;break;case 6:o=HEAP[m+20];HEAP[m+20]=0;HEAP[o]-=1;e=HEAP[o]==0?7:8;break;
case 7:FUNCTION_TABLE[HEAP[HEAP[o+4]+24]](o);e=8;break;case 8:HEAP[m+20]=HEAP[n];a:{l=m;e=STACKTOP;STACKTOP+=4;_memset(e,0,4);for(var p=void 0,p=-1;;)switch(p){case -1:var q,z,r,s,t,u,O,M=e,w,H,x,ca,V;q=l;HEAP[M]=HEAP[q+20]+20;b:{O=M;s=STACKTOP;STACKTOP+=4;_memset(s,0,4);H=void 0;for(H=-1;;)switch(H){case -1:var K,Ea,D=s;K=O;H=HEAP[K];HEAP[K]+=1;H=HEAP[H];H=H==33?2:H==60?1:H==61?3:H==62?2:H==64?7:6;break;case 1:Ea=la;H=8;break;case 2:Ea=ja;H=8;break;case 3:HEAP[D]=1;H=D;H=HEAP[H]==1?4:5;break;case 4:Ea=
la;H=8;break;case 5:Ea=ja;H=8;break;case 6:HEAP[K]+=-1;H=7;break;case 7:Ea=aa;H=8;break;case 8:O=Ea;STACKTOP=s;s=O;break b;default:assert(0,"bad label: "+H)}s=void 0}O=HEAP[M];x=H=0;p=20;break;case 1:p=___ctype_b_loc();p=(HEAP[HEAP[p]+2*w]&8192)!=0?20:2;break;case 2:p=w<=47|w>57?11:3;break;case 3:ca=w-48;p=8;break;case 4:p=ca>214748363?5:7;break;case 5:p=ca>214748364?49:6;break;case 6:p=w-48>7?49:7;break;case 7:ca=ca*10+-48+w;p=8;break;case 8:w=HEAP[O];O+=1;var y=w,p=(w>47!=0^1)!=0?10:9;break;case 9:p=
y<=57?4:12;break;case 10:p=y==0?21:12;break;case 11:ca=1;p=12;break;case 12:t=h(w,s);p=t==0?13:14;break;case 13:r=-1;p=50;break;case 14:p=w;p=p==112?15:p==115?15:p==120?17:16;break;case 15:x+=1;p=17;break;case 16:x=ca+x;p=17;break;case 17:V=HEAP[t+4];H=p=j(H,w&255,t);p=p==-1?49:18;break;case 18:p=((2147483647-H)/V|0)<ca?49:19;break;case 19:H=V*ca+H;p=20;break;case 20:w=HEAP[O];O+=1;p=w!=0!=0?1:21;break;case 21:p=x+1>178956970?22:23;break;case 22:_PyErr_NoMemory();r=-1;p=50;break;case 23:HEAP[q+8]=
H;HEAP[q+12]=x;p=(x+1)*12>=0?24:27;break;case 24:p=(x+1)*12!=0?25:26;break;case 25:z=(x+1)*12;p=28;break;case 26:z=1;p=28;break;case 27:u=0;p=29;break;case 28:u=p=_malloc(z);p=p==0?29:30;break;case 29:_PyErr_NoMemory();r=-1;p=50;break;case 30:p=HEAP[q+16]!=0?31:32;break;case 31:_free(HEAP[q+16]);p=32;break;case 32:HEAP[q+16]=u;O=HEAP[M];H=0;p=47;break;case 33:p=___ctype_b_loc();p=(HEAP[HEAP[p]+2*w]&8192)!=0?47:34;break;case 34:p=w<=47|w>57?40:35;break;case 35:ca=w-48;p=37;break;case 36:ca=ca*10+-48+
w;p=37;break;case 37:w=HEAP[O];O+=1;var U=w,p=(w>47!=0^1)!=0?39:38;break;case 38:p=U<=57?36:41;break;case 39:p=U==0?48:41;break;case 40:ca=1;p=41;break;case 41:t=h(w,s);H=j(H,w&255,t);p=w==115|w==112?42:43;break;case 42:HEAP[u+4]=H;HEAP[u+8]=ca;HEAP[u]=t;u+=12;H=ca+H;p=47;break;case 43:p=w==120?45:44;break;case 44:ca=p=ca-1;p=p>=0?46:47;break;case 45:H=ca+H;p=47;break;case 46:HEAP[u+4]=H;HEAP[u+8]=HEAP[t+4];HEAP[u]=t;u+=12;H+=HEAP[t+4];ca=p=ca-1;p=p>=0?46:47;break;case 47:w=HEAP[O];O+=1;p=w!=0!=0?
33:48;break;case 48:HEAP[u]=0;HEAP[u+4]=H;r=HEAP[u+8]=0;p=50;break;case 49:_PyErr_SetString(HEAP[A],Ka);r=-1;p=50;break;case 50:l=r;STACKTOP=e;e=l;break a;default:assert(0,"bad label: "+p)}e=void 0}l=e;e=9;break;case 9:return a=l,STACKTOP=d,a;default:assert(0,"bad label: "+e)}},0,_PyType_GenericAlloc,0,function(a){var b;for(b=-1;;)switch(b){case -1:var c,d;c=a;b=c==0?2:1;break;case 1:b=HEAP[c+152]==0?2:3;break;case 2:throw ___assert_fail(Ma,v,1350,wa),"Reached an unreachable!";case 3:d=FUNCTION_TABLE[HEAP[c+
152]](c,0);b=d!=0?4:5;break;case 4:b=d;HEAP[__Py_NoneStruct]+=1;HEAP[b+20]=__Py_NoneStruct;HEAP[b+16]=0;HEAP[b+8]=-1;HEAP[b+12]=-1;b=5;break;case 5:return a=d;default:assert(0,"bad label: "+b)}},0,_PyObject_Free,0,function(){var a;for(a=-1;;)switch(a){case -1:var b;a=HEAP[M]!=0?1:3;break;case 1:b=HEAP[M];HEAP[M]=0;HEAP[b]-=1;a=HEAP[b]==0?2:3;break;case 2:FUNCTION_TABLE[HEAP[HEAP[b+4]+24]](b);a=3;break;case 3:return HEAP[__Py_NoneStruct]+=1,a=__Py_NoneStruct;default:assert(0,"bad label: "+a)}},0,function(a,
b){var c;for(c=-1;;)switch(c){case -1:var d,e,f;f=q(b);c=f==0?1:2;break;case 1:d=0;c=5;break;case 2:e=HEAP[f+8];HEAP[f]-=1;c=HEAP[f]==0?3:4;break;case 3:FUNCTION_TABLE[HEAP[HEAP[f+4]+24]](f);c=4;break;case 4:d=_PyInt_FromSsize_t(e);c=5;break;case 5:return c=d;default:assert(0,"bad label: "+c)}},0,function(a,b){var c;for(c=-1;;)switch(c){case -1:var d,e,f,g,h,j,k;d=b;k=HEAP[d+8];c=k==0?1:2;break;case 1:_PyErr_SetString(HEAP[_PyExc_TypeError],ua);e=0;c=13;break;case 2:g=HEAP[d+12];h=_PyTuple_GetSlice(d,
1,k);c=h==0?3:4;break;case 3:e=0;c=13;break;case 4:f=q(g);c=f==0?5:8;break;case 5:HEAP[h]-=1;c=HEAP[h]==0?6:7;break;case 6:FUNCTION_TABLE[HEAP[HEAP[h+4]+24]](h);c=7;break;case 7:e=0;c=13;break;case 8:j=o(f,h);HEAP[h]-=1;c=HEAP[h]==0?9:10;break;case 9:FUNCTION_TABLE[HEAP[HEAP[h+4]+24]](h);c=10;break;case 10:HEAP[f]-=1;c=HEAP[f]==0?11:12;break;case 11:FUNCTION_TABLE[HEAP[HEAP[f+4]+24]](f);c=12;break;case 12:e=j;c=13;break;case 13:return c=e;default:assert(0,"bad label: "+c)}},0,function(a,b){var c;
for(c=-1;;)switch(c){case -1:var d,e,f,g,h,j,k;d=b;k=HEAP[d+8];c=k==0?1:2;break;case 1:_PyErr_SetString(HEAP[_PyExc_TypeError],ua);e=0;c=13;break;case 2:g=HEAP[d+12];h=_PyTuple_GetSlice(d,1,k);c=h==0?3:4;break;case 3:e=0;c=13;break;case 4:f=q(g);c=f==0?5:8;break;case 5:HEAP[h]-=1;c=HEAP[h]==0?6:7;break;case 6:FUNCTION_TABLE[HEAP[HEAP[h+4]+24]](h);c=7;break;case 7:e=0;c=13;break;case 8:j=p(f,h);HEAP[h]-=1;c=HEAP[h]==0?9:10;break;case 9:FUNCTION_TABLE[HEAP[HEAP[h+4]+24]](h);c=10;break;case 10:HEAP[f]-=
1;c=HEAP[f]==0?11:12;break;case 11:FUNCTION_TABLE[HEAP[HEAP[f+4]+24]](f);c=12;break;case 12:e=j;c=13;break;case 13:return c=e;default:assert(0,"bad label: "+c)}},0,function(a,b){var c=STACKTOP;STACKTOP+=8;_memset(c,0,8);var d;for(d=-1;;)switch(d){case -1:var e,f,g=c,h=c+4,j;d=_PyArg_UnpackTuple(b,bb,2,2,allocate([g,0,0,0,h,0,0,0],["%struct.PyObject**",0,0,0,"%struct.PyObject**",0,0,0],ALLOC_STACK))==0?1:2;break;case 1:e=0;d=7;break;case 2:f=q(HEAP[g]);d=f==0?3:4;break;case 3:e=0;d=7;break;case 4:j=
l(f,HEAP[h]);HEAP[f]-=1;d=HEAP[f]==0?5:6;break;case 5:FUNCTION_TABLE[HEAP[HEAP[f+4]+24]](f);d=6;break;case 6:e=j;d=7;break;case 7:return d=e,STACKTOP=c,d;default:assert(0,"bad label: "+d)}},0,function(a,b,c){for(a=-1;;)switch(a){case -1:var d,e,f,g,h,j,k,l;d=b;e=c;l=HEAP[d+8];a=l==0?1:2;break;case 1:_PyErr_SetString(HEAP[_PyExc_TypeError],ua);f=0;a=13;break;case 2:h=HEAP[d+12];j=_PyTuple_GetSlice(d,1,l);a=j==0?3:4;break;case 3:f=0;a=13;break;case 4:g=q(h);a=g==0?5:8;break;case 5:HEAP[j]-=1;a=HEAP[j]==
0?6:7;break;case 6:FUNCTION_TABLE[HEAP[HEAP[j+4]+24]](j);a=7;break;case 7:f=0;a=13;break;case 8:k=m(g,j,e);HEAP[j]-=1;a=HEAP[j]==0?9:10;break;case 9:FUNCTION_TABLE[HEAP[HEAP[j+4]+24]](j);a=10;break;case 10:HEAP[g]-=1;a=HEAP[g]==0?11:12;break;case 11:FUNCTION_TABLE[HEAP[HEAP[g+4]+24]](g);a=12;break;case 12:f=k;a=13;break;case 13:return b=f;default:assert(0,"bad label: "+a)}},0]);t.run=r;r();return t});