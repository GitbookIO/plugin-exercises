(function(g){function e(a,b){var c=STACKTOP;STACKTOP+=2048;_memset(c,0,2048);var d;for(d=-1;;)switch(d){case -1:var e,g,k=c;e=a;g=b;d=_strlen(e);d=_strlen(g)+d>1998?1:2;break;case 1:_PyErr_SetString(HEAP[f],h);d=3;break;case 2:_PyOS_snprintf(k,2048,j,allocate([e,0,0,0,g,0,0,0],["i8*",0,0,0,"i8*",0,0,0],ALLOC_STACK));_PyErr_SetString(HEAP[f],k);d=3;break;case 3:return STACKTOP=c,0;default:assert(0,"bad label: "+d)}}function b(a){var b;for(b=
-1;;)switch(b){case -1:var c;c=a;HEAP[tb]+=1;b=_PyCapsule_GetContext(c)!=rb?1:2;break;case 1:HEAP[fa]=Jb;b=8;break;case 2:b=_PyCapsule_GetDestructor(c)!=g+6?3:4;break;case 3:HEAP[fa]=lc;b=8;break;case 4:b=_PyCapsule_GetName(c)!=Pb?5:6;break;case 5:HEAP[fa]=Rb;b=8;break;case 6:b=_PyCapsule_GetPointer(c,Pb)!=nc?7:8;break;case 7:HEAP[fa]=Ba;b=8;break;case 8:return;default:assert(0,"bad label: "+b)}}function a(){d=allocate(1,"%struct.PyDateTime_CAPI*",ALLOC_NORMAL);f=allocate(1,"%struct.PyObject*",ALLOC_NORMAL);
h=allocate([105,110,116,101,114,110,97,108,32,101,114,114,111,114,32,109,115,103,32,116,111,111,32,108,97,114,103,101,0],"i8",ALLOC_NORMAL);j=allocate([37,115,58,32,37,115,0],"i8",ALLOC_NORMAL);k=allocate([116,101,115,116,95,108,105,115,116,95,97,112,105,58,32,114,101,118,101,114,115,101,32,115,99,114,101,119,101,100,32,117,112,0],"i8",ALLOC_NORMAL);l=allocate([116,101,115,116,95,100,105,99,116,95,105,116,101,114,97,116,105,111,110,58,32,100,105,99,116,32,105,116,101,114,97,116,105,111,110,32,119,
101,110,116,32,119,114,111,110,103,32,0],"i8",ALLOC_NORMAL);m=allocate([104,97,115,104,105,110,104,101,114,105,116,97,110,99,101,116,101,115,116,101,114,0],"i8",ALLOC_NORMAL);n=allocate([1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,131563,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],["i32",0,0,0,"%struct._typeobject*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i32",0,0,0,"i32",0,0,0,"void (%struct.PyObject*)*",0,0,0,"i32 (%struct.PyObject*, %struct.FILE*, i32)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, i8*)*",0,0,0,"i32 (%struct.PyObject*, i8*, %struct.PyObject*)*",0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*)*",0,0,0,"%struct.PyNumberMethods*",0,0,0,
"%struct.PySequenceMethods*",0,0,0,"%struct.PyMappingMethods*",0,0,0,"i32 (%struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"%struct.PyBufferProcs*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i32 (%struct.PyObject*, i32 (%struct.PyObject*, i8*)*, i8*)*",0,0,0,"i32 (%struct.PyObject*)*",
0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*, i32)*",0,0,0,"i32",0,0,0,"%struct.PyObject* (%struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*)*",0,0,0,"%struct.PyMethodDef*",0,0,0,"%struct.PyMemberDef*",0,0,0,"%struct.PyGetSetDef*",0,0,0,"%struct._typeobject*",0,0,0,"%struct.PyObject*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",
0,0,0,"%struct.PyObject* (%struct._typeobject*, i32)*",0,0,0,"%struct.PyObject* (%struct._typeobject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8"],ALLOC_NORMAL);o=allocate([116,101,115,116,95,108,97,122,121,95,104,97,115,104,95,105,110,104,101,114,105,116,97,110,99,101,58,32,102,97,105,108,101,100,32,116,111,32,99,114,
101,97,116,101,32,111,98,106,101,99,116,0],"i8",ALLOC_NORMAL);p=allocate([116,101,115,116,95,108,97,122,121,95,104,97,115,104,95,105,110,104,101,114,105,116,97,110,99,101,58,32,116,121,112,101,32,105,110,105,116,105,97,108,105,115,101,100,32,116,111,111,32,115,111,111,110,0],"i8",ALLOC_NORMAL);q=allocate([116,101,115,116,95,108,97,122,121,95,104,97,115,104,95,105,110,104,101,114,105,116,97,110,99,101,58,32,99,111,117,108,100,32,110,111,116,32,104,97,115,104,32,111,98,106,101,99,116,0],"i8",ALLOC_NORMAL);
r=allocate([116,101,115,116,95,108,97,122,121,95,104,97,115,104,95,105,110,104,101,114,105,116,97,110,99,101,58,32,116,121,112,101,32,110,111,116,32,105,110,105,116,105,97,108,105,115,101,100,32,98,121,32,104,97,115,104,40,41,0],"i8",ALLOC_NORMAL);t=allocate([116,101,115,116,95,108,97,122,121,95,104,97,115,104,95,105,110,104,101,114,105,116,97,110,99,101,58,32,117,110,101,120,112,101,99,116,101,100,32,104,97,115,104,32,102,117,110,99,116,105,111,110,0],"i8",ALLOC_NORMAL);s=allocate([116,101,115,116,
95,98,114,111,107,101,110,95,109,101,109,111,114,121,118,105,101,119,58,32,101,120,112,101,99,116,101,100,32,101,114,114,111,114,32,105,110,32,98,102,95,103,101,116,98,117,102,102,101,114,0],"i8",ALLOC_NORMAL);u=allocate(24,["i32 (%struct.PyObject*, i32, i8**)*",0,0,0,"i32 (%struct.PyObject*, i32, i8**)*",0,0,0,"i32 (%struct.PyObject*, i32*)*",0,0,0,"i32 (%struct.PyObject*, i32, i8**)*",0,0,0,"i32 (%struct.PyObject*, %struct.Py_buffer*, i32)*",0,0,0,"void (%struct.PyObject*, %struct.Py_buffer*)*",
0,0,0],ALLOC_NORMAL);v=allocate([109,101,109,111,114,121,118,105,101,119,116,101,115,116,101,114,0],"i8",ALLOC_NORMAL);w=allocate([1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2228715,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0],["i32",0,0,0,"%struct._typeobject*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i32",0,0,0,"i32",0,0,0,"void (%struct.PyObject*)*",0,0,0,"i32 (%struct.PyObject*, %struct.FILE*, i32)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, i8*)*",0,0,0,"i32 (%struct.PyObject*, i8*, %struct.PyObject*)*",0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*)*",0,0,0,"%struct.PyNumberMethods*",0,0,0,"%struct.PySequenceMethods*",0,0,0,"%struct.PyMappingMethods*",
0,0,0,"i32 (%struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"%struct.PyBufferProcs*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i32 (%struct.PyObject*, i32 (%struct.PyObject*, i8*)*, i8*)*",0,0,0,"i32 (%struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*, i32)*",
0,0,0,"i32",0,0,0,"%struct.PyObject* (%struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*)*",0,0,0,"%struct.PyMethodDef*",0,0,0,"%struct.PyMemberDef*",0,0,0,"%struct.PyGetSetDef*",0,0,0,"%struct._typeobject*",0,0,0,"%struct.PyObject*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct._typeobject*, i32)*",
0,0,0,"%struct.PyObject* (%struct._typeobject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8"],ALLOC_NORMAL);x=allocate([116,101,115,116,95,98,114,111,107,101,110,95,109,101,109,111,114,121,118,105,101,119,58,32,102,97,105,108,101,100,32,116,111,32,99,114,101,97,116,101,32,111,98,106,101,99,116,0],"i8",ALLOC_NORMAL);y=allocate([116,
101,115,116,95,98,114,111,107,101,110,95,109,101,109,111,114,121,118,105,101,119,58,32,109,101,109,111,114,121,118,105,101,119,40,41,32,100,105,100,110,39,116,32,114,97,105,115,101,32,97,110,32,69,120,99,101,112,116,105,111,110,0],"i8",ALLOC_NORMAL);B=allocate([116,101,115,116,95,108,111,110,103,95,97,112,105,0],"i8",ALLOC_NORMAL);A=allocate([117,110,115,105,103,110,101,100,32,117,110,101,120,112,101,99,116,101,100,32,110,117,108,108,32,114,101,115,117,108,116,0],"i8",ALLOC_NORMAL);C=allocate([117,
110,115,105,103,110,101,100,32,117,110,101,120,112,101,99,116,101,100,32,45,49,32,114,101,115,117,108,116,0],"i8",ALLOC_NORMAL);G=allocate([117,110,115,105,103,110,101,100,32,111,117,116,112,117,116,32,33,61,32,105,110,112,117,116,0],"i8",ALLOC_NORMAL);F=allocate([115,105,103,110,101,100,32,117,110,101,120,112,101,99,116,101,100,32,110,117,108,108,32,114,101,115,117,108,116,0],"i8",ALLOC_NORMAL);E=allocate([115,105,103,110,101,100,32,117,110,101,120,112,101,99,116,101,100,32,45,49,32,114,101,115,
117,108,116,0],"i8",ALLOC_NORMAL);N=allocate([115,105,103,110,101,100,32,111,117,116,112,117,116,32,33,61,32,105,110,112,117,116,0],"i8",ALLOC_NORMAL);Q=allocate([117,110,101,120,112,101,99,116,101,100,32,78,85,76,76,32,102,114,111,109,32,80,121,76,111,110,103,95,70,114,111,109,76,111,110,103,0],"i8",ALLOC_NORMAL);I=allocate([117,110,101,120,112,101,99,116,101,100,32,78,85,76,76,32,102,114,111,109,32,80,121,78,117,109,98,101,114,95,78,101,103,97,116,105,118,101,0],"i8",ALLOC_NORMAL);J=allocate([80,
121,76,111,110,103,95,65,115,85,110,115,105,103,110,101,100,88,88,88,40,45,49,41,32,100,105,100,110,39,116,32,99,111,109,112,108,97,105,110,0],"i8",ALLOC_NORMAL);P=allocate([80,121,76,111,110,103,95,65,115,85,110,115,105,103,110,101,100,88,88,88,40,45,49,41,32,114,97,105,115,101,100,32,115,111,109,101,116,104,105,110,103,32,111,116,104,101,114,32,116,104,97,110,32,79,118,101,114,102,108,111,119,69,114,114,111,114,0],"i8",ALLOC_NORMAL);D=allocate([117,110,101,120,112,101,99,116,101,100,32,78,85,76,
76,32,102,114,111,109,32,80,121,78,117,109,98,101,114,95,76,115,104,105,102,116,0],"i8",ALLOC_NORMAL);T=allocate([80,121,76,111,110,103,95,65,115,85,110,115,105,103,110,101,100,88,88,88,40,50,42,42,78,66,73,84,83,41,32,100,105,100,110,39,116,32,99,111,109,112,108,97,105,110,0],"i8",ALLOC_NORMAL);L=allocate([80,121,76,111,110,103,95,65,115,85,110,115,105,103,110,101,100,88,88,88,40,50,42,42,78,66,73,84,83,41,32,114,97,105,115,101,100,32,115,111,109,101,116,104,105,110,103,32,111,116,104,101,114,32,
116,104,97,110,32,79,118,101,114,102,108,111,119,69,114,114,111,114,0],"i8",ALLOC_NORMAL);$=allocate([117,110,101,120,112,101,99,116,101,100,32,78,85,76,76,32,102,114,111,109,32,80,121,78,117,109,98,101,114,95,82,115,104,105,102,116,0],"i8",ALLOC_NORMAL);R=allocate([80,121,76,111,110,103,95,65,115,88,88,88,40,50,42,42,40,78,66,73,84,83,45,49,41,41,32,100,105,100,110,39,116,32,99,111,109,112,108,97,105,110,0],"i8",ALLOC_NORMAL);K=allocate([80,121,76,111,110,103,95,65,115,88,88,88,40,50,42,42,40,78,
66,73,84,83,45,49,41,41,32,114,97,105,115,101,100,32,115,111,109,101,116,104,105,110,103,32,111,116,104,101,114,32,116,104,97,110,32,79,118,101,114,102,108,111,119,69,114,114,111,114,0],"i8",ALLOC_NORMAL);H=allocate([117,110,101,120,112,101,99,116,101,100,32,78,85,76,76,32,102,114,111,109,32,80,121,78,117,109,98,101,114,95,83,117,98,116,114,97,99,116,0],"i8",ALLOC_NORMAL);S=allocate([80,121,76,111,110,103,95,65,115,88,88,88,40,45,50,42,42,40,78,66,73,84,83,45,49,41,45,49,41,32,100,105,100,110,39,
116,32,99,111,109,112,108,97,105,110,0],"i8",ALLOC_NORMAL);U=allocate([80,121,76,111,110,103,95,65,115,88,88,88,40,45,50,42,42,40,78,66,73,84,83,45,49,41,45,49,41,32,114,97,105,115,101,100,32,115,111,109,101,116,104,105,110,103,32,111,116,104,101,114,32,116,104,97,110,32,79,118,101,114,102,108,111,119,69,114,114,111,114,0],"i8",ALLOC_NORMAL);z=allocate([116,101,115,116,95,108,111,110,103,108,111,110,103,95,97,112,105,0],"i8",ALLOC_NORMAL);aa=allocate([70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,
70,70,70,70,70,70,70,70,70,0],"i8",ALLOC_NORMAL);ja=allocate([116,101,115,116,95,108,111,110,103,95,97,110,100,95,111,118,101,114,102,108,111,119,0],"i8",ALLOC_NORMAL);la=allocate([114,101,116,117,114,110,32,118,97,108,117,101,32,119,97,115,32,110,111,116,32,115,101,116,32,116,111,32,45,49,0],"i8",ALLOC_NORMAL);da=allocate([111,118,101,114,102,108,111,119,32,119,97,115,32,110,111,116,32,115,101,116,32,116,111,32,49,0],"i8",ALLOC_NORMAL);Ka=allocate([45,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,
70,70,70,70,70,70,70,70,70,0],"i8",ALLOC_NORMAL);Ma=allocate([111,118,101,114,102,108,111,119,32,119,97,115,32,110,111,116,32,115,101,116,32,116,111,32,45,49,0],"i8",ALLOC_NORMAL);wa=allocate([70,70,0],"i8",ALLOC_NORMAL);ib=allocate([101,120,112,101,99,116,101,100,32,114,101,116,117,114,110,32,118,97,108,117,101,32,48,120,70,70,0],"i8",ALLOC_NORMAL);cb=allocate([111,118,101,114,102,108,111,119,32,119,97,115,32,110,111,116,32,99,108,101,97,114,101,100,0],"i8",ALLOC_NORMAL);db=allocate([45,70,70,0],
"i8",ALLOC_NORMAL);Da=allocate([111,118,101,114,102,108,111,119,32,119,97,115,32,115,101,116,32,105,110,99,111,114,114,101,99,116,108,121,0],"i8",ALLOC_NORMAL);gb=allocate([101,120,112,101,99,116,101,100,32,114,101,116,117,114,110,32,118,97,108,117,101,32,76,79,78,71,95,77,65,88,0],"i8",ALLOC_NORMAL);Xa=allocate([101,120,112,101,99,116,101,100,32,114,101,116,117,114,110,32,118,97,108,117,101,32,76,79,78,71,95,77,73,78,0],"i8",ALLOC_NORMAL);Ca=allocate([116,101,115,116,95,108,111,110,103,95,108,111,
110,103,95,97,110,100,95,111,118,101,114,102,108,111,119,0],"i8",ALLOC_NORMAL);Za=allocate([101,120,112,101,99,116,101,100,32,114,101,116,117,114,110,32,118,97,108,117,101,32,80,89,95,76,76,79,78,71,95,77,65,88,0],"i8",ALLOC_NORMAL);Va=allocate([101,120,112,101,99,116,101,100,32,114,101,116,117,114,110,32,118,97,108,117,101,32,80,89,95,76,76,79,78,71,95,77,73,78,0],"i8",ALLOC_NORMAL);Ga=allocate([76,58,116,101,115,116,95,76,95,99,111,100,101,0],"i8",ALLOC_NORMAL);ha=allocate([116,101,115,116,95,76,
95,99,111,100,101,0],"i8",ALLOC_NORMAL);Na=allocate([76,32,99,111,100,101,32,114,101,116,117,114,110,101,100,32,119,114,111,110,103,32,118,97,108,117,101,32,102,111,114,32,108,111,110,103,32,52,50,0],"i8",ALLOC_NORMAL);jb=allocate([76,32,99,111,100,101,32,114,101,116,117,114,110,101,100,32,119,114,111,110,103,32,118,97,108,117,101,32,102,111,114,32,105,110,116,32,52,50,0],"i8",ALLOC_NORMAL);hb=allocate([105,40,105,105,41,0],"i8",ALLOC_NORMAL);Qa=allocate([105,105,105,0],"i8",ALLOC_NORMAL);Ha=allocate([40,
105,105,41,105,124,40,105,40,105,105,41,41,40,105,105,105,41,105,0],"i8",ALLOC_NORMAL);Ra=allocate(24,"i8*",ALLOC_NORMAL);Ia=allocate([97,114,103,49,0],"i8",ALLOC_NORMAL);Fa=allocate([97,114,103,50,0],"i8",ALLOC_NORMAL);$a=allocate([97,114,103,51,0],"i8",ALLOC_NORMAL);Wa=allocate([97,114,103,52,0],"i8",ALLOC_NORMAL);Y=allocate([97,114,103,53,0],"i8",ALLOC_NORMAL);kb=allocate([105,105,105,105,105,105,105,105,105,105,0],"i8",ALLOC_NORMAL);ra=allocate([98,0],"i8",ALLOC_NORMAL);Ta=allocate([66,0],"i8",
ALLOC_NORMAL);ia=allocate([104,0],"i8",ALLOC_NORMAL);ba=allocate([72,0],"i8",ALLOC_NORMAL);Ya=allocate([73,0],"i8",ALLOC_NORMAL);ta=allocate([107,0],"i8",ALLOC_NORMAL);O=allocate([105,0],"i8",ALLOC_NORMAL);wb=allocate([108,0],"i8",ALLOC_NORMAL);bb=allocate([110,0],"i8",ALLOC_NORMAL);vb=allocate([76,0],"i8",ALLOC_NORMAL);ka=allocate([75,0],"i8",ALLOC_NORMAL);za=allocate([116,101,115,116,95,107,95,99,111,100,101,0],"i8",ALLOC_NORMAL);Aa=allocate([80,121,73,110,116,95,65,115,85,110,115,105,103,110,101,
100,76,111,110,103,77,97,115,107,40,41,32,114,101,116,117,114,110,101,100,32,119,114,111,110,103,32,118,97,108,117,101,32,102,111,114,32,108,111,110,103,32,48,120,70,70,70,46,46,46,70,70,70,0],"i8",ALLOC_NORMAL);La=allocate([107,58,116,101,115,116,95,107,95,99,111,100,101,0],"i8",ALLOC_NORMAL);ya=allocate([107,32,99,111,100,101,32,114,101,116,117,114,110,101,100,32,119,114,111,110,103,32,118,97,108,117,101,32,102,111,114,32,108,111,110,103,32,48,120,70,70,70,46,46,46,70,70,70,0],"i8",ALLOC_NORMAL);
ub=allocate([45,70,70,70,70,70,70,70,70,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,52,50,0],"i8",ALLOC_NORMAL);Z=allocate([107,32,99,111,100,101,32,114,101,116,117,114,110,101,100,32,119,114,111,110,103,32,118,97,108,117,101,32,102,111,114,32,108,111,110,103,32,45,48,120,70,70,70,46,46,48,48,48,48,52,50,0],"i8",ALLOC_NORMAL);qa=allocate(1,"i32",ALLOC_NORMAL);M=allocate([116,101,115,116,0],"i8",ALLOC_NORMAL);na=allocate([97,115,99,105,105,0],"i8",ALLOC_NORMAL);nb=allocate([117,58,116,101,115,
116,95,117,95,99,111,100,101,0],"i8",ALLOC_NORMAL);ca=allocate([116,101,115,116,95,117,95,99,111,100,101,0],"i8",ALLOC_NORMAL);ua=allocate([117,32,99,111,100,101,32,114,101,116,117,114,110,101,100,32,119,114,111,110,103,32,118,97,108,117,101,32,102,111,114,32,117,39,116,101,115,116,39,0],"i8",ALLOC_NORMAL);Ea=allocate([117,35,58,116,101,115,116,95,117,95,99,111,100,101,0],"i8",ALLOC_NORMAL);Eb=allocate([117,35,32,99,111,100,101,32,114,101,116,117,114,110,101,100,32,119,114,111,110,103,32,118,97,108,
117,101,115,32,102,111,114,32,117,39,116,101,115,116,39,0],"i8",ALLOC_NORMAL);zb=allocate([244,138,175,141,0],"i8",ALLOC_NORMAL);va=allocate([116,101,115,116,95,119,105,100,101,99,104,97,114,0],"i8",ALLOC_NORMAL);xa=allocate([119,105,100,101,32,115,116,114,105,110,103,32,97,110,100,32,117,116,102,56,32,115,116,114,105,110,103,32,104,97,118,101,32,100,105,102,102,101,114,101,110,116,32,108,101,110,103,116,104,0],"i8",ALLOC_NORMAL);V=allocate([119,105,100,101,32,115,116,114,105,110,103,32,97,110,100,
32,117,116,102,56,32,115,116,114,105,110,103,32,97,114,101,32,100,105,102,102,101,114,101,110,116,115,0],"i8",ALLOC_NORMAL);sa=allocate([124,58,116,101,115,116,95,101,109,112,116,121,95,97,114,103,112,97,114,115,101,0],"i8",ALLOC_NORMAL);pa=allocate(4,"i8*",ALLOC_NORMAL);fb=allocate([115,124,115,58,116,101,115,116,95,105,110,99,114,101,109,101,110,116,97,108,101,110,99,111,100,101,114,0],"i8",ALLOC_NORMAL);ma=allocate([115,124,115,58,116,101,115,116,95,105,110,99,114,101,109,101,110,116,97,108,100,
101,99,111,100,101,114,0],"i8",ALLOC_NORMAL);sb=allocate([0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,-1,0,0,0,1,0,0,0,-1,0,0,0,2,0,0,0,2,0,0,0,1,0,0,0,-2,0,0,0,2,0,0,0,-1,0,0,0,3,0,0,0,2,0,0,0,1,0,0,0,-3,0,0,0,2,0,0,0,-1,0,0,0,4,0,0,0,3,0,0,0,1,0,0,0,-4,0,0,0,3,0,0,0,-1,0,0,0,32767,0,0,0,15,0,0,0,1,0,0,0,-32767,0,0,0,15,0,0,0,-1,0,0,0,65535,0,0,0,16,0,0,0,1,0,0,0,-65535,0,0,0,16,0,0,0,-1,0,0,0,268435455,0,0,0,28,0,0,0,1,0,0,0,-268435455,0,0,0,28,0,0,0,-1,0,0,0],["i32",0,0,0,"i32",0,0,0,"i32",
0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",
0,0,0],ALLOC_NORMAL);mb=allocate([116,101,115,116,95,108,111,110,103,95,110,117,109,98,105,116,115,0],"i8",ALLOC_NORMAL);yb=allocate([119,114,111,110,103,32,114,101,115,117,108,116,32,102,111,114,32,95,80,121,76,111,110,103,95,78,117,109,66,105,116,115,0],"i8",ALLOC_NORMAL);Nb=allocate([119,114,111,110,103,32,114,101,115,117,108,116,32,102,111,114,32,95,80,121,76,111,110,103,95,83,105,103,110,0],"i8",ALLOC_NORMAL);Ib=allocate([79,105,58,114,97,105,115,101,95,101,120,99,101,112,116,105,111,110,0],
"i8",ALLOC_NORMAL);Db=allocate([97,110,32,101,120,99,101,112,116,105,111,110,32,99,108,97,115,115,32,105,115,32,114,101,113,117,105,114,101,100,0],"i8",ALLOC_NORMAL);Ub=allocate(1,"i32",ALLOC_NORMAL);Tb=allocate([80,121,68,97,116,101,84,105,109,101,95,67,65,80,73,32,115,111,109,101,104,111,119,32,105,110,105,116,105,97,108,105,122,101,100,0],"i8",ALLOC_NORMAL);qb=allocate([100,97,116,101,116,105,109,101,46,100,97,116,101,116,105,109,101,95,67,65,80,73,0],"i8",ALLOC_NORMAL);Mb=allocate([37,100,0],
"i8",ALLOC_NORMAL);Hb=allocate([49,0],"i8",ALLOC_NORMAL);Wb=allocate([37,100,32,102,97,105,108,101,100,32,97,116,32,49,0],"i8",ALLOC_NORMAL);ea=allocate([37,108,100,0],"i8",ALLOC_NORMAL);Qb=allocate([37,108,100,32,102,97,105,108,101,100,32,97,116,32,49,0],"i8",ALLOC_NORMAL);Bb=allocate([37,122,100,0],"i8",ALLOC_NORMAL);ic=allocate([37,122,100,32,102,97,105,108,101,100,32,97,116,32,49,0],"i8",ALLOC_NORMAL);Vb=allocate([37,117,0],"i8",ALLOC_NORMAL);Oa=allocate([37,117,32,102,97,105,108,101,100,32,97,
116,32,49,0],"i8",ALLOC_NORMAL);eb=allocate([37,108,117,0],"i8",ALLOC_NORMAL);Ob=allocate([37,108,117,32,102,97,105,108,101,100,32,97,116,32,49,0],"i8",ALLOC_NORMAL);Sa=allocate([37,122,117,0],"i8",ALLOC_NORMAL);Yb=allocate([37,122,117,32,102,97,105,108,101,100,32,97,116,32,49,0],"i8",ALLOC_NORMAL);xb=allocate([37,108,108,117,0],"i8",ALLOC_NORMAL);Xb=allocate([37,108,108,117,32,102,97,105,108,101,100,32,97,116,32,49,0],"i8",ALLOC_NORMAL);lb=allocate([37,108,108,100,0],"i8",ALLOC_NORMAL);fc=allocate([37,
108,108,100,32,102,97,105,108,101,100,32,97,116,32,49,0],"i8",ALLOC_NORMAL);jc=allocate([116,101,115,116,95,115,116,114,105,110,103,95,102,114,111,109,95,102,111,114,109,97,116,0],"i8",ALLOC_NORMAL);Pb=allocate([99,97,112,115,117,108,101,32,110,97,109,101,0],"i8",ALLOC_NORMAL);nc=allocate([99,97,112,115,117,108,101,32,112,111,105,110,116,101,114,0],"i8",ALLOC_NORMAL);rb=allocate([99,97,112,115,117,108,101,32,99,111,110,116,101,120,116,0],"i8",ALLOC_NORMAL);fa=allocate(1,"i8*",ALLOC_NORMAL);tb=allocate(1,
"i32",ALLOC_NORMAL);Jb=allocate([99,111,110,116,101,120,116,32,100,105,100,32,110,111,116,32,109,97,116,99,104,32,105,110,32,100,101,115,116,114,117,99,116,111,114,33,0],"i8",ALLOC_NORMAL);lc=allocate([100,101,115,116,114,117,99,116,111,114,32,100,105,100,32,110,111,116,32,109,97,116,99,104,32,105,110,32,100,101,115,116,114,117,99,116,111,114,33,32,32,40,119,111,97,104,33,41,0],"i8",ALLOC_NORMAL);Rb=allocate([110,97,109,101,32,100,105,100,32,110,111,116,32,109,97,116,99,104,32,105,110,32,100,101,
115,116,114,117,99,116,111,114,33,0],"i8",ALLOC_NORMAL);Ba=allocate([112,111,105,110,116,101,114,32,100,105,100,32,110,111,116,32,109,97,116,99,104,32,105,110,32,100,101,115,116,114,117,99,116,111,114,33,0],"i8",ALLOC_NORMAL);Fb=allocate([95,115,111,99,107,101,116,46,67,65,80,73,0],"i8",ALLOC_NORMAL);vc=allocate([95,115,111,99,107,101,116,0],"i8",ALLOC_NORMAL);dc=allocate([67,65,80,73,0],"i8",ALLOC_NORMAL);kc=allocate([95,99,117,114,115,101,115,46,95,67,95,65,80,73,0],"i8",ALLOC_NORMAL);Pa=allocate([95,
99,117,114,115,101,115,0],"i8",ALLOC_NORMAL);Ua=allocate([95,67,95,65,80,73,0],"i8",ALLOC_NORMAL);Ab=allocate([100,97,116,101,116,105,109,101,0],"i8",ALLOC_NORMAL);oc=allocate([100,97,116,101,116,105,109,101,95,67,65,80,73,0],"i8",ALLOC_NORMAL);tc=allocate([100,101,115,116,114,117,99,116,111,114,32,110,111,116,32,99,97,108,108,101,100,33,0],"i8",ALLOC_NORMAL);ac=allocate([105,103,110,111,114,101,100,0],"i8",ALLOC_NORMAL);$b=allocate([116,104,101,32,119,114,111,110,103,32,110,97,109,101,0],"i8",ALLOC_NORMAL);
Dc=allocate([80,121,67,97,112,115,117,108,101,95,71,101,116,80,111,105,110,116,101,114,32,115,104,111,117,108,100,32,104,97,118,101,32,102,97,105,108,101,100,32,98,117,116,32,100,105,100,32,110,111,116,33,0],"i8",ALLOC_NORMAL);Kc=allocate([80,121,67,97,112,115,117,108,101,95,71,101,116,80,111,105,110,116,101,114,32,115,104,111,117,108,100,32,110,111,116,32,104,97,118,101,32,114,101,116,117,114,110,101,100,32,116,104,101,32,105,110,116,101,114,110,97,108,32,112,111,105,110,116,101,114,33,0],"i8",ALLOC_NORMAL);
Ac=allocate([80,121,67,97,112,115,117,108,101,95,71,101,116,80,111,105,110,116,101,114,32,115,104,111,117,108,100,32,104,97,118,101,32,114,101,116,117,114,110,101,100,32,78,85,76,76,32,112,111,105,110,116,101,114,32,98,117,116,32,100,105,100,32,110,111,116,33,0],"i8",ALLOC_NORMAL);mc=allocate([100,101,115,116,114,117,99,116,111,114,32,99,97,108,108,101,100,32,119,104,101,110,32,105,116,32,115,104,111,117,108,100,32,110,111,116,32,104,97,118,101,32,98,101,101,110,33,0],"i8",ALLOC_NORMAL);Oc=allocate(256,
"i8",ALLOC_NORMAL);Fc=allocate([37,115,32,109,111,100,117,108,101,58,32,34,37,115,34,32,97,116,116,114,105,98,117,116,101,58,32,34,37,115,34,0],"i8",ALLOC_NORMAL);Pc=allocate([80,121,67,97,112,115,117,108,101,95,71,101,116,80,111,105,110,116,101,114,32,114,101,116,117,114,110,101,100,32,78,85,76,76,32,117,110,101,120,112,101,99,116,101,100,108,121,33,0],"i8",ALLOC_NORMAL);hd=allocate([119,101,101,98,108,101,115,32,119,111,98,98,108,101,32,98,117,116,32,116,104,101,121,32,100,111,110,39,116,32,102,
97,108,108,32,100,111,119,110,0],"i8",ALLOC_NORMAL);Id=allocate([80,121,67,97,112,115,117,108,101,95,71,101,116,80,111,105,110,116,101,114,32,115,104,111,117,108,100,32,110,111,116,32,104,97,118,101,32,114,101,116,117,114,110,101,100,32,105,116,115,32,105,110,116,101,114,110,97,108,32,112,111,105,110,116,101,114,33,0],"i8",ALLOC_NORMAL);Rc=allocate([116,101,115,116,95,99,97,112,115,117,108,101,0],"i8",ALLOC_NORMAL);Jd=allocate([79,79,58,116,114,97,99,101,98,97,99,107,95,112,114,105,110,116,0],"i8",
ALLOC_NORMAL);Vd=allocate([115,115,105,58,99,111,100,101,95,110,101,119,101,109,112,116,121,0],"i8",ALLOC_NORMAL);Lc=allocate([115,124,115,79,79,58,109,97,107,101,95,101,120,99,101,112,116,105,111,110,95,119,105,116,104,95,100,111,99,0],"i8",ALLOC_NORMAL);Zc=allocate(20,"i8*",ALLOC_NORMAL);Mc=allocate([110,97,109,101,0],"i8",ALLOC_NORMAL);Kd=allocate([100,111,99,0],"i8",ALLOC_NORMAL);uc=allocate([98,97,115,101,0],"i8",ALLOC_NORMAL);Gb=allocate([100,105,99,116,0],"i8",ALLOC_NORMAL);oa=allocate([114,
97,105,115,101,95,101,120,99,101,112,116,105,111,110,0],"i8",ALLOC_NORMAL);Ja=allocate([116,101,115,116,95,99,111,110,102,105,103,0],"i8",ALLOC_NORMAL);vd=allocate([116,101,115,116,95,100,97,116,101,116,105,109,101,95,99,97,112,105,0],"i8",ALLOC_NORMAL);cd=allocate([116,101,115,116,95,108,105,115,116,95,97,112,105,0],"i8",ALLOC_NORMAL);gc=allocate([116,101,115,116,95,100,105,99,116,95,105,116,101,114,97,116,105,111,110,0],"i8",ALLOC_NORMAL);Sc=allocate([116,101,115,116,95,108,97,122,121,95,104,97,
115,104,95,105,110,104,101,114,105,116,97,110,99,101,0],"i8",ALLOC_NORMAL);yc=allocate([116,101,115,116,95,98,114,111,107,101,110,95,109,101,109,111,114,121,118,105,101,119,0],"i8",ALLOC_NORMAL);id=allocate([116,101,115,116,95,101,109,112,116,121,95,97,114,103,112,97,114,115,101,0],"i8",ALLOC_NORMAL);$c=allocate([116,101,115,116,95,110,117,108,108,95,115,116,114,105,110,103,115,0],"i8",ALLOC_NORMAL);Pd=allocate([116,101,115,116,95,119,105,116,104,95,100,111,99,115,116,114,105,110,103,0],"i8",ALLOC_NORMAL);
jd=allocate([84,104,105,115,32,105,115,32,97,32,112,114,101,116,116,121,32,110,111,114,109,97,108,32,100,111,99,115,116,114,105,110,103,46,0],"i8",ALLOC_NORMAL);ie=allocate([103,101,116,97,114,103,115,95,116,117,112,108,101,0],"i8",ALLOC_NORMAL);Ld=allocate([103,101,116,97,114,103,115,95,107,101,121,119,111,114,100,115,0],"i8",ALLOC_NORMAL);Uc=allocate([103,101,116,97,114,103,115,95,98,0],"i8",ALLOC_NORMAL);kd=allocate([103,101,116,97,114,103,115,95,66,0],"i8",ALLOC_NORMAL);Qd=allocate([103,101,116,
97,114,103,115,95,104,0],"i8",ALLOC_NORMAL);Md=allocate([103,101,116,97,114,103,115,95,72,0],"i8",ALLOC_NORMAL);Nd=allocate([103,101,116,97,114,103,115,95,73,0],"i8",ALLOC_NORMAL);Bc=allocate([103,101,116,97,114,103,115,95,107,0],"i8",ALLOC_NORMAL);dd=allocate([103,101,116,97,114,103,115,95,105,0],"i8",ALLOC_NORMAL);ge=allocate([103,101,116,97,114,103,115,95,108,0],"i8",ALLOC_NORMAL);Ed=allocate([103,101,116,97,114,103,115,95,110,0],"i8",ALLOC_NORMAL);pd=allocate([103,101,116,97,114,103,115,95,76,
0],"i8",ALLOC_NORMAL);Xd=allocate([103,101,116,97,114,103,115,95,75,0],"i8",ALLOC_NORMAL);Ec=allocate([99,111,100,101,99,95,105,110,99,114,101,109,101,110,116,97,108,101,110,99,111,100,101,114,0],"i8",ALLOC_NORMAL);qd=allocate([99,111,100,101,99,95,105,110,99,114,101,109,101,110,116,97,108,100,101,99,111,100,101,114,0],"i8",ALLOC_NORMAL);Ad=allocate([116,114,97,99,101,98,97,99,107,95,112,114,105,110,116,0],"i8",ALLOC_NORMAL);ld=allocate([99,111,100,101,95,110,101,119,101,109,112,116,121,0],"i8",ALLOC_NORMAL);
ne=allocate([109,97,107,101,95,101,120,99,101,112,116,105,111,110,95,119,105,116,104,95,100,111,99,0],"i8",ALLOC_NORMAL);Cb=allocate([0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],["i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,
"i8","i8","i8","i8","i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8","i8","i8","i8","i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8","i8","i8","i8","i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8","i8","i8","i8","i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8","i8","i8","i8","i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",
0,0,0,"i32",0,0,0,"i8","i8","i8","i8","i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8","i8","i8","i8","i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8","i8","i8","i8","i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8","i8","i8","i8","i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8","i8","i8","i8","i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",
0,0,0,"i32",0,0,0,"i8","i8","i8","i8","i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8","i8","i8","i8","i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8","i8","i8","i8","i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8","i8","i8","i8","i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",
0,0,0,"i32",0,0,0,"i8","i8","i8","i8","i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8","i8","i8","i8","i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8","i8","i8","i8","i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8","i8","i8","i8","i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8","i8","i8","i8","i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",
0,0,0,"i32",0,0,0,"i8","i8","i8","i8","i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8","i8","i8","i8","i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8","i8","i8","i8","i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8","i8","i8","i8","i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8","i8","i8","i8","i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",
0,0,0,"i32",0,0,0,"i8","i8","i8","i8","i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8","i8","i8","i8","i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8","i8","i8","i8","i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8","i8","i8","i8","i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8","i8","i8","i8","i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",
0,0,0,"i32",0,0,0,"i8","i8","i8","i8","i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8","i8","i8","i8","i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8","i8","i8","i8","i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8","i8","i8","i8","i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8","i8","i8","i8","i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",
0,0,0,"i32",0,0,0,"i8","i8","i8","i8","i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8","i8","i8","i8","i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8","i8","i8","i8","i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8","i8","i8","i8","i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8"],ALLOC_NORMAL);
Fd=allocate([84,95,66,79,79,76,0],"i8",ALLOC_NORMAL);ad=allocate([84,95,66,89,84,69,0],"i8",ALLOC_NORMAL);Yd=allocate([84,95,85,66,89,84,69,0],"i8",ALLOC_NORMAL);wd=allocate([84,95,83,72,79,82,84,0],"i8",ALLOC_NORMAL);md=allocate([84,95,85,83,72,79,82,84,0],"i8",ALLOC_NORMAL);Bd=allocate([84,95,73,78,84,0],"i8",ALLOC_NORMAL);rd=allocate([84,95,85,73,78,84,0],"i8",ALLOC_NORMAL);sc=allocate([84,95,76,79,78,71,0],"i8",ALLOC_NORMAL);Cd=allocate([84,95,85,76,79,78,71,0],"i8",ALLOC_NORMAL);nd=allocate([84,
95,70,76,79,65,84,0],"i8",ALLOC_NORMAL);oe=allocate([84,95,68,79,85,66,76,69,0],"i8",ALLOC_NORMAL);Zb=allocate([84,95,83,84,82,73,78,71,95,73,78,80,76,65,67,69,0],"i8",ALLOC_NORMAL);pe=allocate([84,95,76,79,78,71,76,79,78,71,0],"i8",ALLOC_NORMAL);Rd=allocate([84,95,85,76,79,78,71,76,79,78,71,0],"i8",ALLOC_NORMAL);pb=allocate([0,0,0,0,14,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,
0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,0,0,0,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,28,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,36,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,0,0,0,44,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,0,0,0,52,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,0,0,0,60,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],["i8*",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i8*",
0,0,0,"i8*",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"i32",
0,0,0,"i32",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8"],ALLOC_NORMAL);W=allocate([124,98,98,66,104,72,105,73,108,107,102,100,115,35,76,75,0],"i8",ALLOC_NORMAL);Hc=allocate(60,"i8*",ALLOC_NORMAL);
ed=allocate([115,116,114,105,110,103,32,116,111,111,32,108,111,110,103,0],"i8",ALLOC_NORMAL);xd=allocate([116,101,115,116,95,115,116,114,117,99,116,109,101,109,98,101,114,115,84,121,112,101,0],"i8",ALLOC_NORMAL);Qc=allocate([84,121,112,101,32,99,111,110,116,97,105,110,105,110,103,32,97,108,108,32,115,116,114,117,99,116,109,101,109,98,101,114,32,116,121,112,101,115,0],"i8",ALLOC_NORMAL);Gc=allocate([1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,68,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],["i32",0,0,0,"%struct._typeobject*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i32",0,0,0,"i32",0,0,0,"void (%struct.PyObject*)*",0,0,0,"i32 (%struct.PyObject*, %struct.FILE*, i32)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, i8*)*",
0,0,0,"i32 (%struct.PyObject*, i8*, %struct.PyObject*)*",0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*)*",0,0,0,"%struct.PyNumberMethods*",0,0,0,"%struct.PySequenceMethods*",0,0,0,"%struct.PyMappingMethods*",0,0,0,"i32 (%struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",
0,0,0,"%struct.PyBufferProcs*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i32 (%struct.PyObject*, i32 (%struct.PyObject*, i8*)*, i8*)*",0,0,0,"i32 (%struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*, i32)*",0,0,0,"i32",0,0,0,"%struct.PyObject* (%struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*)*",0,0,0,"%struct.PyMethodDef*",0,0,0,"%struct.PyMemberDef*",0,0,0,"%struct.PyGetSetDef*",0,0,0,"%struct._typeobject*",0,0,0,"%struct.PyObject*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",
0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct._typeobject*, i32)*",0,0,0,"%struct.PyObject* (%struct._typeobject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8"],ALLOC_NORMAL);Tc=
allocate([95,116,101,115,116,99,97,112,105,0],"i8",ALLOC_NORMAL);ue=allocate([95,116,101,115,116,95,115,116,114,117,99,116,109,101,109,98,101,114,115,84,121,112,101,0],"i8",ALLOC_NORMAL);Le=allocate([67,72,65,82,95,77,65,88,0],"i8",ALLOC_NORMAL);Vc=allocate([67,72,65,82,95,77,73,78,0],"i8",ALLOC_NORMAL);ae=allocate([85,67,72,65,82,95,77,65,88,0],"i8",ALLOC_NORMAL);Ic=allocate([83,72,82,84,95,77,65,88,0],"i8",ALLOC_NORMAL);je=allocate([83,72,82,84,95,77,73,78,0],"i8",ALLOC_NORMAL);ve=allocate([85,
83,72,82,84,95,77,65,88,0],"i8",ALLOC_NORMAL);od=allocate([73,78,84,95,77,65,88,0],"i8",ALLOC_NORMAL);Gd=allocate([73,78,84,95,77,73,78,0],"i8",ALLOC_NORMAL);Wc=allocate([85,73,78,84,95,77,65,88,0],"i8",ALLOC_NORMAL);Fe=allocate([76,79,78,71,95,77,65,88,0],"i8",ALLOC_NORMAL);Kb=allocate([76,79,78,71,95,77,73,78,0],"i8",ALLOC_NORMAL);ze=allocate([85,76,79,78,71,95,77,65,88,0],"i8",ALLOC_NORMAL);bc=allocate([70,76,84,95,77,65,88,0],"i8",ALLOC_NORMAL);Ge=allocate([70,76,84,95,77,73,78,0],"i8",ALLOC_NORMAL);
He=allocate([68,66,76,95,77,65,88,0],"i8",ALLOC_NORMAL);Xc=allocate([68,66,76,95,77,73,78,0],"i8",ALLOC_NORMAL);qe=allocate([76,76,79,78,71,95,77,65,88,0],"i8",ALLOC_NORMAL);he=allocate([76,76,79,78,71,95,77,73,78,0],"i8",ALLOC_NORMAL);Ie=allocate([85,76,76,79,78,71,95,77,65,88,0],"i8",ALLOC_NORMAL);be=allocate([80,89,95,83,83,73,90,69,95,84,95,77,65,88,0],"i8",ALLOC_NORMAL);rc=allocate([80,89,95,83,83,73,90,69,95,84,95,77,73,78,0],"i8",ALLOC_NORMAL);ce=allocate([83,73,90,69,79,70,95,80,89,71,67,
95,72,69,65,68,0],"i8",ALLOC_NORMAL);Zd=allocate([95,116,101,115,116,99,97,112,105,46,101,114,114,111,114,0],"i8",ALLOC_NORMAL);Hd=allocate([101,114,114,111,114,0],"i8",ALLOC_NORMAL);HEAP[n+12]=m;HEAP[n+24]=g+8;HEAP[n+72]=g+10;HEAP[n+156]=g+12;HEAP[u+16]=g+14;HEAP[w+12]=v;HEAP[w+24]=g+8;HEAP[w+72]=g+10;HEAP[w+80]=u;HEAP[w+156]=g+12;HEAP[Ra]=Ia;HEAP[Ra+4]=Fa;HEAP[Ra+8]=$a;HEAP[Ra+12]=Wa;HEAP[Ra+16]=Y;HEAP[Zc]=Mc;HEAP[Zc+4]=Kd;HEAP[Zc+8]=uc;HEAP[Zc+12]=Gb;HEAP[Cb]=oa;HEAP[Cb+4]=g+16;HEAP[Cb+16]=Ja;
HEAP[Cb+20]=g+18;HEAP[Cb+32]=vd;HEAP[Cb+36]=g+20;HEAP[Cb+48]=cd;HEAP[Cb+52]=g+22;HEAP[Cb+64]=gc;HEAP[Cb+68]=g+24;HEAP[Cb+80]=Sc;HEAP[Cb+84]=g+26;HEAP[Cb+96]=yc;HEAP[Cb+100]=g+28;HEAP[Cb+112]=B;HEAP[Cb+116]=g+30;HEAP[Cb+128]=ja;HEAP[Cb+132]=g+32;HEAP[Cb+144]=mb;HEAP[Cb+148]=g+34;HEAP[Cb+160]=za;HEAP[Cb+164]=g+36;HEAP[Cb+176]=id;HEAP[Cb+180]=g+38;HEAP[Cb+192]=$c;HEAP[Cb+196]=g+40;HEAP[Cb+208]=jc;HEAP[Cb+212]=g+42;HEAP[Cb+224]=Pd;HEAP[Cb+228]=g+44;HEAP[Cb+236]=jd;HEAP[Cb+240]=ie;HEAP[Cb+244]=g+46;HEAP[Cb+
256]=Ld;HEAP[Cb+260]=g+48;HEAP[Cb+272]=Uc;HEAP[Cb+276]=g+50;HEAP[Cb+288]=kd;HEAP[Cb+292]=g+52;HEAP[Cb+304]=Qd;HEAP[Cb+308]=g+54;HEAP[Cb+320]=Md;HEAP[Cb+324]=g+56;HEAP[Cb+336]=Nd;HEAP[Cb+340]=g+58;HEAP[Cb+352]=Bc;HEAP[Cb+356]=g+60;HEAP[Cb+368]=dd;HEAP[Cb+372]=g+62;HEAP[Cb+384]=ge;HEAP[Cb+388]=g+64;HEAP[Cb+400]=Ed;HEAP[Cb+404]=g+66;HEAP[Cb+416]=pd;HEAP[Cb+420]=g+68;HEAP[Cb+432]=Xd;HEAP[Cb+436]=g+70;HEAP[Cb+448]=z;HEAP[Cb+452]=g+72;HEAP[Cb+464]=Ca;HEAP[Cb+468]=g+74;HEAP[Cb+480]=ha;HEAP[Cb+484]=g+76;
HEAP[Cb+496]=Ec;HEAP[Cb+500]=g+78;HEAP[Cb+512]=qd;HEAP[Cb+516]=g+80;HEAP[Cb+528]=ca;HEAP[Cb+532]=g+82;HEAP[Cb+544]=va;HEAP[Cb+548]=g+84;HEAP[Cb+560]=Rc;HEAP[Cb+564]=g+86;HEAP[Cb+576]=Ad;HEAP[Cb+580]=g+88;HEAP[Cb+592]=ld;HEAP[Cb+596]=g+90;HEAP[Cb+608]=ne;HEAP[Cb+612]=g+92;HEAP[pb]=Fd;HEAP[pb+20]=ad;HEAP[pb+40]=Yd;HEAP[pb+60]=wd;HEAP[pb+80]=md;HEAP[pb+100]=Bd;HEAP[pb+120]=rd;HEAP[pb+140]=sc;HEAP[pb+160]=Cd;HEAP[pb+180]=nd;HEAP[pb+200]=oe;HEAP[pb+220]=Zb;HEAP[pb+240]=pe;HEAP[pb+260]=Rd;HEAP[Hc]=Fd;HEAP[Hc+
4]=ad;HEAP[Hc+8]=Yd;HEAP[Hc+12]=wd;HEAP[Hc+16]=md;HEAP[Hc+20]=Bd;HEAP[Hc+24]=rd;HEAP[Hc+28]=sc;HEAP[Hc+32]=Cd;HEAP[Hc+36]=nd;HEAP[Hc+40]=oe;HEAP[Hc+44]=Zb;HEAP[Hc+48]=pe;HEAP[Hc+52]=Rd;HEAP[Gc+12]=xd;HEAP[Gc+24]=g+94;HEAP[Gc+72]=g+10;HEAP[Gc+76]=g+96;HEAP[Gc+88]=Qc;HEAP[Gc+120]=pb;HEAP[Gc+156]=g+98}var c={arguments:[]};Runtime.QUANTUM_SIZE=4;var d,f,h,j,k,l,m,n,o,p,q,r,t,s,u,v,w,x,y,B,A,C,G,F,E,N,Q,I,J,P,D,T,L,$,R,K,H,S,U,z,aa,ja,la,da,Ka,Ma,wa,ib,cb,db,Da,gb,Xa,Ca,Za,Va,Ga,ha,Na,jb,hb,Qa,Ha,Ra,Ia,
Fa,$a,Wa,Y,kb,ra,Ta,ia,ba,Ya,ta,O,wb,bb,vb,ka,za,Aa,La,ya,ub,Z,qa,M,na,nb,ca,ua,Ea,Eb,zb,va,xa,V,sa,pa,fb,ma,sb,mb,yb,Nb,Ib,Db,Ub,Tb,qb,Mb,Hb,Wb,ea,Qb,Bb,ic,Vb,Oa,eb,Ob,Sa,Yb,xb,Xb,lb,fc,jc,Pb,nc,rb,fa,tb,Jb,lc,Rb,Ba,Fb,vc,dc,kc,Pa,Ua,Ab,oc,tc,ac,$b,Dc,Kc,Ac,mc,Oc,Fc,Pc,hd,Id,Rc,Jd,Vd,Lc,Zc,Mc,Kd,uc,Gb,oa,Ja,vd,cd,gc,Sc,yc,id,$c,Pd,jd,ie,Ld,Uc,kd,Qd,Md,Nd,Bc,dd,ge,Ed,pd,Xd,Ec,qd,Ad,ld,ne,Cb,Fd,ad,Yd,wd,md,Bd,rd,sc,Cd,nd,oe,Zb,pe,Rd,pb,W,Hc,ed,xd,Qc,Gc,Tc,ue,Le,Vc,ae,Ic,je,ve,od,Gd,Wc,Fe,Kb,ze,bc,
Ge,He,Xc,qe,he,Ie,be,rc,ce,Zd,Hd;c._init_testcapi=function(){var a;for(a=-1;;)switch(a){case -1:var b;b=_Py_InitModule4(Tc,Cb,0,0,1013);a=b==0?2:1;break;case 1:HEAP[n+4]=_PyType_Type;HEAP[Gc+4]=_PyType_Type;HEAP[Gc]+=1;_PyModule_AddObject(b,ue,Gc);a=_PyInt_FromLong(127);_PyModule_AddObject(b,Le,a);a=_PyInt_FromLong(-128);_PyModule_AddObject(b,Vc,a);a=_PyInt_FromLong(255);_PyModule_AddObject(b,ae,a);a=_PyInt_FromLong(32767);_PyModule_AddObject(b,Ic,a);a=_PyInt_FromLong(-32768);_PyModule_AddObject(b,
je,a);a=_PyInt_FromLong(65535);_PyModule_AddObject(b,ve,a);a=_PyLong_FromLong(2147483647);_PyModule_AddObject(b,od,a);a=_PyLong_FromLong(-2147483648);_PyModule_AddObject(b,Gd,a);a=_PyLong_FromUnsignedLong(-1);_PyModule_AddObject(b,Wc,a);a=_PyInt_FromLong(2147483647);_PyModule_AddObject(b,Fe,a);a=_PyInt_FromLong(-2147483648);_PyModule_AddObject(b,Kb,a);a=_PyLong_FromUnsignedLong(-1);_PyModule_AddObject(b,ze,a);a=_PyFloat_FromDouble(3.4028234663852886E38);_PyModule_AddObject(b,bc,a);a=_PyFloat_FromDouble(1.1754943508222875E-38);
_PyModule_AddObject(b,Ge,a);a=_PyFloat_FromDouble(1.7976931348623157E308);_PyModule_AddObject(b,He,a);a=_PyFloat_FromDouble(2.2250738585072014E-308);_PyModule_AddObject(b,Xc,a);a=_PyLong_FromLongLong(9223372036854775E3);_PyModule_AddObject(b,qe,a);a=_PyLong_FromLongLong(-9223372036854775E3);_PyModule_AddObject(b,he,a);a=_PyLong_FromUnsignedLongLong(-1);_PyModule_AddObject(b,Ie,a);a=_PyInt_FromSsize_t(2147483647);_PyModule_AddObject(b,be,a);a=_PyInt_FromSsize_t(-2147483648);_PyModule_AddObject(b,rc,
a);a=_PyInt_FromSsize_t(12);_PyModule_AddObject(b,ce,a);a=_PyErr_NewException(Zd,0,0);HEAP[f]=a;HEAP[HEAP[f]]+=1;_PyModule_AddObject(b,Hd,HEAP[f]);a=2;break;case 2:return;default:assert(0,"bad label: "+a)}};FUNCTION_TABLE=FUNCTION_TABLE.concat([0,0,function(a){return e(B,a)},0,function(a){return e(z,a)},0,b,0,_PyObject_Free,0,_PyObject_GenericGetAttr,0,_PyType_GenericNew,0,function(){_PyErr_SetString(HEAP[f],s);return-1},0,function(a,b){var c=STACKTOP;STACKTOP+=8;_memset(c,0,8);var d;for(d=-1;;)switch(d){case -1:var e,
f=c,g,h,j=c+4,k;d=_PyArg_ParseTuple(b,Ib,allocate([f,0,0,0,j,0,0,0],["%struct.PyObject**",0,0,0,"i32*",0,0,0],ALLOC_STACK))==0?1:2;break;case 1:e=0;d=18;break;case 2:d=HEAP[HEAP[f]+4]!=_PyClass_Type?3:6;break;case 3:d=HEAP[HEAP[HEAP[f]+4]+84]>=0?5:4;break;case 4:d=(HEAP[HEAP[f]+84]&1073741824)==0?5:6;break;case 5:_PyErr_Format(HEAP[_PyExc_TypeError],Db,allocate(1,"i32",ALLOC_STACK));e=0;d=18;break;case 6:g=d=_PyTuple_New(HEAP[j]);d=d==0?7:8;break;case 7:e=0;d=18;break;case 8:k=0;d=14;break;case 9:h=
_PyInt_FromLong(k);var l=g;d=h==0?10:13;break;case 10:HEAP[g]=HEAP[l]-1;d=HEAP[g]==0?11:12;break;case 11:FUNCTION_TABLE[HEAP[HEAP[g+4]+24]](g);d=12;break;case 12:e=0;d=18;break;case 13:HEAP[l+12+k*4]=h;k+=1;d=14;break;case 14:d=k<HEAP[j]?9:15;break;case 15:_PyErr_SetObject(HEAP[f],g);HEAP[g]-=1;d=HEAP[g]==0?16:17;break;case 16:FUNCTION_TABLE[HEAP[HEAP[g+4]+24]](g);d=17;break;case 17:e=0;d=18;break;case 18:return STACKTOP=c,e;default:assert(0,"bad label: "+d)}},0,function(){HEAP[__Py_NoneStruct]+=
1;return __Py_NoneStruct},0,function(){var a;for(a=-1;;)switch(a){case -1:var b,c=HEAP[Ub];a=HEAP[d]!=0?1:4;break;case 1:a=c!=0?2:3;break;case 2:HEAP[__Py_NoneStruct]+=1;b=__Py_NoneStruct;a=7;break;case 3:_PyErr_SetString(HEAP[_PyExc_AssertionError],Tb);b=0;a=7;break;case 4:HEAP[Ub]=c+1;a=_PyCapsule_Import(qb,0);HEAP[d]=a;a=HEAP[d]!=0?5:6;break;case 5:HEAP[__Py_NoneStruct]+=1;b=__Py_NoneStruct;a=7;break;case 6:b=0;a=7;break;case 7:return b;default:assert(0,"bad label: "+a)}},0,function(){var a,b=
null;for(a=-1;;)switch(a){case -1:var c,d,e,g;d=_PyList_New(30);a=d==0?1:2;break;case 1:c=0;a=23;break;case 2:e=0;b=2;a=8;break;case 3:g=_PyInt_FromLong(e);var h=d;a=g==0?4:7;break;case 4:HEAP[d]=HEAP[h]-1;a=HEAP[d]==0?5:6;break;case 5:FUNCTION_TABLE[HEAP[HEAP[d+4]+24]](d);a=6;break;case 6:c=0;a=23;break;case 7:HEAP[HEAP[h+12]+4*e]=g;var j=e+1;e=j;b=7;a=8;break;case 8:a=(b==7?j:0)<=29?3:9;break;case 9:e=_PyList_Reverse(d);a=e!=0?10:13;break;case 10:HEAP[d]-=1;a=HEAP[d]==0?11:12;break;case 11:FUNCTION_TABLE[HEAP[HEAP[d+
4]+24]](d);a=12;break;case 12:c=0;a=23;break;case 13:e=0;b=13;a=19;break;case 14:a=HEAP[HEAP[m+12]+4*e];a=HEAP[a+8]!=29-e?15:18;break;case 15:_PyErr_SetString(HEAP[f],k);HEAP[d]-=1;a=HEAP[d]==0?16:17;break;case 16:FUNCTION_TABLE[HEAP[HEAP[d+4]+24]](d);a=17;break;case 17:c=0;a=23;break;case 18:var l=e+1;e=l;b=18;a=19;break;case 19:var m=d;a=(b==18?l:0)<=29?14:20;break;case 20:HEAP[d]=HEAP[m]-1;a=HEAP[d]==0?21:22;break;case 21:FUNCTION_TABLE[HEAP[HEAP[d+4]+24]](d);a=22;break;case 22:HEAP[__Py_NoneStruct]+=
1;c=__Py_NoneStruct;a=23;break;case 23:return b=c;default:assert(0,"bad label: "+a)}},0,function(){var a,b=null;for(a=-1;;)switch(a){case -1:var c,d;d=0;b=-1;a=4;break;case 1:a:{var e=d;a=STACKTOP;STACKTOP+=12;_memset(a,0,12);for(var g=void 0,g=-1;;)switch(g){case -1:var h,j,k=a,m,n,o,p=a+4,q=a+8,r;h=e;m=HEAP[k]=0;o=_PyDict_New();g=o==0?1:2;break;case 1:j=-1;g=20;break;case 2:n=0;g=n<h?3:14;break;case 3:g=_PyInt_FromLong(n);HEAP[p]=g;_PyDict_SetItem(o,HEAP[p],HEAP[p]);g=HEAP[p];HEAP[g]-=1;g=HEAP[g]==
0?4:5;break;case 4:FUNCTION_TABLE[HEAP[HEAP[HEAP[p]+4]+24]](HEAP[p]);g=5;break;case 5:n+=1;g=n<h?3:14;break;case 6:m+=1;n=HEAP[HEAP[p]+8]+1;r=_PyInt_FromLong(n);g=r==0?7:8;break;case 7:j=-1;g=20;break;case 8:g=_PyDict_SetItem(o,HEAP[q],r)<0;HEAP[r]-=1;var s=HEAP[r]==0,g=g?9:12;break;case 9:g=s?10:11;break;case 10:FUNCTION_TABLE[HEAP[HEAP[r+4]+24]](r);g=11;break;case 11:j=-1;g=20;break;case 12:g=s?13:14;break;case 13:FUNCTION_TABLE[HEAP[HEAP[r+4]+24]](r);g=14;break;case 14:g=_PyDict_Next(o,k,q,p)!=
0?6:15;break;case 15:HEAP[o]-=1;g=HEAP[o]==0?16:17;break;case 16:FUNCTION_TABLE[HEAP[HEAP[o+4]+24]](o);g=17;break;case 17:g=m!=h?18:19;break;case 18:_PyErr_SetString(HEAP[f],l);j=-1;g=20;break;case 19:j=0;g=20;break;case 20:e=j;STACKTOP=a;a=e;break a;default:assert(0,"bad label: "+g)}a=void 0}a=a<0?2:3;break;case 2:c=0;a=6;break;case 3:var t=d+1;d=t;b=3;a=4;break;case 4:a=(b==3?t:0)<=199?1:5;break;case 5:HEAP[__Py_NoneStruct]+=1;c=__Py_NoneStruct;a=6;break;case 6:return b=c;default:assert(0,"bad label: "+
a)}},0,function(){var a;for(a=-1;;)switch(a){case -1:var b,c,d;c=n;a=HEAP[c+132]!=0?1:2;break;case 1:HEAP[__Py_NoneStruct]+=1;b=__Py_NoneStruct;a=24;break;case 2:d=__PyObject_New(c);a=d==0?3:4;break;case 3:_PyErr_Clear();_PyErr_SetString(HEAP[f],o);b=0;a=24;break;case 4:a=HEAP[c+132]!=0?5:8;break;case 5:_PyErr_SetString(HEAP[f],p);HEAP[d]-=1;a=HEAP[d]==0?6:7;break;case 6:FUNCTION_TABLE[HEAP[HEAP[d+4]+24]](d);a=7;break;case 7:b=0;a=24;break;case 8:a=_PyObject_Hash(d);a=a==-1?9:13;break;case 9:a=_PyErr_Occurred()!=
0?10:13;break;case 10:_PyErr_Clear();_PyErr_SetString(HEAP[f],q);HEAP[d]-=1;a=HEAP[d]==0?11:12;break;case 11:FUNCTION_TABLE[HEAP[HEAP[d+4]+24]](d);a=12;break;case 12:b=0;a=24;break;case 13:a=HEAP[c+132]==0?14:17;break;case 14:_PyErr_SetString(HEAP[f],r);HEAP[d]-=1;a=HEAP[d]==0?15:16;break;case 15:FUNCTION_TABLE[HEAP[HEAP[d+4]+24]](d);a=16;break;case 16:b=0;a=24;break;case 17:a=HEAP[c+60]!=HEAP[_PyType_Type+60]?18:21;break;case 18:_PyErr_SetString(HEAP[f],t);HEAP[d]-=1;a=HEAP[d]==0?19:20;break;case 19:FUNCTION_TABLE[HEAP[HEAP[d+
4]+24]](d);a=20;break;case 20:b=0;a=24;break;case 21:HEAP[d]-=1;a=HEAP[d]==0?22:23;break;case 22:FUNCTION_TABLE[HEAP[HEAP[d+4]+24]](d);a=23;break;case 23:HEAP[__Py_NoneStruct]+=1;b=__Py_NoneStruct;a=24;break;case 24:return b;default:assert(0,"bad label: "+a)}},0,function(){var a;for(a=-1;;)switch(a){case -1:var b,c,d;c=__PyObject_New(w);a=c==0?1:2;break;case 1:_PyErr_Clear();_PyErr_SetString(HEAP[f],x);b=0;a=13;break;case 2:d=_PyMemoryView_FromObject(c);a=d!=0?4:3;break;case 3:a=_PyErr_Occurred()==
0?4:10;break;case 4:_PyErr_SetString(HEAP[f],y);a=d!=0?5:7;break;case 5:HEAP[d]-=1;a=HEAP[d]==0?6:7;break;case 6:FUNCTION_TABLE[HEAP[HEAP[d+4]+24]](d);a=7;break;case 7:HEAP[c]-=1;a=HEAP[c]==0?8:9;break;case 8:FUNCTION_TABLE[HEAP[HEAP[c+4]+24]](c);a=9;break;case 9:b=0;a=13;break;case 10:_PyErr_Clear();HEAP[c]-=1;a=HEAP[c]==0?11:12;break;case 11:FUNCTION_TABLE[HEAP[HEAP[c+4]+24]](c);a=12;break;case 12:HEAP[__Py_NoneStruct]+=1;b=__Py_NoneStruct;a=13;break;case 13:return a=b;default:assert(0,"bad label: "+
a)}},0,function(){var a;a:{var b;a=null;for(b=-1;;)switch(b){case -1:var c,d,e,f,h,j,k,l,m,n,o,p,q,r,s;c=g+2;f=32;h=1;k=0;b=26;break;case 1:l=0;a=1;b=24;break;case 2:var t=h;b=l>2?3:4;break;case 3:e=0-t;b=5;break;case 4:e=t;b=5;break;case 5:o=e;o=l%3+-1+o;j=b=_PyLong_FromUnsignedLong(o);b=b==0?6:7;break;case 6:d=FUNCTION_TABLE[c](A);b=82;break;case 7:p=_PyLong_AsUnsignedLong(j);b=p==-1?8:10;break;case 8:b=_PyErr_Occurred()!=0?9:10;break;case 9:d=FUNCTION_TABLE[c](C);b=82;break;case 10:b=p!=o?11:12;
break;case 11:d=FUNCTION_TABLE[c](G);b=82;break;case 12:HEAP[j]-=1;b=HEAP[j]==0?13:14;break;case 13:FUNCTION_TABLE[HEAP[HEAP[j+4]+24]](j);b=14;break;case 14:m=o;j=b=_PyLong_FromLong(m);b=b==0?15:16;break;case 15:d=FUNCTION_TABLE[c](F);b=82;break;case 16:n=_PyLong_AsLong(j);b=n==-1?17:19;break;case 17:b=_PyErr_Occurred()!=0?18:19;break;case 18:d=FUNCTION_TABLE[c](E);b=82;break;case 19:b=n!=m?20:21;break;case 20:d=FUNCTION_TABLE[c](N);b=82;break;case 21:HEAP[j]-=1;b=HEAP[j]==0?22:23;break;case 22:FUNCTION_TABLE[HEAP[HEAP[j+
4]+24]](j);b=23;break;case 23:j=0;var u=l+1;l=u;a=23;b=24;break;case 24:b=(a==23?u:0)<=5?2:25;break;case 25:k+=1;h<<=1;b=26;break;case 26:b=f+1>k?1:27;break;case 27:q=_PyLong_FromLong(1);b=q==0?28:29;break;case 28:d=FUNCTION_TABLE[c](Q);b=82;break;case 29:r=_PyNumber_Negative(q);b=r==0?30:31;break;case 30:d=FUNCTION_TABLE[c](I);b=82;break;case 31:b=_PyLong_AsUnsignedLong(r);b=b!=-1?33:32;break;case 32:b=_PyErr_Occurred()==0?33:34;break;case 33:d=FUNCTION_TABLE[c](J);b=82;break;case 34:b=_PyErr_ExceptionMatches(HEAP[_PyExc_OverflowError])==
0?35:36;break;case 35:d=FUNCTION_TABLE[c](P);b=82;break;case 36:_PyErr_Clear();HEAP[r]-=1;b=HEAP[r]==0?37:38;break;case 37:FUNCTION_TABLE[HEAP[HEAP[r+4]+24]](r);b=38;break;case 38:r=0;s=b=_PyLong_FromLong(f);b=b==0?39:40;break;case 39:d=FUNCTION_TABLE[c](Q);b=82;break;case 40:r=_PyNumber_Lshift(q,s);HEAP[s]-=1;b=HEAP[s]==0?41:42;break;case 41:FUNCTION_TABLE[HEAP[HEAP[s+4]+24]](s);b=42;break;case 42:s=0;b=r==0?43:44;break;case 43:d=FUNCTION_TABLE[c](D);b=82;break;case 44:b=_PyLong_AsUnsignedLong(r);
b=b!=-1?46:45;break;case 45:b=_PyErr_Occurred()==0?46:47;break;case 46:d=FUNCTION_TABLE[c](T);b=82;break;case 47:b=_PyErr_ExceptionMatches(HEAP[_PyExc_OverflowError])==0?48:49;break;case 48:d=FUNCTION_TABLE[c](L);b=82;break;case 49:_PyErr_Clear();s=_PyNumber_Rshift(r,q);HEAP[r]-=1;b=HEAP[r]==0?50:51;break;case 50:FUNCTION_TABLE[HEAP[HEAP[r+4]+24]](r);b=51;break;case 51:r=0;b=s==0?52:53;break;case 52:d=FUNCTION_TABLE[c]($);b=82;break;case 53:b=_PyLong_AsLong(s);b=b!=-1?55:54;break;case 54:b=_PyErr_Occurred()==
0?55:56;break;case 55:d=FUNCTION_TABLE[c](R);b=82;break;case 56:b=_PyErr_ExceptionMatches(HEAP[_PyExc_OverflowError])==0?57:58;break;case 57:d=FUNCTION_TABLE[c](K);b=82;break;case 58:_PyErr_Clear();r=_PyNumber_Negative(s);HEAP[s]-=1;b=HEAP[s]==0?59:60;break;case 59:FUNCTION_TABLE[HEAP[HEAP[s+4]+24]](s);b=60;break;case 60:s=0;b=r==0?61:62;break;case 61:d=FUNCTION_TABLE[c](I);b=82;break;case 62:s=_PyNumber_Subtract(r,q);HEAP[r]-=1;b=HEAP[r]==0?63:64;break;case 63:FUNCTION_TABLE[HEAP[HEAP[r+4]+24]](r);
b=64;break;case 64:r=0;b=s==0?65:66;break;case 65:d=FUNCTION_TABLE[c](H);b=82;break;case 66:b=_PyLong_AsLong(s);b=b!=-1?68:67;break;case 67:b=_PyErr_Occurred()==0?68:69;break;case 68:d=FUNCTION_TABLE[c](S);b=82;break;case 69:b=_PyErr_ExceptionMatches(HEAP[_PyExc_OverflowError])==0?70:71;break;case 70:d=FUNCTION_TABLE[c](U);b=82;break;case 71:_PyErr_Clear();HEAP[s]-=1;b=HEAP[s]==0?72:73;break;case 72:FUNCTION_TABLE[HEAP[HEAP[s+4]+24]](s);b=73;break;case 73:s=0;b=r!=0?74:79;break;case 74:HEAP[r]-=1;
b=HEAP[r]==0?75:76;break;case 75:FUNCTION_TABLE[HEAP[HEAP[r+4]+24]](r);b=76;break;case 76:b=s!=0?77:79;break;case 77:HEAP[s]-=1;b=HEAP[s]==0?78:79;break;case 78:FUNCTION_TABLE[HEAP[HEAP[s+4]+24]](s);b=79;break;case 79:HEAP[q]-=1;b=HEAP[q]==0?80:81;break;case 80:FUNCTION_TABLE[HEAP[HEAP[q+4]+24]](q);b=81;break;case 81:HEAP[__Py_NoneStruct]+=1;d=__Py_NoneStruct;b=82;break;case 82:a=d;break a;default:assert(0,"bad label: "+b)}a=void 0}return a},0,function(){var a=STACKTOP;STACKTOP+=4;_memset(a,0,4);
var b,c=null;for(b=-1;;)switch(b){case -1:var d,f,g,h,j,k=a;f=_PyLong_FromString(aa,0,16);b=f==0?1:2;break;case 1:d=0;b=113;break;case 2:HEAP[k]=1234;j=_PyLong_AsLongAndOverflow(f,k);HEAP[f]-=1;b=HEAP[f]==0?3:4;break;case 3:FUNCTION_TABLE[HEAP[HEAP[f+4]+24]](f);b=4;break;case 4:b=j==-1?5:8;break;case 5:b=_PyErr_Occurred()!=0?6:7;break;case 6:d=0;b=113;break;case 7:b=j!=-1?8:9;break;case 8:d=e(ja,la);b=113;break;case 9:b=HEAP[k]!=1?10:11;break;case 10:d=e(ja,da);b=113;break;case 11:f=_PyLong_FromLong(2147483647);
b=f==0?12:13;break;case 12:d=0;b=113;break;case 13:g=_PyLong_FromLong(1);var l=f;b=g==0?14:17;break;case 14:HEAP[f]=HEAP[l]-1;b=HEAP[f]==0?15:16;break;case 15:FUNCTION_TABLE[HEAP[HEAP[f+4]+24]](f);b=16;break;case 16:d=0;b=113;break;case 17:h=_PyNumber_Add(l,g);HEAP[g]-=1;b=HEAP[g]==0?18:19;break;case 18:FUNCTION_TABLE[HEAP[HEAP[g+4]+24]](g);b=19;break;case 19:HEAP[f]-=1;b=HEAP[f]==0?20:21;break;case 20:FUNCTION_TABLE[HEAP[HEAP[f+4]+24]](f);b=21;break;case 21:f=h;b=h==0?22:23;break;case 22:d=0;b=113;
break;case 23:HEAP[k]=0;j=_PyLong_AsLongAndOverflow(f,k);HEAP[f]-=1;b=HEAP[f]==0?24:25;break;case 24:FUNCTION_TABLE[HEAP[HEAP[f+4]+24]](f);b=25;break;case 25:b=j==-1?26:29;break;case 26:b=_PyErr_Occurred()!=0?27:28;break;case 27:d=0;b=113;break;case 28:b=j!=-1?29:30;break;case 29:d=e(ja,la);b=113;break;case 30:b=HEAP[k]!=1?31:32;break;case 31:d=e(ja,da);b=113;break;case 32:f=_PyLong_FromString(Ka,0,16);b=f==0?33:34;break;case 33:d=0;b=113;break;case 34:HEAP[k]=1234;j=_PyLong_AsLongAndOverflow(f,k);
HEAP[f]-=1;b=HEAP[f]==0?35:36;break;case 35:FUNCTION_TABLE[HEAP[HEAP[f+4]+24]](f);b=36;break;case 36:b=j==-1?37:40;break;case 37:b=_PyErr_Occurred()!=0?38:39;break;case 38:d=0;b=113;break;case 39:b=j!=-1?40:41;break;case 40:d=e(ja,la);b=113;break;case 41:b=HEAP[k]!=-1?42:43;break;case 42:d=e(ja,Ma);b=113;break;case 43:f=_PyLong_FromLong(-2147483648);b=f==0?44:45;break;case 44:d=0;b=113;break;case 45:g=_PyLong_FromLong(1);var m=f;b=g==0?46:49;break;case 46:HEAP[f]=HEAP[m]-1;b=HEAP[f]==0?47:48;break;
case 47:FUNCTION_TABLE[HEAP[HEAP[f+4]+24]](f);b=48;break;case 48:d=0;b=113;break;case 49:h=_PyNumber_Subtract(m,g);HEAP[g]-=1;b=HEAP[g]==0?50:51;break;case 50:FUNCTION_TABLE[HEAP[HEAP[g+4]+24]](g);b=51;break;case 51:HEAP[f]-=1;b=HEAP[f]==0?52:53;break;case 52:FUNCTION_TABLE[HEAP[HEAP[f+4]+24]](f);b=53;break;case 53:f=h;b=h==0?54:55;break;case 54:d=0;b=113;break;case 55:HEAP[k]=0;j=_PyLong_AsLongAndOverflow(f,k);HEAP[f]-=1;b=HEAP[f]==0?56:57;break;case 56:FUNCTION_TABLE[HEAP[HEAP[f+4]+24]](f);b=57;
break;case 57:b=j==-1?58:61;break;case 58:b=_PyErr_Occurred()!=0?59:60;break;case 59:d=0;b=113;break;case 60:b=j!=-1?61:62;break;case 61:d=e(ja,la);b=113;break;case 62:b=HEAP[k]!=-1?63:64;break;case 63:d=e(ja,Ma);b=113;break;case 64:f=_PyLong_FromString(wa,0,16);b=f==0?65:66;break;case 65:d=0;b=113;break;case 66:HEAP[k]=1234;j=_PyLong_AsLongAndOverflow(f,k);HEAP[f]-=1;b=HEAP[f]==0?67:68;break;case 67:FUNCTION_TABLE[HEAP[HEAP[f+4]+24]](f);b=68;break;case 68:var n=j;n==-1?(c=68,b=69):(c=68,b=72);break;
case 69:b=_PyErr_Occurred()!=0?70:71;break;case 70:d=0;b=113;break;case 71:var o=j,c=71;b=72;break;case 72:b=(c==71?o:n)!=255?73:74;break;case 73:d=e(ja,ib);b=113;break;case 74:b=HEAP[k]!=0?75:76;break;case 75:d=e(ja,cb);b=113;break;case 76:f=_PyLong_FromString(db,0,16);b=f==0?77:78;break;case 77:d=0;b=113;break;case 78:HEAP[k]=0;j=_PyLong_AsLongAndOverflow(f,k);HEAP[f]-=1;b=HEAP[f]==0?79:80;break;case 79:FUNCTION_TABLE[HEAP[HEAP[f+4]+24]](f);b=80;break;case 80:var p=j;p==-1?(c=80,b=81):(c=80,b=84);
break;case 81:b=_PyErr_Occurred()!=0?82:83;break;case 82:d=0;b=113;break;case 83:var q=j,c=83;b=84;break;case 84:b=(c==83?q:p)!=-255?85:86;break;case 85:d=e(ja,ib);b=113;break;case 86:b=HEAP[k]!=0?87:88;break;case 87:d=e(ja,Da);b=113;break;case 88:f=_PyLong_FromLong(2147483647);b=f==0?89:90;break;case 89:d=0;b=113;break;case 90:HEAP[k]=1234;j=_PyLong_AsLongAndOverflow(f,k);HEAP[f]-=1;b=HEAP[f]==0?91:92;break;case 91:FUNCTION_TABLE[HEAP[HEAP[f+4]+24]](f);b=92;break;case 92:var r=j;r==-1?(c=92,b=93):
(c=92,b=96);break;case 93:b=_PyErr_Occurred()!=0?94:95;break;case 94:d=0;b=113;break;case 95:var s=j,c=95;b=96;break;case 96:b=(c==95?s:r)!=2147483647?97:98;break;case 97:d=e(ja,gb);b=113;break;case 98:b=HEAP[k]!=0?99:100;break;case 99:d=e(ja,cb);b=113;break;case 100:f=_PyLong_FromLong(-2147483648);b=f==0?101:102;break;case 101:d=0;b=113;break;case 102:HEAP[k]=0;j=_PyLong_AsLongAndOverflow(f,k);HEAP[f]-=1;b=HEAP[f]==0?103:104;break;case 103:FUNCTION_TABLE[HEAP[HEAP[f+4]+24]](f);b=104;break;case 104:var t=
j;t==-1?(c=104,b=105):(c=104,b=108);break;case 105:b=_PyErr_Occurred()!=0?106:107;break;case 106:d=0;b=113;break;case 107:var u=j,c=107;b=108;break;case 108:b=(c==107?u:t)!=-2147483648?109:110;break;case 109:d=e(ja,Xa);b=113;break;case 110:b=HEAP[k]!=0?111:112;break;case 111:d=e(ja,cb);b=113;break;case 112:HEAP[__Py_NoneStruct]+=1;d=__Py_NoneStruct;b=113;break;case 113:return b=d,STACKTOP=a,b;default:assert(0,"bad label: "+b)}},0,function(){var a=STACKTOP;STACKTOP+=180;_memset(a,0,180);var b,c=null;
for(b=-1;;)switch(b){case -1:var d,f=a,g,h,j,k;_llvm_memcpy_p0i8_p0i8_i32(f,sb,180,4,0);g=0;c=-1;b=8;break;case 1:h=_PyLong_FromLong(HEAP[f+g*12]);j=__PyLong_NumBits(h);k=__PyLong_Sign(h);HEAP[h]-=1;b=HEAP[h]==0?2:3;break;case 2:FUNCTION_TABLE[HEAP[HEAP[h+4]+24]](h);b=3;break;case 3:b=HEAP[f+g*12+4]!=j?4:5;break;case 4:d=e(mb,yb);b=10;break;case 5:b=HEAP[f+g*12+8]!=k?6:7;break;case 6:d=e(mb,Nb);b=10;break;case 7:var l=g+1;g=l;c=7;b=8;break;case 8:b=(c==7?l:0)<=14?1:9;break;case 9:HEAP[__Py_NoneStruct]+=
1;d=__Py_NoneStruct;b=10;break;case 10:return b=d,STACKTOP=a,b;default:assert(0,"bad label: "+b)}},0,function(){var a=STACKTOP;STACKTOP+=4;_memset(a,0,4);var b;for(b=-1;;)switch(b){case -1:var c,d,f,g=a;d=_PyTuple_New(1);b=d==0?1:2;break;case 1:c=0;b=23;break;case 2:f=_PyLong_FromString(aa,0,16);b=f==0?3:4;break;case 3:c=0;b=23;break;case 4:b=_PyInt_AsUnsignedLongMask(f);HEAP[g]=b;b=HEAP[g]!=-1?5:6;break;case 5:c=e(za,Aa);b=23;break;case 6:HEAP[d+12]=f;HEAP[g]=0;b=_PyArg_ParseTuple(d,La,allocate([g,
0,0,0],["i32*",0,0,0],ALLOC_STACK))<0?7:8;break;case 7:c=0;b=23;break;case 8:b=HEAP[g]!=-1?9:10;break;case 9:c=e(za,ya);b=23;break;case 10:HEAP[f]-=1;b=HEAP[f]==0?11:12;break;case 11:FUNCTION_TABLE[HEAP[HEAP[f+4]+24]](f);b=12;break;case 12:f=b=_PyLong_FromString(ub,0,16);b=b==0?13:14;break;case 13:c=0;b=23;break;case 14:b=_PyInt_AsUnsignedLongMask(f);HEAP[g]=b;b=HEAP[g]!=-66?15:16;break;case 15:c=e(za,Aa);b=23;break;case 16:HEAP[d+12]=f;HEAP[g]=0;b=_PyArg_ParseTuple(d,La,allocate([g,0,0,0],["i32*",
0,0,0],ALLOC_STACK))<0?17:18;break;case 17:c=0;b=23;break;case 18:b=HEAP[g]!=-66?19:20;break;case 19:c=e(za,Z);b=23;break;case 20:HEAP[d]-=1;b=HEAP[d]==0?21:22;break;case 21:FUNCTION_TABLE[HEAP[HEAP[d+4]+24]](d);b=22;break;case 22:HEAP[__Py_NoneStruct]+=1;c=__Py_NoneStruct;b=23;break;case 23:return STACKTOP=a,c;default:assert(0,"bad label: "+b)}},0,function(){var a;for(a=-1;;)switch(a){case -1:var b,c,d,e;d=0;c=_PyTuple_New(0);a=c==0?1:2;break;case 1:b=0;a=13;break;case 2:e=_PyArg_ParseTuple(c,sa,
allocate(1,"i32",ALLOC_STACK));a=e<0?5:3;break;case 3:d=_PyDict_New();a=d==0?5:4;break;case 4:e=_PyArg_ParseTupleAndKeywords(c,d,sa,pa,allocate(1,"i32",ALLOC_STACK));a=5;break;case 5:HEAP[c]-=1;a=HEAP[c]==0?6:7;break;case 6:FUNCTION_TABLE[HEAP[HEAP[c+4]+24]](c);a=7;break;case 7:a=d!=0?8:10;break;case 8:HEAP[d]-=1;a=HEAP[d]==0?9:10;break;case 9:FUNCTION_TABLE[HEAP[HEAP[d+4]+24]](d);a=10;break;case 10:a=e<0?11:12;break;case 11:b=0;a=13;break;case 12:HEAP[__Py_NoneStruct]+=1;b=__Py_NoneStruct;a=13;break;
case 13:return a=b;default:assert(0,"bad label: "+a)}},0,function(){var a;for(a=-1;;)switch(a){case -1:var b,c,d;b=_PyObject_Str(0);c=_PyObject_Unicode(0);d=_PyTuple_Pack(2,allocate([b,0,0,0,c,0,0,0],["%struct.PyObject*",0,0,0,"%struct.PyObject*",0,0,0],ALLOC_STACK));a=b!=0?1:3;break;case 1:HEAP[b]-=1;a=HEAP[b]==0?2:3;break;case 2:FUNCTION_TABLE[HEAP[HEAP[b+4]+24]](b);a=3;break;case 3:a=c!=0?4:6;break;case 4:HEAP[c]-=1;a=HEAP[c]==0?5:6;break;case 5:FUNCTION_TABLE[HEAP[HEAP[c+4]+24]](c);a=6;break;
case 6:return a=d;default:assert(0,"bad label: "+a)}},0,function(){var a;for(a=-1;;)switch(a){case -1:var b,c,d;c=_PyString_FromFormat(Mb,allocate([1,0,0,0],["i32",0,0,0],ALLOC_STACK));a=c==0?1:2;break;case 1:b=0;a=53;break;case 2:a=_PyString_AsString(c);a=_strcmp(a,Hb)!=0?3:4;break;case 3:d=Wb;a=49;break;case 4:HEAP[c]-=1;a=HEAP[c]==0?5:6;break;case 5:FUNCTION_TABLE[HEAP[HEAP[c+4]+24]](c);a=6;break;case 6:c=a=_PyString_FromFormat(ea,allocate([1,0,0,0],["i32",0,0,0],ALLOC_STACK));a=a==0?7:8;break;
case 7:b=0;a=53;break;case 8:a=_PyString_AsString(c);a=_strcmp(a,Hb)!=0?9:10;break;case 9:d=Qb;a=49;break;case 10:HEAP[c]-=1;a=HEAP[c]==0?11:12;break;case 11:FUNCTION_TABLE[HEAP[HEAP[c+4]+24]](c);a=12;break;case 12:c=a=_PyString_FromFormat(Bb,allocate([1,0,0,0],["i32",0,0,0],ALLOC_STACK));a=a==0?13:14;break;case 13:b=0;a=53;break;case 14:a=_PyString_AsString(c);a=_strcmp(a,Hb)!=0?15:16;break;case 15:d=ic;a=49;break;case 16:HEAP[c]-=1;a=HEAP[c]==0?17:18;break;case 17:FUNCTION_TABLE[HEAP[HEAP[c+4]+
24]](c);a=18;break;case 18:c=a=_PyString_FromFormat(Vb,allocate([1,0,0,0],["i32",0,0,0],ALLOC_STACK));a=a==0?19:20;break;case 19:b=0;a=53;break;case 20:a=_PyString_AsString(c);a=_strcmp(a,Hb)!=0?21:22;break;case 21:d=Oa;a=49;break;case 22:HEAP[c]-=1;a=HEAP[c]==0?23:24;break;case 23:FUNCTION_TABLE[HEAP[HEAP[c+4]+24]](c);a=24;break;case 24:c=a=_PyString_FromFormat(eb,allocate([1,0,0,0],["i32",0,0,0],ALLOC_STACK));a=a==0?25:26;break;case 25:b=0;a=53;break;case 26:a=_PyString_AsString(c);a=_strcmp(a,
Hb)!=0?27:28;break;case 27:d=Ob;a=49;break;case 28:HEAP[c]-=1;a=HEAP[c]==0?29:30;break;case 29:FUNCTION_TABLE[HEAP[HEAP[c+4]+24]](c);a=30;break;case 30:c=a=_PyString_FromFormat(Sa,allocate([1,0,0,0],["i32",0,0,0],ALLOC_STACK));a=a==0?31:32;break;case 31:b=0;a=53;break;case 32:a=_PyString_AsString(c);a=_strcmp(a,Hb)!=0?33:34;break;case 33:d=Yb;a=49;break;case 34:HEAP[c]-=1;a=HEAP[c]==0?35:36;break;case 35:FUNCTION_TABLE[HEAP[HEAP[c+4]+24]](c);a=36;break;case 36:c=a=_PyString_FromFormat(xb,allocate([1,
0,0,0,0,0,0,0],["i64",0,0,0,0,0,0,0],ALLOC_STACK));a=a==0?37:38;break;case 37:b=0;a=53;break;case 38:a=_PyString_AsString(c);a=_strcmp(a,Hb)!=0?39:40;break;case 39:d=Xb;a=49;break;case 40:HEAP[c]-=1;a=HEAP[c]==0?41:42;break;case 41:FUNCTION_TABLE[HEAP[HEAP[c+4]+24]](c);a=42;break;case 42:c=a=_PyString_FromFormat(lb,allocate([1,0,0,0,0,0,0,0],["i64",0,0,0,0,0,0,0],ALLOC_STACK));a=a==0?43:44;break;case 43:b=0;a=53;break;case 44:a=_PyString_AsString(c);a=_strcmp(a,Hb)!=0?45:46;break;case 45:d=fc;a=49;
break;case 46:HEAP[c]-=1;a=HEAP[c]==0?47:48;break;case 47:FUNCTION_TABLE[HEAP[HEAP[c+4]+24]](c);a=48;break;case 48:HEAP[__Py_NoneStruct]+=1;b=__Py_NoneStruct;a=53;break;case 49:a=c!=0?50:52;break;case 50:HEAP[c]-=1;a=HEAP[c]==0?51:52;break;case 51:FUNCTION_TABLE[HEAP[HEAP[c+4]+24]](c);a=52;break;case 52:b=e(jc,d);a=53;break;case 53:return b;default:assert(0,"bad label: "+a)}},0,function(){HEAP[__Py_NoneStruct]+=1;return __Py_NoneStruct},0,function(a,b){var c=STACKTOP;STACKTOP+=12;_memset(c,0,12);
var d;for(d=-1;;)switch(d){case -1:var e,f=c,g=c+4,h=c+8;d=_PyArg_ParseTuple(b,hb,allocate([f,0,0,0,g,0,0,0,h,0,0,0],["i32*",0,0,0,"i32*",0,0,0,"i32*",0,0,0],ALLOC_STACK))==0?1:2;break;case 1:e=0;d=3;break;case 2:e=_Py_BuildValue(Qa,allocate([HEAP[f],0,0,0,HEAP[g],0,0,0,HEAP[h],0,0,0],["i32",0,0,0,"i32",0,0,0,"i32",0,0,0],ALLOC_STACK));d=3;break;case 3:return d=e,STACKTOP=c,d;default:assert(0,"bad label: "+d)}},0,function(a,b,c){a=STACKTOP;STACKTOP+=40;_memset(a,0,40);var d;for(d=-1;;)switch(d){case -1:var e,
f,g=a;d=b;e=c;_llvm_memset_p0i8_i32(g,-1,40,4,0);d=_PyArg_ParseTupleAndKeywords(d,e,Ha,Ra,allocate([g,0,0,0,g+4,0,0,0,g+8,0,0,0,g+12,0,0,0,g+16,0,0,0,g+20,0,0,0,g+24,0,0,0,g+28,0,0,0,g+32,0,0,0,g+36,0,0,0],["i32*",0,0,0,"i32*",0,0,0,"i32*",0,0,0,"i32*",0,0,0,"i32*",0,0,0,"i32*",0,0,0,"i32*",0,0,0,"i32*",0,0,0,"i32*",0,0,0,"i32*",0,0,0],ALLOC_STACK))==0?1:2;break;case 1:f=0;d=3;break;case 2:f=_Py_BuildValue(kb,allocate([HEAP[g],0,0,0,HEAP[g+4],0,0,0,HEAP[g+8],0,0,0,HEAP[g+12],0,0,0,HEAP[g+16],0,0,
0,HEAP[g+20],0,0,0,HEAP[g+24],0,0,0,HEAP[g+28],0,0,0,HEAP[g+32],0,0,0,HEAP[g+36],0,0,0],["i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0],ALLOC_STACK));d=3;break;case 3:return b=f,STACKTOP=a,b;default:assert(0,"bad label: "+d)}},0,function(a,b){var c=STACKTOP;STACKTOP+=1;_memset(c,0,1);var d;for(d=-1;;)switch(d){case -1:var e,f=c;d=_PyArg_ParseTuple(b,ra,allocate([f,0,0,0],["i8*",0,0,0],ALLOC_STACK))==0?1:2;break;case 1:e=0;d=
3;break;case 2:e=_PyLong_FromUnsignedLong(HEAP[f]);d=3;break;case 3:return d=e,STACKTOP=c,d;default:assert(0,"bad label: "+d)}},0,function(a,b){var c=STACKTOP;STACKTOP+=1;_memset(c,0,1);var d;for(d=-1;;)switch(d){case -1:var e,f=c;d=_PyArg_ParseTuple(b,Ta,allocate([f,0,0,0],["i8*",0,0,0],ALLOC_STACK))==0?1:2;break;case 1:e=0;d=3;break;case 2:e=_PyLong_FromUnsignedLong(HEAP[f]);d=3;break;case 3:return d=e,STACKTOP=c,d;default:assert(0,"bad label: "+d)}},0,function(a,b){var c=STACKTOP;STACKTOP+=2;_memset(c,
0,2);var d;for(d=-1;;)switch(d){case -1:var e,f=c;d=_PyArg_ParseTuple(b,ia,allocate([f,0,0,0],["i16*",0,0,0],ALLOC_STACK))==0?1:2;break;case 1:e=0;d=3;break;case 2:e=_PyLong_FromLong(HEAP[f]);d=3;break;case 3:return d=e,STACKTOP=c,d;default:assert(0,"bad label: "+d)}},0,function(a,b){var c=STACKTOP;STACKTOP+=2;_memset(c,0,2);var d;for(d=-1;;)switch(d){case -1:var e,f=c;d=_PyArg_ParseTuple(b,ba,allocate([f,0,0,0],["i16*",0,0,0],ALLOC_STACK))==0?1:2;break;case 1:e=0;d=3;break;case 2:e=_PyLong_FromUnsignedLong(HEAP[f]);
d=3;break;case 3:return d=e,STACKTOP=c,d;default:assert(0,"bad label: "+d)}},0,function(a,b){var c=STACKTOP;STACKTOP+=4;_memset(c,0,4);var d;for(d=-1;;)switch(d){case -1:var e,f=c;d=_PyArg_ParseTuple(b,Ya,allocate([f,0,0,0],["i32*",0,0,0],ALLOC_STACK))==0?1:2;break;case 1:e=0;d=3;break;case 2:e=_PyLong_FromUnsignedLong(HEAP[f]);d=3;break;case 3:return d=e,STACKTOP=c,d;default:assert(0,"bad label: "+d)}},0,function(a,b){var c=STACKTOP;STACKTOP+=4;_memset(c,0,4);var d;for(d=-1;;)switch(d){case -1:var e,
f=c;d=_PyArg_ParseTuple(b,ta,allocate([f,0,0,0],["i32*",0,0,0],ALLOC_STACK))==0?1:2;break;case 1:e=0;d=3;break;case 2:e=_PyLong_FromUnsignedLong(HEAP[f]);d=3;break;case 3:return d=e,STACKTOP=c,d;default:assert(0,"bad label: "+d)}},0,function(a,b){var c=STACKTOP;STACKTOP+=4;_memset(c,0,4);var d;for(d=-1;;)switch(d){case -1:var e,f=c;d=_PyArg_ParseTuple(b,O,allocate([f,0,0,0],["i32*",0,0,0],ALLOC_STACK))==0?1:2;break;case 1:e=0;d=3;break;case 2:e=_PyLong_FromLong(HEAP[f]);d=3;break;case 3:return d=
e,STACKTOP=c,d;default:assert(0,"bad label: "+d)}},0,function(a,b){var c=STACKTOP;STACKTOP+=4;_memset(c,0,4);var d;for(d=-1;;)switch(d){case -1:var e,f=c;d=_PyArg_ParseTuple(b,wb,allocate([f,0,0,0],["i32*",0,0,0],ALLOC_STACK))==0?1:2;break;case 1:e=0;d=3;break;case 2:e=_PyLong_FromLong(HEAP[f]);d=3;break;case 3:return d=e,STACKTOP=c,d;default:assert(0,"bad label: "+d)}},0,function(a,b){var c=STACKTOP;STACKTOP+=4;_memset(c,0,4);var d;for(d=-1;;)switch(d){case -1:var e,f=c;d=_PyArg_ParseTuple(b,bb,
allocate([f,0,0,0],["i32*",0,0,0],ALLOC_STACK))==0?1:2;break;case 1:e=0;d=3;break;case 2:e=_PyInt_FromSsize_t(HEAP[f]);d=3;break;case 3:return d=e,STACKTOP=c,d;default:assert(0,"bad label: "+d)}},0,function(a,b){var c=STACKTOP;STACKTOP+=8;_memset(c,0,8);var d;for(d=-1;;)switch(d){case -1:var e,f=c;d=_PyArg_ParseTuple(b,vb,allocate([f,0,0,0],["i64*",0,0,0],ALLOC_STACK))==0?1:2;break;case 1:e=0;d=3;break;case 2:e=_PyLong_FromLongLong(HEAP[f]);d=3;break;case 3:return d=e,STACKTOP=c,d;default:assert(0,
"bad label: "+d)}},0,function(a,b){var c=STACKTOP;STACKTOP+=8;_memset(c,0,8);var d;for(d=-1;;)switch(d){case -1:var e,f=c;d=_PyArg_ParseTuple(b,ka,allocate([f,0,0,0],["i64*",0,0,0],ALLOC_STACK))==0?1:2;break;case 1:e=0;d=3;break;case 2:e=_PyLong_FromUnsignedLongLong(HEAP[f]);d=3;break;case 3:return d=e,STACKTOP=c,d;default:assert(0,"bad label: "+d)}},0,function(){var a;a:{var b;a=null;for(b=-1;;)switch(b){case -1:var c,d,e,f,h,j,k,l,m,n,o,p,q,r,s;c=g+4;f=64;h=1;k=0;b=26;break;case 1:l=0;a=1;b=24;
break;case 2:var t=h;b=l>2?3:4;break;case 3:e=0-t;b=5;break;case 4:e=t;b=5;break;case 5:o=e;o=l%3-1+o;j=b=_PyLong_FromUnsignedLongLong(o);b=b==0?6:7;break;case 6:d=FUNCTION_TABLE[c](A);b=82;break;case 7:p=_PyLong_AsUnsignedLongLong(j);b=p==-1?8:10;break;case 8:b=_PyErr_Occurred()!=0?9:10;break;case 9:d=FUNCTION_TABLE[c](C);b=82;break;case 10:b=p!=o?11:12;break;case 11:d=FUNCTION_TABLE[c](G);b=82;break;case 12:HEAP[j]-=1;b=HEAP[j]==0?13:14;break;case 13:FUNCTION_TABLE[HEAP[HEAP[j+4]+24]](j);b=14;break;
case 14:m=o;j=b=_PyLong_FromLongLong(m);b=b==0?15:16;break;case 15:d=FUNCTION_TABLE[c](F);b=82;break;case 16:n=_PyLong_AsLongLong(j);b=n==-1?17:19;break;case 17:b=_PyErr_Occurred()!=0?18:19;break;case 18:d=FUNCTION_TABLE[c](E);b=82;break;case 19:b=n!=m?20:21;break;case 20:d=FUNCTION_TABLE[c](N);b=82;break;case 21:HEAP[j]-=1;b=HEAP[j]==0?22:23;break;case 22:FUNCTION_TABLE[HEAP[HEAP[j+4]+24]](j);b=23;break;case 23:j=0;var u=l+1;l=u;a=23;b=24;break;case 24:b=(a==23?u:0)<=5?2:25;break;case 25:k+=1;h*=
Math.pow(2,1);b=26;break;case 26:b=f+1>k?1:27;break;case 27:q=_PyLong_FromLong(1);b=q==0?28:29;break;case 28:d=FUNCTION_TABLE[c](Q);b=82;break;case 29:r=_PyNumber_Negative(q);b=r==0?30:31;break;case 30:d=FUNCTION_TABLE[c](I);b=82;break;case 31:b=_PyLong_AsUnsignedLongLong(r);b=b!=-1?33:32;break;case 32:b=_PyErr_Occurred()==0?33:34;break;case 33:d=FUNCTION_TABLE[c](J);b=82;break;case 34:b=_PyErr_ExceptionMatches(HEAP[_PyExc_OverflowError])==0?35:36;break;case 35:d=FUNCTION_TABLE[c](P);b=82;break;case 36:_PyErr_Clear();
HEAP[r]-=1;b=HEAP[r]==0?37:38;break;case 37:FUNCTION_TABLE[HEAP[HEAP[r+4]+24]](r);b=38;break;case 38:r=0;s=b=_PyLong_FromLong(f);b=b==0?39:40;break;case 39:d=FUNCTION_TABLE[c](Q);b=82;break;case 40:r=_PyNumber_Lshift(q,s);HEAP[s]-=1;b=HEAP[s]==0?41:42;break;case 41:FUNCTION_TABLE[HEAP[HEAP[s+4]+24]](s);b=42;break;case 42:s=0;b=r==0?43:44;break;case 43:d=FUNCTION_TABLE[c](D);b=82;break;case 44:b=_PyLong_AsUnsignedLongLong(r);b=b!=-1?46:45;break;case 45:b=_PyErr_Occurred()==0?46:47;break;case 46:d=
FUNCTION_TABLE[c](T);b=82;break;case 47:b=_PyErr_ExceptionMatches(HEAP[_PyExc_OverflowError])==0?48:49;break;case 48:d=FUNCTION_TABLE[c](L);b=82;break;case 49:_PyErr_Clear();s=_PyNumber_Rshift(r,q);HEAP[r]-=1;b=HEAP[r]==0?50:51;break;case 50:FUNCTION_TABLE[HEAP[HEAP[r+4]+24]](r);b=51;break;case 51:r=0;b=s==0?52:53;break;case 52:d=FUNCTION_TABLE[c]($);b=82;break;case 53:b=_PyLong_AsLongLong(s);b=b!=-1?55:54;break;case 54:b=_PyErr_Occurred()==0?55:56;break;case 55:d=FUNCTION_TABLE[c](R);b=82;break;
case 56:b=_PyErr_ExceptionMatches(HEAP[_PyExc_OverflowError])==0?57:58;break;case 57:d=FUNCTION_TABLE[c](K);b=82;break;case 58:_PyErr_Clear();r=_PyNumber_Negative(s);HEAP[s]-=1;b=HEAP[s]==0?59:60;break;case 59:FUNCTION_TABLE[HEAP[HEAP[s+4]+24]](s);b=60;break;case 60:s=0;b=r==0?61:62;break;case 61:d=FUNCTION_TABLE[c](I);b=82;break;case 62:s=_PyNumber_Subtract(r,q);HEAP[r]-=1;b=HEAP[r]==0?63:64;break;case 63:FUNCTION_TABLE[HEAP[HEAP[r+4]+24]](r);b=64;break;case 64:r=0;b=s==0?65:66;break;case 65:d=FUNCTION_TABLE[c](H);
b=82;break;case 66:b=_PyLong_AsLongLong(s);b=b!=-1?68:67;break;case 67:b=_PyErr_Occurred()==0?68:69;break;case 68:d=FUNCTION_TABLE[c](S);b=82;break;case 69:b=_PyErr_ExceptionMatches(HEAP[_PyExc_OverflowError])==0?70:71;break;case 70:d=FUNCTION_TABLE[c](U);b=82;break;case 71:_PyErr_Clear();HEAP[s]-=1;b=HEAP[s]==0?72:73;break;case 72:FUNCTION_TABLE[HEAP[HEAP[s+4]+24]](s);b=73;break;case 73:s=0;b=r!=0?74:79;break;case 74:HEAP[r]-=1;b=HEAP[r]==0?75:76;break;case 75:FUNCTION_TABLE[HEAP[HEAP[r+4]+24]](r);
b=76;break;case 76:b=s!=0?77:79;break;case 77:HEAP[s]-=1;b=HEAP[s]==0?78:79;break;case 78:FUNCTION_TABLE[HEAP[HEAP[s+4]+24]](s);b=79;break;case 79:HEAP[q]-=1;b=HEAP[q]==0?80:81;break;case 80:FUNCTION_TABLE[HEAP[HEAP[q+4]+24]](q);b=81;break;case 81:HEAP[__Py_NoneStruct]+=1;d=__Py_NoneStruct;b=82;break;case 82:a=d;break a;default:assert(0,"bad label: "+b)}a=void 0}return a},0,function(){var a=STACKTOP;STACKTOP+=4;_memset(a,0,4);var b,c=null;for(b=-1;;)switch(b){case -1:var d,f,g,h,j,k=a;f=_PyLong_FromString(aa,
0,16);b=f==0?1:2;break;case 1:d=0;b=113;break;case 2:HEAP[k]=1234;j=_PyLong_AsLongLongAndOverflow(f,k);HEAP[f]-=1;b=HEAP[f]==0?3:4;break;case 3:FUNCTION_TABLE[HEAP[HEAP[f+4]+24]](f);b=4;break;case 4:b=j==-1?5:8;break;case 5:b=_PyErr_Occurred()!=0?6:7;break;case 6:d=0;b=113;break;case 7:b=j!=-1?8:9;break;case 8:d=e(Ca,la);b=113;break;case 9:b=HEAP[k]!=1?10:11;break;case 10:d=e(Ca,da);b=113;break;case 11:f=_PyLong_FromLongLong(9223372036854775E3);b=f==0?12:13;break;case 12:d=0;b=113;break;case 13:g=
_PyLong_FromLong(1);var l=f;b=g==0?14:17;break;case 14:HEAP[f]=HEAP[l]-1;b=HEAP[f]==0?15:16;break;case 15:FUNCTION_TABLE[HEAP[HEAP[f+4]+24]](f);b=16;break;case 16:d=0;b=113;break;case 17:h=_PyNumber_Add(l,g);HEAP[g]-=1;b=HEAP[g]==0?18:19;break;case 18:FUNCTION_TABLE[HEAP[HEAP[g+4]+24]](g);b=19;break;case 19:HEAP[f]-=1;b=HEAP[f]==0?20:21;break;case 20:FUNCTION_TABLE[HEAP[HEAP[f+4]+24]](f);b=21;break;case 21:f=h;b=h==0?22:23;break;case 22:d=0;b=113;break;case 23:HEAP[k]=0;j=_PyLong_AsLongLongAndOverflow(f,
k);HEAP[f]-=1;b=HEAP[f]==0?24:25;break;case 24:FUNCTION_TABLE[HEAP[HEAP[f+4]+24]](f);b=25;break;case 25:b=j==-1?26:29;break;case 26:b=_PyErr_Occurred()!=0?27:28;break;case 27:d=0;b=113;break;case 28:b=j!=-1?29:30;break;case 29:d=e(Ca,la);b=113;break;case 30:b=HEAP[k]!=1?31:32;break;case 31:d=e(Ca,da);b=113;break;case 32:f=_PyLong_FromString(Ka,0,16);b=f==0?33:34;break;case 33:d=0;b=113;break;case 34:HEAP[k]=1234;j=_PyLong_AsLongLongAndOverflow(f,k);HEAP[f]-=1;b=HEAP[f]==0?35:36;break;case 35:FUNCTION_TABLE[HEAP[HEAP[f+
4]+24]](f);b=36;break;case 36:b=j==-1?37:40;break;case 37:b=_PyErr_Occurred()!=0?38:39;break;case 38:d=0;b=113;break;case 39:b=j!=-1?40:41;break;case 40:d=e(Ca,la);b=113;break;case 41:b=HEAP[k]!=-1?42:43;break;case 42:d=e(Ca,Ma);b=113;break;case 43:f=_PyLong_FromLongLong(-9223372036854775E3);b=f==0?44:45;break;case 44:d=0;b=113;break;case 45:g=_PyLong_FromLong(1);var m=f;b=g==0?46:49;break;case 46:HEAP[f]=HEAP[m]-1;b=HEAP[f]==0?47:48;break;case 47:FUNCTION_TABLE[HEAP[HEAP[f+4]+24]](f);b=48;break;
case 48:d=0;b=113;break;case 49:h=_PyNumber_Subtract(m,g);HEAP[g]-=1;b=HEAP[g]==0?50:51;break;case 50:FUNCTION_TABLE[HEAP[HEAP[g+4]+24]](g);b=51;break;case 51:HEAP[f]-=1;b=HEAP[f]==0?52:53;break;case 52:FUNCTION_TABLE[HEAP[HEAP[f+4]+24]](f);b=53;break;case 53:f=h;b=h==0?54:55;break;case 54:d=0;b=113;break;case 55:HEAP[k]=0;j=_PyLong_AsLongLongAndOverflow(f,k);HEAP[f]-=1;b=HEAP[f]==0?56:57;break;case 56:FUNCTION_TABLE[HEAP[HEAP[f+4]+24]](f);b=57;break;case 57:b=j==-1?58:61;break;case 58:b=_PyErr_Occurred()!=
0?59:60;break;case 59:d=0;b=113;break;case 60:b=j!=-1?61:62;break;case 61:d=e(Ca,la);b=113;break;case 62:b=HEAP[k]!=-1?63:64;break;case 63:d=e(Ca,Ma);b=113;break;case 64:f=_PyLong_FromString(wa,0,16);b=f==0?65:66;break;case 65:d=0;b=113;break;case 66:HEAP[k]=1234;j=_PyLong_AsLongLongAndOverflow(f,k);HEAP[f]-=1;b=HEAP[f]==0?67:68;break;case 67:FUNCTION_TABLE[HEAP[HEAP[f+4]+24]](f);b=68;break;case 68:var n=j;n==-1?(c=68,b=69):(c=68,b=72);break;case 69:b=_PyErr_Occurred()!=0?70:71;break;case 70:d=0;
b=113;break;case 71:var o=j,c=71;b=72;break;case 72:b=(c==71?o:n)!=255?73:74;break;case 73:d=e(Ca,ib);b=113;break;case 74:b=HEAP[k]!=0?75:76;break;case 75:d=e(Ca,cb);b=113;break;case 76:f=_PyLong_FromString(db,0,16);b=f==0?77:78;break;case 77:d=0;b=113;break;case 78:HEAP[k]=0;j=_PyLong_AsLongLongAndOverflow(f,k);HEAP[f]-=1;b=HEAP[f]==0?79:80;break;case 79:FUNCTION_TABLE[HEAP[HEAP[f+4]+24]](f);b=80;break;case 80:var p=j;p==-1?(c=80,b=81):(c=80,b=84);break;case 81:b=_PyErr_Occurred()!=0?82:83;break;
case 82:d=0;b=113;break;case 83:var q=j,c=83;b=84;break;case 84:b=(c==83?q:p)!=-255?85:86;break;case 85:d=e(Ca,ib);b=113;break;case 86:b=HEAP[k]!=0?87:88;break;case 87:d=e(Ca,Da);b=113;break;case 88:f=_PyLong_FromLongLong(9223372036854775E3);b=f==0?89:90;break;case 89:d=0;b=113;break;case 90:HEAP[k]=1234;j=_PyLong_AsLongLongAndOverflow(f,k);HEAP[f]-=1;b=HEAP[f]==0?91:92;break;case 91:FUNCTION_TABLE[HEAP[HEAP[f+4]+24]](f);b=92;break;case 92:var r=j;r==-1?(c=92,b=93):(c=92,b=96);break;case 93:b=_PyErr_Occurred()!=
0?94:95;break;case 94:d=0;b=113;break;case 95:var s=j,c=95;b=96;break;case 96:b=(c==95?s:r)!=-9223372036854775E3?97:98;break;case 97:d=e(Ca,Za);b=113;break;case 98:b=HEAP[k]!=0?99:100;break;case 99:d=e(Ca,cb);b=113;break;case 100:f=_PyLong_FromLongLong(-9223372036854775E3);b=f==0?101:102;break;case 101:d=0;b=113;break;case 102:HEAP[k]=0;j=_PyLong_AsLongLongAndOverflow(f,k);HEAP[f]-=1;b=HEAP[f]==0?103:104;break;case 103:FUNCTION_TABLE[HEAP[HEAP[f+4]+24]](f);b=104;break;case 104:var t=j;t==-1?(c=104,
b=105):(c=104,b=108);break;case 105:b=_PyErr_Occurred()!=0?106:107;break;case 106:d=0;b=113;break;case 107:var u=j,c=107;b=108;break;case 108:b=(c==107?u:t)!=-9223372036854775E3?109:110;break;case 109:d=e(Ca,Va);b=113;break;case 110:b=HEAP[k]!=0?111:112;break;case 111:d=e(Ca,cb);b=113;break;case 112:HEAP[__Py_NoneStruct]+=1;d=__Py_NoneStruct;b=113;break;case 113:return b=d,STACKTOP=a,b;default:assert(0,"bad label: "+b)}},0,function(){var a=STACKTOP;STACKTOP+=8;_memset(a,0,8);var b;for(b=-1;;)switch(b){case -1:var c,
d,f,g=a;d=_PyTuple_New(1);b=d==0?1:2;break;case 1:c=0;b=19;break;case 2:f=_PyLong_FromLong(42);b=f==0?3:4;break;case 3:c=0;b=19;break;case 4:HEAP[d+12]=f;HEAP[g]=-1;b=_PyArg_ParseTuple(d,Ga,allocate([g,0,0,0],["i64*",0,0,0],ALLOC_STACK))<0?5:6;break;case 5:c=0;b=19;break;case 6:b=HEAP[g]!=42?7:8;break;case 7:c=e(ha,Na);b=19;break;case 8:HEAP[f]-=1;b=HEAP[f]==0?9:10;break;case 9:FUNCTION_TABLE[HEAP[HEAP[f+4]+24]](f);b=10;break;case 10:f=b=_PyInt_FromLong(42);b=b==0?11:12;break;case 11:c=0;b=19;break;
case 12:HEAP[d+12]=f;HEAP[g]=-1;b=_PyArg_ParseTuple(d,Ga,allocate([g,0,0,0],["i64*",0,0,0],ALLOC_STACK))<0?13:14;break;case 13:c=0;b=19;break;case 14:b=HEAP[g]!=42?15:16;break;case 15:c=e(ha,jb);b=19;break;case 16:HEAP[d]-=1;b=HEAP[d]==0?17:18;break;case 17:FUNCTION_TABLE[HEAP[HEAP[d+4]+24]](d);b=18;break;case 18:HEAP[__Py_NoneStruct]+=1;c=__Py_NoneStruct;b=19;break;case 19:return STACKTOP=a,c;default:assert(0,"bad label: "+b)}},0,function(a,b){var c=STACKTOP;STACKTOP+=8;_memset(c,0,8);var d;for(d=
-1;;)switch(d){case -1:var e,f=c,g=c+4;d=b;HEAP[g]=0;d=_PyArg_ParseTuple(d,fb,allocate([f,0,0,0,g,0,0,0],["i8**",0,0,0,"i8**",0,0,0],ALLOC_STACK))==0?1:2;break;case 1:e=0;d=3;break;case 2:e=_PyCodec_IncrementalEncoder(HEAP[f],HEAP[g]);d=3;break;case 3:return STACKTOP=c,e;default:assert(0,"bad label: "+d)}},0,function(a,b){var c=STACKTOP;STACKTOP+=8;_memset(c,0,8);var d;for(d=-1;;)switch(d){case -1:var e,f=c,g=c+4;d=b;HEAP[g]=0;d=_PyArg_ParseTuple(d,ma,allocate([f,0,0,0,g,0,0,0],["i8**",0,0,0,"i8**",
0,0,0],ALLOC_STACK))==0?1:2;break;case 1:e=0;d=3;break;case 2:e=_PyCodec_IncrementalDecoder(HEAP[f],HEAP[g]);d=3;break;case 3:return STACKTOP=c,e;default:assert(0,"bad label: "+d)}},0,function(){var a=STACKTOP;STACKTOP+=8;_memset(a,0,8);var b;for(b=-1;;)switch(b){case -1:var c,d,f,g=a,h=a+4;HEAP[qa]=HEAP[__Py_ascii_whitespace+25];d=_PyTuple_New(1);b=d==0?1:2;break;case 1:c=0;b=16;break;case 2:f=_PyUnicodeUCS2_Decode(M,4,na,0);b=f==0?3:4;break;case 3:c=0;b=16;break;case 4:HEAP[d+12]=f;HEAP[g]=0;b=
_PyArg_ParseTuple(d,nb,allocate([g,0,0,0],["i16**",0,0,0],ALLOC_STACK))<0?5:6;break;case 5:c=0;b=16;break;case 6:b=HEAP[f+12]!=HEAP[g]?7:8;break;case 7:c=e(ca,ua);b=16;break;case 8:HEAP[g]=0;b=_PyArg_ParseTuple(d,Ea,allocate([g,0,0,0,h,0,0,0],["i16**",0,0,0,"i32*",0,0,0],ALLOC_STACK))<0?9:10;break;case 9:c=0;b=16;break;case 10:b=HEAP[f+12]!=HEAP[g]?12:11;break;case 11:b=HEAP[f+8]!=HEAP[h]?12:13;break;case 12:c=e(ca,Eb);b=16;break;case 13:HEAP[d]-=1;b=HEAP[d]==0?14:15;break;case 14:FUNCTION_TABLE[HEAP[HEAP[d+
4]+24]](d);b=15;break;case 15:HEAP[__Py_NoneStruct]+=1;c=__Py_NoneStruct;b=16;break;case 16:return b=c,STACKTOP=a,b;default:assert(0,"bad label: "+b)}},0,function(){var a=STACKTOP;STACKTOP+=8;_memset(a,0,8);var b;for(b=-1;;)switch(b){case -1:var c,d=a,f;HEAP[d+4]=0;HEAP[d]=1092557;d=_PyUnicodeUCS2_FromWideChar(d,1);b=d==0?1:2;break;case 1:c=0;b=25;break;case 2:f=_PyUnicodeUCS2_FromString(zb);var g=d;b=f==0?3:6;break;case 3:HEAP[d]=HEAP[g]-1;b=HEAP[d]==0?4:5;break;case 4:FUNCTION_TABLE[HEAP[HEAP[d+
4]+24]](d);b=5;break;case 5:c=0;b=25;break;case 6:var h=d;b=HEAP[g+8]!=HEAP[f+8]?7:12;break;case 7:HEAP[d]=HEAP[h]-1;b=HEAP[d]==0?8:9;break;case 8:FUNCTION_TABLE[HEAP[HEAP[d+4]+24]](d);b=9;break;case 9:HEAP[f]-=1;b=HEAP[f]==0?10:11;break;case 10:FUNCTION_TABLE[HEAP[HEAP[f+4]+24]](f);b=11;break;case 11:c=e(va,xa);b=25;break;case 12:b=_PyUnicodeUCS2_Compare(h,f)!=0;HEAP[d]-=1;var j=HEAP[d]==0;b=b?13:20;break;case 13:b=j?14:15;break;case 14:FUNCTION_TABLE[HEAP[HEAP[d+4]+24]](d);b=15;break;case 15:HEAP[f]-=
1;b=HEAP[f]==0?16:17;break;case 16:FUNCTION_TABLE[HEAP[HEAP[f+4]+24]](f);b=17;break;case 17:b=_PyErr_Occurred()!=0?18:19;break;case 18:c=0;b=25;break;case 19:c=e(va,V);b=25;break;case 20:b=j?21:22;break;case 21:FUNCTION_TABLE[HEAP[HEAP[d+4]+24]](d);b=22;break;case 22:HEAP[f]-=1;b=HEAP[f]==0?23:24;break;case 23:FUNCTION_TABLE[HEAP[HEAP[f+4]+24]](f);b=24;break;case 24:HEAP[__Py_NoneStruct]+=1;c=__Py_NoneStruct;b=25;break;case 25:return STACKTOP=a,c;default:assert(0,"bad label: "+b)}},0,function(){var a=
STACKTOP;STACKTOP+=48;_memset(a,0,48);var c,d=null;for(c=-1;;)switch(c){case -1:var f,h,j,k,l,m=a,n,o;j=0;_llvm_memset_p0i8_i32(m,0,48,4,0);HEAP[m]=Fb;HEAP[m+4]=vc;HEAP[m+8]=dc;HEAP[m+12]=kc;HEAP[m+12+4]=Pa;HEAP[m+12+8]=Ua;HEAP[m+24]=qb;HEAP[m+24+4]=Ab;HEAP[m+24+8]=oc;n=m;h=_PyCapsule_New(nc,Pb,g+6);_PyCapsule_SetContext(h,rb);b(h);c=HEAP[fa]!=0?1:2;break;case 1:var p=HEAP[fa];j=p;d=1;c=56;break;case 2:c=HEAP[tb]==0?3:4;break;case 3:j=tc;c=57;break;case 4:HEAP[tb]=0;HEAP[h]-=1;c=HEAP[h]==0?5:6;break;
case 5:FUNCTION_TABLE[HEAP[HEAP[h+4]+24]](h);c=6;break;case 6:c=HEAP[fa]!=0?7:8;break;case 7:var q=HEAP[fa];j=q;d=7;c=56;break;case 8:c=HEAP[tb]==0?9:10;break;case 9:j=tc;c=57;break;case 10:HEAP[tb]=0;h=_PyCapsule_New(n,ac,0);_PyCapsule_SetPointer(h,nc);_PyCapsule_SetName(h,Pb);_PyCapsule_SetDestructor(h,g+6);_PyCapsule_SetContext(h,rb);b(h);c=HEAP[fa]!=0?11:12;break;case 11:var r=HEAP[fa];j=r;d=11;c=56;break;case 12:c=HEAP[tb]==0?13:14;break;case 13:j=tc;c=57;break;case 14:HEAP[tb]=0;l=_PyCapsule_GetPointer(h,
$b);c=_PyErr_Occurred()==0?15:16;break;case 15:j=Dc;c=57;break;case 16:_PyErr_Clear();c=l!=0?17:20;break;case 17:c=l==nc?18:19;break;case 18:j=Kc;c=57;break;case 19:j=Ac;c=57;break;case 20:_PyCapsule_SetDestructor(h,0);HEAP[h]-=1;c=HEAP[h]==0?21:22;break;case 21:FUNCTION_TABLE[HEAP[HEAP[h+4]+24]](h);c=22;break;case 22:c=HEAP[tb]!=0?23:24;break;case 23:j=mc;c=57;break;case 24:n=m;c=54;break;case 25:o=_PyImport_ImportModule(HEAP[n+4]);c=o!=0?26:52;break;case 26:k=_PyCapsule_Import(HEAP[n],0);c=k==0?
27:30;break;case 27:HEAP[o]-=1;c=HEAP[o]==0?28:29;break;case 28:FUNCTION_TABLE[HEAP[HEAP[o+4]+24]](o);c=29;break;case 29:_sprintf(Oc,Fc,allocate([Pc,0,0,0,HEAP[n+4],0,0,0,HEAP[n+8],0,0,0],["i8*",0,0,0,"i8*",0,0,0,"i8*",0,0,0],ALLOC_STACK));j=Oc;c=57;break;case 30:h=_PyObject_GetAttrString(o,HEAP[n+8]);c=h==0?31:34;break;case 31:HEAP[o]-=1;c=HEAP[o]==0?32:33;break;case 32:FUNCTION_TABLE[HEAP[HEAP[o+4]+24]](o);c=33;break;case 33:f=0;c=59;break;case 34:l=_PyCapsule_GetPointer(h,hd);c=_PyErr_Occurred()==
0?35:40;break;case 35:HEAP[h]-=1;c=HEAP[h]==0?36:37;break;case 36:FUNCTION_TABLE[HEAP[HEAP[h+4]+24]](h);c=37;break;case 37:HEAP[o]-=1;c=HEAP[o]==0?38:39;break;case 38:FUNCTION_TABLE[HEAP[HEAP[o+4]+24]](o);c=39;break;case 39:_sprintf(Oc,Fc,allocate([Dc,0,0,0,HEAP[n+4],0,0,0,HEAP[n+8],0,0,0],["i8*",0,0,0,"i8*",0,0,0,"i8*",0,0,0],ALLOC_STACK));j=Oc;c=57;break;case 40:_PyErr_Clear();c=l!=0?41:48;break;case 41:HEAP[o]-=1;c=HEAP[o]==0?42:43;break;case 42:FUNCTION_TABLE[HEAP[HEAP[o+4]+24]](o);c=43;break;
case 43:HEAP[h]-=1;c=HEAP[h]==0?44:45;break;case 44:FUNCTION_TABLE[HEAP[HEAP[h+4]+24]](h);c=45;break;case 45:var s=HEAP[n+8],t=HEAP[n+4];c=l==k?46:47;break;case 46:_sprintf(Oc,Fc,allocate([Id,0,0,0,t,0,0,0,s,0,0,0],["i8*",0,0,0,"i8*",0,0,0,"i8*",0,0,0],ALLOC_STACK));j=Oc;c=57;break;case 47:_sprintf(Oc,Fc,allocate([Ac,0,0,0,t,0,0,0,s,0,0,0],["i8*",0,0,0,"i8*",0,0,0,"i8*",0,0,0],ALLOC_STACK));j=Oc;c=57;break;case 48:HEAP[h]-=1;c=HEAP[h]==0?49:50;break;case 49:FUNCTION_TABLE[HEAP[HEAP[h+4]+24]](h);c=
50;break;case 50:HEAP[o]-=1;c=HEAP[o]==0?51:53;break;case 51:FUNCTION_TABLE[HEAP[HEAP[o+4]+24]](o);c=53;break;case 52:_PyErr_Clear();c=53;break;case 53:n+=12;c=54;break;case 54:c=HEAP[n+4]!=0?25:55;break;case 55:var u=j,d=55;c=56;break;case 56:c=(d==55?u:d==11?r:d==7?q:p)!=0?57:58;break;case 57:f=e(Rc,j);c=59;break;case 58:HEAP[__Py_NoneStruct]+=1;f=__Py_NoneStruct;c=59;break;case 59:return c=f,STACKTOP=a,c;default:assert(0,"bad label: "+c)}},0,function(a,b){var c=STACKTOP;STACKTOP+=8;_memset(c,0,
8);var d;for(d=-1;;)switch(d){case -1:var e,f=c,g=c+4;d=_PyArg_ParseTuple(b,Jd,allocate([g,0,0,0,f,0,0,0],["%struct.PyObject**",0,0,0,"%struct.PyObject**",0,0,0],ALLOC_STACK))==0?1:2;break;case 1:e=0;d=5;break;case 2:d=_PyTraceBack_Print(HEAP[g],HEAP[f]);d=d<0?3:4;break;case 3:e=0;d=5;break;case 4:HEAP[__Py_NoneStruct]+=1;e=__Py_NoneStruct;d=5;break;case 5:return STACKTOP=c,e;default:assert(0,"bad label: "+d)}},0,function(a,b){var c=STACKTOP;STACKTOP+=12;_memset(c,0,12);var d;for(d=-1;;)switch(d){case -1:var e,
f=c,g=c+4,h=c+8;d=_PyArg_ParseTuple(b,Vd,allocate([f,0,0,0,g,0,0,0,h,0,0,0],["i8**",0,0,0,"i8**",0,0,0,"i32*",0,0,0],ALLOC_STACK))==0?1:2;break;case 1:e=0;d=3;break;case 2:e=_PyCode_NewEmpty(HEAP[f],HEAP[g],HEAP[h]);d=3;break;case 3:return d=e,STACKTOP=c,d;default:assert(0,"bad label: "+d)}},0,function(a,b,c){a=STACKTOP;STACKTOP+=16;_memset(a,0,16);var d;for(d=-1;;)switch(d){case -1:var e,f,g=a,h=a+4,j=a+8,k=a+12;d=b;e=c;HEAP[h]=0;HEAP[j]=0;HEAP[k]=0;d=_PyArg_ParseTupleAndKeywords(d,e,Lc,Zc,allocate([g,
0,0,0,h,0,0,0,j,0,0,0,k,0,0,0],["i8**",0,0,0,"i8**",0,0,0,"%struct.PyObject**",0,0,0,"%struct.PyObject**",0,0,0],ALLOC_STACK))==0?1:2;break;case 1:f=0;d=3;break;case 2:f=_PyErr_NewExceptionWithDoc(HEAP[g],HEAP[h],HEAP[j],HEAP[k]);d=3;break;case 3:return b=f,STACKTOP=a,b;default:assert(0,"bad label: "+d)}},0,function(a){_free(a)},0,_PyObject_GenericSetAttr,0,function(a,b,c){var d=STACKTOP;STACKTOP+=8;_memset(d,0,8);var e;for(e=-1;;)switch(e){case -1:var f,g,h,j,k=d,l=d+4;e=a;f=b;g=c;HEAP[k]=0;HEAP[l]=
0;j=__PyObject_New(e);e=j==0?1:2;break;case 1:h=0;e=14;break;case 2:_llvm_memset_p0i8_i32(j+8,0,60,1,0);e=_PyArg_ParseTupleAndKeywords(f,g,W,Hc,allocate([j+8,0,0,0,j+8+1,0,0,0,j+8+2,0,0,0,j+8+4,0,0,0,j+8+6,0,0,0,j+8+8,0,0,0,j+8+12,0,0,0,j+8+16,0,0,0,j+8+20,0,0,0,j+8+24,0,0,0,j+8+28,0,0,0,k,0,0,0,l,0,0,0,j+8+44,0,0,0,j+8+52,0,0,0],["i8*",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"i16*",0,0,0,"i16*",0,0,0,"i32*",0,0,0,"i32*",0,0,0,"i32*",0,0,0,"i32*",0,0,0,"float*",0,0,0,"double*",0,0,0,"i8**",0,0,0,"i32*",0,0,
0,"i64*",0,0,0,"i64*",0,0,0],ALLOC_STACK))==0?3:6;break;case 3:HEAP[j]-=1;e=HEAP[j]==0?4:5;break;case 4:FUNCTION_TABLE[HEAP[HEAP[j+4]+24]](j);e=5;break;case 5:h=0;e=14;break;case 6:e=HEAP[k]!=0?7:12;break;case 7:e=HEAP[l]>5?8:11;break;case 8:HEAP[j]-=1;e=HEAP[j]==0?9:10;break;case 9:FUNCTION_TABLE[HEAP[HEAP[j+4]+24]](j);e=10;break;case 10:_PyErr_SetString(HEAP[_PyExc_ValueError],ed);h=0;e=14;break;case 11:_strcpy(j+8+36,HEAP[k]);e=13;break;case 12:_llvm_memset_p0i8_i32(j+8+36,0,1,1,0);e=13;break;
case 13:h=j;e=14;break;case 14:return a=h,STACKTOP=d,a;default:assert(0,"bad label: "+e)}},0]);c.run=a;a();return c});