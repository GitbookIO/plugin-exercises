(function(g){function e(a,b){var c;for(c=-1;;)switch(c){case -1:var d,e,f,g,h,j,k;d=a;e=b;c=HEAP[d+16]>=e?1:4;break;case 1:c=HEAP[d+8]<e+16?2:4;break;case 2:c=HEAP[d+12]!=0?3:4;break;case 3:HEAP[d+8]=e;h=0;c=19;break;case 4:var l=e>>4;c=HEAP[d+8]<=7?5:6;break;case 5:g=3;c=7;break;case 6:c=g=7;break;case 7:k=g+l+e;j=HEAP[d+12];c=Math.floor(4294967295/HEAP[HEAP[d+20]+4])>=k?8:15;break;case 8:c=k*HEAP[HEAP[d+20]+4]>=0?9:14;break;case 9:c=k*HEAP[HEAP[d+
20]+4]>=0?10:13;break;case 10:c=k*HEAP[HEAP[d+20]+4]!=0?11:12;break;case 11:f=k*HEAP[HEAP[d+20]+4];c=16;break;case 12:f=1;c=16;break;case 13:j=0;c=17;break;case 14:j=0;c=17;break;case 15:j=0;c=17;break;case 16:j=c=_realloc(j,f);c=c==0?17:18;break;case 17:_PyErr_NoMemory();h=-1;c=19;break;case 18:HEAP[d+12]=j;HEAP[d+8]=e;HEAP[d+16]=k;h=0;c=19;break;case 19:return d=h;default:assert(0,"bad label: "+c)}}function b(a,b,c){var d;for(d=-1;;)switch(d){case -1:var e,f,g,h,j,k,l,m,n;e=a;f=b;g=c;d=f<0?1:2;
break;case 1:__PyErr_BadInternalCall(L,422);l=0;d=22;break;case 2:n=f*HEAP[g+4];d=Math.floor(n/HEAP[g+4])!=f?3:4;break;case 3:l=_PyErr_NoMemory();d=22;break;case 4:m=FUNCTION_TABLE[HEAP[e+152]](e,0);d=m==0?5:6;break;case 5:l=0;d=22;break;case 6:HEAP[m+20]=g;HEAP[m+16]=f;HEAP[m+24]=0;HEAP[m+8]=f;d=f<=0?7:8;break;case 7:HEAP[m+12]=0;d=21;break;case 8:d=n>=0?9:16;break;case 9:d=n>=0?10:14;break;case 10:d=n!=0?11:12;break;case 11:h=n;d=13;break;case 12:h=1;d=13;break;case 13:j=_malloc(h);d=15;break;case 14:j=
0;d=15;break;case 15:k=j;d=17;break;case 16:k=0;d=17;break;case 17:HEAP[m+12]=k;d=HEAP[m+12]==0?18:21;break;case 18:HEAP[m]-=1;d=HEAP[m]==0?19:20;break;case 19:FUNCTION_TABLE[HEAP[HEAP[m+4]+24]](m);d=20;break;case 20:l=_PyErr_NoMemory();d=22;break;case 21:l=m;d=22;break;case 22:return a=l;default:assert(0,"bad label: "+d)}}function a(a,b){var c,d=null;for(c=-1;;)switch(c){case -1:var e,f,g;e=a;f=b;HEAP[e+4]!=fa?(d=-1,c=1):(d=-1,c=4);break;case 1:c=_PyType_IsSubtype(HEAP[e+4],fa)==0?2:3;break;case 2:throw ___assert_fail($,
L,456,R),"Reached an unreachable!";case 3:var h=f,d=3;c=4;break;case 4:c=d==3?h:b;g=e;c=c<0?6:5;break;case 5:c=HEAP[g+8]<=f?6:7;break;case 6:throw ___assert_fail(K,L,458,R),"Reached an unreachable!";case 7:return d=FUNCTION_TABLE[HEAP[HEAP[g+20]+8]](g,f);default:assert(0,"bad label: "+c)}}function c(a,b,c){var d;for(d=-1;;)switch(d){case -1:var f,g,h,j,k,l;f=a;g=b;h=c;l=HEAP[f+8];d=h==0?1:2;break;case 1:__PyErr_BadInternalCall(L,468);j=-1;d=14;break;case 2:d=FUNCTION_TABLE[HEAP[HEAP[f+20]+12]](f,
-1,h)<0?3:4;break;case 3:j=-1;d=14;break;case 4:d=e(f,l+1)==-1?5:6;break;case 5:j=-1;d=14;break;case 6:k=HEAP[f+12];d=g<0?7:9;break;case 7:g=l+g;d=g<0?8:9;break;case 8:g=0;d=9;break;case 9:d=g>l?10:11;break;case 10:g=l;d=11;break;case 11:d=g!=l?12:13;break;case 12:_llvm_memmove_p0i8_p0i8_i32(k+HEAP[HEAP[f+20]+4]*(g+1),k+g*HEAP[HEAP[f+20]+4],HEAP[HEAP[f+20]+4]*(l-g),1,0);d=13;break;case 13:j=FUNCTION_TABLE[HEAP[HEAP[f+20]+12]](f,g,h);d=14;break;case 14:return a=j;default:assert(0,"bad label: "+d)}}
function d(b,c){var d;for(d=-1;;)switch(d){case -1:var e,f,g;e=b;f=c;d=f<0?2:1;break;case 1:d=HEAP[e+8]<=f?2:3;break;case 2:_PyErr_SetString(HEAP[_PyExc_IndexError],H);g=0;d=4;break;case 3:g=a(e,f);d=4;break;case 4:return d=g;default:assert(0,"bad label: "+d)}}function f(a,c,d){var e;for(e=-1;;)switch(e){case -1:var f,g,h,j,k;f=a;g=c;h=d;e=g<0?1:2;break;case 1:g=0;e=4;break;case 2:e=HEAP[f+8]<g?3:4;break;case 3:g=HEAP[f+8];e=4;break;case 4:e=h<0?5:6;break;case 5:h=0;e=6;break;case 6:e=h<g?7:8;break;
case 7:h=g;e=10;break;case 8:e=HEAP[f+8]<h?9:10;break;case 9:h=HEAP[f+8];e=10;break;case 10:k=e=b(fa,h-g,HEAP[f+20]);e=e==0?11:12;break;case 11:j=0;e=13;break;case 12:_llvm_memcpy_p0i8_p0i8_i32(HEAP[k+12],HEAP[f+12]+g*HEAP[HEAP[f+20]+4],HEAP[HEAP[f+20]+4]*(h-g),1,0);j=k;e=13;break;case 13:return a=j;default:assert(0,"bad label: "+e)}}function h(a,b,c,d){var e;for(e=-1;;)switch(e){case -1:var g,j,k,l,m,n,o,p,q,r,s,t,u;g=a;j=b;k=c;l=d;e=l==0?1:2;break;case 1:s=0;e=13;break;case 2:e=HEAP[l+4]==fa?4:
3;break;case 3:e=_PyType_IsSubtype(HEAP[l+4],fa)!=0?4:12;break;case 4:s=HEAP[l+8];var v=l;e=g==l?5:10;break;case 5:l=f(v,0,s);e=l==0?6:7;break;case 6:q=-1;e=48;break;case 7:u=h(g,j,k,l);HEAP[l]-=1;e=HEAP[l]==0?8:9;break;case 8:FUNCTION_TABLE[HEAP[HEAP[l+4]+24]](l);e=9;break;case 9:q=u;e=48;break;case 10:e=HEAP[v+20]!=HEAP[g+20]?11:13;break;case 11:_PyErr_BadArgument();q=-1;e=48;break;case 12:_PyErr_Format(HEAP[_PyExc_TypeError],z,allocate([HEAP[HEAP[l+4]+12],0,0,0],["i8*",0,0,0],ALLOC_STACK));q=-1;
e=48;break;case 13:e=j<0?14:15;break;case 14:j=0;e=17;break;case 15:e=HEAP[g+8]<j?16:17;break;case 16:j=HEAP[g+8];e=17;break;case 17:e=k<0?18:19;break;case 18:k=0;e=19;break;case 19:e=k<j?20:21;break;case 20:k=j;e=23;break;case 21:e=HEAP[g+8]<k?22:23;break;case 22:k=HEAP[g+8];e=23;break;case 23:r=HEAP[g+12];t=s+(0-(k-j));e=s+(0-(k-j))<0?24:34;break;case 24:_llvm_memmove_p0i8_p0i8_i32(r+HEAP[HEAP[g+20]+4]*(t+k),r+k*HEAP[HEAP[g+20]+4],HEAP[HEAP[g+20]+4]*(HEAP[g+8]-k),1,0);HEAP[g+8]=t+HEAP[g+8];e=HEAP[HEAP[g+
20]+4]*HEAP[g+8]>=0?25:32;break;case 25:e=HEAP[HEAP[g+20]+4]*HEAP[g+8]>=0?26:30;break;case 26:e=HEAP[HEAP[g+20]+4]*HEAP[g+8]!=0?27:28;break;case 27:n=HEAP[HEAP[g+20]+4]*HEAP[g+8];e=29;break;case 28:n=1;e=29;break;case 29:o=_realloc(r,n);e=31;break;case 30:o=0;e=31;break;case 31:p=o;e=33;break;case 32:p=0;e=33;break;case 33:r=p;HEAP[g+12]=r;HEAP[g+16]=HEAP[g+8];e=45;break;case 34:e=t>0?35:45;break;case 35:e=HEAP[HEAP[g+20]+4]*(t+HEAP[g+8])>=0?36:41;break;case 36:e=HEAP[HEAP[g+20]+4]*(t+HEAP[g+8])>=
0?37:40;break;case 37:e=HEAP[HEAP[g+20]+4]*(t+HEAP[g+8])!=0?38:39;break;case 38:m=HEAP[HEAP[g+20]+4]*(t+HEAP[g+8]);e=42;break;case 39:m=1;e=42;break;case 40:r=0;e=43;break;case 41:r=0;e=43;break;case 42:r=e=_realloc(r,m);e=e==0?43:44;break;case 43:_PyErr_NoMemory();q=-1;e=48;break;case 44:_llvm_memmove_p0i8_p0i8_i32(r+HEAP[HEAP[g+20]+4]*(t+k),r+k*HEAP[HEAP[g+20]+4],HEAP[HEAP[g+20]+4]*(HEAP[g+8]-k),1,0);HEAP[g+12]=r;HEAP[g+8]=t+HEAP[g+8];HEAP[g+16]=HEAP[g+8];e=45;break;case 45:e=s>0?46:47;break;case 46:_llvm_memcpy_p0i8_p0i8_i32(r+
j*HEAP[HEAP[g+20]+4],HEAP[l+12],s*HEAP[HEAP[l+20]+4],1,0);e=47;break;case 47:q=0;e=48;break;case 48:return a=q;default:assert(0,"bad label: "+e)}}function j(a,b,c){var d;for(d=-1;;)switch(d){case -1:var e,f,g,j;e=a;f=b;g=c;d=f<0?2:1;break;case 1:d=HEAP[e+8]<=f?2:3;break;case 2:_PyErr_SetString(HEAP[_PyExc_IndexError],aa);j=-1;d=6;break;case 3:d=g==0?4:5;break;case 4:j=h(e,f,f+1,g);d=6;break;case 5:j=FUNCTION_TABLE[HEAP[HEAP[e+20]+12]](e,f,g);d=6;break;case 6:return a=j;default:assert(0,"bad label: "+
d)}}function k(a,b){var d;for(d=-1;;)switch(d){case -1:var e,f,g,h;e=a;g=_PyObject_GetIter(b);d=g==0?1:10;break;case 1:f=-1;d=16;break;case 2:d=c(e,HEAP[e+8],h)!=0;HEAP[h]-=1;var j=HEAP[h]==0;d=d?3:8;break;case 3:d=j?4:5;break;case 4:FUNCTION_TABLE[HEAP[HEAP[h+4]+24]](h);d=5;break;case 5:HEAP[g]-=1;d=HEAP[g]==0?6:7;break;case 6:FUNCTION_TABLE[HEAP[HEAP[g+4]+24]](g);d=7;break;case 7:f=-1;d=16;break;case 8:d=j?9:10;break;case 9:FUNCTION_TABLE[HEAP[HEAP[h+4]+24]](h);d=10;break;case 10:h=d=_PyIter_Next(g);
d=d!=0?2:11;break;case 11:HEAP[g]-=1;d=HEAP[g]==0?12:13;break;case 12:FUNCTION_TABLE[HEAP[HEAP[g+4]+24]](g);d=13;break;case 13:d=_PyErr_Occurred()!=0?14:15;break;case 14:f=-1;d=16;break;case 15:f=0;d=16;break;case 16:return e=f;default:assert(0,"bad label: "+d)}}function l(a,b){var c;for(c=-1;;)switch(c){case -1:var d,e,f,g,h,j,l,m;d=a;e=b;c=HEAP[e+4]!=fa?1:3;break;case 1:c=_PyType_IsSubtype(HEAP[e+4],fa)==0?2:3;break;case 2:j=k(d,e);c=20;break;case 3:c=HEAP[d+20]!=HEAP[e+20]?4:5;break;case 4:_PyErr_SetString(HEAP[_PyExc_TypeError],
da);j=-1;c=20;break;case 5:c=HEAP[d+8]>2147483647-HEAP[e+8]?7:6;break;case 6:c=HEAP[e+8]+HEAP[d+8]>(2147483647/HEAP[HEAP[d+20]+4]|0)?7:8;break;case 7:_PyErr_NoMemory();j=-1;c=20;break;case 8:l=HEAP[e+8]+HEAP[d+8];m=HEAP[d+12];c=l*HEAP[HEAP[d+20]+4]>=0?9:16;break;case 9:c=l*HEAP[HEAP[d+20]+4]>=0?10:14;break;case 10:c=l*HEAP[HEAP[d+20]+4]!=0?11:12;break;case 11:f=l*HEAP[HEAP[d+20]+4];c=13;break;case 12:f=1;c=13;break;case 13:g=_realloc(HEAP[d+12],f);c=15;break;case 14:g=0;c=15;break;case 15:h=g;c=17;
break;case 16:h=0;c=17;break;case 17:HEAP[d+12]=h;c=HEAP[d+12]==0?18:19;break;case 18:HEAP[d+12]=m;_PyErr_NoMemory();j=-1;c=20;break;case 19:_llvm_memcpy_p0i8_p0i8_i32(HEAP[d+12]+HEAP[HEAP[d+20]+4]*HEAP[d+8],HEAP[e+12],HEAP[HEAP[e+20]+4]*HEAP[e+8],1,0);HEAP[d+8]=l;HEAP[d+16]=l;j=0;c=20;break;case 20:return c=j;default:assert(0,"bad label: "+c)}}function m(a,b,d){var e;for(e=-1;;)switch(e){case -1:var f;e=c(a,b,d)!=0?1:2;break;case 1:f=0;e=3;break;case 2:HEAP[__Py_NoneStruct]+=1;f=__Py_NoneStruct;
e=3;break;case 3:return a=f;default:assert(0,"bad label: "+e)}}function n(a,b){var c=STACKTOP;STACKTOP+=8;_memset(c,0,8);var d;for(d=-1;;)switch(d){case -1:var e,f,g,h,j,k,l=c,m=c+4,n,o,p,q,r,s;e=a;d=__PyArg_ParseTuple_SizeT(b,Ia,allocate([l,0,0,0,m,0,0,0],["%struct.PyObject**",0,0,0,"i32*",0,0,0],ALLOC_STACK))==0?1:2;break;case 1:k=0;d=31;break;case 2:n=_PyFile_AsFile(HEAP[l]);d=n==0?3:4;break;case 3:_PyErr_SetString(HEAP[_PyExc_TypeError],Fa);k=0;d=31;break;case 4:d=HEAP[m]>0?5:30;break;case 5:o=
HEAP[e+12];p=HEAP[HEAP[e+20]+4];r=HEAP[m]+HEAP[e+8];d=r<=0?15:6;break;case 6:s=p*r;d=Math.floor(s/p)!=r?15:7;break;case 7:d=s>=0?8:13;break;case 8:d=s>=0?9:12;break;case 9:d=s!=0?10:11;break;case 10:j=s;d=14;break;case 11:j=1;d=14;break;case 12:o=0;d=15;break;case 13:o=0;d=15;break;case 14:o=d=_realloc(o,j);d=d==0?15:16;break;case 15:_PyErr_NoMemory();k=0;d=31;break;case 16:HEAP[e+12]=o;HEAP[e+8]=HEAP[m]+HEAP[e+8];HEAP[e+16]=HEAP[e+8];q=_fread(o+(HEAP[e+8]-HEAP[m])*p,p,HEAP[m],n);d=HEAP[m]>q?17:30;
break;case 17:HEAP[e+8]=0-HEAP[m]+HEAP[e+8]+(0-(0-q));d=p*HEAP[e+8]>=0?18:25;break;case 18:d=p*HEAP[e+8]>=0?19:23;break;case 19:d=p*HEAP[e+8]!=0?20:21;break;case 20:f=p*HEAP[e+8];d=22;break;case 21:f=1;d=22;break;case 22:g=_realloc(o,f);d=24;break;case 23:g=0;d=24;break;case 24:h=g;d=26;break;case 25:h=0;d=26;break;case 26:o=h;HEAP[e+12]=o;HEAP[e+16]=HEAP[e+8];d=_ferror(n)!=0?27:28;break;case 27:_PyErr_SetFromErrno(HEAP[_PyExc_IOError]);_clearerr(n);d=29;break;case 28:_PyErr_SetString(HEAP[_PyExc_EOFError],
$a);d=29;break;case 29:k=0;d=31;break;case 30:HEAP[__Py_NoneStruct]+=1;k=__Py_NoneStruct;d=31;break;case 31:return e=k,STACKTOP=c,e;default:assert(0,"bad label: "+d)}}function o(a,b){var c;for(c=-1;;)switch(c){case -1:var d,e,f;d=a;f=_PyFile_AsFile(b);c=f==0?1:2;break;case 1:_PyErr_SetString(HEAP[_PyExc_TypeError],kb);e=0;c=6;break;case 2:c=HEAP[d+8]>0?3:5;break;case 3:c=_fwrite(HEAP[d+12],HEAP[HEAP[d+20]+4],HEAP[d+8],f)!=HEAP[d+8]?4:5;break;case 4:_PyErr_SetFromErrno(HEAP[_PyExc_IOError]);_clearerr(f);
e=0;c=6;break;case 5:HEAP[__Py_NoneStruct]+=1;e=__Py_NoneStruct;c=6;break;case 6:return c=e;default:assert(0,"bad label: "+c)}}function p(b){var c;for(c=-1;;)switch(c){case -1:var d,e,f,g,h;d=b;f=_PyList_New(HEAP[d+8]);c=f==0?1:2;break;case 1:e=0;c=10;break;case 2:g=0;c=8;break;case 3:h=a(d,g);var j=f;c=h==0?4:7;break;case 4:HEAP[f]=HEAP[j]-1;c=HEAP[f]==0?5:6;break;case 5:FUNCTION_TABLE[HEAP[HEAP[f+4]+24]](f);c=6;break;case 6:e=0;c=10;break;case 7:_PyList_SetItem(j,g,h);g+=1;c=8;break;case 8:c=HEAP[d+
8]>g?3:9;break;case 9:e=f;c=10;break;case 10:return b=e;default:assert(0,"bad label: "+c)}}function q(a,b){var c=STACKTOP;STACKTOP+=8;_memset(c,0,8);var d;for(d=-1;;)switch(d){case -1:var e,f,g,h=c,j=c+4,k,l;e=a;d=b;k=HEAP[HEAP[e+20]+4];d=__PyArg_ParseTuple_SizeT(d,ta,allocate([h,0,0,0,j,0,0,0],["i8**",0,0,0,"i32*",0,0,0],ALLOC_STACK))==0?1:2;break;case 1:g=0;d=19;break;case 2:d=HEAP[j]%k!=0?3:4;break;case 3:_PyErr_SetString(HEAP[_PyExc_ValueError],O);g=0;d=19;break;case 4:HEAP[j]=HEAP[j]/k|0;d=HEAP[j]>
0?5:18;break;case 5:l=HEAP[e+12];d=2147483647-HEAP[e+8]<HEAP[j]?7:6;break;case 6:d=HEAP[j]+HEAP[e+8]>(2147483647/k|0)?7:8;break;case 7:g=_PyErr_NoMemory();d=19;break;case 8:d=(HEAP[j]+HEAP[e+8])*k>=0?9:14;break;case 9:d=(HEAP[j]+HEAP[e+8])*k>=0?10:13;break;case 10:d=(HEAP[j]+HEAP[e+8])*k!=0?11:12;break;case 11:f=(HEAP[j]+HEAP[e+8])*k;d=15;break;case 12:f=1;d=15;break;case 13:l=0;d=16;break;case 14:l=0;d=16;break;case 15:l=d=_realloc(l,f);d=d==0?16:17;break;case 16:_PyErr_NoMemory();g=0;d=19;break;
case 17:HEAP[e+12]=l;HEAP[e+8]=HEAP[j]+HEAP[e+8];HEAP[e+16]=HEAP[e+8];_llvm_memcpy_p0i8_p0i8_i32(l+(HEAP[e+8]-HEAP[j])*k,HEAP[h],k*HEAP[j],1,0);d=18;break;case 18:HEAP[__Py_NoneStruct]+=1;g=__Py_NoneStruct;d=19;break;case 19:return e=g,STACKTOP=c,e;default:assert(0,"bad label: "+d)}}function r(a){var b;for(b=-1;;)switch(b){case -1:var c,d;c=a;b=HEAP[c+8]<=(2147483647/HEAP[HEAP[c+20]+4]|0)?1:2;break;case 1:d=_PyString_FromStringAndSize(HEAP[c+12],HEAP[HEAP[c+20]+4]*HEAP[c+8]);b=3;break;case 2:d=_PyErr_NoMemory();
b=3;break;case 3:return a=d;default:assert(0,"bad label: "+b)}}function t(a){var b;for(b=-1;;)switch(b){case -1:var c,d;c=a;b=HEAP[HEAP[c+20]]!=117?1:2;break;case 1:_PyErr_SetString(HEAP[_PyExc_ValueError],Aa);d=0;b=3;break;case 2:d=_PyUnicodeUCS2_FromUnicode(HEAP[c+12],HEAP[c+8]);b=3;break;case 3:return a=d;default:assert(0,"bad label: "+b)}}function s(a,b,c){var d=STACKTOP;STACKTOP+=16;_memset(d,0,16);var g,h=null;for(g=-1;;)switch(g){case -1:var j,k,l,m,n=d,o=d+4,p=d+8,q=d+12,r,t,u,v,w,x,H,M,V,
D;j=a;k=b;l=c;g=HEAP[HEAP[k+4]+48]==0?16:1;break;case 1:g=(HEAP[HEAP[k+4]+84]&131072)==0?16:2;break;case 2:g=HEAP[HEAP[HEAP[k+4]+48]+152]==0?16:3;break;case 3:var y=v=_PyNumber_AsSsize_t(k,HEAP[_PyExc_IndexError]);y==-1?(h=3,g=4):(h=3,g=7);break;case 4:g=_PyErr_Occurred()!=0?5:6;break;case 5:m=-1;g=68;break;case 6:var K=v,h=6;g=7;break;case 7:g=(h==6?K:y)<0?8:9;break;case 8:var A=v+HEAP[j+8];v=A;h=8;g=10;break;case 9:var oa=v,h=9;g=10;break;case 10:g=(h==9?oa:A)<0?12:11;break;case 11:g=HEAP[j+8]<=
v?12:13;break;case 12:_PyErr_SetString(HEAP[_PyExc_IndexError],aa);m=-1;g=68;break;case 13:g=l==0?14:15;break;case 14:HEAP[n]=v;HEAP[o]=v+1;HEAP[p]=1;HEAP[q]=1;g=20;break;case 15:m=FUNCTION_TABLE[HEAP[HEAP[j+20]+12]](j,v,l);g=68;break;case 16:g=HEAP[k+4]==_PySlice_Type?17:19;break;case 17:g=_PySlice_GetIndicesEx(k,HEAP[j+8],n,o,p,q)<0?18:20;break;case 18:m=-1;g=68;break;case 19:_PyErr_SetString(HEAP[_PyExc_TypeError],Oa);m=-1;g=68;break;case 20:g=l==0?21:22;break;case 21:r=t=0;g=33;break;case 22:g=
HEAP[l+4]==fa?24:23;break;case 23:g=_PyType_IsSubtype(HEAP[l+4],fa)!=0?24:32;break;case 24:t=l;r=HEAP[t+8];var B=t;g=j==t?25:30;break;case 25:l=f(B,0,r);g=l==0?26:27;break;case 26:m=-1;g=68;break;case 27:w=s(j,k,l);HEAP[l]-=1;g=HEAP[l]==0?28:29;break;case 28:FUNCTION_TABLE[HEAP[HEAP[l+4]+24]](l);g=29;break;case 29:m=w;g=68;break;case 30:g=HEAP[B+20]!=HEAP[j+20]?31:33;break;case 31:_PyErr_BadArgument();m=-1;g=68;break;case 32:_PyErr_Format(HEAP[_PyExc_TypeError],z,allocate([HEAP[HEAP[l+4]+12],0,0,
0],["i8*",0,0,0],ALLOC_STACK));m=-1;g=68;break;case 33:u=HEAP[HEAP[j+20]+4];var R=HEAP[p];R<=0?(h=33,g=36):(h=33,g=34);break;case 34:g=HEAP[o]<HEAP[n]?38:35;break;case 35:var U=HEAP[p],h=35;g=36;break;case 36:g=(h==35?U:R)>=0?39:37;break;case 37:g=HEAP[o]>HEAP[n]?38:39;break;case 38:HEAP[o]=HEAP[n];g=39;break;case 39:g=HEAP[p]==1?40:51;break;case 40:g=HEAP[q]>r?41:43;break;case 41:_llvm_memmove_p0i8_p0i8_i32(HEAP[j+12]+(r+HEAP[n])*u,HEAP[j+12]+u*HEAP[o],(HEAP[j+8]-HEAP[o])*u,1,0);g=e(j,r+HEAP[j+8]+
(0-HEAP[q]))<0?42:47;break;case 42:m=-1;g=68;break;case 43:var Ba=r;HEAP[q]<Ba?(h=43,g=44):(h=43,g=48);break;case 44:g=e(j,r+HEAP[j+8]+(0-HEAP[q]))<0?45:46;break;case 45:m=-1;g=68;break;case 46:_llvm_memmove_p0i8_p0i8_i32(HEAP[j+12]+(r+HEAP[n])*u,HEAP[j+12]+u*HEAP[o],(0-HEAP[n]+HEAP[j+8]+(0-r))*u,1,0);g=47;break;case 47:var xa=r,h=47;g=48;break;case 48:g=(h==47?xa:Ba)>0?49:50;break;case 49:_llvm_memcpy_p0i8_p0i8_i32(HEAP[j+12]+u*HEAP[n],HEAP[t+12],u*r,1,0);g=50;break;case 50:m=0;g=68;break;case 51:g=
r==0?52:63;break;case 52:g=HEAP[p]<0?53:54;break;case 53:HEAP[o]=HEAP[n]+1;HEAP[n]=HEAP[o]+-1+(HEAP[q]-1)*HEAP[p];HEAP[p]=0-HEAP[p];g=54;break;case 54:x=HEAP[n];H=0;g=H<HEAP[q]?55:58;break;case 55:M=HEAP[p]-1;g=x+HEAP[p]>=HEAP[j+8]?56:57;break;case 56:M=HEAP[j+8]+-1+(0-x);g=57;break;case 57:_llvm_memmove_p0i8_p0i8_i32(HEAP[j+12]+(x-H)*u,HEAP[j+12]+(x+1)*u,u*M,1,0);x+=HEAP[p];H+=1;g=H<HEAP[q]?55:58;break;case 58:x=HEAP[p]*HEAP[q]+HEAP[n];g=HEAP[j+8]>x?59:60;break;case 59:_llvm_memmove_p0i8_p0i8_i32(HEAP[j+
12]+(x-HEAP[q])*u,HEAP[j+12]+x*u,(HEAP[j+8]-x)*u,1,0);g=60;break;case 60:g=e(j,HEAP[j+8]-HEAP[q])<0?61:62;break;case 61:m=-1;g=68;break;case 62:m=0;g=68;break;case 63:g=r!=HEAP[q]?64:65;break;case 64:_PyErr_Format(HEAP[_PyExc_ValueError],eb,allocate([r,0,0,0,HEAP[q],0,0,0],["i32",0,0,0,"i32",0,0,0],ALLOC_STACK));m=-1;g=68;break;case 65:V=HEAP[n];D=0;g=D<HEAP[q]?66:67;break;case 66:_llvm_memcpy_p0i8_p0i8_i32(HEAP[j+12]+u*V,HEAP[t+12]+u*D,u,1,0);V+=HEAP[p];D+=1;g=D<HEAP[q]?66:67;break;case 67:m=0;g=
68;break;case 68:return a=m,STACKTOP=d,a;default:assert(0,"bad label: "+g)}}function u(){w=allocate([99,59,97,114,114,97,121,32,105,116,101,109,32,109,117,115,116,32,98,101,32,99,104,97,114,0],"i8",ALLOC_NORMAL);x=allocate([104,59,97,114,114,97,121,32,105,116,101,109,32,109,117,115,116,32,98,101,32,105,110,116,101,103,101,114,0],"i8",ALLOC_NORMAL);y=allocate([115,105,103,110,101,100,32,99,104,97,114,32,105,115,32,108,101,115,115,32,116,104,97,110,32,109,105,110,105,109,117,109,0],"i8",ALLOC_NORMAL);
B=allocate([115,105,103,110,101,100,32,99,104,97,114,32,105,115,32,103,114,101,97,116,101,114,32,116,104,97,110,32,109,97,120,105,109,117,109,0],"i8",ALLOC_NORMAL);A=allocate([98,59,97,114,114,97,121,32,105,116,101,109,32,109,117,115,116,32,98,101,32,105,110,116,101,103,101,114,0],"i8",ALLOC_NORMAL);C=allocate([117,35,59,97,114,114,97,121,32,105,116,101,109,32,109,117,115,116,32,98,101,32,117,110,105,99,111,100,101,32,99,104,97,114,97,99,116,101,114,0],"i8",ALLOC_NORMAL);G=allocate([97,114,114,97,
121,32,105,116,101,109,32,109,117,115,116,32,98,101,32,117,110,105,99,111,100,101,32,99,104,97,114,97,99,116,101,114,0],"i8",ALLOC_NORMAL);F=allocate([105,59,97,114,114,97,121,32,105,116,101,109,32,109,117,115,116,32,98,101,32,105,110,116,101,103,101,114,0],"i8",ALLOC_NORMAL);E=allocate([117,110,115,105,103,110,101,100,32,115,104,111,114,116,32,105,115,32,108,101,115,115,32,116,104,97,110,32,109,105,110,105,109,117,109,0],"i8",ALLOC_NORMAL);N=allocate([117,110,115,105,103,110,101,100,32,115,104,111,
114,116,32,105,115,32,103,114,101,97,116,101,114,32,116,104,97,110,32,109,97,120,105,109,117,109,0],"i8",ALLOC_NORMAL);Q=allocate([108,59,97,114,114,97,121,32,105,116,101,109,32,109,117,115,116,32,98,101,32,105,110,116,101,103,101,114,0],"i8",ALLOC_NORMAL);I=allocate([117,110,115,105,103,110,101,100,32,105,110,116,32,105,115,32,108,101,115,115,32,116,104,97,110,32,109,105,110,105,109,117,109,0],"i8",ALLOC_NORMAL);J=allocate([117,110,115,105,103,110,101,100,32,108,111,110,103,32,105,115,32,108,101,
115,115,32,116,104,97,110,32,109,105,110,105,109,117,109,0],"i8",ALLOC_NORMAL);P=allocate([102,59,97,114,114,97,121,32,105,116,101,109,32,109,117,115,116,32,98,101,32,102,108,111,97,116,0],"i8",ALLOC_NORMAL);D=allocate([100,59,97,114,114,97,121,32,105,116,101,109,32,109,117,115,116,32,98,101,32,102,108,111,97,116,0],"i8",ALLOC_NORMAL);T=allocate([99,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,98,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,66,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,117,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,104,0,0,0,2,0,0,0,0,
0,0,0,0,0,0,0,72,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,105,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,73,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,108,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,76,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,102,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,100,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],["i32",0,0,0,"i32",0,0,0,"%struct.PyObject* (%struct.arrayobject*, i32)*",0,0,0,"i32 (%struct.arrayobject*, i32, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i32",0,0,0,"%struct.PyObject* (%struct.arrayobject*, i32)*",0,0,0,
"i32 (%struct.arrayobject*, i32, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i32",0,0,0,"%struct.PyObject* (%struct.arrayobject*, i32)*",0,0,0,"i32 (%struct.arrayobject*, i32, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i32",0,0,0,"%struct.PyObject* (%struct.arrayobject*, i32)*",0,0,0,"i32 (%struct.arrayobject*, i32, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i32",0,0,0,"%struct.PyObject* (%struct.arrayobject*, i32)*",0,0,0,"i32 (%struct.arrayobject*, i32, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i32",0,0,0,
"%struct.PyObject* (%struct.arrayobject*, i32)*",0,0,0,"i32 (%struct.arrayobject*, i32, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i32",0,0,0,"%struct.PyObject* (%struct.arrayobject*, i32)*",0,0,0,"i32 (%struct.arrayobject*, i32, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i32",0,0,0,"%struct.PyObject* (%struct.arrayobject*, i32)*",0,0,0,"i32 (%struct.arrayobject*, i32, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i32",0,0,0,"%struct.PyObject* (%struct.arrayobject*, i32)*",0,0,0,"i32 (%struct.arrayobject*, i32, %struct.PyObject*)*",
0,0,0,"i32",0,0,0,"i32",0,0,0,"%struct.PyObject* (%struct.arrayobject*, i32)*",0,0,0,"i32 (%struct.arrayobject*, i32, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i32",0,0,0,"%struct.PyObject* (%struct.arrayobject*, i32)*",0,0,0,"i32 (%struct.arrayobject*, i32, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i32",0,0,0,"%struct.PyObject* (%struct.arrayobject*, i32)*",0,0,0,"i32 (%struct.arrayobject*, i32, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i32",0,0,0,"%struct.PyObject* (%struct.arrayobject*, i32)*",0,0,0,
"i32 (%struct.arrayobject*, i32, %struct.PyObject*)*",0,0,0],ALLOC_NORMAL);L=allocate([46,46,47,99,112,121,116,104,111,110,47,77,111,100,117,108,101,115,47,97,114,114,97,121,109,111,100,117,108,101,46,99,0],"i8",ALLOC_NORMAL);$=allocate([40,40,40,40,80,121,79,98,106,101,99,116,42,41,40,111,112,41,41,45,62,111,98,95,116,121,112,101,41,32,61,61,32,40,38,65,114,114,97,121,116,121,112,101,41,32,124,124,32,80,121,84,121,112,101,95,73,115,83,117,98,116,121,112,101,40,40,40,40,80,121,79,98,106,101,99,116,
42,41,40,111,112,41,41,45,62,111,98,95,116,121,112,101,41,44,32,40,38,65,114,114,97,121,116,121,112,101,41,41,41,0],"i8",ALLOC_NORMAL);R=allocate([103,101,116,97,114,114,97,121,105,116,101,109,0],"i8",ALLOC_NORMAL);K=allocate([105,62,61,48,32,38,38,32,105,60,40,40,40,80,121,86,97,114,79,98,106,101,99,116,42,41,40,97,112,41,41,45,62,111,98,95,115,105,122,101,41,0],"i8",ALLOC_NORMAL);H=allocate([97,114,114,97,121,32,105,110,100,101,120,32,111,117,116,32,111,102,32,114,97,110,103,101,0],"i8",ALLOC_NORMAL);
S=allocate([99,111,112,121,40,97,114,114,97,121,41,10,10,32,82,101,116,117,114,110,32,97,32,99,111,112,121,32,111,102,32,116,104,101,32,97,114,114,97,121,46,0],"i8",ALLOC_NORMAL);U=allocate([99,97,110,32,111,110,108,121,32,97,112,112,101,110,100,32,97,114,114,97,121,32,40,110,111,116,32,34,37,46,50,48,48,115,34,41,32,116,111,32,97,114,114,97,121,0],"i8",ALLOC_NORMAL);z=allocate([99,97,110,32,111,110,108,121,32,97,115,115,105,103,110,32,97,114,114,97,121,32,40,110,111,116,32,34,37,46,50,48,48,115,
34,41,32,116,111,32,97,114,114,97,121,32,115,108,105,99,101,0],"i8",ALLOC_NORMAL);aa=allocate([97,114,114,97,121,32,97,115,115,105,103,110,109,101,110,116,32,105,110,100,101,120,32,111,117,116,32,111,102,32,114,97,110,103,101,0],"i8",ALLOC_NORMAL);ja=allocate([40,40,40,40,80,121,79,98,106,101,99,116,42,41,40,97,41,41,45,62,111,98,95,116,121,112,101,41,32,61,61,32,40,38,65,114,114,97,121,116,121,112,101,41,32,124,124,32,80,121,84,121,112,101,95,73,115,83,117,98,116,121,112,101,40,40,40,40,80,121,79,
98,106,101,99,116,42,41,40,97,41,41,45,62,111,98,95,116,121,112,101,41,44,32,40,38,65,114,114,97,121,116,121,112,101,41,41,41,0],"i8",ALLOC_NORMAL);la=allocate([115,101,116,97,114,114,97,121,105,116,101,109,0],"i8",ALLOC_NORMAL);da=allocate([99,97,110,32,111,110,108,121,32,101,120,116,101,110,100,32,119,105,116,104,32,97,114,114,97,121,32,111,102,32,115,97,109,101,32,107,105,110,100,0],"i8",ALLOC_NORMAL);Ka=allocate([99,97,110,32,111,110,108,121,32,101,120,116,101,110,100,32,97,114,114,97,121,32,
119,105,116,104,32,97,114,114,97,121,32,40,110,111,116,32,34,37,46,50,48,48,115,34,41,0],"i8",ALLOC_NORMAL);Ma=allocate([99,111,117,110,116,40,120,41,10,10,82,101,116,117,114,110,32,110,117,109,98,101,114,32,111,102,32,111,99,99,117,114,114,101,110,99,101,115,32,111,102,32,120,32,105,110,32,116,104,101,32,97,114,114,97,121,46,0],"i8",ALLOC_NORMAL);wa=allocate([97,114,114,97,121,46,105,110,100,101,120,40,120,41,58,32,120,32,110,111,116,32,105,110,32,108,105,115,116,0],"i8",ALLOC_NORMAL);ib=allocate([105,
110,100,101,120,40,120,41,10,10,82,101,116,117,114,110,32,105,110,100,101,120,32,111,102,32,102,105,114,115,116,32,111,99,99,117,114,114,101,110,99,101,32,111,102,32,120,32,105,110,32,116,104,101,32,97,114,114,97,121,46,0],"i8",ALLOC_NORMAL);cb=allocate([97,114,114,97,121,46,114,101,109,111,118,101,40,120,41,58,32,120,32,110,111,116,32,105,110,32,108,105,115,116,0],"i8",ALLOC_NORMAL);db=allocate([114,101,109,111,118,101,40,120,41,10,10,82,101,109,111,118,101,32,116,104,101,32,102,105,114,115,116,
32,111,99,99,117,114,114,101,110,99,101,32,111,102,32,120,32,105,110,32,116,104,101,32,97,114,114,97,121,46,0],"i8",ALLOC_NORMAL);Da=allocate([124,110,58,112,111,112,0],"i8",ALLOC_NORMAL);gb=allocate([112,111,112,32,102,114,111,109,32,101,109,112,116,121,32,97,114,114,97,121,0],"i8",ALLOC_NORMAL);Xa=allocate([112,111,112,32,105,110,100,101,120,32,111,117,116,32,111,102,32,114,97,110,103,101,0],"i8",ALLOC_NORMAL);Ca=allocate([112,111,112,40,91,105,93,41,10,10,82,101,116,117,114,110,32,116,104,101,
32,105,45,116,104,32,101,108,101,109,101,110,116,32,97,110,100,32,100,101,108,101,116,101,32,105,116,32,102,114,111,109,32,116,104,101,32,97,114,114,97,121,46,32,105,32,100,101,102,97,117,108,116,115,32,116,111,32,45,49,46,0],"i8",ALLOC_NORMAL);Za=allocate([101,120,116,101,110,100,40,97,114,114,97,121,32,111,114,32,105,116,101,114,97,98,108,101,41,10,10,32,65,112,112,101,110,100,32,105,116,101,109,115,32,116,111,32,116,104,101,32,101,110,100,32,111,102,32,116,104,101,32,97,114,114,97,121,46,0],"i8",
ALLOC_NORMAL);Va=allocate([110,79,58,105,110,115,101,114,116,0],"i8",ALLOC_NORMAL);Ga=allocate([105,110,115,101,114,116,40,105,44,120,41,10,10,73,110,115,101,114,116,32,97,32,110,101,119,32,105,116,101,109,32,120,32,105,110,116,111,32,116,104,101,32,97,114,114,97,121,32,98,101,102,111,114,101,32,112,111,115,105,116,105,111,110,32,105,46,0],"i8",ALLOC_NORMAL);ha=allocate([98,117,102,102,101,114,95,105,110,102,111,40,41,32,45,62,32,40,97,100,100,114,101,115,115,44,32,108,101,110,103,116,104,41,10,10,
82,101,116,117,114,110,32,97,32,116,117,112,108,101,32,40,97,100,100,114,101,115,115,44,32,108,101,110,103,116,104,41,32,103,105,118,105,110,103,32,116,104,101,32,99,117,114,114,101,110,116,32,109,101,109,111,114,121,32,97,100,100,114,101,115,115,32,97,110,100,10,116,104,101,32,108,101,110,103,116,104,32,105,110,32,105,116,101,109,115,32,111,102,32,116,104,101,32,98,117,102,102,101,114,32,117,115,101,100,32,116,111,32,104,111,108,100,32,97,114,114,97,121,39,115,32,99,111,110,116,101,110,116,115,10,
84,104,101,32,108,101,110,103,116,104,32,115,104,111,117,108,100,32,98,101,32,109,117,108,116,105,112,108,105,101,100,32,98,121,32,116,104,101,32,105,116,101,109,115,105,122,101,32,97,116,116,114,105,98,117,116,101,32,116,111,32,99,97,108,99,117,108,97,116,101,10,116,104,101,32,98,117,102,102,101,114,32,108,101,110,103,116,104,32,105,110,32,98,121,116,101,115,46,0],"i8",ALLOC_NORMAL);Na=allocate([97,112,112,101,110,100,40,120,41,10,10,65,112,112,101,110,100,32,110,101,119,32,118,97,108,117,101,32,
120,32,116,111,32,116,104,101,32,101,110,100,32,111,102,32,116,104,101,32,97,114,114,97,121,46,0],"i8",ALLOC_NORMAL);jb=allocate([100,111,110,39,116,32,107,110,111,119,32,104,111,119,32,116,111,32,98,121,116,101,115,119,97,112,32,116,104,105,115,32,97,114,114,97,121,32,116,121,112,101,0],"i8",ALLOC_NORMAL);hb=allocate([98,121,116,101,115,119,97,112,40,41,10,10,66,121,116,101,115,119,97,112,32,97,108,108,32,105,116,101,109,115,32,111,102,32,116,104,101,32,97,114,114,97,121,46,32,32,73,102,32,116,104,
101,32,105,116,101,109,115,32,105,110,32,116,104,101,32,97,114,114,97,121,32,97,114,101,32,110,111,116,32,49,44,32,50,44,10,52,44,32,111,114,32,56,32,98,121,116,101,115,32,105,110,32,115,105,122,101,44,32,82,117,110,116,105,109,101,69,114,114,111,114,32,105,115,32,114,97,105,115,101,100,46,0],"i8",ALLOC_NORMAL);Qa=allocate([40,115,105,122,101,95,116,41,105,116,101,109,115,105,122,101,32,60,61,32,115,105,122,101,111,102,40,116,109,112,41,0],"i8",ALLOC_NORMAL);Ha=allocate([97,114,114,97,121,95,114,
101,118,101,114,115,101,0],"i8",ALLOC_NORMAL);Ra=allocate([114,101,118,101,114,115,101,40,41,10,10,82,101,118,101,114,115,101,32,116,104,101,32,111,114,100,101,114,32,111,102,32,116,104,101,32,105,116,101,109,115,32,105,110,32,116,104,101,32,97,114,114,97,121,46,0],"i8",ALLOC_NORMAL);Ia=allocate([79,110,58,102,114,111,109,102,105,108,101,0],"i8",ALLOC_NORMAL);Fa=allocate([97,114,103,49,32,109,117,115,116,32,98,101,32,111,112,101,110,32,102,105,108,101,0],"i8",ALLOC_NORMAL);$a=allocate([110,111,116,
32,101,110,111,117,103,104,32,105,116,101,109,115,32,105,110,32,102,105,108,101,0],"i8",ALLOC_NORMAL);Wa=allocate([102,114,111,109,102,105,108,101,40,102,44,32,110,41,10,10,82,101,97,100,32,110,32,111,98,106,101,99,116,115,32,102,114,111,109,32,116,104,101,32,102,105,108,101,32,111,98,106,101,99,116,32,102,32,97,110,100,32,97,112,112,101,110,100,32,116,104,101,109,32,116,111,32,116,104,101,32,101,110,100,32,111,102,32,116,104,101,10,97,114,114,97,121,46,32,32,65,108,115,111,32,99,97,108,108,101,100,
32,97,115,32,114,101,97,100,46,0],"i8",ALLOC_NORMAL);Y=allocate([97,114,114,97,121,46,114,101,97,100,40,41,32,110,111,116,32,115,117,112,112,111,114,116,101,100,32,105,110,32,51,46,120,59,32,117,115,101,32,97,114,114,97,121,46,102,114,111,109,102,105,108,101,40,41,0],"i8",ALLOC_NORMAL);kb=allocate([97,114,103,32,109,117,115,116,32,98,101,32,111,112,101,110,32,102,105,108,101,0],"i8",ALLOC_NORMAL);ra=allocate([116,111,102,105,108,101,40,102,41,10,10,87,114,105,116,101,32,97,108,108,32,105,116,101,
109,115,32,40,97,115,32,109,97,99,104,105,110,101,32,118,97,108,117,101,115,41,32,116,111,32,116,104,101,32,102,105,108,101,32,111,98,106,101,99,116,32,102,46,32,32,65,108,115,111,32,99,97,108,108,101,100,32,97,115,10,119,114,105,116,101,46,0],"i8",ALLOC_NORMAL);Ta=allocate([97,114,114,97,121,46,119,114,105,116,101,40,41,32,110,111,116,32,115,117,112,112,111,114,116,101,100,32,105,110,32,51,46,120,59,32,117,115,101,32,97,114,114,97,121,46,116,111,102,105,108,101,40,41,0],"i8",ALLOC_NORMAL);ia=allocate([97,
114,103,32,109,117,115,116,32,98,101,32,108,105,115,116,0],"i8",ALLOC_NORMAL);ba=allocate([102,114,111,109,108,105,115,116,40,108,105,115,116,41,10,10,65,112,112,101,110,100,32,105,116,101,109,115,32,116,111,32,97,114,114,97,121,32,102,114,111,109,32,108,105,115,116,46,0],"i8",ALLOC_NORMAL);Ya=allocate([116,111,108,105,115,116,40,41,32,45,62,32,108,105,115,116,10,10,67,111,110,118,101,114,116,32,97,114,114,97,121,32,116,111,32,97,110,32,111,114,100,105,110,97,114,121,32,108,105,115,116,32,119,105,
116,104,32,116,104,101,32,115,97,109,101,32,105,116,101,109,115,46,0],"i8",ALLOC_NORMAL);ta=allocate([115,35,58,102,114,111,109,115,116,114,105,110,103,0],"i8",ALLOC_NORMAL);O=allocate([115,116,114,105,110,103,32,108,101,110,103,116,104,32,110,111,116,32,97,32,109,117,108,116,105,112,108,101,32,111,102,32,105,116,101,109,32,115,105,122,101,0],"i8",ALLOC_NORMAL);wb=allocate([102,114,111,109,115,116,114,105,110,103,40,115,116,114,105,110,103,41,10,10,65,112,112,101,110,100,115,32,105,116,101,109,115,
32,102,114,111,109,32,116,104,101,32,115,116,114,105,110,103,44,32,105,110,116,101,114,112,114,101,116,105,110,103,32,105,116,32,97,115,32,97,110,32,97,114,114,97,121,32,111,102,32,109,97,99,104,105,110,101,10,118,97,108,117,101,115,44,97,115,32,105,102,32,105,116,32,104,97,100,32,98,101,101,110,32,114,101,97,100,32,102,114,111,109,32,97,32,102,105,108,101,32,117,115,105,110,103,32,116,104,101,32,102,114,111,109,102,105,108,101,40,41,32,109,101,116,104,111,100,41,46,0],"i8",ALLOC_NORMAL);bb=allocate([116,
111,115,116,114,105,110,103,40,41,32,45,62,32,115,116,114,105,110,103,10,10,67,111,110,118,101,114,116,32,116,104,101,32,97,114,114,97,121,32,116,111,32,97,110,32,97,114,114,97,121,32,111,102,32,109,97,99,104,105,110,101,32,118,97,108,117,101,115,32,97,110,100,32,114,101,116,117,114,110,32,116,104,101,32,115,116,114,105,110,103,10,114,101,112,114,101,115,101,110,116,97,116,105,111,110,46,0],"i8",ALLOC_NORMAL);vb=allocate([117,35,58,102,114,111,109,117,110,105,99,111,100,101,0],"i8",ALLOC_NORMAL);
ka=allocate([102,114,111,109,117,110,105,99,111,100,101,40,41,32,109,97,121,32,111,110,108,121,32,98,101,32,99,97,108,108,101,100,32,111,110,32,116,121,112,101,32,39,117,39,32,97,114,114,97,121,115,0],"i8",ALLOC_NORMAL);za=allocate([102,114,111,109,117,110,105,99,111,100,101,40,117,115,116,114,41,10,10,69,120,116,101,110,100,115,32,116,104,105,115,32,97,114,114,97,121,32,119,105,116,104,32,100,97,116,97,32,102,114,111,109,32,116,104,101,32,117,110,105,99,111,100,101,32,115,116,114,105,110,103,32,
117,115,116,114,46,10,84,104,101,32,97,114,114,97,121,32,109,117,115,116,32,98,101,32,97,32,116,121,112,101,32,39,117,39,32,97,114,114,97,121,59,32,111,116,104,101,114,119,105,115,101,32,97,32,86,97,108,117,101,69,114,114,111,114,10,105,115,32,114,97,105,115,101,100,46,32,32,85,115,101,32,97,114,114,97,121,46,102,114,111,109,115,116,114,105,110,103,40,117,115,116,114,46,100,101,99,111,100,101,40,46,46,46,41,41,32,116,111,10,97,112,112,101,110,100,32,85,110,105,99,111,100,101,32,100,97,116,97,32,116,
111,32,97,110,32,97,114,114,97,121,32,111,102,32,115,111,109,101,32,111,116,104,101,114,32,116,121,112,101,46,0],"i8",ALLOC_NORMAL);Aa=allocate([116,111,117,110,105,99,111,100,101,40,41,32,109,97,121,32,111,110,108,121,32,98,101,32,99,97,108,108,101,100,32,111,110,32,116,121,112,101,32,39,117,39,32,97,114,114,97,121,115,0],"i8",ALLOC_NORMAL);La=allocate([116,111,117,110,105,99,111,100,101,40,41,32,45,62,32,117,110,105,99,111,100,101,10,10,67,111,110,118,101,114,116,32,116,104,101,32,97,114,114,97,
121,32,116,111,32,97,32,117,110,105,99,111,100,101,32,115,116,114,105,110,103,46,32,32,84,104,101,32,97,114,114,97,121,32,109,117,115,116,32,98,101,10,97,32,116,121,112,101,32,39,117,39,32,97,114,114,97,121,59,32,111,116,104,101,114,119,105,115,101,32,97,32,86,97,108,117,101,69,114,114,111,114,32,105,115,32,114,97,105,115,101,100,46,32,32,85,115,101,10,97,114,114,97,121,46,116,111,115,116,114,105,110,103,40,41,46,100,101,99,111,100,101,40,41,32,116,111,32,111,98,116,97,105,110,32,97,32,117,110,105,
99,111,100,101,32,115,116,114,105,110,103,32,102,114,111,109,10,97,110,32,97,114,114,97,121,32,111,102,32,115,111,109,101,32,111,116,104,101,114,32,116,121,112,101,46,0],"i8",ALLOC_NORMAL);ya=allocate([95,95,100,105,99,116,95,95,0],"i8",ALLOC_NORMAL);ub=allocate([79,40,99,79,41,79,0],"i8",ALLOC_NORMAL);Z=allocate([82,101,116,117,114,110,32,115,116,97,116,101,32,105,110,102,111,114,109,97,116,105,111,110,32,102,111,114,32,112,105,99,107,108,105,110,103,46,0],"i8",ALLOC_NORMAL);qa=allocate([116,121,
112,101,99,111,100,101,0],"i8",ALLOC_NORMAL);M=allocate([116,104,101,32,116,121,112,101,99,111,100,101,32,99,104,97,114,97,99,116,101,114,32,117,115,101,100,32,116,111,32,99,114,101,97,116,101,32,116,104,101,32,97,114,114,97,121,0],"i8",ALLOC_NORMAL);na=allocate([105,116,101,109,115,105,122,101,0],"i8",ALLOC_NORMAL);nb=allocate([116,104,101,32,115,105,122,101,44,32,105,110,32,98,121,116,101,115,44,32,111,102,32,111,110,101,32,97,114,114,97,121,32,105,116,101,109,0],"i8",ALLOC_NORMAL);ca=allocate(60,
["i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, i8*)*",0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*, i8*)*",0,0,0,"i8*",0,0,0,"i8","i8","i8","i8","i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, i8*)*",0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*, i8*)*",0,0,0,"i8*",0,0,0,"i8","i8","i8","i8","i8*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8"],ALLOC_NORMAL);ua=allocate([97,112,112,101,110,100,0],"i8",ALLOC_NORMAL);Ea=allocate([98,117,102,102,101,
114,95,105,110,102,111,0],"i8",ALLOC_NORMAL);Eb=allocate([98,121,116,101,115,119,97,112,0],"i8",ALLOC_NORMAL);zb=allocate([95,95,99,111,112,121,95,95,0],"i8",ALLOC_NORMAL);va=allocate([99,111,117,110,116,0],"i8",ALLOC_NORMAL);xa=allocate([95,95,100,101,101,112,99,111,112,121,95,95,0],"i8",ALLOC_NORMAL);V=allocate([101,120,116,101,110,100,0],"i8",ALLOC_NORMAL);sa=allocate([102,114,111,109,102,105,108,101,0],"i8",ALLOC_NORMAL);pa=allocate([102,114,111,109,108,105,115,116,0],"i8",ALLOC_NORMAL);fb=allocate([102,
114,111,109,115,116,114,105,110,103,0],"i8",ALLOC_NORMAL);ma=allocate([102,114,111,109,117,110,105,99,111,100,101,0],"i8",ALLOC_NORMAL);sb=allocate([105,110,100,101,120,0],"i8",ALLOC_NORMAL);mb=allocate([105,110,115,101,114,116,0],"i8",ALLOC_NORMAL);yb=allocate([112,111,112,0],"i8",ALLOC_NORMAL);Nb=allocate([114,101,97,100,0],"i8",ALLOC_NORMAL);Ib=allocate([95,95,114,101,100,117,99,101,95,95,0],"i8",ALLOC_NORMAL);Db=allocate([114,101,109,111,118,101,0],"i8",ALLOC_NORMAL);Ub=allocate([114,101,118,
101,114,115,101,0],"i8",ALLOC_NORMAL);Tb=allocate([116,111,102,105,108,101,0],"i8",ALLOC_NORMAL);qb=allocate([116,111,108,105,115,116,0],"i8",ALLOC_NORMAL);Mb=allocate([116,111,115,116,114,105,110,103,0],"i8",ALLOC_NORMAL);Hb=allocate([116,111,117,110,105,99,111,100,101,0],"i8",ALLOC_NORMAL);Wb=allocate([119,114,105,116,101,0],"i8",ALLOC_NORMAL);ea=allocate([0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],["i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",
0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",
0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",
0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",
0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",
0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8"],ALLOC_NORMAL);Qb=allocate([97,114,114,97,121,40,39,37,99,39,41,0],"i8",ALLOC_NORMAL);Bb=allocate([97,114,114,97,121,40,39,37,99,39,44,32,0],"i8",ALLOC_NORMAL);ic=allocate([41,0],"i8",ALLOC_NORMAL);Vb=allocate([97,114,114,97,121,32,105,110,100,105,99,101,115,32,109,117,115,116,32,98,101,32,105,110,116,101,103,101,114,115,0],"i8",ALLOC_NORMAL);Oa=allocate([97,114,114,97,121,32,105,110,100,105,99,101,115,32,109,117,115,116,32,98,101,32,105,110,116,101,103,
101,114,0],"i8",ALLOC_NORMAL);eb=allocate([97,116,116,101,109,112,116,32,116,111,32,97,115,115,105,103,110,32,97,114,114,97,121,32,111,102,32,115,105,122,101,32,37,122,100,32,116,111,32,101,120,116,101,110,100,101,100,32,115,108,105,99,101,32,111,102,32,115,105,122,101,32,37,122,100,0],"i8",ALLOC_NORMAL);Ob=allocate(12,["i32 (%struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0],ALLOC_NORMAL);
Sa=allocate(1,"i8",ALLOC_NORMAL);Yb=allocate([65,99,99,101,115,115,105,110,103,32,110,111,110,45,101,120,105,115,116,101,110,116,32,97,114,114,97,121,32,115,101,103,109,101,110,116,0],"i8",ALLOC_NORMAL);xb=allocate(40,["i32 (%struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, i32)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, i32)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, i32, i32)*",0,0,0,"i32 (%struct.PyObject*, i32, %struct.PyObject*)*",
0,0,0,"i32 (%struct.PyObject*, i32, i32, %struct.PyObject*)*",0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, i32)*",0,0,0],ALLOC_NORMAL);Xb=allocate(24,["i32 (%struct.PyObject*, i32, i8**)*",0,0,0,"i32 (%struct.PyObject*, i32, i8**)*",0,0,0,"i32 (%struct.PyObject*, i32*)*",0,0,0,"i32 (%struct.PyObject*, i32, i8**)*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8"],ALLOC_NORMAL);lb=allocate([97,
114,114,97,121,46,97,114,114,97,121,40,41,0],"i8",ALLOC_NORMAL);fc=allocate([99,124,79,58,97,114,114,97,121,0],"i8",ALLOC_NORMAL);jc=allocate([98,97,100,32,116,121,112,101,99,111,100,101,32,40,109,117,115,116,32,98,101,32,99,44,32,98,44,32,66,44,32,117,44,32,104,44,32,72,44,32,105,44,32,73,44,32,108,44,32,76,44,32,102,32,111,114,32,100,41,0],"i8",ALLOC_NORMAL);Pb=allocate([84,104,105,115,32,109,111,100,117,108,101,32,100,101,102,105,110,101,115,32,97,110,32,111,98,106,101,99,116,32,116,121,112,101,
32,119,104,105,99,104,32,99,97,110,32,101,102,102,105,99,105,101,110,116,108,121,32,114,101,112,114,101,115,101,110,116,10,97,110,32,97,114,114,97,121,32,111,102,32,98,97,115,105,99,32,118,97,108,117,101,115,58,32,99,104,97,114,97,99,116,101,114,115,44,32,105,110,116,101,103,101,114,115,44,32,102,108,111,97,116,105,110,103,32,112,111,105,110,116,10,110,117,109,98,101,114,115,46,32,32,65,114,114,97,121,115,32,97,114,101,32,115,101,113,117,101,110,99,101,32,116,121,112,101,115,32,97,110,100,32,98,101,
104,97,118,101,32,118,101,114,121,32,109,117,99,104,32,108,105,107,101,32,108,105,115,116,115,44,10,101,120,99,101,112,116,32,116,104,97,116,32,116,104,101,32,116,121,112,101,32,111,102,32,111,98,106,101,99,116,115,32,115,116,111,114,101,100,32,105,110,32,116,104,101,109,32,105,115,32,99,111,110,115,116,114,97,105,110,101,100,46,32,32,84,104,101,10,116,121,112,101,32,105,115,32,115,112,101,99,105,102,105,101,100,32,97,116,32,111,98,106,101,99,116,32,99,114,101,97,116,105,111,110,32,116,105,109,101,
32,98,121,32,117,115,105,110,103,32,97,32,116,121,112,101,32,99,111,100,101,44,32,119,104,105,99,104,10,105,115,32,97,32,115,105,110,103,108,101,32,99,104,97,114,97,99,116,101,114,46,32,32,84,104,101,32,102,111,108,108,111,119,105,110,103,32,116,121,112,101,32,99,111,100,101,115,32,97,114,101,32,100,101,102,105,110,101,100,58,10,10,32,32,32,32,84,121,112,101,32,99,111,100,101,32,32,32,67,32,84,121,112,101,32,32,32,32,32,32,32,32,32,32,32,32,32,77,105,110,105,109,117,109,32,115,105,122,101,32,105,
110,32,98,121,116,101,115,32,10,32,32,32,32,39,99,39,32,32,32,32,32,32,32,32,32,99,104,97,114,97,99,116,101,114,32,32,32,32,32,32,32,32,32,32,49,32,10,32,32,32,32,39,98,39,32,32,32,32,32,32,32,32,32,115,105,103,110,101,100,32,105,110,116,101,103,101,114,32,32,32,32,32,49,32,10,32,32,32,32,39,66,39,32,32,32,32,32,32,32,32,32,117,110,115,105,103,110,101,100,32,105,110,116,101,103,101,114,32,32,32,49,32,10,32,32,32,32,39,117,39,32,32,32,32,32,32,32,32,32,85,110,105,99,111,100,101,32,99,104,97,114,97,
99,116,101,114,32,32,50,32,10,32,32,32,32,39,104,39,32,32,32,32,32,32,32,32,32,115,105,103,110,101,100,32,105,110,116,101,103,101,114,32,32,32,32,32,50,32,10,32,32,32,32,39,72,39,32,32,32,32,32,32,32,32,32,117,110,115,105,103,110,101,100,32,105,110,116,101,103,101,114,32,32,32,50,32,10,32,32,32,32,39,105,39,32,32,32,32,32,32,32,32,32,115,105,103,110,101,100,32,105,110,116,101,103,101,114,32,32,32,32,32,50,32,10,32,32,32,32,39,73,39,32,32,32,32,32,32,32,32,32,117,110,115,105,103,110,101,100,32,105,
110,116,101,103,101,114,32,32,32,50,32,10,32,32,32,32,39,108,39,32,32,32,32,32,32,32,32,32,115,105,103,110,101,100,32,105,110,116,101,103,101,114,32,32,32,32,32,52,32,10,32,32,32,32,39,76,39,32,32,32,32,32,32,32,32,32,117,110,115,105,103,110,101,100,32,105,110,116,101,103,101,114,32,32,32,52,32,10,32,32,32,32,39,102,39,32,32,32,32,32,32,32,32,32,102,108,111,97,116,105,110,103,32,112,111,105,110,116,32,32,32,32,32,52,32,10,32,32,32,32,39,100,39,32,32,32,32,32,32,32,32,32,102,108,111,97,116,105,110,
103,32,112,111,105,110,116,32,32,32,32,32,56,32,10,10,84,104,101,32,99,111,110,115,116,114,117,99,116,111,114,32,105,115,58,10,10,97,114,114,97,121,40,116,121,112,101,99,111,100,101,32,91,44,32,105,110,105,116,105,97,108,105,122,101,114,93,41,32,45,45,32,99,114,101,97,116,101,32,97,32,110,101,119,32,97,114,114,97,121,10,0],"i8",ALLOC_NORMAL);nc=allocate([97,114,114,97,121,40,116,121,112,101,99,111,100,101,32,91,44,32,105,110,105,116,105,97,108,105,122,101,114,93,41,32,45,62,32,97,114,114,97,121,10,
10,82,101,116,117,114,110,32,97,32,110,101,119,32,97,114,114,97,121,32,119,104,111,115,101,32,105,116,101,109,115,32,97,114,101,32,114,101,115,116,114,105,99,116,101,100,32,98,121,32,116,121,112,101,99,111,100,101,44,32,97,110,100,10,105,110,105,116,105,97,108,105,122,101,100,32,102,114,111,109,32,116,104,101,32,111,112,116,105,111,110,97,108,32,105,110,105,116,105,97,108,105,122,101,114,32,118,97,108,117,101,44,32,119,104,105,99,104,32,109,117,115,116,32,98,101,32,97,32,108,105,115,116,44,10,115,
116,114,105,110,103,46,32,111,114,32,105,116,101,114,97,98,108,101,32,111,118,101,114,32,101,108,101,109,101,110,116,115,32,111,102,32,116,104,101,32,97,112,112,114,111,112,114,105,97,116,101,32,116,121,112,101,46,10,10,65,114,114,97,121,115,32,114,101,112,114,101,115,101,110,116,32,98,97,115,105,99,32,118,97,108,117,101,115,32,97,110,100,32,98,101,104,97,118,101,32,118,101,114,121,32,109,117,99,104,32,108,105,107,101,32,108,105,115,116,115,44,32,101,120,99,101,112,116,10,116,104,101,32,116,121,112,
101,32,111,102,32,111,98,106,101,99,116,115,32,115,116,111,114,101,100,32,105,110,32,116,104,101,109,32,105,115,32,99,111,110,115,116,114,97,105,110,101,100,46,10,10,77,101,116,104,111,100,115,58,10,10,97,112,112,101,110,100,40,41,32,45,45,32,97,112,112,101,110,100,32,97,32,110,101,119,32,105,116,101,109,32,116,111,32,116,104,101,32,101,110,100,32,111,102,32,116,104,101,32,97,114,114,97,121,10,98,117,102,102,101,114,95,105,110,102,111,40,41,32,45,45,32,114,101,116,117,114,110,32,105,110,102,111,114,
109,97,116,105,111,110,32,103,105,118,105,110,103,32,116,104,101,32,99,117,114,114,101,110,116,32,109,101,109,111,114,121,32,105,110,102,111,10,98,121,116,101,115,119,97,112,40,41,32,45,45,32,98,121,116,101,115,119,97,112,32,97,108,108,32,116,104,101,32,105,116,101,109,115,32,111,102,32,116,104,101,32,97,114,114,97,121,10,99,111,117,110,116,40,41,32,45,45,32,114,101,116,117,114,110,32,110,117,109,98,101,114,32,111,102,32,111,99,99,117,114,114,101,110,99,101,115,32,111,102,32,97,110,32,111,98,106,
101,99,116,10,101,120,116,101,110,100,40,41,32,45,45,32,101,120,116,101,110,100,32,97,114,114,97,121,32,98,121,32,97,112,112,101,110,100,105,110,103,32,109,117,108,116,105,112,108,101,32,101,108,101,109,101,110,116,115,32,102,114,111,109,32,97,110,32,105,116,101,114,97,98,108,101,10,102,114,111,109,102,105,108,101,40,41,32,45,45,32,114,101,97,100,32,105,116,101,109,115,32,102,114,111,109,32,97,32,102,105,108,101,32,111,98,106,101,99,116,10,102,114,111,109,108,105,115,116,40,41,32,45,45,32,97,112,
112,101,110,100,32,105,116,101,109,115,32,102,114,111,109,32,116,104,101,32,108,105,115,116,10,102,114,111,109,115,116,114,105,110,103,40,41,32,45,45,32,97,112,112,101,110,100,32,105,116,101,109,115,32,102,114,111,109,32,116,104,101,32,115,116,114,105,110,103,10,105,110,100,101,120,40,41,32,45,45,32,114,101,116,117,114,110,32,105,110,100,101,120,32,111,102,32,102,105,114,115,116,32,111,99,99,117,114,114,101,110,99,101,32,111,102,32,97,110,32,111,98,106,101,99,116,10,105,110,115,101,114,116,40,41,
32,45,45,32,105,110,115,101,114,116,32,97,32,110,101,119,32,105,116,101,109,32,105,110,116,111,32,116,104,101,32,97,114,114,97,121,32,97,116,32,97,32,112,114,111,118,105,100,101,100,32,112,111,115,105,116,105,111,110,10,112,111,112,40,41,32,45,45,32,114,101,109,111,118,101,32,97,110,100,32,114,101,116,117,114,110,32,105,116,101,109,32,40,100,101,102,97,117,108,116,32,108,97,115,116,41,10,114,101,97,100,40,41,32,45,45,32,68,69,80,82,69,67,65,84,69,68,44,32,117,115,101,32,102,114,111,109,102,105,108,
101,40,41,10,114,101,109,111,118,101,40,41,32,45,45,32,114,101,109,111,118,101,32,102,105,114,115,116,32,111,99,99,117,114,114,101,110,99,101,32,111,102,32,97,110,32,111,98,106,101,99,116,10,114,101,118,101,114,115,101,40,41,32,45,45,32,114,101,118,101,114,115,101,32,116,104,101,32,111,114,100,101,114,32,111,102,32,116,104,101,32,105,116,101,109,115,32,105,110,32,116,104,101,32,97,114,114,97,121,10,116,111,102,105,108,101,40,41,32,45,45,32,119,114,105,116,101,32,97,108,108,32,105,116,101,109,115,
32,116,111,32,97,32,102,105,108,101,32,111,98,106,101,99,116,10,116,111,108,105,115,116,40,41,32,45,45,32,114,101,116,117,114,110,32,116,104,101,32,97,114,114,97,121,32,99,111,110,118,101,114,116,101,100,32,116,111,32,97,110,32,111,114,100,105,110,97,114,121,32,108,105,115,116,10,116,111,115,116,114,105,110,103,40,41,32,45,45,32,114,101,116,117,114,110,32,116,104,101,32,97,114,114,97,121,32,99,111,110,118,101,114,116,101,100,32,116,111,32,97,32,115,116,114,105,110,103,10,119,114,105,116,101,40,41,
32,45,45,32,68,69,80,82,69,67,65,84,69,68,44,32,117,115,101,32,116,111,102,105,108,101,40,41,10,10,65,116,116,114,105,98,117,116,101,115,58,10,10,116,121,112,101,99,111,100,101,32,45,45,32,116,104,101,32,116,121,112,101,99,111,100,101,32,99,104,97,114,97,99,116,101,114,32,117,115,101,100,32,116,111,32,99,114,101,97,116,101,32,116,104,101,32,97,114,114,97,121,10,105,116,101,109,115,105,122,101,32,45,45,32,116,104,101,32,108,101,110,103,116,104,32,105,110,32,98,121,116,101,115,32,111,102,32,111,110,
101,32,97,114,114,97,121,32,105,116,101,109,10,0],"i8",ALLOC_NORMAL);rb=allocate([97,114,114,97,121,46,97,114,114,97,121,0],"i8",ALLOC_NORMAL);fa=allocate([1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,28,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,132587,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],["i32",0,0,0,"%struct._typeobject*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i32",0,0,0,"i32",0,0,0,"void (%struct.PyObject*)*",0,0,0,"i32 (%struct.PyObject*, %struct.FILE*, i32)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, i8*)*",0,0,0,"i32 (%struct.PyObject*, i8*, %struct.PyObject*)*",0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*)*",0,0,0,"%struct.PyNumberMethods*",0,0,0,"%struct.PySequenceMethods*",
0,0,0,"%struct.PyMappingMethods*",0,0,0,"i32 (%struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"%struct.PyBufferProcs*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i32 (%struct.PyObject*, i32 (%struct.PyObject*, i8*)*, i8*)*",0,0,0,"i32 (%struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*, i32)*",
0,0,0,"i32",0,0,0,"%struct.PyObject* (%struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*)*",0,0,0,"%struct.PyMethodDef*",0,0,0,"%struct.PyMemberDef*",0,0,0,"%struct.PyGetSetDef*",0,0,0,"%struct._typeobject*",0,0,0,"%struct.PyObject*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct._typeobject*, i32)*",
0,0,0,"%struct.PyObject* (%struct._typeobject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"void (i8*)*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8"],ALLOC_NORMAL);tb=allocate([40,40,40,40,80,121,79,98,106,101,99,116,42,41,40,105,116,41,41,45,62,111,98,95,116,121,112,101,41,32,61,61,32,40,38,80,121,65,114,114,97,121,73,116,101,114,95,84,121,112,101,41,32,124,124,32,80,121,84,
121,112,101,95,73,115,83,117,98,116,121,112,101,40,40,40,40,80,121,79,98,106,101,99,116,42,41,40,105,116,41,41,45,62,111,98,95,116,121,112,101,41,44,32,40,38,80,121,65,114,114,97,121,73,116,101,114,95,84,121,112,101,41,41,41,0],"i8",ALLOC_NORMAL);Jb=allocate([97,114,114,97,121,105,116,101,114,95,110,101,120,116,0],"i8",ALLOC_NORMAL);lc=allocate([97,114,114,97,121,105,116,101,114,97,116,111,114,0],"i8",ALLOC_NORMAL);Rb=allocate([1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,147947,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],["i32",0,0,0,"%struct._typeobject*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i32",0,0,0,"i32",0,0,0,"void (%struct.PyObject*)*",0,0,0,"i32 (%struct.PyObject*, %struct.FILE*, i32)*",
0,0,0,"%struct.PyObject* (%struct.PyObject*, i8*)*",0,0,0,"i32 (%struct.PyObject*, i8*, %struct.PyObject*)*",0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*)*",0,0,0,"%struct.PyNumberMethods*",0,0,0,"%struct.PySequenceMethods*",0,0,0,"%struct.PyMappingMethods*",0,0,0,"i32 (%struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",
0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"%struct.PyBufferProcs*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i32 (%struct.PyObject*, i32 (%struct.PyObject*, i8*)*, i8*)*",0,0,0,"i32 (%struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*, i32)*",0,0,0,"i32",0,0,0,"%struct.PyObject* (%struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*)*",0,0,0,"%struct.PyMethodDef*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8",
"i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8"],ALLOC_NORMAL);Ba=allocate(16,["i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0],ALLOC_NORMAL);Fb=allocate([97,114,114,97,121,0],"i8",
ALLOC_NORMAL);vc=allocate([65,114,114,97,121,84,121,112,101,0],"i8",ALLOC_NORMAL);HEAP[T+8]=g+2;HEAP[T+12]=g+4;HEAP[T+24]=g+6;HEAP[T+28]=g+8;HEAP[T+40]=g+10;HEAP[T+44]=g+12;HEAP[T+56]=g+14;HEAP[T+60]=g+16;HEAP[T+72]=g+18;HEAP[T+76]=g+20;HEAP[T+88]=g+22;HEAP[T+92]=g+24;HEAP[T+104]=g+26;HEAP[T+108]=g+28;HEAP[T+120]=g+30;HEAP[T+124]=g+32;HEAP[T+136]=g+34;HEAP[T+140]=g+36;HEAP[T+152]=g+38;HEAP[T+156]=g+40;HEAP[T+168]=g+42;HEAP[T+172]=g+44;HEAP[T+184]=g+46;HEAP[T+188]=g+48;HEAP[ca]=qa;HEAP[ca+4]=g+50;
HEAP[ca+12]=M;HEAP[ca+20]=na;HEAP[ca+24]=g+52;HEAP[ca+32]=nb;HEAP[ea]=ua;HEAP[ea+4]=g+54;HEAP[ea+12]=Na;HEAP[ea+16]=Ea;HEAP[ea+20]=g+56;HEAP[ea+28]=ha;HEAP[ea+32]=Eb;HEAP[ea+36]=g+58;HEAP[ea+44]=hb;HEAP[ea+48]=zb;HEAP[ea+52]=g+60;HEAP[ea+60]=S;HEAP[ea+64]=va;HEAP[ea+68]=g+62;HEAP[ea+76]=Ma;HEAP[ea+80]=xa;HEAP[ea+84]=g+60;HEAP[ea+92]=S;HEAP[ea+96]=V;HEAP[ea+100]=g+64;HEAP[ea+108]=Za;HEAP[ea+112]=sa;HEAP[ea+116]=g+66;HEAP[ea+124]=Wa;HEAP[ea+128]=pa;HEAP[ea+132]=g+68;HEAP[ea+140]=ba;HEAP[ea+144]=fb;
HEAP[ea+148]=g+70;HEAP[ea+156]=wb;HEAP[ea+160]=ma;HEAP[ea+164]=g+72;HEAP[ea+172]=za;HEAP[ea+176]=sb;HEAP[ea+180]=g+74;HEAP[ea+188]=ib;HEAP[ea+192]=mb;HEAP[ea+196]=g+76;HEAP[ea+204]=Ga;HEAP[ea+208]=yb;HEAP[ea+212]=g+78;HEAP[ea+220]=Ca;HEAP[ea+224]=Nb;HEAP[ea+228]=g+80;HEAP[ea+236]=Wa;HEAP[ea+240]=Ib;HEAP[ea+244]=g+82;HEAP[ea+252]=Z;HEAP[ea+256]=Db;HEAP[ea+260]=g+84;HEAP[ea+268]=db;HEAP[ea+272]=Ub;HEAP[ea+276]=g+86;HEAP[ea+284]=Ra;HEAP[ea+288]=Tb;HEAP[ea+292]=g+88;HEAP[ea+300]=ra;HEAP[ea+304]=qb;HEAP[ea+
308]=g+90;HEAP[ea+316]=Ya;HEAP[ea+320]=Mb;HEAP[ea+324]=g+92;HEAP[ea+332]=bb;HEAP[ea+336]=Hb;HEAP[ea+340]=g+94;HEAP[ea+348]=La;HEAP[ea+352]=Wb;HEAP[ea+356]=g+96;HEAP[ea+364]=ra;HEAP[Ob]=g+98;HEAP[Ob+4]=g+100;HEAP[Ob+8]=g+102;HEAP[xb]=g+98;HEAP[xb+4]=g+104;HEAP[xb+8]=g+106;HEAP[xb+12]=g+108;HEAP[xb+16]=g+110;HEAP[xb+20]=g+112;HEAP[xb+24]=g+114;HEAP[xb+28]=g+116;HEAP[xb+32]=g+118;HEAP[xb+36]=g+120;HEAP[Xb]=g+122;HEAP[Xb+4]=g+124;HEAP[Xb+8]=g+126;HEAP[fa+12]=rb;HEAP[fa+24]=g+128;HEAP[fa+44]=g+130;HEAP[fa+
52]=xb;HEAP[fa+56]=Ob;HEAP[fa+72]=g+132;HEAP[fa+80]=Xb;HEAP[fa+88]=nc;HEAP[fa+100]=g+134;HEAP[fa+108]=g+136;HEAP[fa+116]=ea;HEAP[fa+124]=ca;HEAP[fa+152]=g+138;HEAP[fa+156]=g+140;HEAP[fa+160]=g+142;HEAP[Rb+12]=lc;HEAP[Rb+24]=g+144;HEAP[Rb+72]=g+132;HEAP[Rb+92]=g+146;HEAP[Rb+108]=g+148;HEAP[Rb+112]=g+150}var v={arguments:[]};Runtime.QUANTUM_SIZE=4;var w,x,y,B,A,C,G,F,E,N,Q,I,J,P,D,T,L,$,R,K,H,S,U,z,aa,ja,la,da,Ka,Ma,wa,ib,cb,db,Da,gb,Xa,Ca,Za,Va,Ga,ha,Na,jb,hb,Qa,Ha,Ra,Ia,Fa,$a,Wa,Y,kb,ra,Ta,ia,ba,
Ya,ta,O,wb,bb,vb,ka,za,Aa,La,ya,ub,Z,qa,M,na,nb,ca,ua,Ea,Eb,zb,va,xa,V,sa,pa,fb,ma,sb,mb,yb,Nb,Ib,Db,Ub,Tb,qb,Mb,Hb,Wb,ea,Qb,Bb,ic,Vb,Oa,eb,Ob,Sa,Yb,xb,Xb,lb,fc,jc,Pb,nc,rb,fa,tb,Jb,lc,Rb,Ba,Fb,vc;v._initarray=function(){var a;for(a=-1;;)switch(a){case -1:var b;HEAP[fa+4]=_PyType_Type;HEAP[Rb+4]=_PyType_Type;b=_Py_InitModule4(Fb,Ba,Pb,0,1013);a=b==0?2:1;break;case 1:HEAP[fa]+=1;_PyModule_AddObject(b,vc,fa);HEAP[fa]+=1;_PyModule_AddObject(b,Fb,fa);a=2;break;case 2:return;default:assert(0,"bad label: "+
a)}};FUNCTION_TABLE=FUNCTION_TABLE.concat([0,0,function(a,b){return _PyString_FromStringAndSize(HEAP[a+12]+b,1)},0,function(a,b,c){var d=STACKTOP;STACKTOP+=1;_memset(d,0,1);var e;for(e=-1;;)switch(e){case -1:var f,g,h,j=d;f=a;g=b;e=__PyArg_Parse_SizeT(c,w,allocate([j,0,0,0],["i8*",0,0,0],ALLOC_STACK))==0?1:2;break;case 1:h=-1;e=5;break;case 2:e=g>=0?3:4;break;case 3:HEAP[HEAP[f+12]+g]=HEAP[j];e=4;break;case 4:h=0;e=5;break;case 5:return a=h,STACKTOP=d,a;default:assert(0,"bad label: "+e)}},0,function(a,
b){var c;for(c=-1;;)switch(c){case -1:var d;d=HEAP[HEAP[a+12]+b];c=d>127?1:2;break;case 1:d-=256;c=2;break;case 2:return c=_PyInt_FromLong(d);default:assert(0,"bad label: "+c)}},0,function(a,b,c){var d=STACKTOP;STACKTOP+=2;_memset(d,0,2);var e;for(e=-1;;)switch(e){case -1:var f,g,h,j=d;f=a;g=b;e=__PyArg_Parse_SizeT(c,x,allocate([j,0,0,0],["i16*",0,0,0],ALLOC_STACK))==0?1:2;break;case 1:h=-1;e=9;break;case 2:e=HEAP[j]<-128?3:4;break;case 3:_PyErr_SetString(HEAP[_PyExc_OverflowError],y);h=-1;e=9;break;
case 4:e=HEAP[j]>127?5:6;break;case 5:_PyErr_SetString(HEAP[_PyExc_OverflowError],B);h=-1;e=9;break;case 6:e=g>=0?7:8;break;case 7:HEAP[HEAP[f+12]+g]=HEAP[j]&255;e=8;break;case 8:h=0;e=9;break;case 9:return a=h,STACKTOP=d,a;default:assert(0,"bad label: "+e)}},0,function(a,b){return _PyInt_FromLong(HEAP[HEAP[a+12]+b])},0,function(a,b,c){var d=STACKTOP;STACKTOP+=1;_memset(d,0,1);var e;for(e=-1;;)switch(e){case -1:var f,g,h,j=d;f=a;g=b;e=__PyArg_Parse_SizeT(c,A,allocate([j,0,0,0],["i8*",0,0,0],ALLOC_STACK))==
0?1:2;break;case 1:h=-1;e=5;break;case 2:e=g>=0?3:4;break;case 3:HEAP[HEAP[f+12]+g]=HEAP[j];e=4;break;case 4:h=0;e=5;break;case 5:return a=h,STACKTOP=d,a;default:assert(0,"bad label: "+e)}},0,function(a,b){return _PyUnicodeUCS2_FromUnicode(HEAP[a+12]+2*b,1)},0,function(a,b,c){var d=STACKTOP;STACKTOP+=8;_memset(d,0,8);var e;for(e=-1;;)switch(e){case -1:var f,g,h,j=d,k=d+4;f=a;g=b;e=__PyArg_Parse_SizeT(c,C,allocate([j,0,0,0,k,0,0,0],["i16**",0,0,0,"i32*",0,0,0],ALLOC_STACK))==0?1:2;break;case 1:h=-1;
e=7;break;case 2:e=HEAP[k]!=1?3:4;break;case 3:_PyErr_SetString(HEAP[_PyExc_TypeError],G);h=-1;e=7;break;case 4:e=g>=0?5:6;break;case 5:HEAP[HEAP[f+12]+2*g]=HEAP[HEAP[j]];e=6;break;case 6:h=0;e=7;break;case 7:return a=h,STACKTOP=d,a;default:assert(0,"bad label: "+e)}},0,function(a,b){return _PyInt_FromLong(HEAP[HEAP[a+12]+2*b])},0,function(a,b,c){var d=STACKTOP;STACKTOP+=2;_memset(d,0,2);var e;for(e=-1;;)switch(e){case -1:var f,g,h,j=d;f=a;g=b;e=__PyArg_Parse_SizeT(c,x,allocate([j,0,0,0],["i16*",
0,0,0],ALLOC_STACK))==0?1:2;break;case 1:h=-1;e=5;break;case 2:e=g>=0?3:4;break;case 3:HEAP[HEAP[f+12]+2*g]=HEAP[j];e=4;break;case 4:h=0;e=5;break;case 5:return a=h,STACKTOP=d,a;default:assert(0,"bad label: "+e)}},0,function(a,b){return _PyInt_FromLong(HEAP[HEAP[a+12]+2*b])},0,function(a,b,c){var d=STACKTOP;STACKTOP+=4;_memset(d,0,4);var e;for(e=-1;;)switch(e){case -1:var f,g,h,j=d;f=a;g=b;e=__PyArg_Parse_SizeT(c,F,allocate([j,0,0,0],["i32*",0,0,0],ALLOC_STACK))==0?1:2;break;case 1:h=-1;e=9;break;
case 2:e=HEAP[j]<0?3:4;break;case 3:_PyErr_SetString(HEAP[_PyExc_OverflowError],E);h=-1;e=9;break;case 4:e=HEAP[j]>65535?5:6;break;case 5:_PyErr_SetString(HEAP[_PyExc_OverflowError],N);h=-1;e=9;break;case 6:e=g>=0?7:8;break;case 7:HEAP[HEAP[f+12]+2*g]=HEAP[j]&65535;e=8;break;case 8:h=0;e=9;break;case 9:return a=h,STACKTOP=d,a;default:assert(0,"bad label: "+e)}},0,function(a,b){return _PyInt_FromLong(HEAP[HEAP[a+12]+4*b])},0,function(a,b,c){var d=STACKTOP;STACKTOP+=4;_memset(d,0,4);var e;for(e=-1;;)switch(e){case -1:var f,
g,h,j=d;f=a;g=b;e=__PyArg_Parse_SizeT(c,F,allocate([j,0,0,0],["i32*",0,0,0],ALLOC_STACK))==0?1:2;break;case 1:h=-1;e=5;break;case 2:e=g>=0?3:4;break;case 3:HEAP[HEAP[f+12]+4*g]=HEAP[j];e=4;break;case 4:h=0;e=5;break;case 5:return a=h,STACKTOP=d,a;default:assert(0,"bad label: "+e)}},0,function(a,b){return _PyLong_FromUnsignedLong(HEAP[HEAP[a+12]+4*b])},0,function(a,b,c){var d=STACKTOP;STACKTOP+=4;_memset(d,0,4);var e;for(e=-1;;)switch(e){case -1:var f,g,h,j,k=d;f=a;g=b;var l=e=c;e=(HEAP[HEAP[e+4]+
84]&16777216)!=0?1:4;break;case 1:j=_PyLong_AsUnsignedLong(l);e=j==-1?2:9;break;case 2:e=_PyErr_Occurred()!=0?3:9;break;case 3:h=-1;e=12;break;case 4:e=__PyArg_Parse_SizeT(l,Q,allocate([k,0,0,0],["i32*",0,0,0],ALLOC_STACK))==0?5:6;break;case 5:h=-1;e=12;break;case 6:e=HEAP[k]<0?7:8;break;case 7:_PyErr_SetString(HEAP[_PyExc_OverflowError],I);h=-1;e=12;break;case 8:j=HEAP[k];e=9;break;case 9:e=g>=0?10:11;break;case 10:HEAP[HEAP[f+12]+4*g]=j;e=11;break;case 11:h=0;e=12;break;case 12:return a=h,STACKTOP=
d,a;default:assert(0,"bad label: "+e)}},0,function(a,b){return _PyInt_FromLong(HEAP[HEAP[a+12]+4*b])},0,function(a,b,c){var d=STACKTOP;STACKTOP+=4;_memset(d,0,4);var e;for(e=-1;;)switch(e){case -1:var f,g,h,j=d;f=a;g=b;e=__PyArg_Parse_SizeT(c,Q,allocate([j,0,0,0],["i32*",0,0,0],ALLOC_STACK))==0?1:2;break;case 1:h=-1;e=5;break;case 2:e=g>=0?3:4;break;case 3:HEAP[HEAP[f+12]+4*g]=HEAP[j];e=4;break;case 4:h=0;e=5;break;case 5:return a=h,STACKTOP=d,a;default:assert(0,"bad label: "+e)}},0,function(a,b){return _PyLong_FromUnsignedLong(HEAP[HEAP[a+
12]+4*b])},0,function(a,b,c){var d=STACKTOP;STACKTOP+=4;_memset(d,0,4);var e;for(e=-1;;)switch(e){case -1:var f,g,h,j,k=d;f=a;g=b;var l=e=c;e=(HEAP[HEAP[e+4]+84]&16777216)!=0?1:4;break;case 1:j=_PyLong_AsUnsignedLong(l);e=j==-1?2:9;break;case 2:e=_PyErr_Occurred()!=0?3:9;break;case 3:h=-1;e=12;break;case 4:e=__PyArg_Parse_SizeT(l,Q,allocate([k,0,0,0],["i32*",0,0,0],ALLOC_STACK))==0?5:6;break;case 5:h=-1;e=12;break;case 6:e=HEAP[k]<0?7:8;break;case 7:_PyErr_SetString(HEAP[_PyExc_OverflowError],J);
h=-1;e=12;break;case 8:j=HEAP[k];e=9;break;case 9:e=g>=0?10:11;break;case 10:HEAP[HEAP[f+12]+4*g]=j;e=11;break;case 11:h=0;e=12;break;case 12:return a=h,STACKTOP=d,a;default:assert(0,"bad label: "+e)}},0,function(a,b){return _PyFloat_FromDouble(HEAP[HEAP[a+12]+4*b])},0,function(a,b,c){var d=STACKTOP;STACKTOP+=4;_memset(d,0,4);var e;for(e=-1;;)switch(e){case -1:var f,g,h,j=d;f=a;g=b;e=__PyArg_Parse_SizeT(c,P,allocate([j,0,0,0],["float*",0,0,0],ALLOC_STACK))==0?1:2;break;case 1:h=-1;e=5;break;case 2:e=
g>=0?3:4;break;case 3:HEAP[HEAP[f+12]+4*g]=HEAP[j];e=4;break;case 4:h=0;e=5;break;case 5:return a=h,STACKTOP=d,a;default:assert(0,"bad label: "+e)}},0,function(a,b){return _PyFloat_FromDouble(HEAP[HEAP[a+12]+8*b])},0,function(a,b,c){var d=STACKTOP;STACKTOP+=8;_memset(d,0,8);var e;for(e=-1;;)switch(e){case -1:var f,g,h,j=d;f=a;g=b;e=__PyArg_Parse_SizeT(c,D,allocate([j,0,0,0],["double*",0,0,0],ALLOC_STACK))==0?1:2;break;case 1:h=-1;e=5;break;case 2:e=g>=0?3:4;break;case 3:HEAP[HEAP[f+12]+8*g]=HEAP[j];
e=4;break;case 4:h=0;e=5;break;case 5:return a=h,STACKTOP=d,a;default:assert(0,"bad label: "+e)}},0,function(a){var b=STACKTOP;STACKTOP+=1;_memset(b,0,1);HEAP[b]=HEAP[HEAP[a+20]]&255;a=_PyString_FromStringAndSize(b,1);STACKTOP=b;return a},0,function(a){return _PyInt_FromLong(HEAP[HEAP[a+20]+4])},0,function(a,b){return m(a,HEAP[a+8],b)},0,function(a){var b;for(b=-1;;)switch(b){case -1:var c,d,e;c=a;e=_PyTuple_New(2);b=e==0?1:2;break;case 1:d=0;b=3;break;case 2:b=e;d=_PyLong_FromVoidPtr(HEAP[c+12]);
HEAP[b+12]=d;b=e;d=_PyInt_FromLong(HEAP[c+8]);HEAP[b+12+4]=d;d=e;b=3;break;case 3:return a=d;default:assert(0,"bad label: "+b)}},0,function(a){var b;for(b=-1;;)switch(b){case -1:var c,d,e,f,g,h,j;c=a;b=HEAP[HEAP[c+20]+4];b=b==1?8:b==2?1:b==4?3:b==8?5:7;break;case 1:e=HEAP[c+12];f=HEAP[c+8];f=b=f-1;b=b>=0?2:8;break;case 2:b=HEAP[e];HEAP[e]=HEAP[e+1];HEAP[e+1]=b;e+=2;f=b=f-1;b=b>=0?2:8;break;case 3:e=HEAP[c+12];f=HEAP[c+8];f=b=f-1;b=b>=0?4:8;break;case 4:b=HEAP[e];g=HEAP[e+1];HEAP[e]=HEAP[e+3];HEAP[e+
1]=HEAP[e+2];HEAP[e+2]=g;HEAP[e+3]=b;e+=4;f=b=f-1;b=b>=0?4:8;break;case 5:e=HEAP[c+12];f=HEAP[c+8];f=b=f-1;b=b>=0?6:8;break;case 6:b=HEAP[e];g=HEAP[e+1];h=HEAP[e+2];j=HEAP[e+3];HEAP[e]=HEAP[e+7];HEAP[e+1]=HEAP[e+6];HEAP[e+2]=HEAP[e+5];HEAP[e+3]=HEAP[e+4];HEAP[e+4]=j;HEAP[e+5]=h;HEAP[e+6]=g;HEAP[e+7]=b;e+=8;f=b=f-1;b=b>=0?6:8;break;case 7:_PyErr_SetString(HEAP[_PyExc_RuntimeError],jb);d=0;b=9;break;case 8:HEAP[__Py_NoneStruct]+=1;d=__Py_NoneStruct;b=9;break;case 9:return a=d;default:assert(0,"bad label: "+
b)}},0,function(a){return f(a,0,HEAP[a+8])},0,function(b,c){var d;for(d=-1;;)switch(d){case -1:var e,f,g,h,j,k,l;e=b;f=c;j=h=0;d=8;break;case 1:k=a(e,j);l=_PyObject_RichCompareBool(k,f,2);HEAP[k]-=1;d=HEAP[k]==0?2:3;break;case 2:FUNCTION_TABLE[HEAP[HEAP[k+4]+24]](k);d=3;break;case 3:d=l>0?4:5;break;case 4:h+=1;d=7;break;case 5:d=l<0?6:7;break;case 6:g=0;d=10;break;case 7:j+=1;d=8;break;case 8:d=HEAP[e+8]>j?1:9;break;case 9:g=_PyInt_FromSsize_t(h);d=10;break;case 10:return d=g;default:assert(0,"bad label: "+
d)}},0,function(a,b){var c;for(c=-1;;)switch(c){case -1:var d;c=l(a,b)==-1?1:2;break;case 1:d=0;c=3;break;case 2:HEAP[__Py_NoneStruct]+=1;d=__Py_NoneStruct;c=3;break;case 3:return c=d;default:assert(0,"bad label: "+c)}},0,n,0,function(a,b){var c;for(c=-1;;)switch(c){case -1:var d,e,f,g,h,j,k,l,m,n,o;d=a;e=b;m=HEAP[HEAP[d+20]+4];c=(HEAP[HEAP[e+4]+84]&33554432)==0?1:2;break;case 1:_PyErr_SetString(HEAP[_PyExc_TypeError],ia);k=0;c=30;break;case 2:l=_PyList_Size(e);c=l>0?3:29;break;case 3:n=HEAP[d+12];
c=(l+HEAP[d+8])*m>=0?4:9;break;case 4:c=(l+HEAP[d+8])*m>=0?5:8;break;case 5:c=(l+HEAP[d+8])*m!=0?6:7;break;case 6:j=(l+HEAP[d+8])*m;c=10;break;case 7:j=1;c=10;break;case 8:n=0;c=11;break;case 9:n=0;c=11;break;case 10:n=c=_realloc(n,j);c=c==0?11:12;break;case 11:_PyErr_NoMemory();k=0;c=30;break;case 12:HEAP[d+12]=n;HEAP[d+8]=l+HEAP[d+8];HEAP[d+16]=HEAP[d+8];o=0;c=28;break;case 13:c=_PyList_GetItem(e,o);c=FUNCTION_TABLE[HEAP[HEAP[d+20]+12]](d,0-l+HEAP[d+8]+o,c)!=0?14:27;break;case 14:HEAP[d+8]-=l;c=
m!=0?15:17;break;case 15:c=HEAP[d+8]>(2147483647/m|0)?16:17;break;case 16:k=_PyErr_NoMemory();c=30;break;case 17:c=m*HEAP[d+8]>=0?18:25;break;case 18:c=m*HEAP[d+8]>=0?19:23;break;case 19:c=m*HEAP[d+8]!=0?20:21;break;case 20:f=m*HEAP[d+8];c=22;break;case 21:f=1;c=22;break;case 22:g=_realloc(n,f);c=24;break;case 23:g=0;c=24;break;case 24:h=g;c=26;break;case 25:h=0;c=26;break;case 26:n=h;HEAP[d+12]=n;HEAP[d+16]=HEAP[d+8];k=0;c=30;break;case 27:o+=1;c=28;break;case 28:c=o<l?13:29;break;case 29:HEAP[__Py_NoneStruct]+=
1;k=__Py_NoneStruct;c=30;break;case 30:return d=k;default:assert(0,"bad label: "+c)}},0,q,0,function(a,b){var c=STACKTOP;STACKTOP+=8;_memset(c,0,8);var d;for(d=-1;;)switch(d){case -1:var e,f,g,h=c,j=c+4,k;e=a;d=__PyArg_ParseTuple_SizeT(b,vb,allocate([h,0,0,0,j,0,0,0],["i16**",0,0,0,"i32*",0,0,0],ALLOC_STACK))==0?1:2;break;case 1:g=0;d=18;break;case 2:d=HEAP[HEAP[e+20]]!=117?3:4;break;case 3:_PyErr_SetString(HEAP[_PyExc_ValueError],ka);g=0;d=18;break;case 4:d=HEAP[j]>0?5:17;break;case 5:k=HEAP[e+12];
d=HEAP[e+8]>2147483647-HEAP[j]?6:7;break;case 6:g=_PyErr_NoMemory();d=18;break;case 7:d=HEAP[j]+HEAP[e+8]<=1073741823?8:13;break;case 8:d=(HEAP[j]+HEAP[e+8])*2>=0?9:12;break;case 9:d=(HEAP[j]+HEAP[e+8])*2!=0?10:11;break;case 10:f=(HEAP[j]+HEAP[e+8])*2;d=14;break;case 11:f=1;d=14;break;case 12:k=0;d=15;break;case 13:k=0;d=15;break;case 14:k=d=_realloc(k,f);d=d==0?15:16;break;case 15:_PyErr_NoMemory();g=0;d=18;break;case 16:HEAP[e+12]=k;HEAP[e+8]=HEAP[j]+HEAP[e+8];HEAP[e+16]=HEAP[e+8];_llvm_memcpy_p0i8_p0i8_i32(k+
2*HEAP[e+8]+2*(0-HEAP[j]),HEAP[h],HEAP[j]*2,1,0);d=17;break;case 17:HEAP[__Py_NoneStruct]+=1;g=__Py_NoneStruct;d=18;break;case 18:return e=g,STACKTOP=c,e;default:assert(0,"bad label: "+d)}},0,function(b,c){var d;for(d=-1;;)switch(d){case -1:var e,f,g,h,j,k;e=b;f=c;h=0;d=8;break;case 1:j=a(e,h);k=_PyObject_RichCompareBool(j,f,2);HEAP[j]-=1;d=HEAP[j]==0?2:3;break;case 2:FUNCTION_TABLE[HEAP[HEAP[j+4]+24]](j);d=3;break;case 3:d=k>0?4:5;break;case 4:g=_PyInt_FromLong(h);d=10;break;case 5:d=k<0?6:7;break;
case 6:g=0;d=10;break;case 7:h+=1;d=8;break;case 8:d=HEAP[e+8]>h?1:9;break;case 9:_PyErr_SetString(HEAP[_PyExc_ValueError],wa);g=0;d=10;break;case 10:return d=g;default:assert(0,"bad label: "+d)}},0,function(a,b){var c=STACKTOP;STACKTOP+=8;_memset(c,0,8);var d;for(d=-1;;)switch(d){case -1:var e,f,g=c,h=c+4;e=a;d=__PyArg_ParseTuple_SizeT(b,Va,allocate([g,0,0,0,h,0,0,0],["i32*",0,0,0,"%struct.PyObject**",0,0,0],ALLOC_STACK))==0?1:2;break;case 1:f=0;d=3;break;case 2:f=m(e,HEAP[g],HEAP[h]);d=3;break;
case 3:return d=f,STACKTOP=c,d;default:assert(0,"bad label: "+d)}},0,function(b,c){var d=STACKTOP;STACKTOP+=4;_memset(d,0,4);var e;for(e=-1;;)switch(e){case -1:var f,g,j=d,k;f=b;e=c;HEAP[j]=-1;e=__PyArg_ParseTuple_SizeT(e,Da,allocate([j,0,0,0],["i32*",0,0,0],ALLOC_STACK))==0?1:2;break;case 1:g=0;e=13;break;case 2:e=HEAP[f+8]==0?3:4;break;case 3:_PyErr_SetString(HEAP[_PyExc_IndexError],gb);g=0;e=13;break;case 4:e=HEAP[j]<0?5:6;break;case 5:e=HEAP[j]+HEAP[f+8];HEAP[j]=e;e=e<0?7:6;break;case 6:e=HEAP[f+
8]<=HEAP[j]?7:8;break;case 7:_PyErr_SetString(HEAP[_PyExc_IndexError],Xa);g=0;e=13;break;case 8:k=a(f,HEAP[j]);e=h(f,HEAP[j],HEAP[j]+1,0);var l=k;e=e!=0?9:12;break;case 9:HEAP[k]=HEAP[l]-1;e=HEAP[k]==0?10:11;break;case 10:FUNCTION_TABLE[HEAP[HEAP[k+4]+24]](k);e=11;break;case 11:g=0;e=13;break;case 12:g=l;e=13;break;case 13:return f=g,STACKTOP=d,f;default:assert(0,"bad label: "+e)}},0,function(a,b){var c;for(c=-1;;)switch(c){case -1:var d,e,f;d=a;e=b;c=HEAP[_Py_Py3kWarningFlag]!=0?1:3;break;case 1:c=
_PyErr_WarnEx(HEAP[_PyExc_DeprecationWarning],Y,1)<0?2:3;break;case 2:f=0;c=4;break;case 3:f=n(d,e);c=4;break;case 4:return c=f;default:assert(0,"bad label: "+c)}},0,function(a){var b;for(b=-1;;)switch(b){case -1:var c,d,e,f,g;c=a;e=_PyObject_GetAttrString(c,ya);b=e==0?1:4;break;case 1:b=_PyErr_ExceptionMatches(HEAP[_PyExc_AttributeError])==0?2:3;break;case 2:d=0;b=13;break;case 3:_PyErr_Clear();e=__Py_NoneStruct;HEAP[e]+=1;b=4;break;case 4:g=b=p(c,0);b=b==0?5:8;break;case 5:HEAP[e]-=1;b=HEAP[e]==
0?6:7;break;case 6:FUNCTION_TABLE[HEAP[HEAP[e+4]+24]](e);b=7;break;case 7:d=0;b=13;break;case 8:f=__Py_BuildValue_SizeT(ub,allocate([HEAP[c+4],0,0,0,HEAP[HEAP[c+20]],0,0,0,g,0,0,0,e,0,0,0],["%struct._typeobject*",0,0,0,"i32",0,0,0,"%struct.PyObject*",0,0,0,"%struct.PyObject*",0,0,0],ALLOC_STACK));HEAP[g]-=1;b=HEAP[g]==0?9:10;break;case 9:FUNCTION_TABLE[HEAP[HEAP[g+4]+24]](g);b=10;break;case 10:HEAP[e]-=1;b=HEAP[e]==0?11:12;break;case 11:FUNCTION_TABLE[HEAP[HEAP[e+4]+24]](e);b=12;break;case 12:d=f;
b=13;break;case 13:return a=d;default:assert(0,"bad label: "+b)}},0,function(b,c){var d;for(d=-1;;)switch(d){case -1:var e,f,g,j,k,l;e=b;f=c;j=0;d=10;break;case 1:k=a(e,j);l=_PyObject_RichCompareBool(k,f,2);HEAP[k]-=1;d=HEAP[k]==0?2:3;break;case 2:FUNCTION_TABLE[HEAP[HEAP[k+4]+24]](k);d=3;break;case 3:d=l>0?4:7;break;case 4:d=h(e,j,j+1,0)!=0?5:6;break;case 5:g=0;d=12;break;case 6:HEAP[__Py_NoneStruct]+=1;g=__Py_NoneStruct;d=12;break;case 7:d=l<0?8:9;break;case 8:g=0;d=12;break;case 9:j+=1;d=10;break;
case 10:d=HEAP[e+8]>j?1:11;break;case 11:_PyErr_SetString(HEAP[_PyExc_ValueError],cb);g=0;d=12;break;case 12:return d=g;default:assert(0,"bad label: "+d)}},0,function(a){var b=STACKTOP;STACKTOP+=256;_memset(b,0,256);var c;for(c=-1;;)switch(c){case -1:var d,e,f,g,h=b;d=a;e=HEAP[HEAP[d+20]+4];c=e>256?1:2;break;case 1:throw ___assert_fail(Qa,L,1166,Ha),"Reached an unreachable!";case 2:c=HEAP[d+8]>1?3:6;break;case 3:f=HEAP[d+12];g=HEAP[d+12]+(HEAP[d+8]-1)*e;c=f<g?4:6;break;case 4:var j=h,k=h;c=5;break;
case 5:_llvm_memcpy_p0i8_p0i8_i32(j,f,e,1,0);_llvm_memcpy_p0i8_p0i8_i32(f,g,e,1,0);_llvm_memcpy_p0i8_p0i8_i32(g,k,e,1,0);f+=e;g+=0-e;c=f<g?5:6;break;case 6:return HEAP[__Py_NoneStruct]+=1,a=__Py_NoneStruct,STACKTOP=b,a;default:assert(0,"bad label: "+c)}},0,o,0,p,0,r,0,t,0,function(a,b){var c;for(c=-1;;)switch(c){case -1:var d,e,f;d=a;e=b;c=HEAP[_Py_Py3kWarningFlag]!=0?1:3;break;case 1:c=_PyErr_WarnEx(HEAP[_PyExc_DeprecationWarning],Ta,1)<0?2:3;break;case 2:f=0;c=4;break;case 3:f=o(d,e);c=4;break;
case 4:return c=f;default:assert(0,"bad label: "+c)}},0,function(a){return HEAP[a+8]},0,function(a,c){var e=STACKTOP;STACKTOP+=16;_memset(e,0,16);var f,g=null;for(f=-1;;)switch(f){case -1:var h,j,k,l,m=e,n=e+4,o=e+8,p=e+12,q,r,s,t,u,v;h=a;j=c;f=HEAP[HEAP[j+4]+48]==0?10:1;break;case 1:f=(HEAP[HEAP[j+4]+84]&131072)==0?10:2;break;case 2:f=HEAP[HEAP[HEAP[j+4]+48]+152]==0?10:3;break;case 3:var z=l=_PyNumber_AsSsize_t(j,HEAP[_PyExc_IndexError]);z==-1?(g=3,f=4):(g=3,f=7);break;case 4:f=_PyErr_Occurred()!=
0?5:6;break;case 5:k=0;f=25;break;case 6:var w=l,g=6;f=7;break;case 7:f=(g==6?w:z)<0?8:9;break;case 8:l+=HEAP[h+8];f=9;break;case 9:k=d(h,l);f=25;break;case 10:f=HEAP[j+4]==_PySlice_Type?11:24;break;case 11:u=HEAP[HEAP[h+20]+4];f=_PySlice_GetIndicesEx(j,HEAP[h+8],m,n,o,p)<0?12:13;break;case 12:k=0;f=25;break;case 13:f=HEAP[p]<=0?14:15;break;case 14:k=b(fa,0,HEAP[h+20]);f=25;break;case 15:f=HEAP[o]==1;var x=b(fa,HEAP[p],HEAP[h+20]);f=f?16:19;break;case 16:v=x;f=v==0?17:18;break;case 17:k=0;f=25;break;
case 18:_llvm_memcpy_p0i8_p0i8_i32(HEAP[v+12],HEAP[h+12]+u*HEAP[m],u*HEAP[p],1,0);k=v;f=25;break;case 19:s=x;f=s==0?20:21;break;case 20:k=0;f=25;break;case 21:t=s;q=HEAP[m];r=0;f=r<HEAP[p]?22:23;break;case 22:_llvm_memcpy_p0i8_p0i8_i32(HEAP[t+12]+u*r,HEAP[h+12]+u*q,u,1,0);q+=HEAP[o];r+=1;f=r<HEAP[p]?22:23;break;case 23:k=s;f=25;break;case 24:_PyErr_SetString(HEAP[_PyExc_TypeError],Vb);k=0;f=25;break;case 25:return g=k,STACKTOP=e,g;default:assert(0,"bad label: "+f)}},0,s,0,function(a,c){var d;for(d=
-1;;)switch(d){case -1:var e,f,g,h;e=a;f=c;d=HEAP[f+4]!=fa?1:3;break;case 1:d=_PyType_IsSubtype(HEAP[f+4],fa)==0?2:3;break;case 2:_PyErr_Format(HEAP[_PyExc_TypeError],U,allocate([HEAP[HEAP[f+4]+12],0,0,0],["i8*",0,0,0],ALLOC_STACK));g=0;d=10;break;case 3:d=HEAP[e+20]!=HEAP[f+20]?4:5;break;case 4:_PyErr_BadArgument();g=0;d=10;break;case 5:d=HEAP[e+8]>2147483647-HEAP[f+8]?6:7;break;case 6:g=_PyErr_NoMemory();d=10;break;case 7:d=HEAP[f+8]+HEAP[e+8];h=b(fa,d,HEAP[e+20]);d=h==0?8:9;break;case 8:g=0;d=
10;break;case 9:_llvm_memcpy_p0i8_p0i8_i32(HEAP[h+12],HEAP[e+12],HEAP[HEAP[e+20]+4]*HEAP[e+8],1,0);_llvm_memcpy_p0i8_p0i8_i32(HEAP[h+12]+HEAP[HEAP[e+20]+4]*HEAP[e+8],HEAP[f+12],HEAP[HEAP[f+20]+4]*HEAP[f+8],1,0);g=h;d=10;break;case 10:return e=g;default:assert(0,"bad label: "+d)}},0,function(a,c){var d;for(d=-1;;)switch(d){case -1:var e,f,g,h,j,k,l;e=a;f=c;d=f<0?1:2;break;case 1:f=0;d=2;break;case 2:d=HEAP[e+8]!=0?3:5;break;case 3:d=(2147483647/HEAP[e+8]|0)<f?4:5;break;case 4:g=_PyErr_NoMemory();d=
10;break;case 5:j=f*HEAP[e+8];j=d=b(fa,j,HEAP[e+20]);d=d==0?6:7;break;case 6:g=0;d=10;break;case 7:k=HEAP[j+12];l=HEAP[HEAP[e+20]+4]*HEAP[e+8];h=0;d=h<f?8:9;break;case 8:_llvm_memcpy_p0i8_p0i8_i32(k,HEAP[e+12],l,1,0);k+=l;h+=1;d=h<f?8:9;break;case 9:g=j;d=10;break;case 10:return e=g;default:assert(0,"bad label: "+d)}},0,d,0,f,0,j,0,h,0,function(b,c){var d,e=null;for(d=-1;;)switch(d){case -1:var f,g,h,j,k;f=b;g=c;j=h=0;e=-1;d=4;break;case 1:k=a(f,h);j=_PyObject_RichCompareBool(k,g,2);HEAP[k]-=1;d=
HEAP[k]==0?2:3;break;case 2:FUNCTION_TABLE[HEAP[HEAP[k+4]+24]](k);d=3;break;case 3:h+=1;var l=j,e=3;d=4;break;case 4:d=(e==3?l:0)!=0?6:5;break;case 5:d=HEAP[f+8]>h?1:6;break;case 6:return d=j;default:assert(0,"bad label: "+d)}},0,function(a,b){var c;for(c=-1;;)switch(c){case -1:var d,e,f;d=a;e=b;c=HEAP[e+4]!=fa?1:3;break;case 1:c=_PyType_IsSubtype(HEAP[e+4],fa)==0?2:3;break;case 2:_PyErr_Format(HEAP[_PyExc_TypeError],Ka,allocate([HEAP[HEAP[e+4]+12],0,0,0],["i8*",0,0,0],ALLOC_STACK));f=0;c=6;break;
case 3:c=l(d,e)==-1?4:5;break;case 4:f=0;c=6;break;case 5:HEAP[d]+=1;f=d;c=6;break;case 6:return c=f;default:assert(0,"bad label: "+c)}},0,function(a,b){var c;for(c=-1;;)switch(c){case -1:var d,e,f,g,h,j,k,l;d=a;e=b;c=HEAP[d+8]>0?1:22;break;case 1:c=e<0?2:3;break;case 2:e=0;c=3;break;case 3:h=HEAP[d+12];c=HEAP[HEAP[d+20]+4]!=0?4:6;break;case 4:c=HEAP[d+8]>(2147483647/HEAP[HEAP[d+20]+4]|0)?5:6;break;case 5:g=_PyErr_NoMemory();c=23;break;case 6:k=HEAP[HEAP[d+20]+4]*HEAP[d+8];c=e==0?7:8;break;case 7:_free(h);
HEAP[d+12]=0;HEAP[d+8]=0;HEAP[d+16]=0;c=22;break;case 8:c=(2147483647/e|0)<k?9:10;break;case 9:g=_PyErr_NoMemory();c=23;break;case 10:c=k*e>=0?11:16;break;case 11:c=k*e>=0?12:15;break;case 12:c=k*e!=0?13:14;break;case 13:f=k*e;c=17;break;case 14:f=1;c=17;break;case 15:h=0;c=18;break;case 16:h=0;c=18;break;case 17:h=c=_realloc(h,f);c=c==0?18:19;break;case 18:g=_PyErr_NoMemory();c=23;break;case 19:j=h;l=1;c=l<e?20:21;break;case 20:j+=k;_llvm_memcpy_p0i8_p0i8_i32(j,h,k,1,0);l+=1;c=l<e?20:21;break;case 21:HEAP[d+
12]=h;HEAP[d+8]*=e;HEAP[d+16]=HEAP[d+8];c=22;break;case 22:HEAP[d]+=1;g=d;c=23;break;case 23:return d=g;default:assert(0,"bad label: "+c)}},0,function(a,b,c){var d;for(d=-1;;)switch(d){case -1:var e,f,g;e=a;d=b;f=c;d=d!=0?1:2;break;case 1:_PyErr_SetString(HEAP[_PyExc_SystemError],Yb);g=-1;d=5;break;case 2:HEAP[f]=HEAP[e+12];d=HEAP[f]==0?3:4;break;case 3:HEAP[f]=Sa;d=4;break;case 4:g=HEAP[HEAP[e+20]+4]*HEAP[e+8];d=5;break;case 5:return a=g;default:assert(0,"bad label: "+d)}},0,function(a,b,c){var d;
for(d=-1;;)switch(d){case -1:var e,f,g;e=a;d=b;f=c;d=d!=0?1:2;break;case 1:_PyErr_SetString(HEAP[_PyExc_SystemError],Yb);g=-1;d=5;break;case 2:HEAP[f]=HEAP[e+12];d=HEAP[f]==0?3:4;break;case 3:HEAP[f]=Sa;d=4;break;case 4:g=HEAP[HEAP[e+20]+4]*HEAP[e+8];d=5;break;case 5:return a=g;default:assert(0,"bad label: "+d)}},0,function(a,b){var c;for(c=-1;;)switch(c){case -1:var d,e;d=a;e=b;c=e!=0?1:2;break;case 1:HEAP[e]=HEAP[HEAP[d+20]+4]*HEAP[d+8];c=2;break;case 2:return 1;default:assert(0,"bad label: "+c)}},
0,function(a){var b;for(b=-1;;)switch(b){case -1:var c;c=a;b=HEAP[c+24]!=0?1:2;break;case 1:_PyObject_ClearWeakRefs(c);b=2;break;case 2:b=HEAP[c+12]!=0?3:4;break;case 3:_free(HEAP[c+12]);b=4;break;case 4:FUNCTION_TABLE[HEAP[HEAP[c+4]+160]](c);return;default:assert(0,"bad label: "+b)}},0,function(a){var b=STACKTOP;STACKTOP+=260;_memset(b,0,260);var c;for(c=-1;;)switch(c){case -1:var d,e,f=b,g,h=b+256,j,k;d=a;k=0;c=HEAP[d+8];var l=g=HEAP[HEAP[d+20]]&255;c=c==0?1:2;break;case 1:_PyOS_snprintf(f,256,
Qb,allocate([l,0,0,0],["i32",0,0,0],ALLOC_STACK));e=_PyString_FromString(f);c=11;break;case 2:c=l==99?3:4;break;case 3:k=r(d,0);c=7;break;case 4:var m=d;c=g==117?5:6;break;case 5:k=t(m,0);c=7;break;case 6:k=p(m,0);c=7;break;case 7:j=_PyObject_Repr(k);c=k!=0?8:10;break;case 8:HEAP[k]-=1;c=HEAP[k]==0?9:10;break;case 9:FUNCTION_TABLE[HEAP[HEAP[k+4]+24]](k);c=10;break;case 10:_PyOS_snprintf(f,256,Bb,allocate([g,0,0,0],["i32",0,0,0],ALLOC_STACK));e=_PyString_FromString(f);HEAP[h]=e;_PyString_ConcatAndDel(h,
j);e=_PyString_FromString(ic);_PyString_ConcatAndDel(h,e);e=HEAP[h];c=11;break;case 11:return a=e,STACKTOP=b,a;default:assert(0,"bad label: "+c)}},0,_PyObject_GenericGetAttr,0,function(b,c,d){var e,f=null;for(e=-1;;)switch(e){case -1:var g,h,j,k,l,m,n,o,p,q,r,s,t;g=b;h=c;j=d;o=n=0;e=HEAP[g+4]==fa?2:1;break;case 1:e=_PyType_IsSubtype(HEAP[g+4],fa)==0?4:2;break;case 2:e=HEAP[h+4]==fa?5:3;break;case 3:e=_PyType_IsSubtype(HEAP[h+4],fa)==0?4:5;break;case 4:HEAP[__Py_NotImplementedStruct]+=1;k=__Py_NotImplementedStruct;
e=55;break;case 5:l=g;m=h;e=HEAP[l+8]!=HEAP[m+8]?6:11;break;case 6:e=j==2|j==3?7:11;break;case 7:e=j==2?8:9;break;case 8:r=__Py_ZeroStruct;e=10;break;case 9:r=__Py_TrueStruct;e=10;break;case 10:HEAP[r]+=1;k=r;e=55;break;case 11:q=1;p=0;e=30;break;case 12:n=a(g,p);var u=a(h,p);o=u;n==0?(f=12,e=18):(f=12,e=13);break;case 13:var v=n;e=o==0?14:22;break;case 14:e=v!=0?15:17;break;case 15:HEAP[n]-=1;e=HEAP[n]==0?16:17;break;case 16:FUNCTION_TABLE[HEAP[HEAP[n+4]+24]](n);e=17;break;case 17:var z=o,f=17;e=
18;break;case 18:e=(f==17?z:u)!=0?19:21;break;case 19:HEAP[o]-=1;e=HEAP[o]==0?20:21;break;case 20:FUNCTION_TABLE[HEAP[HEAP[o+4]+24]](o);e=21;break;case 21:k=0;e=55;break;case 22:q=_PyObject_RichCompareBool(v,o,2);e=q==0?45:23;break;case 23:HEAP[n]-=1;e=HEAP[n]==0?24:25;break;case 24:FUNCTION_TABLE[HEAP[HEAP[n+4]+24]](n);e=25;break;case 25:HEAP[o]-=1;e=HEAP[o]==0?26:27;break;case 26:FUNCTION_TABLE[HEAP[HEAP[o+4]+24]](o);e=27;break;case 27:e=q<0?28:29;break;case 28:k=0;e=55;break;case 29:p+=1;e=30;
break;case 30:e=HEAP[l+8]<=p?32:31;break;case 31:e=HEAP[m+8]>p?12:32;break;case 32:e=q!=0?33:45;break;case 33:s=HEAP[l+8];t=HEAP[m+8];e=j;e=e==0?34:e==1?35:e==2?36:e==3?37:e==4?38:e==5?39:40;break;case 34:var w=s<t,f=34;e=41;break;case 35:var x=s<=t,f=35;e=41;break;case 36:var H=s==t,f=36;e=41;break;case 37:var M=s!=t,f=37;e=41;break;case 38:var V=s>t,f=38;e=41;break;case 39:var D=s>=t,f=39;e=41;break;case 40:k=0;e=55;break;case 41:e=(f==39?D:f==38?V:f==37?M:f==36?H:f==35?x:w)!=0?42:43;break;case 42:r=
__Py_TrueStruct;e=44;break;case 43:r=__Py_ZeroStruct;e=44;break;case 44:HEAP[r]+=1;k=r;e=55;break;case 45:e=j==2?46:47;break;case 46:HEAP[__Py_ZeroStruct]+=1;r=__Py_ZeroStruct;e=50;break;case 47:e=j==3?48:49;break;case 48:HEAP[__Py_TrueStruct]+=1;r=__Py_TrueStruct;e=50;break;case 49:r=_PyObject_RichCompare(n,o,j);e=50;break;case 50:HEAP[n]-=1;e=HEAP[n]==0?51:52;break;case 51:FUNCTION_TABLE[HEAP[HEAP[n+4]+24]](n);e=52;break;case 52:HEAP[o]-=1;e=HEAP[o]==0?53:54;break;case 53:FUNCTION_TABLE[HEAP[HEAP[o+
4]+24]](o);e=54;break;case 54:k=r;e=55;break;case 55:return b=k;default:assert(0,"bad label: "+e)}},0,function(a){var b;for(b=-1;;)switch(b){case -1:var c,d,e;c=a;b=HEAP[c+4]!=fa?1:3;break;case 1:b=_PyType_IsSubtype(HEAP[c+4],fa)==0?2:3;break;case 2:__PyErr_BadInternalCall(L,2149);d=0;b=6;break;case 3:e=b=__PyObject_GC_New(Rb);b=b==0?4:5;break;case 4:d=0;b=6;break;case 5:HEAP[c]+=1;HEAP[e+12]=c;HEAP[e+8]=0;HEAP[e+16]=HEAP[HEAP[c+20]+8];_PyObject_GC_Track(e);d=e;b=6;break;case 6:return a=d;default:assert(0,
"bad label: "+b)}},0,_PyType_GenericAlloc,0,function(a,c,d){var e=STACKTOP;STACKTOP+=5;_memset(e,0,5);var f;for(f=-1;;)switch(f){case -1:var g,h,l,m,n=e,o=e+1,p,r,s,t,u,v,z,w,x,H,M;g=a;h=c;l=d;p=HEAP[o]=0;f=g==fa?1:3;break;case 1:f=__PyArg_NoKeywords(lb,l)==0?2:3;break;case 2:m=0;f=74;break;case 3:f=__PyArg_ParseTuple_SizeT(h,fc,allocate([n,0,0,0,o,0,0,0],["i8*",0,0,0,"%struct.PyObject**",0,0,0],ALLOC_STACK))==0?4:5;break;case 4:m=0;f=74;break;case 5:f=HEAP[o]!=0?6:14;break;case 6:f=(HEAP[HEAP[HEAP[o]+
4]+84]&33554432)==0?7:14;break;case 7:f=(HEAP[HEAP[HEAP[o]+4]+84]&134217728)==0?8:14;break;case 8:f=(HEAP[HEAP[HEAP[o]+4]+84]&67108864)==0?9:14;break;case 9:f=HEAP[n]!=117?11:10;break;case 10:f=(HEAP[HEAP[HEAP[o]+4]+84]&268435456)==0?11:14;break;case 11:p=f=_PyObject_GetIter(HEAP[o]);f=f==0?12:13;break;case 12:m=0;f=74;break;case 13:HEAP[o]=0;f=14;break;case 14:r=T;f=72;break;case 15:f=HEAP[r]==HEAP[n]?16:71;break;case 16:f=HEAP[o]==0?19:17;break;case 17:f=(HEAP[HEAP[HEAP[o]+4]+84]&33554432)!=0?20:
18;break;case 18:f=(HEAP[HEAP[HEAP[o]+4]+84]&67108864)==0?19:20;break;case 19:t=0;f=21;break;case 20:t=_PySequence_Size(HEAP[o]);f=21;break;case 21:s=f=b(g,t,r);f=f==0?22:23;break;case 22:m=0;f=74;break;case 23:f=t>0?24:39;break;case 24:u=0;f=38;break;case 25:v=_PySequence_GetItem(HEAP[o],u);var V=s;f=v==0?26:29;break;case 26:HEAP[s]=HEAP[V]-1;f=HEAP[s]==0?27:28;break;case 27:FUNCTION_TABLE[HEAP[HEAP[s+4]+24]](s);f=28;break;case 28:m=0;f=74;break;case 29:var D;a:{D=V;f=u;for(var y=v,K=void 0,K=-1;;)switch(K){case -1:var A,
oa,B;A=D;oa=f;B=y;K=HEAP[A+4]!=fa?1:3;break;case 1:K=_PyType_IsSubtype(HEAP[A+4],fa)==0?2:3;break;case 2:throw ___assert_fail(ja,L,787,la),"Reached an unreachable!";case 3:D=j(A,oa,B);break a;default:assert(0,"bad label: "+K)}D=void 0}f=D!=0;HEAP[v]-=1;D=HEAP[v]==0;f=f?30:35;break;case 30:f=D?31:32;break;case 31:FUNCTION_TABLE[HEAP[HEAP[v+4]+24]](v);f=32;break;case 32:HEAP[s]-=1;f=HEAP[s]==0?33:34;break;case 33:FUNCTION_TABLE[HEAP[HEAP[s+4]+24]](s);f=34;break;case 34:m=0;f=74;break;case 35:f=D?36:
37;break;case 36:FUNCTION_TABLE[HEAP[HEAP[v+4]+24]](v);f=37;break;case 37:u+=1;f=38;break;case 38:f=u<t?25:61;break;case 39:f=HEAP[o]==0?61:40;break;case 40:var R=HEAP[o];f=(HEAP[HEAP[HEAP[o]+4]+84]&134217728)==0?53:41;break;case 41:z=_PyTuple_Pack(1,allocate([R,0,0,0],["%struct.PyObject*",0,0,0],ALLOC_STACK));var U=s;f=z==0?42:45;break;case 42:HEAP[s]=HEAP[U]-1;f=HEAP[s]==0?43:44;break;case 43:FUNCTION_TABLE[HEAP[HEAP[s+4]+24]](s);f=44;break;case 44:m=0;f=74;break;case 45:w=q(U,z);HEAP[z]-=1;f=HEAP[z]==
0?46:47;break;case 46:FUNCTION_TABLE[HEAP[HEAP[z+4]+24]](z);f=47;break;case 47:f=w==0?48:51;break;case 48:HEAP[s]-=1;f=HEAP[s]==0?49:50;break;case 49:FUNCTION_TABLE[HEAP[HEAP[s+4]+24]](s);f=50;break;case 50:m=0;f=74;break;case 51:HEAP[w]-=1;f=HEAP[w]==0?52:61;break;case 52:FUNCTION_TABLE[HEAP[HEAP[w+4]+24]](w);f=61;break;case 53:f=R!=0?54:61;break;case 54:f=(HEAP[HEAP[HEAP[o]+4]+84]&268435456)!=0?55:61;break;case 55:x=HEAP[HEAP[o]+8]*2;f=x>0?56:61;break;case 56:H=s;M=HEAP[H+12];M=_PyMem_Realloc(M,
x);f=M==0?57:60;break;case 57:_PyErr_NoMemory();HEAP[s]-=1;f=HEAP[s]==0?58:59;break;case 58:FUNCTION_TABLE[HEAP[HEAP[s+4]+24]](s);f=59;break;case 59:m=0;f=74;break;case 60:HEAP[H+12]=M;HEAP[H+8]=Math.floor(x/2);_llvm_memcpy_p0i8_p0i8_i32(M,HEAP[HEAP[o]+12],x,1,0);HEAP[H+16]=HEAP[H+8];f=61;break;case 61:f=p!=0?62:70;break;case 62:f=k(s,p)==-1;HEAP[p]-=1;var Ba=HEAP[p]==0;f=f?63:68;break;case 63:f=Ba?64:65;break;case 64:FUNCTION_TABLE[HEAP[HEAP[p+4]+24]](p);f=65;break;case 65:HEAP[s]-=1;f=HEAP[s]==
0?66:67;break;case 66:FUNCTION_TABLE[HEAP[HEAP[s+4]+24]](s);f=67;break;case 67:m=0;f=74;break;case 68:f=Ba?69:70;break;case 69:FUNCTION_TABLE[HEAP[HEAP[p+4]+24]](p);f=70;break;case 70:m=s;f=74;break;case 71:r+=16;f=72;break;case 72:f=HEAP[r]!=0?15:73;break;case 73:_PyErr_SetString(HEAP[_PyExc_ValueError],jc);m=0;f=74;break;case 74:return a=m,STACKTOP=e,a;default:assert(0,"bad label: "+f)}},0,_PyObject_Free,0,function(a){var b;for(b=-1;;)switch(b){case -1:var c;c=a;_PyObject_GC_UnTrack(c);b=HEAP[c+
12]!=0?1:3;break;case 1:b=HEAP[c+12];HEAP[b]-=1;b=HEAP[b]==0?2:3;break;case 2:FUNCTION_TABLE[HEAP[HEAP[HEAP[c+12]+4]+24]](HEAP[c+12]);b=3;break;case 3:_PyObject_GC_Del(c);return;default:assert(0,"bad label: "+b)}},0,function(a,b,c){var d;for(d=-1;;)switch(d){case -1:var e,f,g,h,j;e=a;f=b;g=c;d=HEAP[e+12]!=0?1:3;break;case 1:j=FUNCTION_TABLE[f](HEAP[e+12],g);d=j!=0?2:3;break;case 2:h=j;d=4;break;case 3:h=0;d=4;break;case 4:return a=h;default:assert(0,"bad label: "+d)}},0,_PyObject_SelfIter,0,function(a){var b;
for(b=-1;;)switch(b){case -1:var c,d;c=a;b=HEAP[c+4]!=Rb?1:3;break;case 1:b=_PyType_IsSubtype(HEAP[c+4],Rb)==0?2:3;break;case 2:throw ___assert_fail(tb,L,2168,Jb),"Reached an unreachable!";case 3:b=HEAP[c+8]<HEAP[HEAP[c+12]+8]?4:5;break;case 4:b=HEAP[c+16];d=HEAP[c+8];HEAP[c+8]=d+1;d=FUNCTION_TABLE[b](HEAP[c+12],d);b=6;break;case 5:d=0;b=6;break;case 6:return a=d;default:assert(0,"bad label: "+b)}},0]);v.run=u;u();return v});