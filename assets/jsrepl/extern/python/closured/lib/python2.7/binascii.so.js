(function(g){function e(a){var b;for(b=-1;;)switch(b){case -1:var c,d;c=a;b=___ctype_b_loc();b=(HEAP[HEAP[b]+2*c]&2048)!=0?1:2;break;case 1:d=c-48;b=7;break;case 2:b=___ctype_b_loc();b=(HEAP[HEAP[b]+2*c]&256)!=0?3:4;break;case 3:c=_tolower(c);b=4;break;case 4:b=c>96&c<=102?5:6;break;case 5:d=c-87;b=7;break;case 6:d=-1;b=7;break;case 7:return a=d;default:assert(0,"bad label: "+b)}}function b(a,b){var c;c=a;HEAP[b+1]=HEAP[Fa+(c&15)];c=Math.floor(c/
16);HEAP[b]=HEAP[Fa+(c&15)]}function a(){d=allocate([125,125,125,125,125,125,125,125,125,125,126,125,125,126,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,0,1,2,3,4,5,6,7,8,9,10,11,12,125,125,13,14,15,16,17,18,19,125,20,21,127,125,125,125,125,125,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,125,37,38,39,40,41,42,43,125,44,45,46,47,125,125,125,125,48,49,50,51,52,53,54,125,55,56,57,58,59,60,125,125,61,62,63,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,

"i8",ALLOC_NORMAL);f=allocate([33,34,35,36,37,38,39,40,41,42,43,44,45,48,49,50,51,52,53,54,56,57,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,82,83,84,85,86,88,89,90,91,96,97,98,99,100,101,102,104,105,106,107,108,109,112,113,114,0],"i8",ALLOC_NORMAL);h=allocate([255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,62,255,255,255,63,52,53,54,55,56,57,58,59,60,61,255,255,255,
0,255,255,255,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,255,255,255,255,255,255,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,255,255,255,255,255],"i8",ALLOC_NORMAL);j=allocate([65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,48,49,50,51,52,53,54,55,56,57,43,47,0],"i8",ALLOC_NORMAL);k=allocate([0,0,4129,0,8258,
0,12387,0,16516,0,20645,0,24774,0,28903,0,-32504,0,-28375,0,-24246,0,-20117,0,-15988,0,-11859,0,-7730,0,-3601,0,4657,0,528,0,12915,0,8786,0,21173,0,17044,0,29431,0,25302,0,-27847,0,-31976,0,-19589,0,-23718,0,-11331,0,-15460,0,-3073,0,-7202,0,9314,0,13379,0,1056,0,5121,0,25830,0,29895,0,17572,0,21637,0,-23190,0,-19125,0,-31448,0,-27383,0,-6674,0,-2609,0,-14932,0,-10867,0,13907,0,9842,0,5649,0,1584,0,30423,0,26358,0,22165,0,18100,0,-18597,0,-22662,0,-26855,0,-30920,0,-2081,0,-6146,0,-10339,0,-14404,
0,18628,0,22757,0,26758,0,30887,0,2112,0,6241,0,10242,0,14371,0,-13876,0,-9747,0,-5746,0,-1617,0,-30392,0,-26263,0,-22262,0,-18133,0,23285,0,19156,0,31415,0,27286,0,6769,0,2640,0,14899,0,10770,0,-9219,0,-13348,0,-1089,0,-5218,0,-25735,0,-29864,0,-17605,0,-21734,0,27814,0,31879,0,19684,0,23749,0,11298,0,15363,0,3168,0,7233,0,-4690,0,-625,0,-12820,0,-8755,0,-21206,0,-17141,0,-29336,0,-25271,0,32407,0,28342,0,24277,0,20212,0,15891,0,11826,0,7761,0,3696,0,-97,0,-4162,0,-8227,0,-12292,0,-16613,0,-20678,
0,-24743,0,-28808,0,-28280,0,-32343,0,-20022,0,-24085,0,-12020,0,-16083,0,-3762,0,-7825,0,4224,0,161,0,12482,0,8419,0,20484,0,16421,0,28742,0,24679,0,-31815,0,-27752,0,-23557,0,-19494,0,-15555,0,-11492,0,-7297,0,-3234,0,689,0,4752,0,8947,0,13010,0,16949,0,21012,0,25207,0,29270,0,-18966,0,-23093,0,-27224,0,-31351,0,-2706,0,-6833,0,-10964,0,-15091,0,13538,0,9411,0,5280,0,1153,0,29798,0,25671,0,21540,0,17413,0,-22565,0,-18438,0,-30823,0,-26696,0,-6305,0,-2178,0,-14563,0,-10436,0,9939,0,14066,0,1681,
0,5808,0,26199,0,30326,0,17941,0,22068,0,-9908,0,-13971,0,-1778,0,-5841,0,-26168,0,-30231,0,-18038,0,-22101,0,22596,0,18533,0,30726,0,26663,0,6336,0,2273,0,14466,0,10403,0,-13443,0,-9380,0,-5313,0,-1250,0,-29703,0,-25640,0,-21573,0,-17510,0,19061,0,23124,0,27191,0,31254,0,2801,0,6864,0,10931,0,14994,0,-722,0,-4849,0,-8852,0,-12979,0,-16982,0,-21109,0,-25112,0,-29239,0,31782,0,27655,0,23652,0,19525,0,15522,0,11395,0,7392,0,3265,0,-4321,0,-194,0,-12451,0,-8324,0,-20581,0,-16454,0,-28711,0,-24584,0,
28183,0,32310,0,20053,0,24180,0,11923,0,16050,0,3793,0,7920,0],["i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",
0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",
0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",
0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",
0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0],ALLOC_NORMAL);l=allocate([40,97,115,99,105,105,41,32,45,62,32,98,105,110,46,32,68,101,99,111,100,101,32,97,32,108,105,110,101,32,111,102,32,117,117,101,110,99,111,100,101,100,32,100,97,116,97,0],"i8",ALLOC_NORMAL);m=allocate([115,42,58,97,50,98,95,117,117,0],"i8",ALLOC_NORMAL);n=allocate([97,115,99,105,105,95,108,101,110,32,62,61,32,48,0],"i8",ALLOC_NORMAL);o=allocate([46,46,47,99,112,121,116,104,111,
110,47,77,111,100,117,108,101,115,47,98,105,110,97,115,99,105,105,46,99,0],"i8",ALLOC_NORMAL);p=allocate([98,105,110,97,115,99,105,105,95,97,50,98,95,117,117,0],"i8",ALLOC_NORMAL);q=allocate(1,"%struct.PyObject*",ALLOC_NORMAL);r=allocate([73,108,108,101,103,97,108,32,99,104,97,114,0],"i8",ALLOC_NORMAL);t=allocate([84,114,97,105,108,105,110,103,32,103,97,114,98,97,103,101,0],"i8",ALLOC_NORMAL);s=allocate([40,98,105,110,41,32,45,62,32,97,115,99,105,105,46,32,85,117,101,110,99,111,100,101,32,108,105,
110,101,32,111,102,32,100,97,116,97,0],"i8",ALLOC_NORMAL);u=allocate([115,42,58,98,50,97,95,117,117,0],"i8",ALLOC_NORMAL);v=allocate([65,116,32,109,111,115,116,32,52,53,32,98,121,116,101,115,32,97,116,32,111,110,99,101,0],"i8",ALLOC_NORMAL);w=allocate([40,97,115,99,105,105,41,32,45,62,32,98,105,110,46,32,68,101,99,111,100,101,32,97,32,108,105,110,101,32,111,102,32,98,97,115,101,54,52,32,100,97,116,97,0],"i8",ALLOC_NORMAL);x=allocate([115,42,58,97,50,98,95,98,97,115,101,54,52,0],"i8",ALLOC_NORMAL);
y=allocate([98,105,110,97,115,99,105,105,95,97,50,98,95,98,97,115,101,54,52,0],"i8",ALLOC_NORMAL);B=allocate([73,110,99,111,114,114,101,99,116,32,112,97,100,100,105,110,103,0],"i8",ALLOC_NORMAL);A=allocate(1,"i8",ALLOC_NORMAL);C=allocate([40,98,105,110,41,32,45,62,32,97,115,99,105,105,46,32,66,97,115,101,54,52,45,99,111,100,101,32,108,105,110,101,32,111,102,32,100,97,116,97,0],"i8",ALLOC_NORMAL);G=allocate([115,42,58,98,50,97,95,98,97,115,101,54,52,0],"i8",ALLOC_NORMAL);F=allocate([98,105,110,95,
108,101,110,32,62,61,32,48,0],"i8",ALLOC_NORMAL);E=allocate([98,105,110,97,115,99,105,105,95,98,50,97,95,98,97,115,101,54,52,0],"i8",ALLOC_NORMAL);N=allocate([84,111,111,32,109,117,99,104,32,100,97,116,97,32,102,111,114,32,98,97,115,101,54,52,32,108,105,110,101,0],"i8",ALLOC_NORMAL);Q=allocate([97,115,99,105,105,32,45,62,32,98,105,110,44,32,100,111,110,101,46,32,68,101,99,111,100,101,32,46,104,113,120,32,99,111,100,105,110,103,0],"i8",ALLOC_NORMAL);I=allocate([115,42,58,97,50,98,95,104,113,120,0],
"i8",ALLOC_NORMAL);J=allocate([108,101,110,32,62,61,32,48,0],"i8",ALLOC_NORMAL);P=allocate([98,105,110,97,115,99,105,105,95,97,50,98,95,104,113,120,0],"i8",ALLOC_NORMAL);D=allocate(1,"%struct.PyObject*",ALLOC_NORMAL);T=allocate([83,116,114,105,110,103,32,104,97,115,32,105,110,99,111,109,112,108,101,116,101,32,110,117,109,98,101,114,32,111,102,32,98,121,116,101,115,0],"i8",ALLOC_NORMAL);L=allocate([79,105,0],"i8",ALLOC_NORMAL);$=allocate([66,105,110,104,101,120,32,82,76,69,45,99,111,100,101,32,98,
105,110,97,114,121,32,100,97,116,97,0],"i8",ALLOC_NORMAL);R=allocate([115,42,58,114,108,101,99,111,100,101,95,104,113,120,0],"i8",ALLOC_NORMAL);K=allocate([98,105,110,97,115,99,105,105,95,114,108,101,99,111,100,101,95,104,113,120,0],"i8",ALLOC_NORMAL);H=allocate([69,110,99,111,100,101,32,46,104,113,120,32,100,97,116,97,0],"i8",ALLOC_NORMAL);S=allocate([115,42,58,98,50,97,95,104,113,120,0],"i8",ALLOC_NORMAL);U=allocate([98,105,110,97,115,99,105,105,95,98,50,97,95,104,113,120,0],"i8",ALLOC_NORMAL);
z=allocate([68,101,99,111,100,101,32,104,101,120,98,105,110,32,82,76,69,45,99,111,100,101,100,32,115,116,114,105,110,103,0],"i8",ALLOC_NORMAL);aa=allocate([115,42,58,114,108,101,100,101,99,111,100,101,95,104,113,120,0],"i8",ALLOC_NORMAL);ja=allocate([105,110,95,108,101,110,32,62,61,32,48,0],"i8",ALLOC_NORMAL);la=allocate([98,105,110,97,115,99,105,105,95,114,108,101,100,101,99,111,100,101,95,104,113,120,0],"i8",ALLOC_NORMAL);da=allocate([79,114,112,104,97,110,101,100,32,82,76,69,32,99,111,100,101,
32,97,116,32,115,116,97,114,116,0],"i8",ALLOC_NORMAL);Ka=allocate([40,100,97,116,97,44,32,111,108,100,99,114,99,41,32,45,62,32,110,101,119,99,114,99,46,32,67,111,109,112,117,116,101,32,104,113,120,32,67,82,67,32,105,110,99,114,101,109,101,110,116,97,108,108,121,0],"i8",ALLOC_NORMAL);Ma=allocate([115,42,105,58,99,114,99,95,104,113,120,0],"i8",ALLOC_NORMAL);wa=allocate([105,0],"i8",ALLOC_NORMAL);ib=allocate([40,100,97,116,97,44,32,111,108,100,99,114,99,32,61,32,48,41,32,45,62,32,110,101,119,99,114,
99,46,32,67,111,109,112,117,116,101,32,67,82,67,45,51,50,32,105,110,99,114,101,109,101,110,116,97,108,108,121,0],"i8",ALLOC_NORMAL);cb=allocate([0,0,0,0,1996959894,0,0,0,-301047508,0,0,0,-1727442502,0,0,0,124634137,0,0,0,1886057615,0,0,0,-379345611,0,0,0,-1637575261,0,0,0,249268274,0,0,0,2044508324,0,0,0,-522852066,0,0,0,-1747789432,0,0,0,162941995,0,0,0,2125561021,0,0,0,-407360249,0,0,0,-1866523247,0,0,0,498536548,0,0,0,1789927666,0,0,0,-205950648,0,0,0,-2067906082,0,0,0,450548861,0,0,0,1843258603,
0,0,0,-187386543,0,0,0,-2083289657,0,0,0,325883990,0,0,0,1684777152,0,0,0,-43845254,0,0,0,-1973040660,0,0,0,335633487,0,0,0,1661365465,0,0,0,-99664541,0,0,0,-1928851979,0,0,0,997073096,0,0,0,1281953886,0,0,0,-715111964,0,0,0,-1570279054,0,0,0,1006888145,0,0,0,1258607687,0,0,0,-770865667,0,0,0,-1526024853,0,0,0,901097722,0,0,0,1119000684,0,0,0,-608450090,0,0,0,-1396901568,0,0,0,853044451,0,0,0,1172266101,0,0,0,-589951537,0,0,0,-1412350631,0,0,0,651767980,0,0,0,1373503546,0,0,0,-925412992,0,0,0,-1076862698,
0,0,0,565507253,0,0,0,1454621731,0,0,0,-809855591,0,0,0,-1195530993,0,0,0,671266974,0,0,0,1594198024,0,0,0,-972236366,0,0,0,-1324619484,0,0,0,795835527,0,0,0,1483230225,0,0,0,-1050600021,0,0,0,-1234817731,0,0,0,1994146192,0,0,0,31158534,0,0,0,-1731059524,0,0,0,-271249366,0,0,0,1907459465,0,0,0,112637215,0,0,0,-1614814043,0,0,0,-390540237,0,0,0,2013776290,0,0,0,251722036,0,0,0,-1777751922,0,0,0,-519137256,0,0,0,2137656763,0,0,0,141376813,0,0,0,-1855689577,0,0,0,-429695999,0,0,0,1802195444,0,0,0,476864866,
0,0,0,-2056965928,0,0,0,-228458418,0,0,0,1812370925,0,0,0,453092731,0,0,0,-2113342271,0,0,0,-183516073,0,0,0,1706088902,0,0,0,314042704,0,0,0,-1950435094,0,0,0,-54949764,0,0,0,1658658271,0,0,0,366619977,0,0,0,-1932296973,0,0,0,-69972891,0,0,0,1303535960,0,0,0,984961486,0,0,0,-1547960204,0,0,0,-725929758,0,0,0,1256170817,0,0,0,1037604311,0,0,0,-1529756563,0,0,0,-740887301,0,0,0,1131014506,0,0,0,879679996,0,0,0,-1385723834,0,0,0,-631195440,0,0,0,1141124467,0,0,0,855842277,0,0,0,-1442165665,0,0,0,-586318647,
0,0,0,1342533948,0,0,0,654459306,0,0,0,-1106571248,0,0,0,-921952122,0,0,0,1466479909,0,0,0,544179635,0,0,0,-1184443383,0,0,0,-832445281,0,0,0,1591671054,0,0,0,702138776,0,0,0,-1328506846,0,0,0,-942167884,0,0,0,1504918807,0,0,0,783551873,0,0,0,-1212326853,0,0,0,-1061524307,0,0,0,-306674912,0,0,0,-1698712650,0,0,0,62317068,0,0,0,1957810842,0,0,0,-355121351,0,0,0,-1647151185,0,0,0,81470997,0,0,0,1943803523,0,0,0,-480048366,0,0,0,-1805370492,0,0,0,225274430,0,0,0,2053790376,0,0,0,-468791541,0,0,0,-1828061283,
0,0,0,167816743,0,0,0,2097651377,0,0,0,-267414716,0,0,0,-2029476910,0,0,0,503444072,0,0,0,1762050814,0,0,0,-144550051,0,0,0,-2140837941,0,0,0,426522225,0,0,0,1852507879,0,0,0,-19653770,0,0,0,-1982649376,0,0,0,282753626,0,0,0,1742555852,0,0,0,-105259153,0,0,0,-1900089351,0,0,0,397917763,0,0,0,1622183637,0,0,0,-690576408,0,0,0,-1580100738,0,0,0,953729732,0,0,0,1340076626,0,0,0,-776247311,0,0,0,-1497606297,0,0,0,1068828381,0,0,0,1219638859,0,0,0,-670225446,0,0,0,-1358292148,0,0,0,906185462,0,0,0,1090812512,
0,0,0,-547295293,0,0,0,-1469587627,0,0,0,829329135,0,0,0,1181335161,0,0,0,-882789492,0,0,0,-1134132454,0,0,0,628085408,0,0,0,1382605366,0,0,0,-871598187,0,0,0,-1156888829,0,0,0,570562233,0,0,0,1426400815,0,0,0,-977650754,0,0,0,-1296233688,0,0,0,733239954,0,0,0,1555261956,0,0,0,-1026031705,0,0,0,-1244606671,0,0,0,752459403,0,0,0,1541320221,0,0,0,-1687895376,0,0,0,-328994266,0,0,0,1969922972,0,0,0,40735498,0,0,0,-1677130071,0,0,0,-351390145,0,0,0,1913087877,0,0,0,83908371,0,0,0,-1782625662,0,0,0,-491226604,
0,0,0,2075208622,0,0,0,213261112,0,0,0,-1831694693,0,0,0,-438977011,0,0,0,2094854071,0,0,0,198958881,0,0,0,-2032938284,0,0,0,-237706686,0,0,0,1759359992,0,0,0,534414190,0,0,0,-2118248755,0,0,0,-155638181,0,0,0,1873836001,0,0,0,414664567,0,0,0,-2012718362,0,0,0,-15766928,0,0,0,1711684554,0,0,0,285281116,0,0,0,-1889165569,0,0,0,-127750551,0,0,0,1634467795,0,0,0,376229701,0,0,0,-1609899400,0,0,0,-686959890,0,0,0,1308918612,0,0,0,956543938,0,0,0,-1486412191,0,0,0,-799009033,0,0,0,1231636301,0,0,0,1047427035,
0,0,0,-1362007478,0,0,0,-640263460,0,0,0,1088359270,0,0,0,936918E3,0,0,0,-1447252397,0,0,0,-558129467,0,0,0,1202900863,0,0,0,817233897,0,0,0,-1111625188,0,0,0,-893730166,0,0,0,1404277552,0,0,0,615818150,0,0,0,-1160759803,0,0,0,-841546093,0,0,0,1423857449,0,0,0,601450431,0,0,0,-1285129682,0,0,0,-1000256840,0,0,0,1567103746,0,0,0,711928724,0,0,0,-1274298825,0,0,0,-1022587231,0,0,0,1510334235,0,0,0,755167117,0,0,0],["i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,
"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,
0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,
0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",
0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",
0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",
0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0],ALLOC_NORMAL);db=allocate([115,
42,124,73,58,99,114,99,51,50,0],"i8",ALLOC_NORMAL);Da=allocate([115,42,58,98,50,97,95,104,101,120,0],"i8",ALLOC_NORMAL);gb=allocate([97,114,103,108,101,110,32,62,61,32,48,0],"i8",ALLOC_NORMAL);Xa=allocate([98,105,110,97,115,99,105,105,95,104,101,120,108,105,102,121,0],"i8",ALLOC_NORMAL);Ca=allocate([98,50,97,95,104,101,120,40,100,97,116,97,41,32,45,62,32,115,59,32,72,101,120,97,100,101,99,105,109,97,108,32,114,101,112,114,101,115,101,110,116,97,116,105,111,110,32,111,102,32,98,105,110,97,114,121,
32,100,97,116,97,46,10,10,84,104,105,115,32,102,117,110,99,116,105,111,110,32,105,115,32,97,108,115,111,32,97,118,97,105,108,97,98,108,101,32,97,115,32,34,104,101,120,108,105,102,121,40,41,34,46,0],"i8",ALLOC_NORMAL);Za=allocate([115,42,58,97,50,98,95,104,101,120,0],"i8",ALLOC_NORMAL);Va=allocate([98,105,110,97,115,99,105,105,95,117,110,104,101,120,108,105,102,121,0],"i8",ALLOC_NORMAL);Ga=allocate([79,100,100,45,108,101,110,103,116,104,32,115,116,114,105,110,103,0],"i8",ALLOC_NORMAL);ha=allocate([78,
111,110,45,104,101,120,97,100,101,99,105,109,97,108,32,100,105,103,105,116,32,102,111,117,110,100,0],"i8",ALLOC_NORMAL);Na=allocate([97,50,98,95,104,101,120,40,104,101,120,115,116,114,41,32,45,62,32,115,59,32,66,105,110,97,114,121,32,100,97,116,97,32,111,102,32,104,101,120,97,100,101,99,105,109,97,108,32,114,101,112,114,101,115,101,110,116,97,116,105,111,110,46,10,10,104,101,120,115,116,114,32,109,117,115,116,32,99,111,110,116,97,105,110,32,97,110,32,101,118,101,110,32,110,117,109,98,101,114,32,111,
102,32,104,101,120,32,100,105,103,105,116,115,32,40,117,112,112,101,114,32,111,114,32,108,111,119,101,114,32,99,97,115,101,41,46,10,84,104,105,115,32,102,117,110,99,116,105,111,110,32,105,115,32,97,108,115,111,32,97,118,97,105,108,97,98,108,101,32,97,115,32,34,117,110,104,101,120,108,105,102,121,40,41,34,0],"i8",ALLOC_NORMAL);jb=allocate([-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,
0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,4,0,0,0,5,0,0,0,6,0,0,0,7,0,0,0,8,0,0,0,9,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,10,0,0,0,11,0,0,0,12,0,0,0,13,0,0,0,14,0,0,0,15,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,
0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,10,0,0,0,11,0,0,0,12,0,0,0,13,0,0,0,14,0,0,0,15,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0],["i32",0,0,0,"i32",
0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",
0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",
0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",
0,0,0],ALLOC_NORMAL);hb=allocate([68,101,99,111,100,101,32,97,32,115,116,114,105,110,103,32,111,102,32,113,112,45,101,110,99,111,100,101,100,32,100,97,116,97,0],"i8",ALLOC_NORMAL);Qa=allocate([115,42,124,105,0],"i8",ALLOC_NORMAL);Ha=allocate(12,"i8*",ALLOC_NORMAL);Ra=allocate([100,97,116,97,0],"i8",ALLOC_NORMAL);Ia=allocate([104,101,97,100,101,114,0],"i8",ALLOC_NORMAL);Fa=allocate([48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70,0],"i8",ALLOC_NORMAL);$a=allocate([98,50,97,95,113,112,40,100,97,116,
97,44,32,113,117,111,116,101,116,97,98,115,61,48,44,32,105,115,116,101,120,116,61,49,44,32,104,101,97,100,101,114,61,48,41,32,45,62,32,115,59,32,10,32,69,110,99,111,100,101,32,97,32,115,116,114,105,110,103,32,117,115,105,110,103,32,113,117,111,116,101,100,45,112,114,105,110,116,97,98,108,101,32,101,110,99,111,100,105,110,103,46,32,10,10,79,110,32,101,110,99,111,100,105,110,103,44,32,119,104,101,110,32,105,115,116,101,120,116,32,105,115,32,115,101,116,44,32,110,101,119,108,105,110,101,115,32,97,114,
101,32,110,111,116,32,101,110,99,111,100,101,100,44,32,97,110,100,32,119,104,105,116,101,32,10,115,112,97,99,101,32,97,116,32,101,110,100,32,111,102,32,108,105,110,101,115,32,105,115,46,32,32,87,104,101,110,32,105,115,116,101,120,116,32,105,115,32,110,111,116,32,115,101,116,44,32,92,114,32,97,110,100,32,92,110,32,40,67,82,47,76,70,41,32,97,114,101,32,10,98,111,116,104,32,101,110,99,111,100,101,100,46,32,32,87,104,101,110,32,113,117,111,116,101,116,97,98,115,32,105,115,32,115,101,116,44,32,115,112,
97,99,101,32,97,110,100,32,116,97,98,115,32,97,114,101,32,101,110,99,111,100,101,100,46,0],"i8",ALLOC_NORMAL);Wa=allocate([115,42,124,105,105,105,0],"i8",ALLOC_NORMAL);Y=allocate(20,"i8*",ALLOC_NORMAL);kb=allocate([113,117,111,116,101,116,97,98,115,0],"i8",ALLOC_NORMAL);ra=allocate([105,115,116,101,120,116,0],"i8",ALLOC_NORMAL);Ta=allocate([97,50,98,95,117,117,0],"i8",ALLOC_NORMAL);ia=allocate([98,50,97,95,117,117,0],"i8",ALLOC_NORMAL);ba=allocate([97,50,98,95,98,97,115,101,54,52,0],"i8",ALLOC_NORMAL);
Ya=allocate([98,50,97,95,98,97,115,101,54,52,0],"i8",ALLOC_NORMAL);ta=allocate([97,50,98,95,104,113,120,0],"i8",ALLOC_NORMAL);O=allocate([98,50,97,95,104,113,120,0],"i8",ALLOC_NORMAL);wb=allocate([98,50,97,95,104,101,120,0],"i8",ALLOC_NORMAL);bb=allocate([97,50,98,95,104,101,120,0],"i8",ALLOC_NORMAL);vb=allocate([104,101,120,108,105,102,121,0],"i8",ALLOC_NORMAL);ka=allocate([117,110,104,101,120,108,105,102,121,0],"i8",ALLOC_NORMAL);za=allocate([114,108,101,99,111,100,101,95,104,113,120,0],"i8",ALLOC_NORMAL);
Aa=allocate([114,108,101,100,101,99,111,100,101,95,104,113,120,0],"i8",ALLOC_NORMAL);La=allocate([99,114,99,95,104,113,120,0],"i8",ALLOC_NORMAL);ya=allocate([99,114,99,51,50,0],"i8",ALLOC_NORMAL);ub=allocate([97,50,98,95,113,112,0],"i8",ALLOC_NORMAL);Z=allocate([98,50,97,95,113,112,0],"i8",ALLOC_NORMAL);qa=allocate([0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],["i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",
0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",
0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",
0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",
0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8"],ALLOC_NORMAL);M=allocate([67,111,110,118,101,114,115,105,111,110,32,98,101,116,119,101,101,110,32,98,105,110,97,114,121,32,100,97,116,97,32,97,110,100,32,65,83,67,73,73,0],"i8",ALLOC_NORMAL);na=allocate([98,105,110,97,115,99,105,105,0],"i8",ALLOC_NORMAL);nb=allocate([95,95,100,111,99,95,95,0],"i8",ALLOC_NORMAL);ca=allocate([98,105,110,97,115,99,105,105,46,69,114,114,111,114,0],"i8",ALLOC_NORMAL);ua=allocate([69,114,114,111,114,0],"i8",ALLOC_NORMAL);Ea=
allocate([98,105,110,97,115,99,105,105,46,73,110,99,111,109,112,108,101,116,101,0],"i8",ALLOC_NORMAL);Eb=allocate([73,110,99,111,109,112,108,101,116,101,0],"i8",ALLOC_NORMAL);HEAP[Ha]=Ra;HEAP[Ha+4]=Ia;HEAP[Y]=Ra;HEAP[Y+4]=kb;HEAP[Y+8]=ra;HEAP[Y+12]=Ia;HEAP[qa]=Ta;HEAP[qa+4]=g+2;HEAP[qa+12]=l;HEAP[qa+16]=ia;HEAP[qa+20]=g+4;HEAP[qa+28]=s;HEAP[qa+32]=ba;HEAP[qa+36]=g+6;HEAP[qa+44]=w;HEAP[qa+48]=Ya;HEAP[qa+52]=g+8;HEAP[qa+60]=C;HEAP[qa+64]=ta;HEAP[qa+68]=g+10;HEAP[qa+76]=Q;HEAP[qa+80]=O;HEAP[qa+84]=g+
12;HEAP[qa+92]=H;HEAP[qa+96]=wb;HEAP[qa+100]=g+14;HEAP[qa+108]=Ca;HEAP[qa+112]=bb;HEAP[qa+116]=g+16;HEAP[qa+124]=Na;HEAP[qa+128]=vb;HEAP[qa+132]=g+14;HEAP[qa+140]=Ca;HEAP[qa+144]=ka;HEAP[qa+148]=g+16;HEAP[qa+156]=Na;HEAP[qa+160]=za;HEAP[qa+164]=g+18;HEAP[qa+172]=$;HEAP[qa+176]=Aa;HEAP[qa+180]=g+20;HEAP[qa+188]=z;HEAP[qa+192]=La;HEAP[qa+196]=g+22;HEAP[qa+204]=Ka;HEAP[qa+208]=ya;HEAP[qa+212]=g+24;HEAP[qa+220]=ib;HEAP[qa+224]=ub;HEAP[qa+228]=g+26;HEAP[qa+236]=hb;HEAP[qa+240]=Z;HEAP[qa+244]=g+28;HEAP[qa+
252]=$a}var c={arguments:[]};Runtime.QUANTUM_SIZE=4;var d,f,h,j,k,l,m,n,o,p,q,r,t,s,u,v,w,x,y,B,A,C,G,F,E,N,Q,I,J,P,D,T,L,$,R,K,H,S,U,z,aa,ja,la,da,Ka,Ma,wa,ib,cb,db,Da,gb,Xa,Ca,Za,Va,Ga,ha,Na,jb,hb,Qa,Ha,Ra,Ia,Fa,$a,Wa,Y,kb,ra,Ta,ia,ba,Ya,ta,O,wb,bb,vb,ka,za,Aa,La,ya,ub,Z,qa,M,na,nb,ca,ua,Ea,Eb;c._initbinascii=function(){var a;for(a=-1;;)switch(a){case -1:var b,c,d;b=_Py_InitModule4(na,qa,0,0,1013);a=b==0?5:1;break;case 1:c=_PyModule_GetDict(b);d=_PyString_FromString(M);_PyDict_SetItemString(c,nb,
d);a=d!=0?2:4;break;case 2:HEAP[d]-=1;a=HEAP[d]==0?3:4;break;case 3:FUNCTION_TABLE[HEAP[HEAP[d+4]+24]](d);a=4;break;case 4:a=_PyErr_NewException(ca,0,0);HEAP[q]=a;_PyDict_SetItemString(c,ua,HEAP[q]);a=_PyErr_NewException(Ea,0,0);HEAP[D]=a;_PyDict_SetItemString(c,Eb,HEAP[D]);a=5;break;case 5:return;default:assert(0,"bad label: "+a)}};FUNCTION_TABLE=FUNCTION_TABLE.concat([0,0,function(a,b){var c=STACKTOP;STACKTOP+=52;_memset(c,0,52);var d;for(d=-1;;)switch(d){case -1:var e,f,g=c,h,j,k,l,s,u,v,w;d=b;
s=k=0;d=__PyArg_ParseTuple_SizeT(d,m,allocate([g,0,0,0],["%struct.Py_buffer*",0,0,0],ALLOC_STACK))==0?1:2;break;case 1:f=0;d=28;break;case 2:h=HEAP[g];v=HEAP[g+8];d=v<0?3:4;break;case 3:throw ___assert_fail(n,o,204,p),"Reached an unreachable!";case 4:w=HEAP[h]-32&63;h+=1;v-=1;u=_PyString_FromStringAndSize(0,w);d=u==0?5:6;break;case 5:_PyBuffer_Release(g);f=0;d=28;break;case 6:j=u+20;d=21;break;case 7:d=v>0?8:9;break;case 8:e=HEAP[h];d=10;break;case 9:e=0;d=10;break;case 10:l=e;d=l==10|l==13?12:11;
break;case 11:d=v<=0?12:13;break;case 12:l=0;d=18;break;case 13:d=l<=31|l>96?14:17;break;case 14:_PyErr_SetString(HEAP[q],r);_PyBuffer_Release(g);HEAP[u]-=1;d=HEAP[u]==0?15:16;break;case 15:FUNCTION_TABLE[HEAP[HEAP[u+4]+24]](u);d=16;break;case 16:f=0;d=28;break;case 17:l=l-32&63;d=18;break;case 18:s=l|s<<6;k=d=k+6;d=d>7?19:20;break;case 19:k-=8;HEAP[j]=s>>>k&255;j+=1;s&=(1<<k)-1;w-=1;d=20;break;case 20:v-=1;h+=1;d=21;break;case 21:d=w>0?7:26;break;case 22:l=HEAP[h];h+=1;d=l!=32&l!=96&l!=10&l!=13?
23:26;break;case 23:_PyErr_SetString(HEAP[q],t);_PyBuffer_Release(g);HEAP[u]-=1;d=HEAP[u]==0?24:25;break;case 24:FUNCTION_TABLE[HEAP[HEAP[u+4]+24]](u);d=25;break;case 25:f=0;d=28;break;case 26:d=v>0;v-=1;d=d!=0?22:27;break;case 27:_PyBuffer_Release(g);f=u;d=28;break;case 28:return e=f,STACKTOP=c,e;default:assert(0,"bad label: "+d)}},0,function(a,b){var c=STACKTOP;STACKTOP+=56;_memset(c,0,56);var d,e=null;for(d=-1;;)switch(d){case -1:var f,g=c,h,j,k,l,m=c+52,n;d=b;l=k=0;d=__PyArg_ParseTuple_SizeT(d,
u,allocate([g,0,0,0],["%struct.Py_buffer*",0,0,0],ALLOC_STACK))==0?1:2;break;case 1:f=0;d=21;break;case 2:j=HEAP[g];n=HEAP[g+8];d=n>45?3:4;break;case 3:_PyErr_SetString(HEAP[q],v);_PyBuffer_Release(g);f=0;d=21;break;case 4:d=_PyString_FromStringAndSize(0,((n+2)/3|0)*4+2);HEAP[m]=d;d=HEAP[m]==0?5:6;break;case 5:_PyBuffer_Release(g);f=0;d=21;break;case 6:h=HEAP[m]+20;HEAP[h]=(n&63)+32;h+=1;var o=n,e=6;d=13;break;case 7:var p=l<<8;n>0?(e=7,d=8):(e=7,d=9);break;case 8:l=HEAP[j]|(e==14?s:p);d=10;break;
case 9:l=p;d=10;break;case 10:k=d=k+8;d=d>5?11:12;break;case 11:d=l>>>0>>>(k-6>>>0)&63;k-=6;HEAP[h]=d+32;h+=1;d=k>5?11:12;break;case 12:var r=n-1;n=r;j+=1;e=12;d=13;break;case 13:d=(e==12?r:o)>0?14:15;break;case 14:var s=l<<8,e=14;d=8;break;case 15:d=k!=0?7:16;break;case 16:HEAP[h]=10;h+=1;d=__PyString_Resize(m,h-(HEAP[m]+20))<0?17:20;break;case 17:d=HEAP[m];HEAP[d]-=1;d=HEAP[d]==0?18:19;break;case 18:FUNCTION_TABLE[HEAP[HEAP[HEAP[m]+4]+24]](HEAP[m]);d=19;break;case 19:HEAP[m]=0;d=20;break;case 20:_PyBuffer_Release(g);
f=HEAP[m];d=21;break;case 21:return e=f,STACKTOP=c,e;default:assert(0,"bad label: "+d)}},0,function(a,b){var c=STACKTOP;STACKTOP+=56;_memset(c,0,56);var d,e=null;for(d=-1;;)switch(d){case -1:var f,g=c,j,k,l,m,p,r=c+52,s,t,u;d=b;u=p=l=0;d=__PyArg_ParseTuple_SizeT(d,x,allocate([g,0,0,0],["%struct.Py_buffer*",0,0,0],ALLOC_STACK))==0?1:2;break;case 1:f=0;d=33;break;case 2:j=HEAP[g];s=HEAP[g+8];d=s<0?3:4;break;case 3:throw ___assert_fail(n,o,378,y),"Reached an unreachable!";case 4:d=s>2147483644?5:6;break;
case 5:_PyBuffer_Release(g);f=_PyErr_NoMemory();d=33;break;case 6:t=((s+3)/4|0)*3;d=_PyString_FromStringAndSize(0,t);HEAP[r]=d;d=HEAP[r]==0?7:8;break;case 7:_PyBuffer_Release(g);f=0;d=33;break;case 8:k=HEAP[r]+20;t=0;var v=s,e=8;d=19;break;case 9:m=HEAP[j];d=reSign(m,8,1)<0;var w=reSign(m,8,1)==13;d|=w;w=reSign(m,8,1)==10;d|=w;w=reSign(m,8,1)==32;d=d|w?18:10;break;case 10:d=m==61?11:15;break;case 11:d=u<=1?18:12;break;case 12:d=u!=2?14:13;break;case 13:a:{d=j;for(var w=s,z=void 0,H=null,z=-1;;)switch(z){case -1:var C,
D,E,F,G;C=d;D=w;E=1;H=F=-1;z=7;break;case 1:z=HEAP[C];G=HEAP[h+(z&127)];z=z>=0?2:6;break;case 2:z=G!=-1?3:6;break;case 3:z=E==0?4:5;break;case 4:F=HEAP[C];z=5;break;case 5:E-=1;z=6;break;case 6:C+=1;var K=D-1;D=K;H=6;z=7;break;case 7:z=(H==6?K:w)<=0?9:8;break;case 8:z=F==-1?1:9;break;case 9:d=F;break a;default:assert(0,"bad label: "+z)}d=void 0}d=d!=61?18:14;break;case 14:l=0;d=24;break;case 15:m=HEAP[h+HEAP[j]];d=reSign(m,8,1)==-1?18:16;break;case 16:u=u+1&3;p=m|p<<6;l+=6;d=l>7?17:18;break;case 17:l-=
8;HEAP[k]=p>>>l&255;k+=1;t+=1;p&=(1<<l)-1;d=18;break;case 18:var I=s-1;s=I;j+=1;e=18;d=19;break;case 19:d=(e==18?I:v)>0?9:20;break;case 20:d=l!=0?21:24;break;case 21:_PyBuffer_Release(g);_PyErr_SetString(HEAP[q],B);d=HEAP[r];HEAP[d]-=1;d=HEAP[d]==0?22:23;break;case 22:FUNCTION_TABLE[HEAP[HEAP[HEAP[r]+4]+24]](HEAP[r]);d=23;break;case 23:f=0;d=33;break;case 24:d=t>0?25:29;break;case 25:d=__PyString_Resize(r,t)<0?26:32;break;case 26:d=HEAP[r];HEAP[d]-=1;d=HEAP[d]==0?27:28;break;case 27:FUNCTION_TABLE[HEAP[HEAP[HEAP[r]+
4]+24]](HEAP[r]);d=28;break;case 28:HEAP[r]=0;d=32;break;case 29:d=HEAP[r];HEAP[d]-=1;d=HEAP[d]==0?30:31;break;case 30:FUNCTION_TABLE[HEAP[HEAP[HEAP[r]+4]+24]](HEAP[r]);d=31;break;case 31:d=_PyString_FromStringAndSize(A,0);HEAP[r]=d;d=32;break;case 32:_PyBuffer_Release(g);f=HEAP[r];d=33;break;case 33:return e=f,STACKTOP=c,e;default:assert(0,"bad label: "+d)}},0,function(a,b){var c=STACKTOP;STACKTOP+=56;_memset(c,0,56);var d;for(d=-1;;)switch(d){case -1:var e,f=c,g,h,k,l,m=c+52,n;d=b;l=k=0;d=__PyArg_ParseTuple_SizeT(d,
G,allocate([f,0,0,0],["%struct.Py_buffer*",0,0,0],ALLOC_STACK))==0?1:2;break;case 1:e=0;d=21;break;case 2:h=HEAP[f];n=HEAP[f+8];d=n<0?3:4;break;case 3:throw ___assert_fail(F,o,486,E),"Reached an unreachable!";case 4:d=n>1073741796?5:6;break;case 5:_PyErr_SetString(HEAP[q],N);_PyBuffer_Release(f);e=0;d=21;break;case 6:d=_PyString_FromStringAndSize(0,n*2+3);HEAP[m]=d;d=HEAP[m]==0?7:8;break;case 7:_PyBuffer_Release(f);e=0;d=21;break;case 8:g=HEAP[m]+20;d=n>0?9:12;break;case 9:l=HEAP[h]|l<<8;k=d=k+8;
d=d>5?10:11;break;case 10:d=l>>>0>>>(k-6>>>0)&63;k-=6;HEAP[g]=HEAP[j+d];g+=1;d=k>5?10:11;break;case 11:n=d=n-1;h+=1;d=d>0?9:12;break;case 12:d=k==2?13:14;break;case 13:HEAP[g]=HEAP[j+((l&3)<<4)];g+=1;HEAP[g]=61;g+=1;HEAP[g]=61;g+=1;d=16;break;case 14:d=k==4?15:16;break;case 15:HEAP[g]=HEAP[j+((l&15)<<2)];g+=1;HEAP[g]=61;g+=1;d=16;break;case 16:HEAP[g]=10;g+=1;d=__PyString_Resize(m,g-(HEAP[m]+20))<0?17:20;break;case 17:d=HEAP[m];HEAP[d]-=1;d=HEAP[d]==0?18:19;break;case 18:FUNCTION_TABLE[HEAP[HEAP[HEAP[m]+
4]+24]](HEAP[m]);d=19;break;case 19:HEAP[m]=0;d=20;break;case 20:_PyBuffer_Release(f);e=HEAP[m];d=21;break;case 21:return STACKTOP=c,e;default:assert(0,"bad label: "+d)}},0,function(a,b){var c=STACKTOP;STACKTOP+=56;_memset(c,0,56);var e,f=null;for(e=-1;;)switch(e){case -1:var g,h=c,j,k,l,m,n,p=c+52,s,t,u;e=b;t=n=l=0;e=__PyArg_ParseTuple_SizeT(e,I,allocate([h,0,0,0],["%struct.Py_buffer*",0,0,0],ALLOC_STACK))==0?1:2;break;case 1:g=0;e=34;break;case 2:j=HEAP[h];s=HEAP[h+8];e=s<0?3:4;break;case 3:throw ___assert_fail(J,
o,554,P),"Reached an unreachable!";case 4:e=s>2147483645?5:6;break;case 5:_PyBuffer_Release(h);g=_PyErr_NoMemory();e=34;break;case 6:e=_PyString_FromStringAndSize(0,s+2);HEAP[p]=e;e=HEAP[p]==0?7:8;break;case 7:_PyBuffer_Release(h);g=0;e=34;break;case 8:k=HEAP[p]+20;var v=s,f=8;e=19;break;case 9:m=HEAP[d+HEAP[j]];e=m==126?18:10;break;case 10:e=m==125?11:14;break;case 11:_PyErr_SetString(HEAP[q],r);_PyBuffer_Release(h);e=HEAP[p];HEAP[e]-=1;e=HEAP[e]==0?12:13;break;case 12:FUNCTION_TABLE[HEAP[HEAP[HEAP[p]+
4]+24]](HEAP[p]);e=13;break;case 13:g=0;e=34;break;case 14:e=m==127?15:16;break;case 15:t=1;e=20;break;case 16:n=m|n<<6;l+=6;e=l>7?17:18;break;case 17:l-=8;HEAP[k]=n>>>l&255;k+=1;n&=(1<<l)-1;e=18;break;case 18:var w=s-1;s=w;j+=1;f=18;e=19;break;case 19:e=(f==18?w:v)>0?9:20;break;case 20:e=l!=0?21:25;break;case 21:e=t==0?22:25;break;case 22:_PyErr_SetString(HEAP[D],T);_PyBuffer_Release(h);e=HEAP[p];HEAP[e]-=1;e=HEAP[e]==0?23:24;break;case 23:FUNCTION_TABLE[HEAP[HEAP[HEAP[p]+4]+24]](HEAP[p]);e=24;break;
case 24:g=0;e=34;break;case 25:e=__PyString_Resize(p,k-(HEAP[p]+20));var x=HEAP[p];e=e<0?26:29;break;case 26:HEAP[x]-=1;e=HEAP[x]==0?27:28;break;case 27:FUNCTION_TABLE[HEAP[HEAP[HEAP[p]+4]+24]](HEAP[p]);e=28;break;case 28:HEAP[p]=0;e=33;break;case 29:e=x!=0?30:33;break;case 30:u=__Py_BuildValue_SizeT(L,allocate([HEAP[p],0,0,0,t,0,0,0],["%struct.PyObject*",0,0,0,"i32",0,0,0],ALLOC_STACK));_PyBuffer_Release(h);e=HEAP[p];HEAP[e]-=1;e=HEAP[e]==0?31:32;break;case 31:FUNCTION_TABLE[HEAP[HEAP[HEAP[p]+4]+
24]](HEAP[p]);e=32;break;case 32:g=u;e=34;break;case 33:_PyBuffer_Release(h);g=0;e=34;break;case 34:return f=g,STACKTOP=c,f;default:assert(0,"bad label: "+e)}},0,function(a,b){var c=STACKTOP;STACKTOP+=56;_memset(c,0,56);var d;for(d=-1;;)switch(d){case -1:var e,g=c,h,j,k,l,m=c+52,n;d=b;l=k=0;d=__PyArg_ParseTuple_SizeT(d,S,allocate([g,0,0,0],["%struct.Py_buffer*",0,0,0],ALLOC_STACK))==0?1:2;break;case 1:e=0;d=19;break;case 2:j=HEAP[g];n=HEAP[g+8];d=n<0?3:4;break;case 3:throw ___assert_fail(J,o,703,
U),"Reached an unreachable!";case 4:d=n>1073741821?5:6;break;case 5:_PyBuffer_Release(g);e=_PyErr_NoMemory();d=19;break;case 6:d=_PyString_FromStringAndSize(0,(n+1)*2);HEAP[m]=d;d=HEAP[m]==0?7:8;break;case 7:_PyBuffer_Release(g);e=0;d=19;break;case 8:h=HEAP[m]+20;d=n>0?9:12;break;case 9:l=HEAP[j]|l<<8;k=d=k+8;d=d>5?10:11;break;case 10:d=l>>>0>>>(k-6>>>0)&63;k-=6;HEAP[h]=HEAP[f+d];h+=1;d=k>5?10:11;break;case 11:n=d=n-1;j+=1;d=d>0?9:12;break;case 12:d=k!=0?13:14;break;case 13:l<<=6-k;HEAP[h]=HEAP[f+
(l&63)];h+=1;d=14;break;case 14:d=__PyString_Resize(m,h-(HEAP[m]+20))<0?15:18;break;case 15:d=HEAP[m];HEAP[d]-=1;d=HEAP[d]==0?16:17;break;case 16:FUNCTION_TABLE[HEAP[HEAP[HEAP[m]+4]+24]](HEAP[m]);d=17;break;case 17:HEAP[m]=0;d=18;break;case 18:_PyBuffer_Release(g);e=HEAP[m];d=19;break;case 19:return STACKTOP=c,e;default:assert(0,"bad label: "+d)}},0,function(a,b){var c=STACKTOP;STACKTOP+=52;_memset(c,0,52);var d;for(d=-1;;)switch(d){case -1:var e,f,g,h=c,j,k,l,m,n,p;d=__PyArg_ParseTuple_SizeT(b,Da,
allocate([h,0,0,0],["%struct.Py_buffer*",0,0,0],ALLOC_STACK))==0?1:2;break;case 1:g=0;d=17;break;case 2:j=HEAP[h];k=HEAP[h+8];d=k<0?3:4;break;case 3:throw ___assert_fail(gb,o,1069,Xa),"Reached an unreachable!";case 4:d=k>1073741823?5:6;break;case 5:_PyBuffer_Release(h);g=_PyErr_NoMemory();d=17;break;case 6:l=_PyString_FromStringAndSize(0,k*2);d=l==0?7:8;break;case 7:_PyBuffer_Release(h);g=0;d=17;break;case 8:m=l+20;n=p=0;d=n<k?9:16;break;case 9:var q=d=HEAP[j+n]>>4&15;d=(HEAP[j+n]>>4&15)>9?10:11;
break;case 10:f=q+87;d=12;break;case 11:f=q+48;d=12;break;case 12:d=f;HEAP[m+p]=d;p+=1;var r=d=HEAP[j+n]&15;d=(HEAP[j+n]&15)>9?13:14;break;case 13:e=r+87;d=15;break;case 14:e=r+48;d=15;break;case 15:d=e;HEAP[m+p]=d;p+=1;n+=1;d=n<k?9:16;break;case 16:_PyBuffer_Release(h);g=l;d=17;break;case 17:return e=g,STACKTOP=c,e;default:assert(0,"bad label: "+d)}},0,function(a,b){var c=STACKTOP;STACKTOP+=52;_memset(c,0,52);var d;for(d=-1;;)switch(d){case -1:var f,g=c,h,j,k,l,m,n,p,q;d=__PyArg_ParseTuple_SizeT(b,
Za,allocate([g,0,0,0],["%struct.Py_buffer*",0,0,0],ALLOC_STACK))==0?1:2;break;case 1:f=0;d=17;break;case 2:h=HEAP[g];j=HEAP[g+8];d=j<0?3:4;break;case 3:throw ___assert_fail(gb,o,1132,Va),"Reached an unreachable!";case 4:d=(j&1)!=0?5:6;break;case 5:_PyBuffer_Release(g);_PyErr_SetString(HEAP[_PyExc_TypeError],Ga);f=0;d=17;break;case 6:k=_PyString_FromStringAndSize(0,j/2|0);d=k==0?7:8;break;case 7:_PyBuffer_Release(g);f=0;d=17;break;case 8:l=k+20;m=n=0;d=13;break;case 9:p=e(HEAP[h+m]);q=e(HEAP[h+(m+
1)]);d=p==-1?11:10;break;case 10:d=q==-1?11:12;break;case 11:_PyErr_SetString(HEAP[_PyExc_TypeError],ha);_PyBuffer_Release(g);HEAP[k]-=1;d=HEAP[k]==0?15:16;break;case 12:HEAP[l+n&4294967295]=(p&255)*16+(q&255)&255;n=n+1&4294967295;m+=2;d=13;break;case 13:d=m<j?9:14;break;case 14:_PyBuffer_Release(g);f=k;d=17;break;case 15:FUNCTION_TABLE[HEAP[HEAP[k+4]+24]](k);d=16;break;case 16:f=0;d=17;break;case 17:return d=f,STACKTOP=c,d;default:assert(0,"bad label: "+d)}},0,function(a,b){var c=STACKTOP;STACKTOP+=
56;_memset(c,0,56);var d;for(d=-1;;)switch(d){case -1:var e,f=c,g,h,j=c+52,k,l,m,n;d=__PyArg_ParseTuple_SizeT(b,R,allocate([f,0,0,0],["%struct.Py_buffer*",0,0,0],ALLOC_STACK))==0?1:2;break;case 1:e=0;d=24;break;case 2:g=HEAP[f];n=HEAP[f+8];d=n<0?3:4;break;case 3:throw ___assert_fail(J,o,637,K),"Reached an unreachable!";case 4:d=n>1073741821?5:6;break;case 5:_PyBuffer_Release(f);e=_PyErr_NoMemory();d=24;break;case 6:d=_PyString_FromStringAndSize(0,(n+1)*2);HEAP[j]=d;d=HEAP[j]==0?7:8;break;case 7:_PyBuffer_Release(f);
e=0;d=24;break;case 8:h=HEAP[j]+20;l=0;d=l<n?9:19;break;case 9:k=d=HEAP[g+l];d=reSign(d,8,1)==-112?10:11;break;case 10:HEAP[h]=-112;h+=1;HEAP[h]=0;h+=1;d=18;break;case 11:m=l+1;d=13;break;case 12:m+=1;d=13;break;case 13:d=(m|0)>=(n|0)?16:14;break;case 14:d=k;d=reSign(HEAP[g+m],8,1)!=reSign(d,8,1)?16:15;break;case 15:d=(l+255|0)>(m|0)?12:16;break;case 16:HEAP[h]=k;h+=1;d=m-l>3?17:18;break;case 17:HEAP[h]=-112;h+=1;HEAP[h]=(m&255)-(l&255);h+=1;l=m-1;d=18;break;case 18:l+=1;d=l<n?9:19;break;case 19:d=
__PyString_Resize(j,h-(HEAP[j]+20))<0?20:23;break;case 20:d=HEAP[j];HEAP[d]-=1;d=HEAP[d]==0?21:22;break;case 21:FUNCTION_TABLE[HEAP[HEAP[HEAP[j]+4]+24]](HEAP[j]);d=22;break;case 22:HEAP[j]=0;d=23;break;case 23:_PyBuffer_Release(f);e=HEAP[j];d=24;break;case 24:return STACKTOP=c,e;default:assert(0,"bad label: "+d)}},0,function(a,b){var c=STACKTOP;STACKTOP+=56;_memset(c,0,56);var d;for(d=-1;;)switch(d){case -1:var e,f=c,g,h,j,k,l=c+52,m,n,p;d=__PyArg_ParseTuple_SizeT(b,aa,allocate([f,0,0,0],["%struct.Py_buffer*",
0,0,0],ALLOC_STACK))==0?1:2;break;case 1:e=0;d=86;break;case 2:g=HEAP[f];m=HEAP[f+8];d=m<0?3:4;break;case 3:throw ___assert_fail(ja,o,758,la),"Reached an unreachable!";case 4:d=m==0?5:6;break;case 5:_PyBuffer_Release(f);e=_PyString_FromStringAndSize(A,0);d=86;break;case 6:d=m>1073741823?7:8;break;case 7:_PyBuffer_Release(f);e=_PyErr_NoMemory();d=86;break;case 8:n=m*2;d=_PyString_FromStringAndSize(0,n);HEAP[l]=d;d=HEAP[l]==0?9:10;break;case 9:_PyBuffer_Release(f);e=0;d=86;break;case 10:p=n;h=HEAP[l]+
20;m-=1;d=m<0?11:14;break;case 11:_PyErr_SetString(HEAP[D],A);d=HEAP[l];HEAP[d]-=1;d=HEAP[d]==0?12:13;break;case 12:FUNCTION_TABLE[HEAP[HEAP[HEAP[l]+4]+24]](HEAP[l]);d=13;break;case 13:_PyBuffer_Release(f);e=0;d=86;break;case 14:j=HEAP[g];g+=1;d=j==-112?15:32;break;case 15:m-=1;d=m<0?16:19;break;case 16:_PyErr_SetString(HEAP[D],A);d=HEAP[l];HEAP[d]-=1;d=HEAP[d]==0?17:18;break;case 17:FUNCTION_TABLE[HEAP[HEAP[HEAP[l]+4]+24]](HEAP[l]);d=18;break;case 18:_PyBuffer_Release(f);e=0;d=86;break;case 19:k=
HEAP[g];g+=1;d=k!=0?20:23;break;case 20:_PyErr_SetString(HEAP[q],da);_PyBuffer_Release(f);d=HEAP[l];HEAP[d]-=1;d=HEAP[d]==0?21:22;break;case 21:FUNCTION_TABLE[HEAP[HEAP[HEAP[l]+4]+24]](HEAP[l]);d=22;break;case 22:e=0;d=86;break;case 23:p-=1;d=p<0?24:31;break;case 24:d=n>1073741823?25:26;break;case 25:e=_PyErr_NoMemory();d=86;break;case 26:d=__PyString_Resize(l,n*2);var r=HEAP[l];d=d<0?27:30;break;case 27:HEAP[r]-=1;d=HEAP[r]==0?28:29;break;case 28:FUNCTION_TABLE[HEAP[HEAP[HEAP[l]+4]+24]](HEAP[l]);
d=29;break;case 29:_PyBuffer_Release(f);e=0;d=86;break;case 30:h=r+20+n;p=n-1;n*=2;d=31;break;case 31:HEAP[h]=-112;h+=1;d=80;break;case 32:p-=1;d=p<0?33:40;break;case 33:d=n>1073741823?34:35;break;case 34:e=_PyErr_NoMemory();d=86;break;case 35:d=__PyString_Resize(l,n*2);var s=HEAP[l];d=d<0?36:39;break;case 36:HEAP[s]-=1;d=HEAP[s]==0?37:38;break;case 37:FUNCTION_TABLE[HEAP[HEAP[HEAP[l]+4]+24]](HEAP[l]);d=38;break;case 38:_PyBuffer_Release(f);e=0;d=86;break;case 39:h=s+20+n;p=n-1;n*=2;d=40;break;case 40:HEAP[h]=
j;h+=1;d=80;break;case 41:m-=1;d=m<0?42:45;break;case 42:_PyErr_SetString(HEAP[D],A);d=HEAP[l];HEAP[d]-=1;d=HEAP[d]==0?43:44;break;case 43:FUNCTION_TABLE[HEAP[HEAP[HEAP[l]+4]+24]](HEAP[l]);d=44;break;case 44:_PyBuffer_Release(f);e=0;d=86;break;case 45:j=HEAP[g];g+=1;d=reSign(j,8,1)==-112?46:71;break;case 46:m-=1;d=m<0?47:50;break;case 47:_PyErr_SetString(HEAP[D],A);d=HEAP[l];HEAP[d]-=1;d=HEAP[d]==0?48:49;break;case 48:FUNCTION_TABLE[HEAP[HEAP[HEAP[l]+4]+24]](HEAP[l]);d=49;break;case 49:_PyBuffer_Release(f);
e=0;d=86;break;case 50:k=HEAP[g];g+=1;d=k==0?51:60;break;case 51:p-=1;d=p<0?52:59;break;case 52:d=n>1073741823?53:54;break;case 53:e=_PyErr_NoMemory();d=86;break;case 54:d=__PyString_Resize(l,n*2);var t=HEAP[l];d=d<0?55:58;break;case 55:HEAP[t]-=1;d=HEAP[t]==0?56:57;break;case 56:FUNCTION_TABLE[HEAP[HEAP[HEAP[l]+4]+24]](HEAP[l]);d=57;break;case 57:_PyBuffer_Release(f);e=0;d=86;break;case 58:h=t+20+n;p=n-1;n*=2;d=59;break;case 59:HEAP[h]=-112;h+=1;d=80;break;case 60:j=HEAP[h+-1];d=70;break;case 61:p-=
1;d=p<0?62:69;break;case 62:d=n>1073741823?63:64;break;case 63:e=_PyErr_NoMemory();d=86;break;case 64:d=__PyString_Resize(l,n*2);var u=HEAP[l];d=d<0?65:68;break;case 65:HEAP[u]-=1;d=HEAP[u]==0?66:67;break;case 66:FUNCTION_TABLE[HEAP[HEAP[HEAP[l]+4]+24]](HEAP[l]);d=67;break;case 67:_PyBuffer_Release(f);e=0;d=86;break;case 68:h=u+20+n;p=n-1;n*=2;d=69;break;case 69:HEAP[h]=j;h+=1;d=70;break;case 70:k=d=k-1;d=d!=0?61:80;break;case 71:p-=1;d=p<0?72:79;break;case 72:d=n>1073741823?73:74;break;case 73:e=
_PyErr_NoMemory();d=86;break;case 74:d=__PyString_Resize(l,n*2);var v=HEAP[l];d=d<0?75:78;break;case 75:HEAP[v]-=1;d=HEAP[v]==0?76:77;break;case 76:FUNCTION_TABLE[HEAP[HEAP[HEAP[l]+4]+24]](HEAP[l]);d=77;break;case 77:_PyBuffer_Release(f);e=0;d=86;break;case 78:h=v+20+n;p=n-1;n*=2;d=79;break;case 79:HEAP[h]=j;h+=1;d=80;break;case 80:d=m>0?41:81;break;case 81:d=__PyString_Resize(l,h-(HEAP[l]+20))<0?82:85;break;case 82:d=HEAP[l];HEAP[d]-=1;d=HEAP[d]==0?83:84;break;case 83:FUNCTION_TABLE[HEAP[HEAP[HEAP[l]+
4]+24]](HEAP[l]);d=84;break;case 84:HEAP[l]=0;d=85;break;case 85:_PyBuffer_Release(f);e=HEAP[l];d=86;break;case 86:return STACKTOP=c,e;default:assert(0,"bad label: "+d)}},0,function(a,b){var c=STACKTOP;STACKTOP+=56;_memset(c,0,56);var d;for(d=-1;;)switch(d){case -1:var e,f=c,g,h=c+52,j;d=__PyArg_ParseTuple_SizeT(b,Ma,allocate([f,0,0,0,h,0,0,0],["%struct.Py_buffer*",0,0,0,"i32*",0,0,0],ALLOC_STACK))==0?1:2;break;case 1:e=0;d=5;break;case 2:g=HEAP[f];j=HEAP[f+8];d=j>0;j-=1;d=d?3:4;break;case 3:d=HEAP[h]<<
8&65280;var l=HEAP[h]>>>0>>>8&255,m=unSign(HEAP[g],8,1);d^=unSign(HEAP[k+(m^l)*2],16,1);HEAP[h]=d;g+=1;d=j>0;j-=1;d=d!=0?3:4;break;case 4:_PyBuffer_Release(f);e=__Py_BuildValue_SizeT(wa,allocate([HEAP[h],0,0,0],["i32",0,0,0],ALLOC_STACK));d=5;break;case 5:return STACKTOP=c,e;default:assert(0,"bad label: "+d)}},0,function(a,b){var c=STACKTOP;STACKTOP+=56;_memset(c,0,56);var d;for(d=-1;;)switch(d){case -1:var e,f;e=c;var g,h=c+52,j;d=b;HEAP[h]=0;d=__PyArg_ParseTuple_SizeT(d,db,allocate([e,0,0,0,h,0,
0,0],["%struct.Py_buffer*",0,0,0,"i32*",0,0,0],ALLOC_STACK))==0?1:2;break;case 1:f=0;d=5;break;case 2:g=HEAP[e];j=HEAP[e+8];HEAP[h]^=-1;d=j>0;j-=1;d=d?3:4;break;case 3:d=unSign(HEAP[g],8,1);HEAP[h]=HEAP[h]>>>0>>>8^HEAP[cb+((d^HEAP[h])&255)*4];g+=1;d=j>0;j-=1;d=d!=0?3:4;break;case 4:f=HEAP[h]^-1;_PyBuffer_Release(e);f=_PyInt_FromLong(f);d=5;break;case 5:return e=f,STACKTOP=c,e;default:assert(0,"bad label: "+d)}},0,function(a,b,c){a=STACKTOP;STACKTOP+=56;_memset(a,0,56);var d;for(d=-1;;)switch(d){case -1:var e,
f,g,h,j=a,k,l,m,n,o=a+52;d=b;e=c;m=0;HEAP[o]=0;d=__PyArg_ParseTupleAndKeywords_SizeT(d,e,Qa,Ha,allocate([j,0,0,0,o,0,0,0],["%struct.Py_buffer*",0,0,0,"i32*",0,0,0],ALLOC_STACK))==0?1:2;break;case 1:f=0;d=39;break;case 2:k=HEAP[j];m=HEAP[j+8];l=_PyMem_Malloc(m);d=l==0?3:4;break;case 3:_PyBuffer_Release(j);_PyErr_NoMemory();f=0;d=39;break;case 4:_llvm_memset_p0i8_i32(l,0,m,1,0);g=h=0;d=35;break;case 5:d=HEAP[k+g]==61?6:31;break;case 6:g+=1;d=g>=m?36:7;break;case 7:d=HEAP[k+g]==10?9:8;break;case 8:d=
HEAP[k+g]==13?9:15;break;case 9:d=HEAP[k+g]!=10?11:13;break;case 10:g+=1;d=11;break;case 11:d=g>=m?13:12;break;case 12:d=HEAP[k+g]!=10?10:13;break;case 13:d=g<m?14:35;break;case 14:g+=1;d=35;break;case 15:d=HEAP[k+g]==61?16:17;break;case 16:HEAP[l+h]=61;h+=1;g+=1;d=35;break;case 17:d=HEAP[k+g]<=64?19:18;break;case 18:d=HEAP[k+g]<=70?23:19;break;case 19:d=HEAP[k+g]<=96?21:20;break;case 20:d=HEAP[k+g]<=102?23:21;break;case 21:d=HEAP[k+g]<=47?30:22;break;case 22:d=HEAP[k+g]<=57?23:30;break;case 23:d=
HEAP[k+(g+1)]<=64?25:24;break;case 24:d=HEAP[k+(g+1)]<=70?29:25;break;case 25:d=HEAP[k+(g+1)]<=96?27:26;break;case 26:d=HEAP[k+(g+1)]<=102?29:27;break;case 27:d=HEAP[k+(g+1)]<=47?30:28;break;case 28:d=HEAP[k+(g+1)]<=57?29:30;break;case 29:d=HEAP[jb+HEAP[k+g]*4]<<4&255;g+=1;d|=HEAP[jb+HEAP[k+g]*4]&255;g+=1;HEAP[l+h]=d;h+=1;d=35;break;case 30:HEAP[l+h]=61;h+=1;d=35;break;case 31:d=HEAP[o]==0?34:32;break;case 32:d=HEAP[k+g]!=95?34:33;break;case 33:HEAP[l+h]=32;h+=1;g+=1;d=35;break;case 34:HEAP[l+h]=
HEAP[k+g];g+=1;h+=1;d=35;break;case 35:d=g<m?5:36;break;case 36:n=d=_PyString_FromStringAndSize(l,h);d=d==0;_PyBuffer_Release(j);_PyMem_Free(l);d=d?37:38;break;case 37:f=0;d=39;break;case 38:f=n;d=39;break;case 39:return b=f,STACKTOP=a,b;default:assert(0,"bad label: "+d)}},0,function(a,c,d){a=STACKTOP;STACKTOP+=64;_memset(a,0,64);var e,f=null;for(e=-1;;)switch(e){case -1:var g,h,j,k,l=a,m,n,o,p,q,r,s=a+52,t=a+56,u=a+60,v,w;e=c;g=d;r=p=o=0;HEAP[s]=1;HEAP[t]=0;v=HEAP[u]=0;e=__PyArg_ParseTupleAndKeywords_SizeT(e,
g,Wa,Y,allocate([l,0,0,0,t,0,0,0,s,0,0,0,u,0,0,0],["%struct.Py_buffer*",0,0,0,"i32*",0,0,0,"i32*",0,0,0,"i32*",0,0,0],ALLOC_STACK))==0?1:2;break;case 1:h=0;e=116;break;case 2:m=HEAP[l];o=HEAP[l+8];w=_memchr(m,10,o);e=w!=0?3:6;break;case 3:e=w>m?4:6;break;case 4:e=HEAP[w+-1]==13?5:6;break;case 5:v=1;e=6;break;case 6:j=0;e=j<o?7:58;break;case 7:e=HEAP[m+j]>126?29:8;break;case 8:e=HEAP[m+j]==61?29:9;break;case 9:e=HEAP[u]==0?11:10;break;case 10:e=HEAP[m+j]==95?29:11;break;case 11:e=HEAP[m+j]!=46?16:
12;break;case 12:e=r!=0?16:13;break;case 13:e=HEAP[m+(j+1)]==10?29:14;break;case 14:e=HEAP[m+(j+1)]==13?29:15;break;case 15:e=HEAP[m+(j+1)]==0?29:16;break;case 16:e=HEAP[s]!=0?19:17;break;case 17:e=HEAP[m+j]==13?29:18;break;case 18:e=HEAP[m+j]==10?29:19;break;case 19:e=HEAP[m+j]==9?21:20;break;case 20:e=HEAP[m+j]==32?21:22;break;case 21:e=j+1==o?29:22;break;case 22:e=HEAP[m+j]>32?35:23;break;case 23:e=HEAP[m+j]==13?35:24;break;case 24:e=HEAP[m+j]==10?35:25;break;case 25:e=HEAP[t]!=0?29:26;break;case 26:e=
HEAP[t]!=0?35:27;break;case 27:e=HEAP[m+j]==9?35:28;break;case 28:e=HEAP[m+j]!=32?29:35;break;case 29:e=r+3>75?30:33;break;case 30:r=0;var x=p;e=v!=0?31:32;break;case 31:p=x+3;e=33;break;case 32:p=x+2;e=33;break;case 33:r+=3;p+=3;j+=1;e=34;break;case 34:e=j<o?7:58;break;case 35:e=HEAP[s]==0?51:36;break;case 36:var y=j;HEAP[m+y]==10?(f=36,e=41):(f=36,e=37);break;case 37:e=j+1>=o?51:38;break;case 38:e=HEAP[m+j]!=13?51:39;break;case 39:e=HEAP[m+(j+1)]==10?40:51;break;case 40:var z=j,f=40;e=41;break;
case 41:e=f==40?z:y;r=0;e=(e|0)!=0?42:45;break;case 42:e=reSign(HEAP[m+(j-1)],8,1)==32?44:43;break;case 43:e=reSign(HEAP[m+(j-1)],8,1)==9?44:45;break;case 44:p+=2;e=45;break;case 45:var A=p;e=v!=0?46:47;break;case 46:p=A+2;e=48;break;case 47:p=A+1;e=48;break;case 48:var B=j;e=HEAP[m+j]==13?49:50;break;case 49:j=B+2;e=34;break;case 50:j=B+1;e=34;break;case 51:e=j+1!=o?52:57;break;case 52:e=HEAP[m+(j+1)]!=10?53:57;break;case 53:e=r+1>75?54:57;break;case 54:r=0;var H=p;e=v!=0?55:56;break;case 55:p=H+
3;e=57;break;case 56:p=H+2;e=57;break;case 57:r+=1;p+=1;j+=1;e=34;break;case 58:n=e=_PyMem_Malloc(p);e=e==0?59:60;break;case 59:_PyBuffer_Release(l);_PyErr_NoMemory();h=0;e=116;break;case 60:_llvm_memset_p0i8_i32(n,0,p,1,0);j=k=r=0;e=j<o?61:113;break;case 61:e=HEAP[m+j]>126?83:62;break;case 62:e=HEAP[m+j]==61?83:63;break;case 63:e=HEAP[u]==0?65:64;break;case 64:e=HEAP[m+j]==95?83:65;break;case 65:e=HEAP[m+j]!=46?70:66;break;case 66:e=r!=0?70:67;break;case 67:e=HEAP[m+(j+1)]==10?83:68;break;case 68:e=
HEAP[m+(j+1)]==13?83:69;break;case 69:e=HEAP[m+(j+1)]==0?83:70;break;case 70:e=HEAP[s]!=0?73:71;break;case 71:e=HEAP[m+j]==13?83:72;break;case 72:e=HEAP[m+j]==10?83:73;break;case 73:e=HEAP[m+j]==9?75:74;break;case 74:e=HEAP[m+j]==32?75:76;break;case 75:e=j+1==o?83:76;break;case 76:e=HEAP[m+j]>32?89:77;break;case 77:e=HEAP[m+j]==13?89:78;break;case 78:e=HEAP[m+j]==10?89:79;break;case 79:e=HEAP[t]!=0?83:80;break;case 80:e=HEAP[t]!=0?89:81;break;case 81:e=HEAP[m+j]==9?89:82;break;case 82:e=HEAP[m+j]!=
32?83:89;break;case 83:e=r+3>75?84:87;break;case 84:HEAP[n+k]=61;k+=1;e=v!=0?85:86;break;case 85:HEAP[n+k]=13;k+=1;e=86;break;case 86:HEAP[n+k]=10;k+=1;r=0;e=87;break;case 87:HEAP[n+k]=61;k+=1;b(HEAP[m+j]&255,n+k);k+=2;j+=1;r+=3;e=88;break;case 88:e=j<o?61:113;break;case 89:e=HEAP[s]==0?103:90;break;case 90:e=HEAP[m+j]==10?94:91;break;case 91:e=j+1>=o?103:92;break;case 92:e=HEAP[m+j]!=13?103:93;break;case 93:e=HEAP[m+(j+1)]==10?94:103;break;case 94:r=0;e=k!=0?95:98;break;case 95:e=HEAP[n+(k-1)]==
32?97:96;break;case 96:e=HEAP[n+(k-1)]==9?97:98;break;case 97:e=HEAP[n+(k-1)];HEAP[n+(k-1)]=61;b(e&255,n+k);k+=2;e=98;break;case 98:e=v!=0?99:100;break;case 99:HEAP[n+k]=13;k+=1;e=100;break;case 100:HEAP[n+k]=10;k+=1;var C=j;e=HEAP[m+j]==13?101:102;break;case 101:j=C+2;e=88;break;case 102:j=C+1;e=88;break;case 103:e=j+1!=o?104:109;break;case 104:e=HEAP[m+(j+1)]!=10?105:109;break;case 105:e=r+1>75?106:109;break;case 106:HEAP[n+k]=61;k+=1;e=v!=0?107:108;break;case 107:HEAP[n+k]=13;k+=1;e=108;break;
case 108:HEAP[n+k]=10;k+=1;r=0;e=109;break;case 109:r+=1;e=HEAP[u]==0?112:110;break;case 110:e=HEAP[m+j]!=32?112:111;break;case 111:HEAP[n+k]=95;k+=1;j+=1;e=88;break;case 112:HEAP[n+k]=HEAP[m+j];k+=1;j+=1;e=88;break;case 113:q=e=_PyString_FromStringAndSize(n,k);e=e==0;_PyBuffer_Release(l);_PyMem_Free(n);e=e?114:115;break;case 114:h=0;e=116;break;case 115:h=q;e=116;break;case 116:return c=h,STACKTOP=a,c;default:assert(0,"bad label: "+e)}},0]);c.run=a;a();return c});