(function(g){function e(a,b,c){var d;for(d=-1;;)switch(d){case -1:var e,f,g;e=a;f=b;g=_PyInt_FromLong(c);d=g==0?2:1;break;case 1:d=_PyDict_SetItemString(e,f,g)!=0?2:3;break;case 2:_PyErr_Clear();d=3;break;case 3:d=g!=0?4:6;break;case 4:HEAP[g]-=1;d=HEAP[g]==0?5:6;break;case 5:FUNCTION_TABLE[HEAP[HEAP[g+4]+24]](g);d=6;break;case 6:return;default:assert(0,"bad label: "+d)}}function b(){c=allocate([101,120,112,101,99,116,101,100,32,115,116,114,105,
110,103,44,32,102,111,117,110,100,32,37,46,50,48,48,115,0],"i8",ALLOC_NORMAL);d=allocate([97,116,32,108,101,97,115,116,32,97,32,110,97,109,101,32,105,115,32,110,101,101,100,101,100,0],"i8",ALLOC_NORMAL);f=allocate([102,117,110,99,116,105,111,110,32,110,97,109,101,32,109,117,115,116,32,98,101,32,97,32,115,116,114,105,110,103,0],"i8",ALLOC_NORMAL);h=allocate([116,111,111,32,109,97,110,121,32,97,114,103,117,109,101,110,116,115,32,40,109,97,120,32,49,48,41,0],"i8",ALLOC_NORMAL);j=allocate([97,114,103,
117,109,101,110,116,115,32,109,117,115,116,32,98,101,32,105,110,116,44,32,115,116,114,105,110,103,32,111,114,32,78,111,110,101,0],"i8",ALLOC_NORMAL);k=allocate([99,97,108,108,0],"i8",ALLOC_NORMAL);l=allocate([115,121,109,0],"i8",ALLOC_NORMAL);m=allocate([99,108,111,115,101,0],"i8",ALLOC_NORMAL);n=allocate([0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],["i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",
0,0,0,"i32",0,0,0,"i8","i8","i8","i8","i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8","i8","i8","i8","i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8","i8","i8","i8","i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8"],ALLOC_NORMAL);o=allocate([100,108,46,100,108,0],"i8",ALLOC_NORMAL);p=allocate([1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],["i32",0,0,0,"%struct._typeobject*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i32",0,0,0,"i32",0,0,0,"void (%struct.PyObject*)*",0,0,0,"i32 (%struct.PyObject*, %struct.FILE*, i32)*",
0,0,0,"%struct.PyObject* (%struct.PyObject*, i8*)*",0,0,0,"i32 (%struct.PyObject*, i8*, %struct.PyObject*)*",0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*)*",0,0,0,"%struct.PyNumberMethods*",0,0,0,"%struct.PySequenceMethods*",0,0,0,"%struct.PyMappingMethods*",0,0,0,"i32 (%struct.PyObject*)*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8",
"i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8"],
ALLOC_NORMAL);q=allocate([122,58,111,112,101,110,0],"i8",ALLOC_NORMAL);r=allocate([122,105,58,111,112,101,110,0],"i8",ALLOC_NORMAL);t=allocate([100,108,111,112,101,110,40,41,32,101,114,114,111,114,0],"i8",ALLOC_NORMAL);s=allocate(1,"%struct.PyObject*",ALLOC_NORMAL);u=allocate([111,112,101,110,0],"i8",ALLOC_NORMAL);v=allocate([0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],["i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8","i8","i8","i8",
"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8"],ALLOC_NORMAL);w=allocate([116,104,101,32,100,108,32,109,111,100,117,108,101,32,104,97,115,32,98,101,101,110,32,114,101,109,111,118,101,100,32,105,110,32,80,121,116,104,111,110,32,51,46,48,59,32,117,115,101,32,116,104,101,32,99,116,121,112,101,115,32,109,111,100,117,108,101,32,105,110,115,116,101,97,100,0],"i8",ALLOC_NORMAL);x=allocate([100,108,0],"i8",ALLOC_NORMAL);y=allocate([100,
108,46,101,114,114,111,114,0],"i8",ALLOC_NORMAL);B=allocate([101,114,114,111,114,0],"i8",ALLOC_NORMAL);A=allocate([82,84,76,68,95,76,65,90,89,0],"i8",ALLOC_NORMAL);C=allocate([82,84,76,68,95,78,79,87,0],"i8",ALLOC_NORMAL);G=allocate([82,84,76,68,95,78,79,76,79,65,68,0],"i8",ALLOC_NORMAL);F=allocate([82,84,76,68,95,71,76,79,66,65,76,0],"i8",ALLOC_NORMAL);E=allocate([82,84,76,68,95,76,79,67,65,76,0],"i8",ALLOC_NORMAL);N=allocate([82,84,76,68,95,78,79,68,69,76,69,84,69,0],"i8",ALLOC_NORMAL);HEAP[n]=
k;HEAP[n+4]=g+2;HEAP[n+16]=l;HEAP[n+20]=g+4;HEAP[n+32]=m;HEAP[n+36]=g+6;HEAP[p+12]=o;HEAP[p+24]=g+8;HEAP[p+32]=g+10;HEAP[v]=u;HEAP[v+4]=g+12}var a={arguments:[]};Runtime.QUANTUM_SIZE=4;var c,d,f,h,j,k,l,m,n,o,p,q,r,t,s,u,v,w,x,y,B,A,C,G,F,E,N;a._initdl=function(){var a;for(a=-1;;)switch(a){case -1:var b,c;a=HEAP[_Py_Py3kWarningFlag]!=0?1:2;break;case 1:a=_PyErr_WarnEx(HEAP[_PyExc_DeprecationWarning],w,2)<0?4:2;break;case 2:HEAP[p+4]=_PyType_Type;b=a=_Py_InitModule4(x,v,0,0,1013);a=a==0?4:3;break;
case 3:a=_PyModule_GetDict(b);c=_PyErr_NewException(y,0,0);HEAP[s]=c;_PyDict_SetItemString(a,B,c);c=_PyInt_FromLong(1);_PyDict_SetItemString(a,A,c);e(a,C,2);e(a,G,4);e(a,F,256);e(a,E,0);e(a,N,4096);a=4;break;case 4:return;default:assert(0,"bad label: "+a)}};FUNCTION_TABLE=FUNCTION_TABLE.concat([0,0,function(a,b){var c=STACKTOP;STACKTOP+=40;_memset(c,0,40);var e;for(e=-1;;)switch(e){case -1:var g,k,l,m,n,o=c,p,q,r;g=a;k=b;q=_PyTuple_Size(k);e=q<=0?1:2;break;case 1:_PyErr_SetString(HEAP[_PyExc_TypeError],
d);l=0;e=21;break;case 2:m=_PyTuple_GetItem(k,0);e=(HEAP[HEAP[m+4]+84]&134217728)==0?3:4;break;case 3:_PyErr_SetString(HEAP[_PyExc_TypeError],f);l=0;e=21;break;case 4:n=_PyString_AsString(m);n=_dlsym(HEAP[g+8],n);e=n==0?5:6;break;case 5:l=_dlerror();_PyErr_SetString(HEAP[_PyExc_ValueError],l);l=0;e=21;break;case 6:e=q-1>10?7:8;break;case 7:_PyErr_SetString(HEAP[_PyExc_TypeError],h);l=0;e=21;break;case 8:p=1;e=17;break;case 9:r=_PyTuple_GetItem(k,p);e=(HEAP[HEAP[r+4]+84]&8388608)!=0?10:11;break;case 10:e=
p-1;var z=_PyInt_AsLong(r);HEAP[o+e*4]=z;e=16;break;case 11:e=(HEAP[HEAP[r+4]+84]&134217728)!=0?12:13;break;case 12:e=p-1;z=_PyString_AsString(r);HEAP[o+e*4]=z;e=16;break;case 13:e=r==__Py_NoneStruct?14:15;break;case 14:HEAP[o+(p-1)*4]=0;e=16;break;case 15:_PyErr_SetString(HEAP[_PyExc_TypeError],j);l=0;e=21;break;case 16:p+=1;e=17;break;case 17:var s=p;e=s<q?9:18;break;case 18:e=s<=10?19:20;break;case 19:HEAP[o+(p-1)*4]=0;p=e=p+1;e=e<=10?19:20;break;case 20:l=FUNCTION_TABLE[n](HEAP[o],HEAP[o+4],HEAP[o+
8],HEAP[o+12],HEAP[o+16],HEAP[o+20],HEAP[o+24],HEAP[o+28],HEAP[o+32],HEAP[o+36]);l=_PyInt_FromLong(l);e=21;break;case 21:return g=l,STACKTOP=c,g;default:assert(0,"bad label: "+e)}},0,function(a,b){var e;for(e=-1;;)switch(e){case -1:var d,f,g;d=a;var h=e=b;e=(HEAP[HEAP[e+4]+84]&134217728)!=0?1:2;break;case 1:g=h+20;g=_dlsym(HEAP[d+8],g);e=g==0?3:4;break;case 2:_PyErr_Format(HEAP[_PyExc_TypeError],c,allocate([HEAP[HEAP[h+4]+12],0,0,0],["i8*",0,0,0],ALLOC_STACK));f=0;e=5;break;case 3:HEAP[__Py_NoneStruct]+=
1;f=__Py_NoneStruct;e=5;break;case 4:f=_PyInt_FromLong(g);e=5;break;case 5:return d=f;default:assert(0,"bad label: "+e)}},0,function(a){var b;for(b=-1;;)switch(b){case -1:var c;c=a;b=HEAP[c+8]!=0?1:2;break;case 1:_dlclose(HEAP[c+8]);HEAP[c+8]=0;b=2;break;case 2:return HEAP[__Py_NoneStruct]+=1,a=__Py_NoneStruct;default:assert(0,"bad label: "+b)}},0,function(a){var b;for(b=-1;;)switch(b){case -1:var c;c=a;b=HEAP[c+8]!=0?1:2;break;case 1:_dlclose(HEAP[c+8]);b=2;break;case 2:_PyObject_Free(c);return;
default:assert(0,"bad label: "+b)}},0,function(a,b){return _Py_FindMethod(n,a,b)},0,function(a,b){var c=STACKTOP;STACKTOP+=8;_memset(c,0,8);var e;for(e=-1;;)switch(e){case -1:var d,f,g=c,h=c+4,j,k;d=b;e=_PyArg_ParseTuple(d,q,allocate([g,0,0,0],["i8**",0,0,0],ALLOC_STACK))!=0?1:2;break;case 1:HEAP[h]=1;e=4;break;case 2:_PyErr_Clear();e=_PyArg_ParseTuple(d,r,allocate([g,0,0,0,h,0,0,0],["i8**",0,0,0,"i32*",0,0,0],ALLOC_STACK))==0?3:4;break;case 3:f=0;e=9;break;case 4:j=e=_dlopen(HEAP[g],HEAP[h]);e=e==
0?5:8;break;case 5:k=_dlerror();e=k==0?6:7;break;case 6:k=t;e=7;break;case 7:_PyErr_SetString(HEAP[s],k);f=0;e=9;break;case 8:a:{f=j;e=void 0;for(e=-1;;)switch(e){case -1:var l,m,n;l=f;n=__PyObject_New(p);e=n==0?1:2;break;case 1:m=0;e=3;break;case 2:HEAP[n+8]=l;m=n;e=3;break;case 3:f=m;break a;default:assert(0,"bad label: "+e)}f=void 0}e=9;break;case 9:return d=f,STACKTOP=c,d;default:assert(0,"bad label: "+e)}},0]);a.run=b;b();return a});