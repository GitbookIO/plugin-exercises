(function(g){function e(a,b,c){var d;for(d=-1;;)switch(d){case -1:var e,f,g;e=a;f=b;g=c;d=g!=0?1:2;break;case 1:d=_PyString_FromString(g);HEAP[e+12+f*4]=d;d=3;break;case 2:HEAP[e+12+f*4]=__Py_NoneStruct;HEAP[__Py_NoneStruct]+=1;d=3;break;case 3:return;default:assert(0,"bad label: "+d)}}function b(a){var b;for(b=-1;;)switch(b){case -1:var c,d,f,g;c=a;f=0;g=_PyStructSequence_New(F);b=g==0?1:2;break;case 1:d=0;b=7;break;case 2:var h=HEAP[c];b=
f;f+=1;e(g,b,h);h=HEAP[c+4];b=f;f+=1;e(g,b,h);h=g;b=f;var j=_PyInt_FromLong(HEAP[c+8]);HEAP[h+12+b*4]=j;f+=1;h=g;b=f;j=_PyInt_FromLong(HEAP[c+12]);HEAP[h+12+b*4]=j;f+=1;h=g;b=f;j=_PyInt_FromLong(HEAP[c+16]);HEAP[h+12+b*4]=j;f+=1;h=g;b=f;j=_PyInt_FromLong(HEAP[c+20]);HEAP[h+12+b*4]=j;f+=1;h=g;b=f;j=_PyInt_FromLong(HEAP[c+24]);HEAP[h+12+b*4]=j;f+=1;h=g;b=f;j=_PyInt_FromLong(HEAP[c+28]);HEAP[h+12+b*4]=j;f+=1;h=g;b=f;j=_PyInt_FromLong(HEAP[c+32]);HEAP[h+12+b*4]=j;f+=1;b=_PyErr_Occurred();h=g;b=b!=0?3:
6;break;case 3:HEAP[g]=HEAP[h]-1;b=HEAP[g]==0?4:5;break;case 4:FUNCTION_TABLE[HEAP[HEAP[g+4]+24]](g);b=5;break;case 5:d=0;b=7;break;case 6:d=h;b=7;break;case 7:return a=d;default:assert(0,"bad label: "+b)}}function a(){d=allocate([84,104,105,115,32,109,111,100,117,108,101,32,112,114,111,118,105,100,101,115,32,97,99,99,101,115,115,32,116,111,32,116,104,101,32,85,110,105,120,32,115,104,97,100,111,119,32,112,97,115,115,119,111,114,100,32,100,97,116,97,98,97,115,101,46,10,73,116,32,105,115,32,97,118,
97,105,108,97,98,108,101,32,111,110,32,118,97,114,105,111,117,115,32,85,110,105,120,32,118,101,114,115,105,111,110,115,46,10,10,83,104,97,100,111,119,32,112,97,115,115,119,111,114,100,32,100,97,116,97,98,97,115,101,32,101,110,116,114,105,101,115,32,97,114,101,32,114,101,112,111,114,116,101,100,32,97,115,32,57,45,116,117,112,108,101,115,32,111,102,32,116,121,112,101,32,115,116,114,117,99,116,95,115,112,119,100,44,10,99,111,110,116,97,105,110,105,110,103,32,116,104,101,32,102,111,108,108,111,119,105,
110,103,32,105,116,101,109,115,32,102,114,111,109,32,116,104,101,32,112,97,115,115,119,111,114,100,32,100,97,116,97,98,97,115,101,32,40,115,101,101,32,96,60,115,104,97,100,111,119,46,104,62,39,41,58,10,115,112,95,110,97,109,112,44,32,115,112,95,112,119,100,112,44,32,115,112,95,108,115,116,99,104,103,44,32,115,112,95,109,105,110,44,32,115,112,95,109,97,120,44,32,115,112,95,119,97,114,110,44,32,115,112,95,105,110,97,99,116,44,32,115,112,95,101,120,112,105,114,101,44,32,115,112,95,102,108,97,103,46,
10,84,104,101,32,115,112,95,110,97,109,112,32,97,110,100,32,115,112,95,112,119,100,112,32,97,114,101,32,115,116,114,105,110,103,115,44,32,116,104,101,32,114,101,115,116,32,97,114,101,32,105,110,116,101,103,101,114,115,46,10,65,110,32,101,120,99,101,112,116,105,111,110,32,105,115,32,114,97,105,115,101,100,32,105,102,32,116,104,101,32,101,110,116,114,121,32,97,115,107,101,100,32,102,111,114,32,99,97,110,110,111,116,32,98,101,32,102,111,117,110,100,46,10,89,111,117,32,104,97,118,101,32,116,111,32,98,
101,32,114,111,111,116,32,116,111,32,98,101,32,97,98,108,101,32,116,111,32,117,115,101,32,116,104,105,115,32,109,111,100,117,108,101,46,0],"i8",ALLOC_NORMAL);f=allocate([115,112,95,110,97,109,0],"i8",ALLOC_NORMAL);h=allocate([108,111,103,105,110,32,110,97,109,101,0],"i8",ALLOC_NORMAL);j=allocate([115,112,95,112,119,100,0],"i8",ALLOC_NORMAL);k=allocate([101,110,99,114,121,112,116,101,100,32,112,97,115,115,119,111,114,100,0],"i8",ALLOC_NORMAL);l=allocate([115,112,95,108,115,116,99,104,103,0],"i8",ALLOC_NORMAL);
m=allocate([100,97,116,101,32,111,102,32,108,97,115,116,32,99,104,97,110,103,101,0],"i8",ALLOC_NORMAL);n=allocate([115,112,95,109,105,110,0],"i8",ALLOC_NORMAL);o=allocate([109,105,110,32,35,100,97,121,115,32,98,101,116,119,101,101,110,32,99,104,97,110,103,101,115,0],"i8",ALLOC_NORMAL);p=allocate([115,112,95,109,97,120,0],"i8",ALLOC_NORMAL);q=allocate([109,97,120,32,35,100,97,121,115,32,98,101,116,119,101,101,110,32,99,104,97,110,103,101,115,0],"i8",ALLOC_NORMAL);r=allocate([115,112,95,119,97,114,
110,0],"i8",ALLOC_NORMAL);t=allocate([35,100,97,121,115,32,98,101,102,111,114,101,32,112,119,32,101,120,112,105,114,101,115,32,116,111,32,119,97,114,110,32,117,115,101,114,32,97,98,111,117,116,32,105,116,0],"i8",ALLOC_NORMAL);s=allocate([115,112,95,105,110,97,99,116,0],"i8",ALLOC_NORMAL);u=allocate([35,100,97,121,115,32,97,102,116,101,114,32,112,119,32,101,120,112,105,114,101,115,32,117,110,116,105,108,32,97,99,99,111,117,110,116,32,105,115,32,98,108,111,99,107,101,100,0],"i8",ALLOC_NORMAL);v=allocate([115,
112,95,101,120,112,105,114,101,0],"i8",ALLOC_NORMAL);w=allocate([35,100,97,121,115,32,115,105,110,99,101,32,49,57,55,48,45,48,49,45,48,49,32,117,110,116,105,108,32,97,99,99,111,117,110,116,32,105,115,32,100,105,115,97,98,108,101,100,0],"i8",ALLOC_NORMAL);x=allocate([115,112,95,102,108,97,103,0],"i8",ALLOC_NORMAL);y=allocate([114,101,115,101,114,118,101,100,0],"i8",ALLOC_NORMAL);B=allocate(80,["i8*",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"i8*",0,0,
0,"i8*",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"i8","i8","i8","i8"],ALLOC_NORMAL);A=allocate([115,112,119,100,46,115,116,114,117,99,116,95,115,112,119,100,58,32,82,101,115,117,108,116,115,32,102,114,111,109,32,103,101,116,115,112,42,40,41,32,114,111,117,116,105,110,101,115,46,10,10,84,104,105,115,32,111,98,106,101,99,116,32,109,97,121,32,98,101,32,97,99,99,101,115,115,101,100,32,101,105,116,104,101,114,32,97,115,32,97,32,57,
45,116,117,112,108,101,32,111,102,10,32,32,40,115,112,95,110,97,109,44,115,112,95,112,119,100,44,115,112,95,108,115,116,99,104,103,44,115,112,95,109,105,110,44,115,112,95,109,97,120,44,115,112,95,119,97,114,110,44,115,112,95,105,110,97,99,116,44,115,112,95,101,120,112,105,114,101,44,115,112,95,102,108,97,103,41,10,111,114,32,118,105,97,32,116,104,101,32,111,98,106,101,99,116,32,97,116,116,114,105,98,117,116,101,115,32,97,115,32,110,97,109,101,100,32,105,110,32,116,104,101,32,97,98,111,118,101,32,
116,117,112,108,101,46,0],"i8",ALLOC_NORMAL);C=allocate([0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0],["i8*",0,0,0,"i8*",0,0,0,"%struct.PyStructSequence_Field*",0,0,0,"i32",0,0,0],ALLOC_NORMAL);G=allocate([115,112,119,100,46,115,116,114,117,99,116,95,115,112,119,100,0],"i8",ALLOC_NORMAL);F=allocate(196,["i32",0,0,0,"%struct._typeobject*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i32",0,0,0,"i32",0,0,0,"void (%struct.PyObject*)*",0,0,0,"i32 (%struct.PyObject*, %struct.FILE*, i32)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, i8*)*",
0,0,0,"i32 (%struct.PyObject*, i8*, %struct.PyObject*)*",0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*)*",0,0,0,"%struct.PyNumberMethods*",0,0,0,"%struct.PySequenceMethods*",0,0,0,"%struct.PyMappingMethods*",0,0,0,"i32 (%struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",
0,0,0,"%struct.PyBufferProcs*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i32 (%struct.PyObject*, i32 (%struct.PyObject*, i8*)*, i8*)*",0,0,0,"i32 (%struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*, i32)*",0,0,0,"i32",0,0,0,"%struct.PyObject* (%struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*)*",0,0,0,"%struct.PyMethodDef*",0,0,0,"%struct.PyMemberDef*",0,0,0,"%struct.PyGetSetDef*",0,0,0,"%struct._typeobject*",0,0,0,"%struct.PyObject*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",
0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct._typeobject*, i32)*",0,0,0,"%struct.PyObject* (%struct._typeobject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"void (i8*)*",0,0,0,"i32 (%struct.PyObject*)*",0,0,0,"%struct.PyObject*",0,0,0,"%struct.PyObject*",0,0,0,"%struct.PyObject*",0,0,0,"%struct.PyObject*",0,0,0,"%struct.PyObject*",0,0,0,"void (%struct.PyObject*)*",
0,0,0,"i32",0,0,0],ALLOC_NORMAL);E=allocate([103,101,116,115,112,110,97,109,40,110,97,109,101,41,32,45,62,32,40,115,112,95,110,97,109,112,44,32,115,112,95,112,119,100,112,44,32,115,112,95,108,115,116,99,104,103,44,32,115,112,95,109,105,110,44,32,115,112,95,109,97,120,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,115,112,95,119,97,114,110,44,32,115,112,95,105,110,97,99,116,44,32,115,112,95,101,120,112,105,114,101,44,32,115,112,95,102,108,97,103,41,10,82,101,116,117,114,110,32,116,
104,101,32,115,104,97,100,111,119,32,112,97,115,115,119,111,114,100,32,100,97,116,97,98,97,115,101,32,101,110,116,114,121,32,102,111,114,32,116,104,101,32,103,105,118,101,110,32,117,115,101,114,32,110,97,109,101,46,10,83,101,101,32,115,112,119,100,46,95,95,100,111,99,95,95,32,102,111,114,32,109,111,114,101,32,111,110,32,115,104,97,100,111,119,32,112,97,115,115,119,111,114,100,32,100,97,116,97,98,97,115,101,32,101,110,116,114,105,101,115,46,0],"i8",ALLOC_NORMAL);N=allocate([115,58,103,101,116,115,
112,110,97,109,0],"i8",ALLOC_NORMAL);Q=allocate([103,101,116,115,112,110,97,109,40,41,58,32,110,97,109,101,32,110,111,116,32,102,111,117,110,100,0],"i8",ALLOC_NORMAL);I=allocate([103,101,116,115,112,97,108,108,40,41,32,45,62,32,108,105,115,116,95,111,102,95,101,110,116,114,105,101,115,10,82,101,116,117,114,110,32,97,32,108,105,115,116,32,111,102,32,97,108,108,32,97,118,97,105,108,97,98,108,101,32,115,104,97,100,111,119,32,112,97,115,115,119,111,114,100,32,100,97,116,97,98,97,115,101,32,101,110,116,
114,105,101,115,44,32,105,110,32,97,114,98,105,116,114,97,114,121,32,111,114,100,101,114,46,10,83,101,101,32,115,112,119,100,46,95,95,100,111,99,95,95,32,102,111,114,32,109,111,114,101,32,111,110,32,115,104,97,100,111,119,32,112,97,115,115,119,111,114,100,32,100,97,116,97,98,97,115,101,32,101,110,116,114,105,101,115,46,0],"i8",ALLOC_NORMAL);J=allocate([103,101,116,115,112,110,97,109,0],"i8",ALLOC_NORMAL);P=allocate([103,101,116,115,112,97,108,108,0],"i8",ALLOC_NORMAL);D=allocate([0,0,0,0,0,0,0,0,
1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],["i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8"],ALLOC_NORMAL);T=allocate([115,112,119,100,0],"i8",ALLOC_NORMAL);L=allocate(1,"i1",ALLOC_NORMAL);
$=allocate([115,116,114,117,99,116,95,115,112,119,100,0],"i8",ALLOC_NORMAL);HEAP[B]=f;HEAP[B+4]=h;HEAP[B+8]=j;HEAP[B+12]=k;HEAP[B+16]=l;HEAP[B+20]=m;HEAP[B+24]=n;HEAP[B+28]=o;HEAP[B+32]=p;HEAP[B+36]=q;HEAP[B+40]=r;HEAP[B+44]=t;HEAP[B+48]=s;HEAP[B+52]=u;HEAP[B+56]=v;HEAP[B+60]=w;HEAP[B+64]=x;HEAP[B+68]=y;HEAP[C]=G;HEAP[C+4]=A;HEAP[C+8]=B;HEAP[D]=J;HEAP[D+4]=g+2;HEAP[D+12]=E;HEAP[D+16]=P;HEAP[D+20]=g+4;HEAP[D+28]=I}var c={arguments:[]};Runtime.QUANTUM_SIZE=4;var d,f,h,j,k,l,m,n,o,p,q,r,t,s,u,v,w,x,
y,B,A,C,G,F,E,N,Q,I,J,P,D,T,L,$;c._initspwd=function(){var a;for(a=-1;;)switch(a){case -1:var b;b=_Py_InitModule4(T,D,d,0,1013);a=b==0?4:1;break;case 1:a=HEAP[L]==0?2:3;break;case 2:_PyStructSequence_InitType(F,C);a=3;break;case 3:HEAP[F]+=1;_PyModule_AddObject(b,$,F);HEAP[L]=1;a=4;break;case 4:return;default:assert(0,"bad label: "+a)}};FUNCTION_TABLE=FUNCTION_TABLE.concat([0,0,function(a,c){var d=STACKTOP;STACKTOP+=4;_memset(d,0,4);var e;for(e=-1;;)switch(e){case -1:var f,g=d,h;e=_PyArg_ParseTuple(c,
N,allocate([g,0,0,0],["i8**",0,0,0],ALLOC_STACK))==0?1:2;break;case 1:f=0;e=5;break;case 2:h=_getspnam(HEAP[g]);e=h==0?3:4;break;case 3:_PyErr_SetString(HEAP[_PyExc_KeyError],Q);f=0;e=5;break;case 4:f=b(h);e=5;break;case 5:return e=f,STACKTOP=d,e;default:assert(0,"bad label: "+e)}},0,function(){var a;for(a=-1;;)switch(a){case -1:var c,d,e,f;d=_PyList_New(0);a=d==0?1:2;break;case 1:c=0;a=15;break;case 2:_setspent();a=13;break;case 3:f=b(e);a=f==0?8:4;break;case 4:a=_PyList_Append(d,f);var g=f;a=a!=
0?5:11;break;case 5:a=g!=0?6:8;break;case 6:HEAP[f]-=1;a=HEAP[f]==0?7:8;break;case 7:FUNCTION_TABLE[HEAP[HEAP[f+4]+24]](f);a=8;break;case 8:HEAP[d]-=1;a=HEAP[d]==0?9:10;break;case 9:FUNCTION_TABLE[HEAP[HEAP[d+4]+24]](d);a=10;break;case 10:_endspent();c=0;a=15;break;case 11:HEAP[f]=HEAP[g]-1;a=HEAP[f]==0?12:13;break;case 12:FUNCTION_TABLE[HEAP[HEAP[f+4]+24]](f);a=13;break;case 13:e=a=_getspent();a=a!=0?3:14;break;case 14:_endspent();c=d;a=15;break;case 15:return c;default:assert(0,"bad label: "+a)}},
0]);c.run=a;a();return c});