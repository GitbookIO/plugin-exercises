(function(g){function e(a,b){var c=STACKTOP;STACKTOP+=8;_memset(c,0,8);var d;for(d=-1;;)switch(d){case -1:var e,f,g,h=c,j=c+4,k,l;e=a;f=b;d=_PyString_AsStringAndSize(e,h,j)!=0?1:2;break;case 1:g=0;d=15;break;case 2:k=0;d=f!=1?5:3;break;case 3:l=HEAP[j];d=8;break;case 4:k+=1;d=5;break;case 5:d=k>=HEAP[j]?7:6;break;case 6:d=___ctype_b_loc();d=(HEAP[HEAP[d]+2*HEAP[HEAP[h]+k]]&8192)!=0?4:7;break;case 7:l=HEAP[j];d=f!=0?8:11;break;case 8:l-=1;d=
l<k?10:9;break;case 9:d=___ctype_b_loc();d=(HEAP[HEAP[d]+2*HEAP[HEAP[h]+l]]&8192)!=0?8:10;break;case 10:l+=1;d=11;break;case 11:d=k!=0?14:12;break;case 12:d=l!=HEAP[j]?14:13;break;case 13:HEAP[e]+=1;g=e;d=15;break;case 14:g=_PyString_FromStringAndSize(HEAP[h]+k,l-k);d=15;break;case 15:return e=g,STACKTOP=c,e;default:assert(0,"bad label: "+d)}}function b(a,b,c,d){var e;for(e=-1;;)switch(e){case -1:var f,g,h,j,k,l;f=a;g=b;h=c;j=d;g-=j;l=0;e=6;break;case 1:e=HEAP[f+l]==HEAP[h]?2:5;break;case 2:e=j==
1?4:3;break;case 3:e=_memcmp(f+(l+1),h+1,j-1)==0?4:5;break;case 4:k=l;e=8;break;case 5:l+=1;e=6;break;case 6:e=l<=g?1:7;break;case 7:k=-1;e=8;break;case 8:return a=k;default:assert(0,"bad label: "+e)}}function a(){d=allocate([67,111,109,109,111,110,32,115,116,114,105,110,103,32,109,97,110,105,112,117,108,97,116,105,111,110,115,44,32,111,112,116,105,109,105,122,101,100,32,102,111,114,32,115,112,101,101,100,46,10,10,65,108,119,97,121,115,32,117,115,101,32,34,105,109,112,111,114,116,32,115,116,114,105,
110,103,34,32,114,97,116,104,101,114,32,116,104,97,110,32,114,101,102,101,114,101,110,99,105,110,103,10,116,104,105,115,32,109,111,100,117,108,101,32,100,105,114,101,99,116,108,121,46,0],"i8",ALLOC_NORMAL);f=allocate([115,112,108,105,116,40,115,32,91,44,115,101,112,32,91,44,109,97,120,115,112,108,105,116,93,93,41,32,45,62,32,108,105,115,116,32,111,102,32,115,116,114,105,110,103,115,10,115,112,108,105,116,102,105,101,108,100,115,40,115,32,91,44,115,101,112,32,91,44,109,97,120,115,112,108,105,116,93,
93,41,32,45,62,32,108,105,115,116,32,111,102,32,115,116,114,105,110,103,115,10,10,82,101,116,117,114,110,32,97,32,108,105,115,116,32,111,102,32,116,104,101,32,119,111,114,100,115,32,105,110,32,116,104,101,32,115,116,114,105,110,103,32,115,44,32,117,115,105,110,103,32,115,101,112,32,97,115,32,116,104,101,10,100,101,108,105,109,105,116,101,114,32,115,116,114,105,110,103,46,32,32,73,102,32,109,97,120,115,112,108,105,116,32,105,115,32,110,111,110,122,101,114,111,44,32,115,112,108,105,116,115,32,105,110,
116,111,32,97,116,32,109,111,115,116,10,109,97,120,115,112,108,105,116,32,119,111,114,100,115,46,32,32,73,102,32,115,101,112,32,105,115,32,110,111,116,32,115,112,101,99,105,102,105,101,100,44,32,97,110,121,32,119,104,105,116,101,115,112,97,99,101,32,115,116,114,105,110,103,10,105,115,32,97,32,115,101,112,97,114,97,116,111,114,46,32,32,77,97,120,115,112,108,105,116,32,100,101,102,97,117,108,116,115,32,116,111,32,48,46,10,10,40,115,112,108,105,116,32,97,110,100,32,115,112,108,105,116,102,105,101,108,
100,115,32,97,114,101,32,115,121,110,111,110,121,109,111,117,115,41,0],"i8",ALLOC_NORMAL);h=allocate([115,116,114,111,112,32,102,117,110,99,116,105,111,110,115,32,97,114,101,32,111,98,115,111,108,101,116,101,59,32,117,115,101,32,115,116,114,105,110,103,32,109,101,116,104,111,100,115,0],"i8",ALLOC_NORMAL);j=allocate([116,35,124,122,35,110,58,115,112,108,105,116,0],"i8",ALLOC_NORMAL);k=allocate([101,109,112,116,121,32,115,101,112,97,114,97,116,111,114,0],"i8",ALLOC_NORMAL);l=allocate([106,111,105,110,
40,108,105,115,116,32,91,44,115,101,112,93,41,32,45,62,32,115,116,114,105,110,103,10,106,111,105,110,102,105,101,108,100,115,40,108,105,115,116,32,91,44,115,101,112,93,41,32,45,62,32,115,116,114,105,110,103,10,10,82,101,116,117,114,110,32,97,32,115,116,114,105,110,103,32,99,111,109,112,111,115,101,100,32,111,102,32,116,104,101,32,119,111,114,100,115,32,105,110,32,108,105,115,116,44,32,119,105,116,104,10,105,110,116,101,114,118,101,110,105,110,103,32,111,99,99,117,114,114,101,110,99,101,115,32,111,
102,32,115,101,112,46,32,32,83,101,112,32,100,101,102,97,117,108,116,115,32,116,111,32,97,32,115,105,110,103,108,101,10,115,112,97,99,101,46,10,10,40,106,111,105,110,32,97,110,100,32,106,111,105,110,102,105,101,108,100,115,32,97,114,101,32,115,121,110,111,110,121,109,111,117,115,41,0],"i8",ALLOC_NORMAL);m=allocate([79,124,116,35,58,106,111,105,110,0],"i8",ALLOC_NORMAL);n=allocate([32,0],"i8",ALLOC_NORMAL);o=allocate([102,105,114,115,116,32,97,114,103,117,109,101,110,116,32,109,117,115,116,32,98,101,
32,115,101,113,117,101,110,99,101,32,111,102,32,115,116,114,105,110,103,115,0],"i8",ALLOC_NORMAL);p=allocate([105,110,112,117,116,32,116,111,111,32,108,111,110,103,0],"i8",ALLOC_NORMAL);q=allocate([102,105,114,115,116,32,97,114,103,117,109,101,110,116,32,109,117,115,116,32,98,101,32,97,32,115,101,113,117,101,110,99,101,0],"i8",ALLOC_NORMAL);r=allocate([102,105,110,100,40,115,44,32,115,117,98,32,91,44,115,116,97,114,116,32,91,44,101,110,100,93,93,41,32,45,62,32,105,110,10,10,82,101,116,117,114,110,
32,116,104,101,32,108,111,119,101,115,116,32,105,110,100,101,120,32,105,110,32,115,32,119,104,101,114,101,32,115,117,98,115,116,114,105,110,103,32,115,117,98,32,105,115,32,102,111,117,110,100,44,10,115,117,99,104,32,116,104,97,116,32,115,117,98,32,105,115,32,99,111,110,116,97,105,110,101,100,32,119,105,116,104,105,110,32,115,91,115,116,97,114,116,44,101,110,100,93,46,32,32,79,112,116,105,111,110,97,108,10,97,114,103,117,109,101,110,116,115,32,115,116,97,114,116,32,97,110,100,32,101,110,100,32,97,
114,101,32,105,110,116,101,114,112,114,101,116,101,100,32,97,115,32,105,110,32,115,108,105,99,101,32,110,111,116,97,116,105,111,110,46,10,10,82,101,116,117,114,110,32,45,49,32,111,110,32,102,97,105,108,117,114,101,46,0],"i8",ALLOC_NORMAL);t=allocate([116,35,116,35,124,110,110,58,102,105,110,100,0],"i8",ALLOC_NORMAL);s=allocate([114,102,105,110,100,40,115,44,32,115,117,98,32,91,44,115,116,97,114,116,32,91,44,101,110,100,93,93,41,32,45,62,32,105,110,116,10,10,82,101,116,117,114,110,32,116,104,101,32,
104,105,103,104,101,115,116,32,105,110,100,101,120,32,105,110,32,115,32,119,104,101,114,101,32,115,117,98,115,116,114,105,110,103,32,115,117,98,32,105,115,32,102,111,117,110,100,44,10,115,117,99,104,32,116,104,97,116,32,115,117,98,32,105,115,32,99,111,110,116,97,105,110,101,100,32,119,105,116,104,105,110,32,115,91,115,116,97,114,116,44,101,110,100,93,46,32,32,79,112,116,105,111,110,97,108,10,97,114,103,117,109,101,110,116,115,32,115,116,97,114,116,32,97,110,100,32,101,110,100,32,97,114,101,32,105,
110,116,101,114,112,114,101,116,101,100,32,97,115,32,105,110,32,115,108,105,99,101,32,110,111,116,97,116,105,111,110,46,10,10,82,101,116,117,114,110,32,45,49,32,111,110,32,102,97,105,108,117,114,101,46,0],"i8",ALLOC_NORMAL);u=allocate([116,35,116,35,124,110,110,58,114,102,105,110,100,0],"i8",ALLOC_NORMAL);v=allocate([115,116,114,105,112,40,115,41,32,45,62,32,115,116,114,105,110,103,10,10,82,101,116,117,114,110,32,97,32,99,111,112,121,32,111,102,32,116,104,101,32,115,116,114,105,110,103,32,115,32,
119,105,116,104,32,108,101,97,100,105,110,103,32,97,110,100,32,116,114,97,105,108,105,110,103,10,119,104,105,116,101,115,112,97,99,101,32,114,101,109,111,118,101,100,46,0],"i8",ALLOC_NORMAL);w=allocate([108,115,116,114,105,112,40,115,41,32,45,62,32,115,116,114,105,110,103,10,10,82,101,116,117,114,110,32,97,32,99,111,112,121,32,111,102,32,116,104,101,32,115,116,114,105,110,103,32,115,32,119,105,116,104,32,108,101,97,100,105,110,103,32,119,104,105,116,101,115,112,97,99,101,32,114,101,109,111,118,101,
100,46,0],"i8",ALLOC_NORMAL);x=allocate([114,115,116,114,105,112,40,115,41,32,45,62,32,115,116,114,105,110,103,10,10,82,101,116,117,114,110,32,97,32,99,111,112,121,32,111,102,32,116,104,101,32,115,116,114,105,110,103,32,115,32,119,105,116,104,32,116,114,97,105,108,105,110,103,32,119,104,105,116,101,115,112,97,99,101,32,114,101,109,111,118,101,100,46,0],"i8",ALLOC_NORMAL);y=allocate([108,111,119,101,114,40,115,41,32,45,62,32,115,116,114,105,110,103,10,10,82,101,116,117,114,110,32,97,32,99,111,112,
121,32,111,102,32,116,104,101,32,115,116,114,105,110,103,32,115,32,99,111,110,118,101,114,116,101,100,32,116,111,32,108,111,119,101,114,99,97,115,101,46,0],"i8",ALLOC_NORMAL);B=allocate([117,112,112,101,114,40,115,41,32,45,62,32,115,116,114,105,110,103,10,10,82,101,116,117,114,110,32,97,32,99,111,112,121,32,111,102,32,116,104,101,32,115,116,114,105,110,103,32,115,32,99,111,110,118,101,114,116,101,100,32,116,111,32,117,112,112,101,114,99,97,115,101,46,0],"i8",ALLOC_NORMAL);A=allocate([99,97,112,105,
116,97,108,105,122,101,40,115,41,32,45,62,32,115,116,114,105,110,103,10,10,82,101,116,117,114,110,32,97,32,99,111,112,121,32,111,102,32,116,104,101,32,115,116,114,105,110,103,32,115,32,119,105,116,104,32,111,110,108,121,32,105,116,115,32,102,105,114,115,116,32,99,104,97,114,97,99,116,101,114,10,99,97,112,105,116,97,108,105,122,101,100,46,0],"i8",ALLOC_NORMAL);C=allocate([101,120,112,97,110,100,116,97,98,115,40,115,116,114,105,110,103,44,32,91,116,97,98,115,105,122,101,93,41,32,45,62,32,115,116,114,
105,110,103,10,10,69,120,112,97,110,100,32,116,97,98,115,32,105,110,32,97,32,115,116,114,105,110,103,44,32,105,46,101,46,32,114,101,112,108,97,99,101,32,116,104,101,109,32,98,121,32,111,110,101,32,111,114,32,109,111,114,101,32,115,112,97,99,101,115,44,10,100,101,112,101,110,100,105,110,103,32,111,110,32,116,104,101,32,99,117,114,114,101,110,116,32,99,111,108,117,109,110,32,97,110,100,32,116,104,101,32,103,105,118,101,110,32,116,97,98,32,115,105,122,101,32,40,100,101,102,97,117,108,116,32,56,41,46,
10,84,104,101,32,99,111,108,117,109,110,32,110,117,109,98,101,114,32,105,115,32,114,101,115,101,116,32,116,111,32,122,101,114,111,32,97,102,116,101,114,32,101,97,99,104,32,110,101,119,108,105,110,101,32,111,99,99,117,114,114,105,110,103,32,105,110,32,116,104,101,10,115,116,114,105,110,103,46,32,32,84,104,105,115,32,100,111,101,115,110,39,116,32,117,110,100,101,114,115,116,97,110,100,32,111,116,104,101,114,32,110,111,110,45,112,114,105,110,116,105,110,103,32,99,104,97,114,97,99,116,101,114,115,46,
0],"i8",ALLOC_NORMAL);G=allocate([115,35,124,105,58,101,120,112,97,110,100,116,97,98,115,0],"i8",ALLOC_NORMAL);F=allocate([116,97,98,115,105,122,101,32,109,117,115,116,32,98,101,32,97,116,32,108,101,97,115,116,32,49,0],"i8",ALLOC_NORMAL);E=allocate([110,101,119,32,115,116,114,105,110,103,32,105,115,32,116,111,111,32,108,111,110,103,0],"i8",ALLOC_NORMAL);N=allocate([99,111,117,110,116,40,115,44,32,115,117,98,91,44,32,115,116,97,114,116,91,44,32,101,110,100,93,93,41,32,45,62,32,105,110,116,10,10,82,
101,116,117,114,110,32,116,104,101,32,110,117,109,98,101,114,32,111,102,32,111,99,99,117,114,114,101,110,99,101,115,32,111,102,32,115,117,98,115,116,114,105,110,103,32,115,117,98,32,105,110,32,115,116,114,105,110,103,10,115,91,115,116,97,114,116,58,101,110,100,93,46,32,32,79,112,116,105,111,110,97,108,32,97,114,103,117,109,101,110,116,115,32,115,116,97,114,116,32,97,110,100,32,101,110,100,32,97,114,101,10,105,110,116,101,114,112,114,101,116,101,100,32,97,115,32,105,110,32,115,108,105,99,101,32,110,
111,116,97,116,105,111,110,46,0],"i8",ALLOC_NORMAL);Q=allocate([116,35,116,35,124,110,110,58,99,111,117,110,116,0],"i8",ALLOC_NORMAL);I=allocate([115,119,97,112,99,97,115,101,40,115,41,32,45,62,32,115,116,114,105,110,103,10,10,82,101,116,117,114,110,32,97,32,99,111,112,121,32,111,102,32,116,104,101,32,115,116,114,105,110,103,32,115,32,119,105,116,104,32,117,112,112,101,114,32,99,97,115,101,32,99,104,97,114,97,99,116,101,114,115,10,99,111,110,118,101,114,116,101,100,32,116,111,32,108,111,119,101,114,
99,97,115,101,32,97,110,100,32,118,105,99,101,32,118,101,114,115,97,46,0],"i8",ALLOC_NORMAL);J=allocate([97,116,111,105,40,115,32,91,44,98,97,115,101,93,41,32,45,62,32,105,110,116,10,10,82,101,116,117,114,110,32,116,104,101,32,105,110,116,101,103,101,114,32,114,101,112,114,101,115,101,110,116,101,100,32,98,121,32,116,104,101,32,115,116,114,105,110,103,32,115,32,105,110,32,116,104,101,32,103,105,118,101,110,10,98,97,115,101,44,32,119,104,105,99,104,32,100,101,102,97,117,108,116,115,32,116,111,32,49,
48,46,32,32,84,104,101,32,115,116,114,105,110,103,32,115,32,109,117,115,116,32,99,111,110,115,105,115,116,32,111,102,32,111,110,101,10,111,114,32,109,111,114,101,32,100,105,103,105,116,115,44,32,112,111,115,115,105,98,108,121,32,112,114,101,99,101,100,101,100,32,98,121,32,97,32,115,105,103,110,46,32,32,73,102,32,98,97,115,101,32,105,115,32,48,44,32,105,116,10,105,115,32,99,104,111,115,101,110,32,102,114,111,109,32,116,104,101,32,108,101,97,100,105,110,103,32,99,104,97,114,97,99,116,101,114,115,32,
111,102,32,115,44,32,48,32,102,111,114,32,111,99,116,97,108,44,32,48,120,32,111,114,10,48,88,32,102,111,114,32,104,101,120,97,100,101,99,105,109,97,108,46,32,32,73,102,32,98,97,115,101,32,105,115,32,49,54,44,32,97,32,112,114,101,99,101,100,105,110,103,32,48,120,32,111,114,32,48,88,32,105,115,10,97,99,99,101,112,116,101,100,46,0],"i8",ALLOC_NORMAL);P=allocate([115,124,105,58,97,116,111,105,0],"i8",ALLOC_NORMAL);D=allocate([105,110,118,97,108,105,100,32,98,97,115,101,32,102,111,114,32,97,116,111,105,
40,41,0],"i8",ALLOC_NORMAL);T=allocate([105,110,118,97,108,105,100,32,108,105,116,101,114,97,108,32,102,111,114,32,97,116,111,105,40,41,58,32,37,46,50,48,48,115,0],"i8",ALLOC_NORMAL);L=allocate([97,116,111,105,40,41,32,108,105,116,101,114,97,108,32,116,111,111,32,108,97,114,103,101,58,32,37,46,50,48,48,115,0],"i8",ALLOC_NORMAL);$=allocate([97,116,111,108,40,115,32,91,44,98,97,115,101,93,41,32,45,62,32,108,111,110,103,10,10,82,101,116,117,114,110,32,116,104,101,32,108,111,110,103,32,105,110,116,101,
103,101,114,32,114,101,112,114,101,115,101,110,116,101,100,32,98,121,32,116,104,101,32,115,116,114,105,110,103,32,115,32,105,110,32,116,104,101,10,103,105,118,101,110,32,98,97,115,101,44,32,119,104,105,99,104,32,100,101,102,97,117,108,116,115,32,116,111,32,49,48,46,32,32,84,104,101,32,115,116,114,105,110,103,32,115,32,109,117,115,116,32,99,111,110,115,105,115,116,10,111,102,32,111,110,101,32,111,114,32,109,111,114,101,32,100,105,103,105,116,115,44,32,112,111,115,115,105,98,108,121,32,112,114,101,
99,101,100,101,100,32,98,121,32,97,32,115,105,103,110,46,32,32,73,102,32,98,97,115,101,10,105,115,32,48,44,32,105,116,32,105,115,32,99,104,111,115,101,110,32,102,114,111,109,32,116,104,101,32,108,101,97,100,105,110,103,32,99,104,97,114,97,99,116,101,114,115,32,111,102,32,115,44,32,48,32,102,111,114,10,111,99,116,97,108,44,32,48,120,32,111,114,32,48,88,32,102,111,114,32,104,101,120,97,100,101,99,105,109,97,108,46,32,32,73,102,32,98,97,115,101,32,105,115,32,49,54,44,32,97,32,112,114,101,99,101,100,
105,110,103,10,48,120,32,111,114,32,48,88,32,105,115,32,97,99,99,101,112,116,101,100,46,32,32,65,32,116,114,97,105,108,105,110,103,32,76,32,111,114,32,108,32,105,115,32,110,111,116,32,97,99,99,101,112,116,101,100,44,10,117,110,108,101,115,115,32,98,97,115,101,32,105,115,32,48,46,0],"i8",ALLOC_NORMAL);R=allocate([115,124,105,58,97,116,111,108,0],"i8",ALLOC_NORMAL);K=allocate([105,110,118,97,108,105,100,32,98,97,115,101,32,102,111,114,32,97,116,111,108,40,41,0],"i8",ALLOC_NORMAL);H=allocate([101,109,
112,116,121,32,115,116,114,105,110,103,32,102,111,114,32,97,116,111,108,40,41,0],"i8",ALLOC_NORMAL);S=allocate([105,110,118,97,108,105,100,32,108,105,116,101,114,97,108,32,102,111,114,32,97,116,111,108,40,41,58,32,37,46,50,48,48,115,0],"i8",ALLOC_NORMAL);U=allocate([97,116,111,102,40,115,41,32,45,62,32,102,108,111,97,116,10,10,82,101,116,117,114,110,32,116,104,101,32,102,108,111,97,116,105,110,103,32,112,111,105,110,116,32,110,117,109,98,101,114,32,114,101,112,114,101,115,101,110,116,101,100,32,98,
121,32,116,104,101,32,115,116,114,105,110,103,32,115,46,0],"i8",ALLOC_NORMAL);z=allocate([115,58,97,116,111,102,0],"i8",ALLOC_NORMAL);aa=allocate([101,109,112,116,121,32,115,116,114,105,110,103,32,102,111,114,32,97,116,111,102,40,41,0],"i8",ALLOC_NORMAL);ja=allocate([105,110,118,97,108,105,100,32,108,105,116,101,114,97,108,32,102,111,114,32,97,116,111,102,40,41,58,32,37,46,50,48,48,115,0],"i8",ALLOC_NORMAL);la=allocate([109,97,107,101,116,114,97,110,115,40,102,114,109,44,32,116,111,41,32,45,62,32,
115,116,114,105,110,103,10,10,82,101,116,117,114,110,32,97,32,116,114,97,110,115,108,97,116,105,111,110,32,116,97,98,108,101,32,40,97,32,115,116,114,105,110,103,32,111,102,32,50,53,54,32,98,121,116,101,115,32,108,111,110,103,41,10,115,117,105,116,97,98,108,101,32,102,111,114,32,117,115,101,32,105,110,32,115,116,114,105,110,103,46,116,114,97,110,115,108,97,116,101,46,32,32,84,104,101,32,115,116,114,105,110,103,115,32,102,114,109,32,97,110,100,32,116,111,10,109,117,115,116,32,98,101,32,111,102,32,116,
104,101,32,115,97,109,101,32,108,101,110,103,116,104,46,0],"i8",ALLOC_NORMAL);da=allocate([116,35,116,35,58,109,97,107,101,116,114,97,110,115,0],"i8",ALLOC_NORMAL);Ka=allocate([109,97,107,101,116,114,97,110,115,32,97,114,103,117,109,101,110,116,115,32,109,117,115,116,32,104,97,118,101,32,115,97,109,101,32,108,101,110,103,116,104,0],"i8",ALLOC_NORMAL);Ma=allocate([116,114,97,110,115,108,97,116,101,40,115,44,116,97,98,108,101,32,91,44,100,101,108,101,116,101,99,104,97,114,115,93,41,32,45,62,32,115,
116,114,105,110,103,10,10,82,101,116,117,114,110,32,97,32,99,111,112,121,32,111,102,32,116,104,101,32,115,116,114,105,110,103,32,115,44,32,119,104,101,114,101,32,97,108,108,32,99,104,97,114,97,99,116,101,114,115,32,111,99,99,117,114,114,105,110,103,10,105,110,32,116,104,101,32,111,112,116,105,111,110,97,108,32,97,114,103,117,109,101,110,116,32,100,101,108,101,116,101,99,104,97,114,115,32,97,114,101,32,114,101,109,111,118,101,100,44,32,97,110,100,32,116,104,101,10,114,101,109,97,105,110,105,110,103,
32,99,104,97,114,97,99,116,101,114,115,32,104,97,118,101,32,98,101,101,110,32,109,97,112,112,101,100,32,116,104,114,111,117,103,104,32,116,104,101,32,103,105,118,101,110,10,116,114,97,110,115,108,97,116,105,111,110,32,116,97,98,108,101,44,32,119,104,105,99,104,32,109,117,115,116,32,98,101,32,97,32,115,116,114,105,110,103,32,111,102,32,108,101,110,103,116,104,32,50,53,54,46,0],"i8",ALLOC_NORMAL);wa=allocate([83,116,35,124,116,35,58,116,114,97,110,115,108,97,116,101,0],"i8",ALLOC_NORMAL);ib=allocate([116,
114,97,110,115,108,97,116,105,111,110,32,116,97,98,108,101,32,109,117,115,116,32,98,101,32,50,53,54,32,99,104,97,114,97,99,116,101,114,115,32,108,111,110,103,0],"i8",ALLOC_NORMAL);cb=allocate([110,101,119,95,108,101,110,32,62,32,48,0],"i8",ALLOC_NORMAL);db=allocate([46,46,47,99,112,121,116,104,111,110,47,77,111,100,117,108,101,115,47,115,116,114,111,112,109,111,100,117,108,101,46,99,0],"i8",ALLOC_NORMAL);Da=allocate([109,121,109,101,109,114,101,112,108,97,99,101,0],"i8",ALLOC_NORMAL);gb=allocate([114,
101,112,108,97,99,101,32,40,115,116,114,44,32,111,108,100,44,32,110,101,119,91,44,32,109,97,120,115,112,108,105,116,93,41,32,45,62,32,115,116,114,105,110,103,10,10,82,101,116,117,114,110,32,97,32,99,111,112,121,32,111,102,32,115,116,114,105,110,103,32,115,116,114,32,119,105,116,104,32,97,108,108,32,111,99,99,117,114,114,101,110,99,101,115,32,111,102,32,115,117,98,115,116,114,105,110,103,10,111,108,100,32,114,101,112,108,97,99,101,100,32,98,121,32,110,101,119,46,32,73,102,32,116,104,101,32,111,112,
116,105,111,110,97,108,32,97,114,103,117,109,101,110,116,32,109,97,120,115,112,108,105,116,32,105,115,10,103,105,118,101,110,44,32,111,110,108,121,32,116,104,101,32,102,105,114,115,116,32,109,97,120,115,112,108,105,116,32,111,99,99,117,114,114,101,110,99,101,115,32,97,114,101,32,114,101,112,108,97,99,101,100,46,0],"i8",ALLOC_NORMAL);Xa=allocate([116,35,116,35,116,35,124,110,58,114,101,112,108,97,99,101,0],"i8",ALLOC_NORMAL);Ca=allocate([101,109,112,116,121,32,112,97,116,116,101,114,110,32,115,116,
114,105,110,103,0],"i8",ALLOC_NORMAL);Za=allocate([97,116,111,102,0],"i8",ALLOC_NORMAL);Va=allocate([97,116,111,105,0],"i8",ALLOC_NORMAL);Ga=allocate([97,116,111,108,0],"i8",ALLOC_NORMAL);ha=allocate([99,97,112,105,116,97,108,105,122,101,0],"i8",ALLOC_NORMAL);Na=allocate([99,111,117,110,116,0],"i8",ALLOC_NORMAL);jb=allocate([101,120,112,97,110,100,116,97,98,115,0],"i8",ALLOC_NORMAL);hb=allocate([102,105,110,100,0],"i8",ALLOC_NORMAL);Qa=allocate([106,111,105,110,0],"i8",ALLOC_NORMAL);Ha=allocate([106,
111,105,110,102,105,101,108,100,115,0],"i8",ALLOC_NORMAL);Ra=allocate([108,115,116,114,105,112,0],"i8",ALLOC_NORMAL);Ia=allocate([108,111,119,101,114,0],"i8",ALLOC_NORMAL);Fa=allocate([109,97,107,101,116,114,97,110,115,0],"i8",ALLOC_NORMAL);$a=allocate([114,101,112,108,97,99,101,0],"i8",ALLOC_NORMAL);Wa=allocate([114,102,105,110,100,0],"i8",ALLOC_NORMAL);Y=allocate([114,115,116,114,105,112,0],"i8",ALLOC_NORMAL);kb=allocate([115,112,108,105,116,0],"i8",ALLOC_NORMAL);ra=allocate([115,112,108,105,116,
102,105,101,108,100,115,0],"i8",ALLOC_NORMAL);Ta=allocate([115,116,114,105,112,0],"i8",ALLOC_NORMAL);ia=allocate([115,119,97,112,99,97,115,101,0],"i8",ALLOC_NORMAL);ba=allocate([116,114,97,110,115,108,97,116,101,0],"i8",ALLOC_NORMAL);Ya=allocate([117,112,112,101,114,0],"i8",ALLOC_NORMAL);ta=allocate([0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0],["i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,
"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",
0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,
0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",
0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8"],ALLOC_NORMAL);O=allocate([115,116,114,111,112,0],"i8",ALLOC_NORMAL);wb=allocate([119,104,105,116,101,115,112,97,99,101,0],"i8",ALLOC_NORMAL);bb=allocate([108,111,119,101,114,99,97,115,101,0],"i8",ALLOC_NORMAL);vb=allocate([117,112,112,101,114,99,97,115,
101,0],"i8",ALLOC_NORMAL);HEAP[ta]=Za;HEAP[ta+4]=g+2;HEAP[ta+12]=U;HEAP[ta+16]=Va;HEAP[ta+20]=g+4;HEAP[ta+28]=J;HEAP[ta+32]=Ga;HEAP[ta+36]=g+6;HEAP[ta+44]=$;HEAP[ta+48]=ha;HEAP[ta+52]=g+8;HEAP[ta+60]=A;HEAP[ta+64]=Na;HEAP[ta+68]=g+10;HEAP[ta+76]=N;HEAP[ta+80]=jb;HEAP[ta+84]=g+12;HEAP[ta+92]=C;HEAP[ta+96]=hb;HEAP[ta+100]=g+14;HEAP[ta+108]=r;HEAP[ta+112]=Qa;HEAP[ta+116]=g+16;HEAP[ta+124]=l;HEAP[ta+128]=Ha;HEAP[ta+132]=g+16;HEAP[ta+140]=l;HEAP[ta+144]=Ra;HEAP[ta+148]=g+18;HEAP[ta+156]=w;HEAP[ta+160]=
Ia;HEAP[ta+164]=g+20;HEAP[ta+172]=y;HEAP[ta+176]=Fa;HEAP[ta+180]=g+22;HEAP[ta+188]=la;HEAP[ta+192]=$a;HEAP[ta+196]=g+24;HEAP[ta+204]=gb;HEAP[ta+208]=Wa;HEAP[ta+212]=g+26;HEAP[ta+220]=s;HEAP[ta+224]=Y;HEAP[ta+228]=g+28;HEAP[ta+236]=x;HEAP[ta+240]=kb;HEAP[ta+244]=g+30;HEAP[ta+252]=f;HEAP[ta+256]=ra;HEAP[ta+260]=g+30;HEAP[ta+268]=f;HEAP[ta+272]=Ta;HEAP[ta+276]=g+32;HEAP[ta+284]=v;HEAP[ta+288]=ia;HEAP[ta+292]=g+34;HEAP[ta+300]=I;HEAP[ta+304]=ba;HEAP[ta+308]=g+36;HEAP[ta+316]=Ma;HEAP[ta+320]=Ya;HEAP[ta+
324]=g+38;HEAP[ta+332]=B}var c={arguments:[]};Runtime.QUANTUM_SIZE=4;var d,f,h,j,k,l,m,n,o,p,q,r,t,s,u,v,w,x,y,B,A,C,G,F,E,N,Q,I,J,P,D,T,L,$,R,K,H,S,U,z,aa,ja,la,da,Ka,Ma,wa,ib,cb,db,Da,gb,Xa,Ca,Za,Va,Ga,ha,Na,jb,hb,Qa,Ha,Ra,Ia,Fa,$a,Wa,Y,kb,ra,Ta,ia,ba,Ya,ta,O,wb,bb,vb;c._initstrop=function(){var a=STACKTOP;STACKTOP+=256;_memset(a,0,256);var b;for(b=-1;;)switch(b){case -1:var c,e,f=a,g,h;c=_Py_InitModule4(O,ta,d,0,1013);b=c==0?19:1;break;case 1:g=h=0;b=2;break;case 2:b=___ctype_b_loc();b=(HEAP[HEAP[b]+
2*g]&8192)!=0?3:4;break;case 3:HEAP[f+h]=g&255;h+=1;b=4;break;case 4:g=b=g+1;b=b<=255?2:5;break;case 5:e=_PyString_FromStringAndSize(f,h);b=e!=0?6:7;break;case 6:_PyModule_AddObject(c,wb,e);b=7;break;case 7:g=h=0;b=8;break;case 8:b=___ctype_b_loc();b=(HEAP[HEAP[b]+2*g]&512)!=0?9:10;break;case 9:HEAP[f+h]=g&255;h+=1;b=10;break;case 10:g=b=g+1;b=b<=255?8:11;break;case 11:e=_PyString_FromStringAndSize(f,h);b=e!=0?12:13;break;case 12:_PyModule_AddObject(c,bb,e);b=13;break;case 13:g=h=0;b=14;break;case 14:b=
___ctype_b_loc();b=(HEAP[HEAP[b]+2*g]&256)!=0?15:16;break;case 15:HEAP[f+h]=g&255;h+=1;b=16;break;case 16:g=b=g+1;b=b<=255?14:17;break;case 17:e=_PyString_FromStringAndSize(f,h);b=e!=0?18:19;break;case 18:_PyModule_AddObject(c,vb,e);b=19;break;case 19:STACKTOP=a;return;default:assert(0,"bad label: "+b)}};FUNCTION_TABLE=FUNCTION_TABLE.concat([0,0,function(a,b){var c=STACKTOP;STACKTOP+=264;_memset(c,0,264);var d;for(d=-1;;)switch(d){case -1:var e,f,g=c,j=c+4,k,l=c+8;e=b;d=_PyErr_WarnEx(HEAP[_PyExc_DeprecationWarning],
h,1)!=0?1:2;break;case 1:f=0;d=18;break;case 2:d=__PyArg_ParseTuple_SizeT(e,z,allocate([g,0,0,0],["i8**",0,0,0],ALLOC_STACK))==0?3:5;break;case 3:f=0;d=18;break;case 4:HEAP[g]+=1;d=5;break;case 5:d=HEAP[HEAP[g]]==0?7:6;break;case 6:d=___ctype_b_loc();d=(HEAP[HEAP[d]+2*HEAP[HEAP[g]]]&8192)!=0?4:7;break;case 7:d=HEAP[HEAP[g]]==0?8:9;break;case 8:_PyErr_SetString(HEAP[_PyExc_ValueError],aa);f=0;d=18;break;case 9:k=_PyOS_string_to_double(HEAP[g],j,HEAP[_PyExc_OverflowError]);d=k==-1?10:13;break;case 10:d=
_PyErr_Occurred()!=0?11:13;break;case 11:f=0;d=18;break;case 12:HEAP[j]+=1;d=13;break;case 13:d=HEAP[HEAP[j]]==0?15:14;break;case 14:d=___ctype_b_loc();d=(HEAP[HEAP[d]+2*HEAP[HEAP[j]]]&8192)!=0?12:15;break;case 15:d=HEAP[HEAP[j]]!=0?16:17;break;case 16:_PyOS_snprintf(l,256,ja,allocate([HEAP[g],0,0,0],["i8*",0,0,0],ALLOC_STACK));_PyErr_SetString(HEAP[_PyExc_ValueError],l);f=0;d=18;break;case 17:f=_PyFloat_FromDouble(k);d=18;break;case 18:return e=f,STACKTOP=c,e;default:assert(0,"bad label: "+d)}},
0,function(a,b){var c=STACKTOP;STACKTOP+=268;_memset(c,0,268);var d;for(d=-1;;)switch(d){case -1:var e,f,g=c,j=c+4,k=c+8,l,m=c+12;e=b;HEAP[k]=10;d=_PyErr_WarnEx(HEAP[_PyExc_DeprecationWarning],h,1)!=0?1:2;break;case 1:f=0;d=23;break;case 2:d=__PyArg_ParseTuple_SizeT(e,P,allocate([g,0,0,0,k,0,0,0],["i8**",0,0,0,"i32*",0,0,0],ALLOC_STACK))==0?3:4;break;case 3:f=0;d=23;break;case 4:d=HEAP[k]!=0&HEAP[k]<=1|HEAP[k]>36?5:7;break;case 5:_PyErr_SetString(HEAP[_PyExc_ValueError],D);f=0;d=23;break;case 6:HEAP[g]+=
1;d=7;break;case 7:d=HEAP[HEAP[g]]==0?9:8;break;case 8:d=___ctype_b_loc();d=(HEAP[HEAP[d]+2*HEAP[HEAP[g]]]&8192)!=0?6:9;break;case 9:d=___errno_location();HEAP[d]=0;d=HEAP[k]!=0?12:10;break;case 10:d=HEAP[HEAP[g]]!=48?12:11;break;case 11:l=_PyOS_strtoul(HEAP[g],j,HEAP[k]);d=13;break;case 12:l=_PyOS_strtol(HEAP[g],j,HEAP[k]);d=13;break;case 13:d=HEAP[j]==HEAP[g]?19:14;break;case 14:d=___ctype_b_loc();d=(HEAP[HEAP[d]+2*HEAP[HEAP[j]+-1]]&8)==0?19:16;break;case 15:HEAP[j]+=1;d=16;break;case 16:d=HEAP[HEAP[j]]==
0?18:17;break;case 17:d=___ctype_b_loc();d=(HEAP[HEAP[d]+2*HEAP[HEAP[j]]]&8192)!=0?15:18;break;case 18:d=HEAP[HEAP[j]]!=0?19:20;break;case 19:_PyOS_snprintf(m,256,T,allocate([HEAP[g],0,0,0],["i8*",0,0,0],ALLOC_STACK));_PyErr_SetString(HEAP[_PyExc_ValueError],m);f=0;d=23;break;case 20:d=___errno_location();d=HEAP[d]!=0?21:22;break;case 21:_PyOS_snprintf(m,256,L,allocate([HEAP[g],0,0,0],["i8*",0,0,0],ALLOC_STACK));_PyErr_SetString(HEAP[_PyExc_ValueError],m);f=0;d=23;break;case 22:f=_PyInt_FromLong(l);
d=23;break;case 23:return e=f,STACKTOP=c,e;default:assert(0,"bad label: "+d)}},0,function(a,b){var c=STACKTOP;STACKTOP+=268;_memset(c,0,268);var d;for(d=-1;;)switch(d){case -1:var e,f,g=c,j=c+4,k=c+8,l,m=c+12;e=b;HEAP[k]=10;d=_PyErr_WarnEx(HEAP[_PyExc_DeprecationWarning],h,1)!=0?1:2;break;case 1:f=0;d=25;break;case 2:d=__PyArg_ParseTuple_SizeT(e,R,allocate([g,0,0,0,k,0,0,0],["i8**",0,0,0,"i32*",0,0,0],ALLOC_STACK))==0?3:4;break;case 3:f=0;d=25;break;case 4:d=HEAP[k]!=0&HEAP[k]<=1|HEAP[k]>36?5:7;break;
case 5:_PyErr_SetString(HEAP[_PyExc_ValueError],K);f=0;d=25;break;case 6:HEAP[g]+=1;d=7;break;case 7:d=HEAP[HEAP[g]]==0?9:8;break;case 8:d=___ctype_b_loc();d=(HEAP[HEAP[d]+2*HEAP[HEAP[g]]]&8192)!=0?6:9;break;case 9:d=HEAP[HEAP[g]]==0?10:11;break;case 10:_PyErr_SetString(HEAP[_PyExc_ValueError],H);f=0;d=25;break;case 11:l=_PyLong_FromString(HEAP[g],j,HEAP[k]);d=l==0?12:13;break;case 12:f=0;d=25;break;case 13:d=HEAP[k]==0?14:18;break;case 14:d=HEAP[HEAP[j]]==108?16:15;break;case 15:d=HEAP[HEAP[j]]==
76?16:18;break;case 16:HEAP[j]+=1;d=18;break;case 17:HEAP[j]+=1;d=18;break;case 18:d=HEAP[HEAP[j]]==0?20:19;break;case 19:d=___ctype_b_loc();d=(HEAP[HEAP[d]+2*HEAP[HEAP[j]]]&8192)!=0?17:20;break;case 20:d=HEAP[HEAP[j]]!=0?21:24;break;case 21:_PyOS_snprintf(m,256,S,allocate([HEAP[g],0,0,0],["i8*",0,0,0],ALLOC_STACK));_PyErr_SetString(HEAP[_PyExc_ValueError],m);HEAP[l]-=1;d=HEAP[l]==0?22:23;break;case 22:FUNCTION_TABLE[HEAP[HEAP[l+4]+24]](l);d=23;break;case 23:f=0;d=25;break;case 24:f=l;d=25;break;
case 25:return e=f,STACKTOP=c,e;default:assert(0,"bad label: "+d)}},0,function(a,b){var c=STACKTOP;STACKTOP+=8;_memset(c,0,8);var d;for(d=-1;;)switch(d){case -1:var e,f,g=c,j,k,l=c+4,m,n,o,p;e=b;d=_PyErr_WarnEx(HEAP[_PyExc_DeprecationWarning],h,1)!=0?1:2;break;case 1:f=0;d=21;break;case 2:d=_PyString_AsStringAndSize(e,g,l)!=0?3:4;break;case 3:f=0;d=21;break;case 4:m=_PyString_FromStringAndSize(0,HEAP[l]);d=m==0?5:6;break;case 5:f=0;d=21;break;case 6:j=_PyString_AsString(m);n=0;d=HEAP[l]>0?7:11;break;
case 7:d=HEAP[g];o=HEAP[d];HEAP[g]=d+1;d=___ctype_b_loc();d=(HEAP[HEAP[d]+2*o]&512)!=0?8:9;break;case 8:n=1;d=_toupper(o);HEAP[j]=d&255;d=10;break;case 9:HEAP[j]=o&255;d=10;break;case 10:j+=1;d=11;break;case 11:k=1;d=k<HEAP[l]?12:16;break;case 12:d=HEAP[g];p=HEAP[d];HEAP[g]=d+1;d=___ctype_b_loc();d=(HEAP[HEAP[d]+2*p]&256)!=0?13:14;break;case 13:n=1;d=_tolower(p);HEAP[j]=d&255;d=15;break;case 14:HEAP[j]=p&255;d=15;break;case 15:j+=1;k+=1;d=k<HEAP[l]?12:16;break;case 16:var q=m;d=n==0?17:20;break;case 17:HEAP[m]=
HEAP[q]-1;d=HEAP[m]==0?18:19;break;case 18:FUNCTION_TABLE[HEAP[HEAP[m+4]+24]](m);d=19;break;case 19:HEAP[e]+=1;f=e;d=21;break;case 20:f=q;d=21;break;case 21:return e=f,STACKTOP=c,e;default:assert(0,"bad label: "+d)}},0,function(a,b){var c=STACKTOP;STACKTOP+=24;_memset(c,0,24);var d,e=null;for(d=-1;;)switch(d){case -1:var f,g,j=c,k=c+4,l=c+8,m=c+12,n=c+16,o=c+20,p,q;f=b;HEAP[n]=0;HEAP[o]=2147483647;d=_PyErr_WarnEx(HEAP[_PyExc_DeprecationWarning],h,1)!=0?1:2;break;case 1:g=0;d=21;break;case 2:d=__PyArg_ParseTuple_SizeT(f,
Q,allocate([j,0,0,0,l,0,0,0,k,0,0,0,m,0,0,0,n,0,0,0,o,0,0,0],["i8**",0,0,0,"i32*",0,0,0,"i8**",0,0,0,"i32*",0,0,0,"i32*",0,0,0,"i32*",0,0,0],ALLOC_STACK))==0?3:4;break;case 3:g=0;d=21;break;case 4:var r=HEAP[o];r>HEAP[l]?(e=4,d=5):(e=4,d=6);break;case 5:var s=HEAP[l];HEAP[o]=s;e=5;d=6;break;case 6:var t=HEAP[o];(e==5?s:r)<0?(e=6,d=7):(e=6,d=8);break;case 7:var u=HEAP[l]+t;HEAP[o]=u;e=7;d=8;break;case 8:d=(e==7?u:t)<0?9:10;break;case 9:HEAP[o]=0;d=10;break;case 10:d=HEAP[n]<0?11:13;break;case 11:d=
HEAP[l]+HEAP[n];HEAP[n]=d;d=d<0?12:13;break;case 12:HEAP[n]=0;d=13;break;case 13:d=HEAP[m];p=HEAP[o]+1+(0-d);d=d==0?14:15;break;case 14:g=_PyInt_FromLong(p-HEAP[n]);d=21;break;case 15:q=0;d=HEAP[n]<p?16:20;break;case 16:d=_memcmp(HEAP[j]+HEAP[n],HEAP[k],HEAP[m])==0?17:19;break;case 17:q+=1;HEAP[n]=HEAP[m]+HEAP[n];d=18;break;case 18:d=HEAP[n]<p?16:20;break;case 19:HEAP[n]+=1;d=18;break;case 20:g=_PyInt_FromLong(q);d=21;break;case 21:return e=g,STACKTOP=c,e;default:assert(0,"bad label: "+d)}},0,function(a,
b){var c=STACKTOP;STACKTOP+=12;_memset(c,0,12);var d;for(d=-1;;)switch(d){case -1:var e,f,g,j,k,l,m,n,o,p=c,q=c+4,r=c+8;e=b;HEAP[r]=8;d=_PyErr_WarnEx(HEAP[_PyExc_DeprecationWarning],h,1)!=0?1:2;break;case 1:f=0;d=27;break;case 2:d=__PyArg_ParseTuple_SizeT(e,G,allocate([p,0,0,0,q,0,0,0,r,0,0,0],["i8**",0,0,0,"i32*",0,0,0,"i32*",0,0,0],ALLOC_STACK))==0?3:4;break;case 3:f=0;d=27;break;case 4:d=HEAP[r]<=0?5:6;break;case 5:_PyErr_SetString(HEAP[_PyExc_ValueError],F);f=0;d=27;break;case 6:l=m=n=0;g=HEAP[p]+
HEAP[q];j=HEAP[p];d=14;break;case 7:d=HEAP[j]==9?8:11;break;case 8:m=0-m%HEAP[r]+HEAP[r]+m;d=n>m?9:10;break;case 9:_PyErr_SetString(HEAP[_PyExc_OverflowError],E);f=0;d=27;break;case 10:n=m;d=13;break;case 11:m+=1;d=HEAP[j]==10?12:13;break;case 12:l=m+l;m=0;d=13;break;case 13:j+=1;d=14;break;case 14:d=j<g?7:15;break;case 15:d=m+l<0?16:17;break;case 16:_PyErr_SetString(HEAP[_PyExc_OverflowError],E);f=0;d=27;break;case 17:o=_PyString_FromStringAndSize(0,m+l);d=o==0?18:19;break;case 18:f=0;d=27;break;
case 19:l=0;k=o+20;j=HEAP[p];d=j<g?20:26;break;case 20:d=HEAP[j]==9?21:23;break;case 21:m=HEAP[r]-l%HEAP[r];l=m+l;d=m>0;m-=1;d=d!=0?22:25;break;case 22:HEAP[k]=32;k+=1;d=m>0;m-=1;d=d!=0?22:25;break;case 23:HEAP[k]=HEAP[j];k+=1;l+=1;d=HEAP[j]==10?24:25;break;case 24:l=0;d=25;break;case 25:j+=1;d=j<g?20:26;break;case 26:f=o;d=27;break;case 27:return e=f,STACKTOP=c,e;default:assert(0,"bad label: "+d)}},0,function(a,b){var c=STACKTOP;STACKTOP+=24;_memset(c,0,24);var d,e=null;for(d=-1;;)switch(d){case -1:var f,
g,j=c,k=c+4,l=c+8,m=c+12,n=c+16,o=c+20;f=b;HEAP[n]=0;HEAP[o]=2147483647;d=_PyErr_WarnEx(HEAP[_PyExc_DeprecationWarning],h,1)!=0?1:2;break;case 1:g=0;d=24;break;case 2:d=__PyArg_ParseTuple_SizeT(f,t,allocate([j,0,0,0,l,0,0,0,k,0,0,0,m,0,0,0,n,0,0,0,o,0,0,0],["i8**",0,0,0,"i32*",0,0,0,"i8**",0,0,0,"i32*",0,0,0,"i32*",0,0,0,"i32*",0,0,0],ALLOC_STACK))==0?3:4;break;case 3:g=0;d=24;break;case 4:var p=HEAP[o];p>HEAP[l]?(e=4,d=5):(e=4,d=6);break;case 5:var q=HEAP[l];HEAP[o]=q;e=5;d=6;break;case 6:var r=
HEAP[o];(e==5?q:p)<0?(e=6,d=7):(e=6,d=8);break;case 7:var s=HEAP[l]+r;HEAP[o]=s;e=7;d=8;break;case 8:d=(e==7?s:r)<0?9:10;break;case 9:HEAP[o]=0;d=10;break;case 10:d=HEAP[n]<0?11:13;break;case 11:d=HEAP[l]+HEAP[n];HEAP[n]=d;d=d<0?12:13;break;case 12:HEAP[n]=0;d=13;break;case 13:d=HEAP[m]==0?14:16;break;case 14:d=HEAP[n]<=HEAP[o]?15:16;break;case 15:g=_PyInt_FromLong(HEAP[n]);d=24;break;case 16:HEAP[o]-=HEAP[m];d=22;break;case 17:d=HEAP[HEAP[j]+HEAP[n]]==HEAP[HEAP[k]]?18:21;break;case 18:d=HEAP[m]==
1?20:19;break;case 19:d=_memcmp(HEAP[j]+(HEAP[n]+1),HEAP[k]+1,HEAP[m]-1)==0?20:21;break;case 20:g=_PyInt_FromLong(HEAP[n]);d=24;break;case 21:HEAP[n]+=1;d=22;break;case 22:d=HEAP[n]<=HEAP[o]?17:23;break;case 23:g=_PyInt_FromLong(-1);d=24;break;case 24:return e=g,STACKTOP=c,e;default:assert(0,"bad label: "+d)}},0,function(a,b){var c=STACKTOP;STACKTOP+=16;_memset(c,0,16);var d,e=null;for(d=-1;;)switch(d){case -1:var f,g,j=c,k=c+4,l,r=c+8,s,t,u,v,z=c+12,w,x,H,K,D;f=b;HEAP[k]=0;u=t=HEAP[r]=0;v=100;w=
HEAP[z]=0;d=_PyErr_WarnEx(HEAP[_PyExc_DeprecationWarning],h,1)!=0?1:2;break;case 1:g=0;d=72;break;case 2:d=__PyArg_ParseTuple_SizeT(f,m,allocate([j,0,0,0,k,0,0,0,r,0,0,0],["%struct.PyObject**",0,0,0,"i8**",0,0,0,"i32*",0,0,0],ALLOC_STACK))==0?3:4;break;case 3:g=0;d=72;break;case 4:d=HEAP[k]==0?5:6;break;case 5:HEAP[k]=n;HEAP[r]=1;d=6;break;case 6:var y=_PySequence_Size(HEAP[j]);l=y;y<0?(e=6,d=7):(e=6,d=10);break;case 7:d=_PyErr_Occurred()!=0?8:9;break;case 8:g=0;d=72;break;case 9:var L=l,e=9;d=10;
break;case 10:d=(e==9?L:y)==1?11:17;break;case 11:H=_PySequence_GetItem(HEAP[j],0);d=H!=0?12:16;break;case 12:d=(HEAP[HEAP[H+4]+84]&134217728)==0?13:16;break;case 13:_PyErr_SetString(HEAP[_PyExc_TypeError],o);HEAP[H]-=1;d=HEAP[H]==0?14:15;break;case 14:FUNCTION_TABLE[HEAP[HEAP[H+4]+24]](H);d=15;break;case 15:g=0;d=72;break;case 16:g=H;d=72;break;case 17:d=_PyString_FromStringAndSize(0,v);HEAP[z]=d;d=HEAP[z]==0?18:19;break;case 18:g=0;d=72;break;case 19:w=_PyString_AsString(HEAP[z]);d=(HEAP[HEAP[HEAP[j]+
4]+84]&33554432)!=0?20:39;break;case 20:s=0;d=37;break;case 21:K=HEAP[HEAP[HEAP[j]+12]+4*s];d=(HEAP[HEAP[K+4]+84]&134217728)==0?22:25;break;case 22:_PyErr_SetString(HEAP[_PyExc_TypeError],o);d=HEAP[z];HEAP[d]-=1;d=HEAP[d]==0?23:24;break;case 23:FUNCTION_TABLE[HEAP[HEAP[HEAP[z]+4]+24]](HEAP[z]);d=24;break;case 24:g=0;d=72;break;case 25:u=HEAP[K+8];d=2147483647-t<u?27:26;break;case 26:d=0-t+2147483647+(0-HEAP[r])<HEAP[r]?27:33;break;case 27:_PyErr_SetString(HEAP[_PyExc_OverflowError],p);d=HEAP[z];HEAP[d]-=
1;d=HEAP[d]==0?28:29;break;case 28:FUNCTION_TABLE[HEAP[HEAP[HEAP[z]+4]+24]](HEAP[z]);d=29;break;case 29:g=0;d=72;break;case 30:d=__PyString_Resize(z,v*2)<0?31:32;break;case 31:g=0;d=72;break;case 32:v*=2;w=_PyString_AsString(HEAP[z])+t;d=33;break;case 33:d=u+t+HEAP[r]>=v?30:34;break;case 34:d=s>0?35:36;break;case 35:_llvm_memcpy_p0i8_p0i8_i32(w,HEAP[k],HEAP[r],1,0);w+=HEAP[r];t+=HEAP[r];d=36;break;case 36:_llvm_memcpy_p0i8_p0i8_i32(w,K+20,u,1,0);w+=u;t=u+t;s+=1;d=37;break;case 37:d=s<l?21:38;break;
case 38:__PyString_Resize(z,t);g=HEAP[z];d=72;break;case 39:d=HEAP[HEAP[HEAP[j]+4]+52]==0?41:40;break;case 40:x=HEAP[HEAP[HEAP[HEAP[j]+4]+52]+12];d=x==0?41:42;break;case 41:_PyErr_SetString(HEAP[_PyExc_TypeError],q);g=0;d=72;break;case 42:s=0;d=70;break;case 43:D=FUNCTION_TABLE[x](HEAP[j],s);d=D==0?45:44;break;case 44:d=(HEAP[HEAP[D+4]+84]&134217728)==0?45:51;break;case 45:_PyErr_SetString(HEAP[_PyExc_TypeError],o);d=HEAP[z];HEAP[d]-=1;d=HEAP[d]==0?46:47;break;case 46:FUNCTION_TABLE[HEAP[HEAP[HEAP[z]+
4]+24]](HEAP[z]);d=47;break;case 47:d=D!=0?48:50;break;case 48:HEAP[D]-=1;d=HEAP[D]==0?49:50;break;case 49:FUNCTION_TABLE[HEAP[HEAP[D+4]+24]](D);d=50;break;case 50:g=0;d=72;break;case 51:u=HEAP[D+8];d=2147483647-t<u?53:52;break;case 52:d=0-t+2147483647+(0-HEAP[r])<HEAP[r]?53:64;break;case 53:_PyErr_SetString(HEAP[_PyExc_OverflowError],p);d=HEAP[z];HEAP[d]-=1;d=HEAP[d]==0?54:55;break;case 54:FUNCTION_TABLE[HEAP[HEAP[HEAP[z]+4]+24]](HEAP[z]);d=55;break;case 55:d=D!=0?56:58;break;case 56:HEAP[D]-=1;
d=HEAP[D]==0?57:58;break;case 57:FUNCTION_TABLE[HEAP[HEAP[D+4]+24]](D);d=58;break;case 58:g=0;d=72;break;case 59:d=__PyString_Resize(z,v*2)<0?60:63;break;case 60:HEAP[D]-=1;d=HEAP[D]==0?61:62;break;case 61:FUNCTION_TABLE[HEAP[HEAP[D+4]+24]](D);d=62;break;case 62:g=0;d=72;break;case 63:v*=2;w=_PyString_AsString(HEAP[z])+t;d=64;break;case 64:d=u+t+HEAP[r]>=v?59:65;break;case 65:d=s>0?66:67;break;case 66:_llvm_memcpy_p0i8_p0i8_i32(w,HEAP[k],HEAP[r],1,0);w+=HEAP[r];t+=HEAP[r];d=67;break;case 67:_llvm_memcpy_p0i8_p0i8_i32(w,
D+20,u,1,0);w+=u;t=u+t;HEAP[D]-=1;d=HEAP[D]==0?68:69;break;case 68:FUNCTION_TABLE[HEAP[HEAP[D+4]+24]](D);d=69;break;case 69:s+=1;d=70;break;case 70:d=s<l?43:71;break;case 71:__PyString_Resize(z,t);g=HEAP[z];d=72;break;case 72:return e=g,STACKTOP=c,e;default:assert(0,"bad label: "+d)}},0,function(a,b){var c;for(c=-1;;)switch(c){case -1:var d,f;d=b;c=_PyErr_WarnEx(HEAP[_PyExc_DeprecationWarning],h,1)!=0?1:2;break;case 1:f=0;c=3;break;case 2:f=e(d,0);c=3;break;case 3:return c=f;default:assert(0,"bad label: "+
c)}},0,function(a,b){var c=STACKTOP;STACKTOP+=8;_memset(c,0,8);var d,e=null;for(d=-1;;)switch(d){case -1:var f,g,j=c,k,l,m=c+4,n,o,p;f=b;d=_PyErr_WarnEx(HEAP[_PyExc_DeprecationWarning],h,1)!=0?1:2;break;case 1:g=0;d=17;break;case 2:d=_PyString_AsStringAndSize(f,j,m)!=0?3:4;break;case 3:g=0;d=17;break;case 4:n=_PyString_FromStringAndSize(0,HEAP[m]);d=n==0?5:6;break;case 5:g=0;d=17;break;case 6:k=_PyString_AsString(n);l=o=0;d=l<HEAP[m]?8:7;break;case 7:var q=n,e=7;d=13;break;case 8:d=HEAP[j];p=HEAP[d];
HEAP[j]=d+1;d=___ctype_b_loc();d=(HEAP[HEAP[d]+2*p]&256)!=0?9:10;break;case 9:o=1;d=_tolower(p);HEAP[k]=d&255;d=11;break;case 10:HEAP[k]=p&255;d=11;break;case 11:k+=1;l+=1;d=l<HEAP[m]?8:12;break;case 12:var r=n;o==0?(e=12,d=13):(e=12,d=16);break;case 13:HEAP[n]=HEAP[e==7?q:r]-1;d=HEAP[n]==0?14:15;break;case 14:FUNCTION_TABLE[HEAP[HEAP[n+4]+24]](n);d=15;break;case 15:HEAP[f]+=1;g=f;d=17;break;case 16:g=r;d=17;break;case 17:return e=g,STACKTOP=c,e;default:assert(0,"bad label: "+d)}},0,function(a,b){var c=
STACKTOP;STACKTOP+=16;_memset(c,0,16);var d;for(d=-1;;)switch(d){case -1:var e,f,g=c,h=c+4,j,k=c+8,l=c+12,m;d=b;HEAP[g]=0;HEAP[h]=0;HEAP[k]=0;HEAP[l]=0;d=__PyArg_ParseTuple_SizeT(d,da,allocate([g,0,0,0,k,0,0,0,h,0,0,0,l,0,0,0],["i8**",0,0,0,"i32*",0,0,0,"i8**",0,0,0,"i32*",0,0,0],ALLOC_STACK))==0?1:2;break;case 1:e=0;d=11;break;case 2:d=HEAP[k]!=HEAP[l]?3:4;break;case 3:_PyErr_SetString(HEAP[_PyExc_ValueError],Ka);e=0;d=11;break;case 4:m=_PyString_FromStringAndSize(0,256);d=m==0?5:6;break;case 5:e=
0;d=11;break;case 6:f=m+20;j=0;d=7;break;case 7:HEAP[f+j]=j&255;j=d=j+1;d=d<=255?7:8;break;case 8:j=0;d=j<HEAP[k]?9:10;break;case 9:HEAP[f+HEAP[HEAP[g]+j]]=HEAP[HEAP[h]+j];j+=1;d=j<HEAP[k]?9:10;break;case 10:e=m;d=11;break;case 11:return STACKTOP=c,e;default:assert(0,"bad label: "+d)}},0,function(a,c){var d=STACKTOP;STACKTOP+=32;_memset(d,0,32);var e;for(e=-1;;)switch(e){case -1:var f,g,j=d,k=d+4,l=d+8,m,n=d+12,o=d+16,p=d+20,q=d+24,r=d+28,s;f=c;HEAP[r]=-1;e=_PyErr_WarnEx(HEAP[_PyExc_DeprecationWarning],
h,1)!=0?1:2;break;case 1:g=0;e=15;break;case 2:e=__PyArg_ParseTuple_SizeT(f,Xa,allocate([j,0,0,0,n,0,0,0,k,0,0,0,o,0,0,0,l,0,0,0,p,0,0,0,r,0,0,0],["i8**",0,0,0,"i32*",0,0,0,"i8**",0,0,0,"i32*",0,0,0,"i8**",0,0,0,"i32*",0,0,0,"i32*",0,0,0],ALLOC_STACK))==0?3:4;break;case 3:g=0;e=15;break;case 4:e=HEAP[o]<=0?5:6;break;case 5:_PyErr_SetString(HEAP[_PyExc_ValueError],Ca);g=0;e=15;break;case 6:e=HEAP[r]==0?7:8;break;case 7:HEAP[r]=-1;e=8;break;case 8:a:{m=HEAP[j];e=HEAP[n];for(var t=HEAP[k],u=HEAP[o],
v=HEAP[l],z=HEAP[p],w=HEAP[r],x=q,H=void 0,K=null,H=-1;;)switch(H){case -1:var D,y,L,R,U,B,A,S,F,E,G,J,C,O,aa;D=m;y=e;L=t;R=u;U=v;B=z;A=w;S=x;H=y==0?28:1;break;case 1:H=R>y?28:2;break;case 2:b:{C=D;for(var H=y,P=L,I=R,eb=void 0,$=null,eb=-1;;)switch(eb){case -1:var Sa,T,N,wa,lb,Q;Sa=C;T=H;N=P;wa=I;Q=lb=0;$=-1;eb=3;break;case 1:lb=b(Sa,T,N,wa);eb=lb==-1?4:2;break;case 2:Sa+=wa+lb;var Ga=0-wa+(0-lb)+T;T=Ga;Q+=1;$=2;eb=3;break;case 3:eb=($==2?Ga:H)>=0?1:4;break;case 4:C=Q;break b;default:assert(0,"bad label: "+
eb)}C=void 0}H=A<0?3:4;break;case 3:A=2147483647;var Pb=C,K=3,H=6;break;case 4:var ja=C;ja>A?(K=4,H=5):(K=4,H=6);break;case 5:var da=A;C=da;K=5;H=6;break;case 6:H=(K==5?da:K==4?ja:Pb)==0?28:7;break;case 7:aa=(B-R)*C+y;H=aa==0?8:11;break;case 8:G=_malloc(1);H=G==0?9:10;break;case 9:E=0;H=29;break;case 10:HEAP[G]=0;H=27;break;case 11:H=aa<=0?12:13;break;case 12:throw ___assert_fail(cb,db,1118,Da),"Reached an unreachable!";case 13:H=aa>=0?14:17;break;case 14:H=aa!=0?15:16;break;case 15:F=aa;H=18;break;
case 16:F=1;H=18;break;case 17:J=0;H=19;break;case 18:J=H=_malloc(F);H=H==0?19:20;break;case 19:E=0;H=29;break;case 20:G=J;var fa=A,K=20,H=23;break;case 21:O=b(D,y,L,R);H=O==-1?25:22;break;case 22:_llvm_memcpy_p0i8_p0i8_i32(J,D,O,1,0);D+=R+O;y=0-R+(0-O)+y;J+=O;_llvm_memcpy_p0i8_p0i8_i32(J,U,B,1,0);J+=B;var Qa=A-1;A=Qa;K=22;H=23;break;case 23:H=(K==22?Qa:fa)<=0?25:24;break;case 24:H=y>0?21:27;break;case 25:H=y>0?26:27;break;case 26:_llvm_memcpy_p0i8_p0i8_i32(J,D,y,1,0);H=27;break;case 27:HEAP[S]=aa;
E=G;H=29;break;case 28:HEAP[S]=-1;E=D;H=29;break;case 29:e=m=E;break a;default:assert(0,"bad label: "+H)}e=void 0}m=e;e=e==0?9:10;break;case 9:_PyErr_NoMemory();g=0;e=15;break;case 10:e=HEAP[q]==-1?11:13;break;case 11:s=_PyTuple_GetItem(f,0);e=s!=0?12:14;break;case 12:HEAP[s]+=1;e=14;break;case 13:s=_PyString_FromStringAndSize(m,HEAP[q]);_free(m);e=14;break;case 14:g=s;e=15;break;case 15:return f=g,STACKTOP=d,f;default:assert(0,"bad label: "+e)}},0,function(a,b){var c=STACKTOP;STACKTOP+=24;_memset(c,
0,24);var d,e=null;for(d=-1;;)switch(d){case -1:var f,g,j=c,k=c+4,l=c+8,m=c+12,n,o=c+16,p=c+20;f=b;HEAP[o]=0;HEAP[p]=2147483647;d=_PyErr_WarnEx(HEAP[_PyExc_DeprecationWarning],h,1)!=0?1:2;break;case 1:g=0;d=24;break;case 2:d=__PyArg_ParseTuple_SizeT(f,u,allocate([j,0,0,0,l,0,0,0,k,0,0,0,m,0,0,0,o,0,0,0,p,0,0,0],["i8**",0,0,0,"i32*",0,0,0,"i8**",0,0,0,"i32*",0,0,0,"i32*",0,0,0,"i32*",0,0,0],ALLOC_STACK))==0?3:4;break;case 3:g=0;d=24;break;case 4:var q=HEAP[p];q>HEAP[l]?(e=4,d=5):(e=4,d=6);break;case 5:var r=
HEAP[l];HEAP[p]=r;e=5;d=6;break;case 6:var s=HEAP[p];(e==5?r:q)<0?(e=6,d=7):(e=6,d=8);break;case 7:var t=HEAP[l]+s;HEAP[p]=t;e=7;d=8;break;case 8:d=(e==7?t:s)<0?9:10;break;case 9:HEAP[p]=0;d=10;break;case 10:d=HEAP[o]<0?11:13;break;case 11:d=HEAP[l]+HEAP[o];HEAP[o]=d;d=d<0?12:13;break;case 12:HEAP[o]=0;d=13;break;case 13:d=HEAP[m]==0?14:16;break;case 14:d=HEAP[o]<=HEAP[p]?15:16;break;case 15:g=_PyInt_FromLong(HEAP[p]);d=24;break;case 16:n=HEAP[p]-HEAP[m];d=22;break;case 17:d=HEAP[HEAP[j]+n]==HEAP[HEAP[k]]?
18:21;break;case 18:d=HEAP[m]==1?20:19;break;case 19:d=_memcmp(HEAP[j]+(n+1),HEAP[k]+1,HEAP[m]-1)==0?20:21;break;case 20:g=_PyInt_FromLong(n);d=24;break;case 21:n-=1;d=22;break;case 22:d=n>=HEAP[o]?17:23;break;case 23:g=_PyInt_FromLong(-1);d=24;break;case 24:return e=g,STACKTOP=c,e;default:assert(0,"bad label: "+d)}},0,function(a,b){var c;for(c=-1;;)switch(c){case -1:var d,f;d=b;c=_PyErr_WarnEx(HEAP[_PyExc_DeprecationWarning],h,1)!=0?1:2;break;case 1:f=0;c=3;break;case 2:f=e(d,1);c=3;break;case 3:return c=
f;default:assert(0,"bad label: "+c)}},0,function(a,b){var c=STACKTOP;STACKTOP+=20;_memset(c,0,20);var d;for(d=-1;;)switch(d){case -1:var e,f,g=c,l=c+4,m,n,o,p,q=c+8,r=c+12,s=c+16,t,u;e=b;d=_PyErr_WarnEx(HEAP[_PyExc_DeprecationWarning],h,1)!=0?1:2;break;case 1:f=0;d=30;break;case 2:HEAP[s]=0;p=HEAP[l]=0;HEAP[q]=0;d=__PyArg_ParseTuple_SizeT(e,j,allocate([r,0,0,0,g,0,0,0,s,0,0,0,l,0,0,0,q,0,0,0],["i8**",0,0,0,"i32*",0,0,0,"i8**",0,0,0,"i32*",0,0,0,"i32*",0,0,0],ALLOC_STACK))==0?3:4;break;case 3:f=0;
d=30;break;case 4:d=HEAP[s]==0?5:6;break;case 5:a:{f=HEAP[r];d=HEAP[g];for(var v=HEAP[q],z=void 0,z=-1;;)switch(z){case -1:var w,x,H,K,D,y,L,R,U,A;w=f;x=d;H=v;R=D=0;A=_PyList_New(0);z=A==0?1:26;break;case 1:K=0;z=31;break;case 2:D+=1;z=3;break;case 3:z=D>=x?5:4;break;case 4:z=___ctype_b_loc();z=(HEAP[HEAP[z]+2*HEAP[w+D]]&8192)!=0?2:5;break;case 5:y=D;z=7;break;case 6:D+=1;z=7;break;case 7:z=D>=x?9:8;break;case 8:z=___ctype_b_loc();z=(HEAP[HEAP[z]+2*HEAP[w+D]]&8192)==0?6:9;break;case 9:z=y<D?10:26;
break;case 10:U=_PyString_FromStringAndSize(w+y,D-y);z=U==0?28:11;break;case 11:L=_PyList_Append(A,U);HEAP[U]-=1;z=HEAP[U]==0?12:13;break;case 12:FUNCTION_TABLE[HEAP[HEAP[U+4]+24]](U);z=13;break;case 13:z=L<0?28:14;break;case 14:R+=1;z=16;break;case 15:D+=1;z=16;break;case 16:z=D>=x?18:17;break;case 17:z=___ctype_b_loc();z=(HEAP[HEAP[z]+2*HEAP[w+D]]&8192)!=0?15:18;break;case 18:z=H!=0?19:26;break;case 19:z=R>=H?20:26;break;case 20:z=D<x?21:26;break;case 21:U=_PyString_FromStringAndSize(w+D,x-D);z=
U==0?28:22;break;case 22:L=_PyList_Append(A,U);HEAP[U]-=1;z=HEAP[U]==0?23:24;break;case 23:FUNCTION_TABLE[HEAP[HEAP[U+4]+24]](U);z=24;break;case 24:z=L<0?28:25;break;case 25:D=x;z=26;break;case 26:z=D<x?3:27;break;case 27:K=A;z=31;break;case 28:HEAP[A]-=1;z=HEAP[A]==0?29:30;break;case 29:FUNCTION_TABLE[HEAP[HEAP[A+4]+24]](A);z=30;break;case 30:K=0;z=31;break;case 31:f=K;break a;default:assert(0,"bad label: "+z)}f=void 0}d=30;break;case 6:d=HEAP[l]==0?7:8;break;case 7:_PyErr_SetString(HEAP[_PyExc_ValueError],
k);f=0;d=30;break;case 8:t=_PyList_New(0);d=t==0?9:10;break;case 9:f=0;d=30;break;case 10:m=n=0;d=21;break;case 11:d=HEAP[HEAP[r]+m]!=HEAP[HEAP[s]]?20:12;break;case 12:d=HEAP[l]==1?14:13;break;case 13:d=_memcmp(HEAP[r]+m,HEAP[s],HEAP[l])==0?14:20;break;case 14:u=d=_PyString_FromStringAndSize(HEAP[r]+n,m-n);d=d==0?27:15;break;case 15:o=_PyList_Append(t,u);HEAP[u]-=1;d=HEAP[u]==0?16:17;break;case 16:FUNCTION_TABLE[HEAP[HEAP[u+4]+24]](u);d=17;break;case 17:d=o<0?27:18;break;case 18:m=n=m+HEAP[l];p+=
1;d=HEAP[q]!=0?19:21;break;case 19:d=p>=HEAP[q]?22:21;break;case 20:m+=1;d=21;break;case 21:d=m+HEAP[l]<=HEAP[g]?11:22;break;case 22:u=d=_PyString_FromStringAndSize(HEAP[r]+n,HEAP[g]-n);d=d==0?27:23;break;case 23:o=_PyList_Append(t,u);HEAP[u]-=1;d=HEAP[u]==0?24:25;break;case 24:FUNCTION_TABLE[HEAP[HEAP[u+4]+24]](u);d=25;break;case 25:d=o<0?27:26;break;case 26:f=t;d=30;break;case 27:HEAP[t]-=1;d=HEAP[t]==0?28:29;break;case 28:FUNCTION_TABLE[HEAP[HEAP[t+4]+24]](t);d=29;break;case 29:f=0;d=30;break;
case 30:return e=f,STACKTOP=c,e;default:assert(0,"bad label: "+d)}},0,function(a,b){var c;for(c=-1;;)switch(c){case -1:var d,f;d=b;c=_PyErr_WarnEx(HEAP[_PyExc_DeprecationWarning],h,1)!=0?1:2;break;case 1:f=0;c=3;break;case 2:f=e(d,2);c=3;break;case 3:return c=f;default:assert(0,"bad label: "+c)}},0,function(a,b){var c=STACKTOP;STACKTOP+=8;_memset(c,0,8);var d,e=null;for(d=-1;;)switch(d){case -1:var f,g,j=c,k,l,m=c+4,n,o,p;f=b;d=_PyErr_WarnEx(HEAP[_PyExc_DeprecationWarning],h,1)!=0?1:2;break;case 1:g=
0;d=19;break;case 2:d=_PyString_AsStringAndSize(f,j,m)!=0?3:4;break;case 3:g=0;d=19;break;case 4:n=_PyString_FromStringAndSize(0,HEAP[m]);d=n==0?5:6;break;case 5:g=0;d=19;break;case 6:k=_PyString_AsString(n);l=o=0;d=l<HEAP[m]?8:7;break;case 7:var q=n,e=7;d=15;break;case 8:d=HEAP[j];p=HEAP[d];HEAP[j]=d+1;d=___ctype_b_loc();d=(HEAP[HEAP[d]+2*p]&512)!=0?9:10;break;case 9:o=1;d=_toupper(p);HEAP[k]=d&255;d=13;break;case 10:d=___ctype_b_loc();d=(HEAP[HEAP[d]+2*p]&256)!=0?11:12;break;case 11:o=1;d=_tolower(p);
HEAP[k]=d&255;d=13;break;case 12:HEAP[k]=p&255;d=13;break;case 13:k+=1;l+=1;d=l<HEAP[m]?8:14;break;case 14:var r=n;o==0?(e=14,d=15):(e=14,d=18);break;case 15:HEAP[n]=HEAP[e==7?q:r]-1;d=HEAP[n]==0?16:17;break;case 16:FUNCTION_TABLE[HEAP[HEAP[n+4]+24]](n);d=17;break;case 17:HEAP[f]+=1;g=f;d=19;break;case 18:g=r;d=19;break;case 19:return e=g,STACKTOP=c,e;default:assert(0,"bad label: "+d)}},0,function(a,b){var c=STACKTOP;STACKTOP+=1048;_memset(c,0,1048);var d;for(d=-1;;)switch(d){case -1:var e,f,g,j,
k,l,m,n,o=c,p=c+4,q,r=c+8,s,t=c+12,u=c+16,v=c+20,z=c+24;e=b;n=0;HEAP[r]=0;HEAP[u]=0;d=_PyErr_WarnEx(HEAP[_PyExc_DeprecationWarning],h,1)!=0?1:2;break;case 1:f=0;d=34;break;case 2:d=__PyArg_ParseTuple_SizeT(e,wa,allocate([o,0,0,0,p,0,0,0,t,0,0,0,r,0,0,0,u,0,0,0],["%struct.PyObject**",0,0,0,"i8**",0,0,0,"i32*",0,0,0,"i8**",0,0,0,"i32*",0,0,0],ALLOC_STACK))==0?3:4;break;case 3:f=0;d=34;break;case 4:d=HEAP[t]!=256?5:6;break;case 5:_PyErr_SetString(HEAP[_PyExc_ValueError],ib);f=0;d=34;break;case 6:j=HEAP[p];
s=HEAP[HEAP[o]+8];d=_PyString_FromStringAndSize(0,s);HEAP[v]=d;d=HEAP[v]==0?7:8;break;case 7:f=0;d=34;break;case 8:q=k=_PyString_AsString(HEAP[v]);g=_PyString_AsString(HEAP[o]);d=HEAP[u]==0?9:18;break;case 9:l=s;l=d=l-1;d=d>=0?10:13;break;case 10:m=HEAP[g];g+=1;HEAP[k]=HEAP[j+m];d=HEAP[k]!=m;k+=1;d=d!=0?12:11;break;case 11:l=d=l-1;d=d>=0?10:13;break;case 12:n=1;d=11;break;case 13:var w=HEAP[v];d=n!=0?14:15;break;case 14:f=w;d=34;break;case 15:HEAP[w]-=1;d=HEAP[w]==0?16:17;break;case 16:FUNCTION_TABLE[HEAP[HEAP[HEAP[v]+
4]+24]](HEAP[v]);d=17;break;case 17:HEAP[HEAP[o]]+=1;f=HEAP[o];d=34;break;case 18:l=0;d=19;break;case 19:HEAP[z+l*4]=HEAP[j+l];l=d=l+1;d=d<=255?19:20;break;case 20:l=0;d=l<HEAP[u]?21:22;break;case 21:HEAP[z+HEAP[HEAP[r]+l]*4]=-1;l+=1;d=l<HEAP[u]?21:22;break;case 22:l=s;l=d=l-1;d=d>=0?23:27;break;case 23:m=HEAP[g];g+=1;d=HEAP[z+m*4]!=-1?24:26;break;case 24:HEAP[k]=HEAP[z+m*4]&255;d=HEAP[k]==m;k+=1;d=d!=0?25:26;break;case 25:l=d=l-1;d=d>=0?23:27;break;case 26:n=1;d=25;break;case 27:d=n==0?28:31;break;
case 28:d=HEAP[v];HEAP[d]-=1;d=HEAP[d]==0?29:30;break;case 29:FUNCTION_TABLE[HEAP[HEAP[HEAP[v]+4]+24]](HEAP[v]);d=30;break;case 30:HEAP[HEAP[o]]+=1;f=HEAP[o];d=34;break;case 31:d=s>0?32:33;break;case 32:__PyString_Resize(v,k-q);d=33;break;case 33:f=HEAP[v];d=34;break;case 34:return e=f,STACKTOP=c,e;default:assert(0,"bad label: "+d)}},0,function(a,b){var c=STACKTOP;STACKTOP+=8;_memset(c,0,8);var d,e=null;for(d=-1;;)switch(d){case -1:var f,g,j=c,k,l,m=c+4,n,o,p;f=b;d=_PyErr_WarnEx(HEAP[_PyExc_DeprecationWarning],
h,1)!=0?1:2;break;case 1:g=0;d=17;break;case 2:d=_PyString_AsStringAndSize(f,j,m)!=0?3:4;break;case 3:g=0;d=17;break;case 4:n=_PyString_FromStringAndSize(0,HEAP[m]);d=n==0?5:6;break;case 5:g=0;d=17;break;case 6:k=_PyString_AsString(n);l=o=0;d=l<HEAP[m]?8:7;break;case 7:var q=n,e=7;d=13;break;case 8:d=HEAP[j];p=HEAP[d];HEAP[j]=d+1;d=___ctype_b_loc();d=(HEAP[HEAP[d]+2*p]&512)!=0?9:10;break;case 9:o=1;d=_toupper(p);HEAP[k]=d&255;d=11;break;case 10:HEAP[k]=p&255;d=11;break;case 11:k+=1;l+=1;d=l<HEAP[m]?
8:12;break;case 12:var r=n;o==0?(e=12,d=13):(e=12,d=16);break;case 13:HEAP[n]=HEAP[e==7?q:r]-1;d=HEAP[n]==0?14:15;break;case 14:FUNCTION_TABLE[HEAP[HEAP[n+4]+24]](n);d=15;break;case 15:HEAP[f]+=1;g=f;d=17;break;case 16:g=r;d=17;break;case 17:return e=g,STACKTOP=c,e;default:assert(0,"bad label: "+d)}},0]);c.run=a;a();return c});