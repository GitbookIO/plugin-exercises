(function(g){function e(a,b,e){a=STACKTOP;STACKTOP+=12;_memset(a,0,12);var g;for(g=-1;;)switch(g){case -1:var k,l,m,n=a,o=a+4,p=a+8;g=b;k=e;HEAP[n]=0;HEAP[o]=8;HEAP[p]=0;g=_PyArg_ParseTupleAndKeywords(g,k,h,j,allocate([p,0,0,0,n,0,0,0,o,0,0,0],["%struct.PyObject**",0,0,0,"i32*",0,0,0,"i32*",0,0,0],ALLOC_STACK))==0?1:2;break;case 1:m=0;g=12;break;case 2:g=HEAP[p]!=0?3:4;break;case 3:HEAP[HEAP[p]]+=1;g=HEAP[p]==0?4:5;break;case 4:a:{g=void 0;
for(g=-1;;)switch(g){case -1:var q,r,s,t,u;u=_PySys_GetObject(f);g=u==0?1:2;break;case 1:q=0;g=13;break;case 2:r=_PyList_Size(u);g=r==-1?3:4;break;case 3:_PyErr_Clear();q=0;g=13;break;case 4:g=r==0?5:6;break;case 5:q=0;g=13;break;case 6:s=_PyList_GetItem(u,0);g=(HEAP[HEAP[s+4]+84]&134217728)==0?7:8;break;case 7:q=0;g=13;break;case 8:g=HEAP[s+8]==0?9:10;break;case 9:q=0;g=13;break;case 10:t=_PyString_AsString(s);t=_strrchr(t,47);g=t!=0?11:12;break;case 11:q=_PyString_FromString(t+1);g=13;break;case 12:HEAP[s]+=
1;q=s;g=13;break;case 13:g=q;break a;default:assert(0,"bad label: "+g)}g=void 0}HEAP[p]=g;g=5;break;case 5:g=HEAP[c]!=0?6:8;break;case 6:g=HEAP[c];HEAP[g]-=1;g=HEAP[g]==0?7:8;break;case 7:FUNCTION_TABLE[HEAP[HEAP[HEAP[c]+4]+24]](HEAP[c]);g=8;break;case 8:g=HEAP[p];HEAP[c]=g;var v=HEAP[o],z=HEAP[n];g=g!=0?9:10;break;case 9:l=_PyString_AsString(HEAP[c]);g=11;break;case 10:l=0;g=11;break;case 11:_openlog(l,z,v);HEAP[d]=1;HEAP[__Py_NoneStruct]+=1;m=__Py_NoneStruct;g=12;break;case 12:return b=m,STACKTOP=
a,b;default:assert(0,"bad label: "+g)}}function b(){c=allocate(1,"%struct.PyObject*",ALLOC_NORMAL);d=allocate(1,"i1",ALLOC_NORMAL);f=allocate([97,114,103,118,0],"i8",ALLOC_NORMAL);h=allocate([124,83,108,108,58,111,112,101,110,108,111,103,0],"i8",ALLOC_NORMAL);j=allocate(16,"i8*",ALLOC_NORMAL);k=allocate([105,100,101,110,116,0],"i8",ALLOC_NORMAL);l=allocate([108,111,103,111,112,116,105,111,110,0],"i8",ALLOC_NORMAL);m=allocate([102,97,99,105,108,105,116,121,0],"i8",ALLOC_NORMAL);n=allocate([105,115,
59,91,112,114,105,111,114,105,116,121,44,93,32,109,101,115,115,97,103,101,32,115,116,114,105,110,103,0],"i8",ALLOC_NORMAL);o=allocate([115,59,91,112,114,105,111,114,105,116,121,44,93,32,109,101,115,115,97,103,101,32,115,116,114,105,110,103,0],"i8",ALLOC_NORMAL);p=allocate([37,115,0],"i8",ALLOC_NORMAL);q=allocate([108,59,109,97,115,107,32,102,111,114,32,112,114,105,111,114,105,116,121,0],"i8",ALLOC_NORMAL);r=allocate([108,58,76,79,71,95,77,65,83,75,0],"i8",ALLOC_NORMAL);t=allocate([108,58,76,79,71,
95,85,80,84,79,0],"i8",ALLOC_NORMAL);s=allocate([111,112,101,110,108,111,103,0],"i8",ALLOC_NORMAL);u=allocate([99,108,111,115,101,108,111,103,0],"i8",ALLOC_NORMAL);v=allocate([115,121,115,108,111,103,0],"i8",ALLOC_NORMAL);w=allocate([115,101,116,108,111,103,109,97,115,107,0],"i8",ALLOC_NORMAL);x=allocate([76,79,71,95,77,65,83,75,0],"i8",ALLOC_NORMAL);y=allocate([76,79,71,95,85,80,84,79,0],"i8",ALLOC_NORMAL);B=allocate([0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],["i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8","i8","i8","i8","i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8","i8","i8","i8","i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8","i8","i8","i8","i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",
0,0,0,"i32",0,0,0,"i8","i8","i8","i8","i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8","i8","i8","i8","i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8","i8","i8","i8","i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8","i8","i8","i8"],ALLOC_NORMAL);A=allocate([76,79,71,95,69,77,69,82,71,0],"i8",ALLOC_NORMAL);C=allocate([76,79,71,95,65,76,69,82,84,0],"i8",ALLOC_NORMAL);
G=allocate([76,79,71,95,67,82,73,84,0],"i8",ALLOC_NORMAL);F=allocate([76,79,71,95,69,82,82,0],"i8",ALLOC_NORMAL);E=allocate([76,79,71,95,87,65,82,78,73,78,71,0],"i8",ALLOC_NORMAL);N=allocate([76,79,71,95,78,79,84,73,67,69,0],"i8",ALLOC_NORMAL);Q=allocate([76,79,71,95,73,78,70,79,0],"i8",ALLOC_NORMAL);I=allocate([76,79,71,95,68,69,66,85,71,0],"i8",ALLOC_NORMAL);J=allocate([76,79,71,95,80,73,68,0],"i8",ALLOC_NORMAL);P=allocate([76,79,71,95,67,79,78,83,0],"i8",ALLOC_NORMAL);D=allocate([76,79,71,95,78,
68,69,76,65,89,0],"i8",ALLOC_NORMAL);T=allocate([76,79,71,95,78,79,87,65,73,84,0],"i8",ALLOC_NORMAL);L=allocate([76,79,71,95,80,69,82,82,79,82,0],"i8",ALLOC_NORMAL);$=allocate([76,79,71,95,75,69,82,78,0],"i8",ALLOC_NORMAL);R=allocate([76,79,71,95,85,83,69,82,0],"i8",ALLOC_NORMAL);K=allocate([76,79,71,95,77,65,73,76,0],"i8",ALLOC_NORMAL);H=allocate([76,79,71,95,68,65,69,77,79,78,0],"i8",ALLOC_NORMAL);S=allocate([76,79,71,95,65,85,84,72,0],"i8",ALLOC_NORMAL);U=allocate([76,79,71,95,76,80,82,0],"i8",
ALLOC_NORMAL);z=allocate([76,79,71,95,76,79,67,65,76,48,0],"i8",ALLOC_NORMAL);aa=allocate([76,79,71,95,76,79,67,65,76,49,0],"i8",ALLOC_NORMAL);ja=allocate([76,79,71,95,76,79,67,65,76,50,0],"i8",ALLOC_NORMAL);la=allocate([76,79,71,95,76,79,67,65,76,51,0],"i8",ALLOC_NORMAL);da=allocate([76,79,71,95,76,79,67,65,76,52,0],"i8",ALLOC_NORMAL);Ka=allocate([76,79,71,95,76,79,67,65,76,53,0],"i8",ALLOC_NORMAL);Ma=allocate([76,79,71,95,76,79,67,65,76,54,0],"i8",ALLOC_NORMAL);wa=allocate([76,79,71,95,76,79,67,
65,76,55,0],"i8",ALLOC_NORMAL);ib=allocate([76,79,71,95,83,89,83,76,79,71,0],"i8",ALLOC_NORMAL);cb=allocate([76,79,71,95,67,82,79,78,0],"i8",ALLOC_NORMAL);db=allocate([76,79,71,95,85,85,67,80,0],"i8",ALLOC_NORMAL);Da=allocate([76,79,71,95,78,69,87,83,0],"i8",ALLOC_NORMAL);HEAP[j]=k;HEAP[j+4]=l;HEAP[j+8]=m;HEAP[B]=s;HEAP[B+4]=g+2;HEAP[B+16]=u;HEAP[B+20]=g+4;HEAP[B+32]=v;HEAP[B+36]=g+6;HEAP[B+48]=w;HEAP[B+52]=g+8;HEAP[B+64]=x;HEAP[B+68]=g+10;HEAP[B+80]=y;HEAP[B+84]=g+12}var a={arguments:[]};Runtime.QUANTUM_SIZE=
4;var c,d,f,h,j,k,l,m,n,o,p,q,r,t,s,u,v,w,x,y,B,A,C,G,F,E,N,Q,I,J,P,D,T,L,$,R,K,H,S,U,z,aa,ja,la,da,Ka,Ma,wa,ib,cb,db,Da;a._initsyslog=function(){var a;for(a=-1;;)switch(a){case -1:var b;b=_Py_InitModule4(v,B,0,0,1013);a=b==0?2:1;break;case 1:_PyModule_AddIntConstant(b,A,0);_PyModule_AddIntConstant(b,C,1);_PyModule_AddIntConstant(b,G,2);_PyModule_AddIntConstant(b,F,3);_PyModule_AddIntConstant(b,E,4);_PyModule_AddIntConstant(b,N,5);_PyModule_AddIntConstant(b,Q,6);_PyModule_AddIntConstant(b,I,7);_PyModule_AddIntConstant(b,
J,1);_PyModule_AddIntConstant(b,P,2);_PyModule_AddIntConstant(b,D,8);_PyModule_AddIntConstant(b,T,16);_PyModule_AddIntConstant(b,L,32);_PyModule_AddIntConstant(b,$,0);_PyModule_AddIntConstant(b,R,8);_PyModule_AddIntConstant(b,K,16);_PyModule_AddIntConstant(b,H,24);_PyModule_AddIntConstant(b,S,32);_PyModule_AddIntConstant(b,U,48);_PyModule_AddIntConstant(b,z,128);_PyModule_AddIntConstant(b,aa,136);_PyModule_AddIntConstant(b,ja,144);_PyModule_AddIntConstant(b,la,152);_PyModule_AddIntConstant(b,da,160);
_PyModule_AddIntConstant(b,Ka,168);_PyModule_AddIntConstant(b,Ma,176);_PyModule_AddIntConstant(b,wa,184);_PyModule_AddIntConstant(b,ib,40);_PyModule_AddIntConstant(b,cb,72);_PyModule_AddIntConstant(b,db,64);_PyModule_AddIntConstant(b,Da,56);a=2;break;case 2:return;default:assert(0,"bad label: "+a)}};FUNCTION_TABLE=FUNCTION_TABLE.concat([0,0,e,0,function(){var a;for(a=-1;;)switch(a){case -1:a=HEAP[d]!=0?1:5;break;case 1:_closelog();a=HEAP[c]!=0?2:4;break;case 2:a=HEAP[c];HEAP[a]-=1;a=HEAP[a]==0?3:
4;break;case 3:FUNCTION_TABLE[HEAP[HEAP[HEAP[c]+4]+24]](HEAP[c]);a=4;break;case 4:HEAP[c]=0;HEAP[d]=0;a=5;break;case 5:return HEAP[__Py_NoneStruct]+=1,a=__Py_NoneStruct;default:assert(0,"bad label: "+a)}},0,function(a,b){var c=STACKTOP;STACKTOP+=8;_memset(c,0,8);var f;for(f=-1;;)switch(f){case -1:var g,h,j,k=c,l=c+4,m,q;g=a;h=b;HEAP[l]=6;f=_PyArg_ParseTuple(h,n,allocate([l,0,0,0,k,0,0,0],["i32*",0,0,0,"i8**",0,0,0],ALLOC_STACK))==0?1:3;break;case 1:_PyErr_Clear();f=_PyArg_ParseTuple(h,o,allocate([k,
0,0,0],["i8**",0,0,0],ALLOC_STACK))==0?2:3;break;case 2:j=0;f=11;break;case 3:f=HEAP[d]==0?4:10;break;case 4:m=_PyTuple_New(0);f=m!=0?5:10;break;case 5:q=e(g,m,0);f=q!=0?6:8;break;case 6:HEAP[q]-=1;f=HEAP[q]==0?7:8;break;case 7:FUNCTION_TABLE[HEAP[HEAP[q+4]+24]](q);f=8;break;case 8:HEAP[m]-=1;f=HEAP[m]==0?9:10;break;case 9:FUNCTION_TABLE[HEAP[HEAP[m+4]+24]](m);f=10;break;case 10:_syslog(HEAP[l],p,allocate([HEAP[k],0,0,0],["i8*",0,0,0],ALLOC_STACK));HEAP[__Py_NoneStruct]+=1;j=__Py_NoneStruct;f=11;
break;case 11:return f=j,STACKTOP=c,f;default:assert(0,"bad label: "+f)}},0,function(a,b){var c=STACKTOP;STACKTOP+=4;_memset(c,0,4);var d;for(d=-1;;)switch(d){case -1:var e,f;e=c;d=_PyArg_ParseTuple(b,q,allocate([e,0,0,0],["i32*",0,0,0],ALLOC_STACK))==0?1:2;break;case 1:f=0;d=3;break;case 2:d=_setlogmask(HEAP[e]);f=_PyInt_FromLong(d);d=3;break;case 3:return e=f,STACKTOP=c,e;default:assert(0,"bad label: "+d)}},0,function(a,b){var c=STACKTOP;STACKTOP+=4;_memset(c,0,4);var d;for(d=-1;;)switch(d){case -1:var e,
f;e=c;d=_PyArg_ParseTuple(b,r,allocate([e,0,0,0],["i32*",0,0,0],ALLOC_STACK))==0?1:2;break;case 1:f=0;d=3;break;case 2:d=1<<HEAP[e];f=_PyInt_FromLong(d);d=3;break;case 3:return e=f,STACKTOP=c,e;default:assert(0,"bad label: "+d)}},0,function(a,b){var c=STACKTOP;STACKTOP+=4;_memset(c,0,4);var d;for(d=-1;;)switch(d){case -1:var e,f;e=c;d=_PyArg_ParseTuple(b,t,allocate([e,0,0,0],["i32*",0,0,0],ALLOC_STACK))==0?1:2;break;case 1:f=0;d=3;break;case 2:d=(1<<HEAP[e]+1)-1;f=_PyInt_FromLong(d);d=3;break;case 3:return e=
f,STACKTOP=c,e;default:assert(0,"bad label: "+d)}},0]);a.run=b;b();return a});