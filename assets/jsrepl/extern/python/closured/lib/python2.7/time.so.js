(function(g){function e(a){var b;for(b=-1;;)switch(b){case -1:var c;b=a;c=b|0;b-=c;b=b<=-1|b>=1?1:2;break;case 1:_PyErr_SetString(HEAP[_PyExc_ValueError],k);c=-1;b=2;break;case 2:return a=c;default:assert(0,"bad label: "+b)}}function b(a,b){var c=STACKTOP;STACKTOP+=4;_memset(c,0,4);var d;for(d=-1;;)switch(d){case -1:var f,g,h,j=c;d=a;f=b;d=e(d);HEAP[j]=d;d=HEAP[j]==-1?1:3;break;case 1:d=_PyErr_Occurred()!=0?2:3;break;case 2:g=0;d=8;break;case 3:h=
___errno_location();HEAP[h]=0;h=d=FUNCTION_TABLE[f](j);d=d==0?4:7;break;case 4:d=___errno_location();d=HEAP[d]==0?5:6;break;case 5:d=___errno_location();HEAP[d]=22;d=6;break;case 6:g=_PyErr_SetFromErrno(HEAP[_PyExc_ValueError]);d=8;break;case 7:a:{g=h;d=void 0;for(d=-1;;)switch(d){case -1:var k,l,m;k=g;m=_PyStructSequence_New(T);d=m==0?1:2;break;case 1:l=0;d=8;break;case 2:var n=m;d=_PyInt_FromLong(HEAP[k+20]+1900);HEAP[n+12]=d;n=m;d=_PyInt_FromLong(HEAP[k+16]+1);HEAP[n+12+4]=d;n=m;d=_PyInt_FromLong(HEAP[k+
12]);HEAP[n+12+8]=d;n=m;d=_PyInt_FromLong(HEAP[k+8]);HEAP[n+12+12]=d;n=m;d=_PyInt_FromLong(HEAP[k+4]);HEAP[n+12+16]=d;n=m;d=_PyInt_FromLong(HEAP[k]);HEAP[n+12+20]=d;n=m;d=_PyInt_FromLong((HEAP[k+24]+6)%7);HEAP[n+12+24]=d;n=m;d=_PyInt_FromLong(HEAP[k+28]+1);HEAP[n+12+28]=d;n=m;d=_PyInt_FromLong(HEAP[k+32]);HEAP[n+12+32]=d;d=_PyErr_Occurred();n=m;d=d!=0?3:7;break;case 3:d=n!=0?4:6;break;case 4:HEAP[m]-=1;d=HEAP[m]==0?5:6;break;case 5:FUNCTION_TABLE[HEAP[HEAP[m+4]+24]](m);d=6;break;case 6:l=0;d=8;break;
case 7:l=n;d=8;break;case 8:g=l;break a;default:assert(0,"bad label: "+d)}g=void 0}d=8;break;case 8:return f=g,STACKTOP=c,f;default:assert(0,"bad label: "+d)}}function a(a,b,c){var d=STACKTOP;STACKTOP+=4;_memset(d,0,4);var e;for(e=-1;;)switch(e){case -1:var g,h,j,k=d,l;e=a;g=b;h=c;HEAP[k]=0;e=_PyArg_ParseTuple(e,g,allocate([k,0,0,0],["%struct.PyObject**",0,0,0],ALLOC_STACK))==0?1:2;break;case 1:j=0;e=8;break;case 2:e=HEAP[k]==0|HEAP[k]==__Py_NoneStruct?3:4;break;case 3:e=f();HEAP[h]=e;e=7;break;case 4:l=
_PyFloat_AsDouble(HEAP[k]);e=_PyErr_Occurred()!=0?5:6;break;case 5:j=0;e=8;break;case 6:HEAP[h]=l;e=7;break;case 7:j=1;e=8;break;case 8:return a=j,STACKTOP=d,a;default:assert(0,"bad label: "+e)}}function c(a,b){var c=STACKTOP;STACKTOP+=4;_memset(c,0,4);var d;for(d=-1;;)switch(d){case -1:var e,f,g=c,h;d=a;e=b;_llvm_memset_p0i8_i32(e,0,44,1,0);d=_PyArg_Parse(d,H,allocate([g,0,0,0,e+16,0,0,0,e+12,0,0,0,e+8,0,0,0,e+4,0,0,0,e,0,0,0,e+24,0,0,0,e+28,0,0,0,e+32,0,0,0],["i32*",0,0,0,"i32*",0,0,0,"i32*",0,
0,0,"i32*",0,0,0,"i32*",0,0,0,"i32*",0,0,0,"i32*",0,0,0,"i32*",0,0,0,"i32*",0,0,0],ALLOC_STACK))==0?1:2;break;case 1:f=0;d=13;break;case 2:d=HEAP[g]<=1899?3:12;break;case 3:h=_PyDict_GetItemString(HEAP[S],U);d=h==0?6:4;break;case 4:d=(HEAP[HEAP[h+4]+84]&8388608)==0?6:5;break;case 5:d=_PyInt_AsLong(h)==0?6:7;break;case 6:_PyErr_SetString(HEAP[_PyExc_ValueError],z);f=0;d=13;break;case 7:var j=HEAP[g];d=HEAP[g]<=68|HEAP[g]>99?9:8;break;case 8:HEAP[g]=j+1900;d=12;break;case 9:d=j<0|HEAP[g]>68?11:10;break;
case 10:HEAP[g]+=2E3;d=12;break;case 11:_PyErr_SetString(HEAP[_PyExc_ValueError],aa);f=0;d=13;break;case 12:HEAP[e+20]=HEAP[g]-1900;HEAP[e+16]-=1;HEAP[e+24]=(HEAP[e+24]+1)%7;HEAP[e+28]-=1;f=1;d=13;break;case 13:return e=f,STACKTOP=c,e;default:assert(0,"bad label: "+d)}}function d(a){var b=STACKTOP;STACKTOP+=24;_memset(b,0,24);var c;for(c=-1;;)switch(c){case -1:var d,e,f,g=b,h,j,k,l=b+4,m=b+14;d=a;h=_time(0);HEAP[g]=(h/31557600|0)*31557600;h=_localtime(g);j=0-HEAP[h+36];c=HEAP[h+40]!=0?1:2;break;case 1:f=
HEAP[h+40];c=3;break;case 2:f=Ia;c=3;break;case 3:_strncpy(l,f,9);HEAP[l+9]=0;HEAP[g]+=15778800;h=_localtime(g);k=0-HEAP[h+36];c=HEAP[h+40]!=0?4:5;break;case 4:e=HEAP[h+40];c=6;break;case 5:e=Ia;c=6;break;case 6:_strncpy(m,e,9);HEAP[m+9]=0;var n=d;c=j<k?7:8;break;case 7:_PyModule_AddIntConstant(n,Fa,k);_PyModule_AddIntConstant(d,$a,j);_PyModule_AddIntConstant(d,Wa,j!=k);c=_Py_BuildValue(Y,allocate([m,0,0,0,l,0,0,0],["i8*",0,0,0,"i8*",0,0,0],ALLOC_STACK));_PyModule_AddObject(d,kb,c);c=9;break;case 8:_PyModule_AddIntConstant(n,
Fa,j);_PyModule_AddIntConstant(d,$a,k);_PyModule_AddIntConstant(d,Wa,j!=k);c=_Py_BuildValue(Y,allocate([l,0,0,0,m,0,0,0],["i8*",0,0,0,"i8*",0,0,0],ALLOC_STACK));_PyModule_AddObject(d,kb,c);c=9;break;case 9:STACKTOP=b;return;default:assert(0,"bad label: "+c)}}function f(){var a=STACKTOP;STACKTOP+=20;_memset(a,0,20);var b;for(b=-1;;)switch(b){case -1:var c,d=a,e=a+8;b=_gettimeofday(d,0)==0?1:2;break;case 1:c=HEAP[d]+HEAP[d+4]*1.0E-6;b=3;break;case 2:_ftime(e);c=HEAP[e]+HEAP[e+4]*0.001;b=3;break;case 3:return b=
c,STACKTOP=a,b;default:assert(0,"bad label: "+b)}}function h(){k=allocate([116,105,109,101,115,116,97,109,112,32,111,117,116,32,111,102,32,114,97,110,103,101,32,102,111,114,32,112,108,97,116,102,111,114,109,32,116,105,109,101,95,116,0],"i8",ALLOC_NORMAL);l=allocate([116,105,109,101,40,41,32,45,62,32,102,108,111,97,116,105,110,103,32,112,111,105,110,116,32,110,117,109,98,101,114,10,10,82,101,116,117,114,110,32,116,104,101,32,99,117,114,114,101,110,116,32,116,105,109,101,32,105,110,32,115,101,99,111,
110,100,115,32,115,105,110,99,101,32,116,104,101,32,69,112,111,99,104,46,10,70,114,97,99,116,105,111,110,115,32,111,102,32,97,32,115,101,99,111,110,100,32,109,97,121,32,98,101,32,112,114,101,115,101,110,116,32,105,102,32,116,104,101,32,115,121,115,116,101,109,32,99,108,111,99,107,32,112,114,111,118,105,100,101,115,32,116,104,101,109,46,0],"i8",ALLOC_NORMAL);m=allocate([99,108,111,99,107,40,41,32,45,62,32,102,108,111,97,116,105,110,103,32,112,111,105,110,116,32,110,117,109,98,101,114,10,10,82,101,
116,117,114,110,32,116,104,101,32,67,80,85,32,116,105,109,101,32,111,114,32,114,101,97,108,32,116,105,109,101,32,115,105,110,99,101,32,116,104,101,32,115,116,97,114,116,32,111,102,32,116,104,101,32,112,114,111,99,101,115,115,32,111,114,32,115,105,110,99,101,10,116,104,101,32,102,105,114,115,116,32,99,97,108,108,32,116,111,32,99,108,111,99,107,40,41,46,32,32,84,104,105,115,32,104,97,115,32,97,115,32,109,117,99,104,32,112,114,101,99,105,115,105,111,110,32,97,115,32,116,104,101,32,115,121,115,116,101,
109,10,114,101,99,111,114,100,115,46,0],"i8",ALLOC_NORMAL);n=allocate([100,58,115,108,101,101,112,0],"i8",ALLOC_NORMAL);o=allocate([115,108,101,101,112,40,115,101,99,111,110,100,115,41,10,10,68,101,108,97,121,32,101,120,101,99,117,116,105,111,110,32,102,111,114,32,97,32,103,105,118,101,110,32,110,117,109,98,101,114,32,111,102,32,115,101,99,111,110,100,115,46,32,32,84,104,101,32,97,114,103,117,109,101,110,116,32,109,97,121,32,98,101,10,97,32,102,108,111,97,116,105,110,103,32,112,111,105,110,116,32,
110,117,109,98,101,114,32,102,111,114,32,115,117,98,115,101,99,111,110,100,32,112,114,101,99,105,115,105,111,110,46,0],"i8",ALLOC_NORMAL);p=allocate([116,109,95,121,101,97,114,0],"i8",ALLOC_NORMAL);q=allocate([121,101,97,114,44,32,102,111,114,32,101,120,97,109,112,108,101,44,32,49,57,57,51,0],"i8",ALLOC_NORMAL);r=allocate([116,109,95,109,111,110,0],"i8",ALLOC_NORMAL);t=allocate([109,111,110,116,104,32,111,102,32,121,101,97,114,44,32,114,97,110,103,101,32,91,49,44,32,49,50,93,0],"i8",ALLOC_NORMAL);
s=allocate([116,109,95,109,100,97,121,0],"i8",ALLOC_NORMAL);u=allocate([100,97,121,32,111,102,32,109,111,110,116,104,44,32,114,97,110,103,101,32,91,49,44,32,51,49,93,0],"i8",ALLOC_NORMAL);v=allocate([116,109,95,104,111,117,114,0],"i8",ALLOC_NORMAL);w=allocate([104,111,117,114,115,44,32,114,97,110,103,101,32,91,48,44,32,50,51,93,0],"i8",ALLOC_NORMAL);x=allocate([116,109,95,109,105,110,0],"i8",ALLOC_NORMAL);y=allocate([109,105,110,117,116,101,115,44,32,114,97,110,103,101,32,91,48,44,32,53,57,93,0],
"i8",ALLOC_NORMAL);B=allocate([116,109,95,115,101,99,0],"i8",ALLOC_NORMAL);A=allocate([115,101,99,111,110,100,115,44,32,114,97,110,103,101,32,91,48,44,32,54,49,93,41,0],"i8",ALLOC_NORMAL);C=allocate([116,109,95,119,100,97,121,0],"i8",ALLOC_NORMAL);G=allocate([100,97,121,32,111,102,32,119,101,101,107,44,32,114,97,110,103,101,32,91,48,44,32,54,93,44,32,77,111,110,100,97,121,32,105,115,32,48,0],"i8",ALLOC_NORMAL);F=allocate([116,109,95,121,100,97,121,0],"i8",ALLOC_NORMAL);E=allocate([100,97,121,32,111,
102,32,121,101,97,114,44,32,114,97,110,103,101,32,91,49,44,32,51,54,54,93,0],"i8",ALLOC_NORMAL);N=allocate([116,109,95,105,115,100,115,116,0],"i8",ALLOC_NORMAL);Q=allocate([49,32,105,102,32,115,117,109,109,101,114,32,116,105,109,101,32,105,115,32,105,110,32,101,102,102,101,99,116,44,32,48,32,105,102,32,110,111,116,44,32,97,110,100,32,45,49,32,105,102,32,117,110,107,110,111,119,110,0],"i8",ALLOC_NORMAL);I=allocate(80,["i8*",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"i8*",0,
0,0,"i8*",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"i8","i8","i8","i8"],ALLOC_NORMAL);J=allocate([0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0],["i8*",0,0,0,"i8*",0,0,0,"%struct.PyStructSequence_Field*",0,0,0,"i32",0,0,0],ALLOC_NORMAL);P=allocate([116,105,109,101,46,115,116,114,117,99,116,95,116,105,109,101,0],"i8",ALLOC_NORMAL);D=allocate([84,104,101,32,116,105,109,101,32,118,97,108,117,101,32,97,115,32,114,101,116,
117,114,110,101,100,32,98,121,32,103,109,116,105,109,101,40,41,44,32,108,111,99,97,108,116,105,109,101,40,41,44,32,97,110,100,32,115,116,114,112,116,105,109,101,40,41,44,32,97,110,100,10,32,97,99,99,101,112,116,101,100,32,98,121,32,97,115,99,116,105,109,101,40,41,44,32,109,107,116,105,109,101,40,41,32,97,110,100,32,115,116,114,102,116,105,109,101,40,41,46,32,32,77,97,121,32,98,101,32,99,111,110,115,105,100,101,114,101,100,32,97,115,32,97,10,32,115,101,113,117,101,110,99,101,32,111,102,32,57,32,105,
110,116,101,103,101,114,115,46,10,10,32,78,111,116,101,32,116,104,97,116,32,115,101,118,101,114,97,108,32,102,105,101,108,100,115,39,32,118,97,108,117,101,115,32,97,114,101,32,110,111,116,32,116,104,101,32,115,97,109,101,32,97,115,32,116,104,111,115,101,32,100,101,102,105,110,101,100,32,98,121,10,32,116,104,101,32,67,32,108,97,110,103,117,97,103,101,32,115,116,97,110,100,97,114,100,32,102,111,114,32,115,116,114,117,99,116,32,116,109,46,32,32,70,111,114,32,101,120,97,109,112,108,101,44,32,116,104,
101,32,118,97,108,117,101,32,111,102,32,116,104,101,10,32,102,105,101,108,100,32,116,109,95,121,101,97,114,32,105,115,32,116,104,101,32,97,99,116,117,97,108,32,121,101,97,114,44,32,110,111,116,32,121,101,97,114,32,45,32,49,57,48,48,46,32,32,83,101,101,32,105,110,100,105,118,105,100,117,97,108,10,32,102,105,101,108,100,115,39,32,100,101,115,99,114,105,112,116,105,111,110,115,32,102,111,114,32,100,101,116,97,105,108,115,46,0],"i8",ALLOC_NORMAL);T=allocate(196,["i32",0,0,0,"%struct._typeobject*",0,0,
0,"i32",0,0,0,"i8*",0,0,0,"i32",0,0,0,"i32",0,0,0,"void (%struct.PyObject*)*",0,0,0,"i32 (%struct.PyObject*, %struct.FILE*, i32)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, i8*)*",0,0,0,"i32 (%struct.PyObject*, i8*, %struct.PyObject*)*",0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*)*",0,0,0,"%struct.PyNumberMethods*",0,0,0,"%struct.PySequenceMethods*",0,0,0,"%struct.PyMappingMethods*",0,0,0,"i32 (%struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",
0,0,0,"%struct.PyObject* (%struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"%struct.PyBufferProcs*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i32 (%struct.PyObject*, i32 (%struct.PyObject*, i8*)*, i8*)*",0,0,0,"i32 (%struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*, i32)*",0,0,0,"i32",0,0,0,"%struct.PyObject* (%struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*)*",
0,0,0,"%struct.PyMethodDef*",0,0,0,"%struct.PyMemberDef*",0,0,0,"%struct.PyGetSetDef*",0,0,0,"%struct._typeobject*",0,0,0,"%struct.PyObject*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct._typeobject*, i32)*",0,0,0,"%struct.PyObject* (%struct._typeobject*, %struct.PyObject*, %struct.PyObject*)*",
0,0,0,"void (i8*)*",0,0,0,"i32 (%struct.PyObject*)*",0,0,0,"%struct.PyObject*",0,0,0,"%struct.PyObject*",0,0,0,"%struct.PyObject*",0,0,0,"%struct.PyObject*",0,0,0,"%struct.PyObject*",0,0,0,"void (%struct.PyObject*)*",0,0,0,"i32",0,0,0],ALLOC_NORMAL);L=allocate([124,79,58,103,109,116,105,109,101,0],"i8",ALLOC_NORMAL);$=allocate([103,109,116,105,109,101,40,91,115,101,99,111,110,100,115,93,41,32,45,62,32,40,116,109,95,121,101,97,114,44,32,116,109,95,109,111,110,44,32,116,109,95,109,100,97,121,44,32,
116,109,95,104,111,117,114,44,32,116,109,95,109,105,110,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,116,109,95,115,101,99,44,32,116,109,95,119,100,97,121,44,32,116,109,95,121,100,97,121,44,32,116,109,95,105,115,100,115,116,41,10,10,67,111,110,118,101,114,116,32,115,101,99,111,110,100,115,32,115,105,110,99,101,32,116,104,101,32,69,112,111,99,104,32,116,111,32,97,32,116,105,109,101,32,116,117,112,108,101,32,101,120,112,114,101,115,115,105,110,103,32,85,84,67,32,40,97,
46,107,46,97,46,10,71,77,84,41,46,32,32,87,104,101,110,32,39,115,101,99,111,110,100,115,39,32,105,115,32,110,111,116,32,112,97,115,115,101,100,32,105,110,44,32,99,111,110,118,101,114,116,32,116,104,101,32,99,117,114,114,101,110,116,32,116,105,109,101,32,105,110,115,116,101,97,100,46,0],"i8",ALLOC_NORMAL);R=allocate([124,79,58,108,111,99,97,108,116,105,109,101,0],"i8",ALLOC_NORMAL);K=allocate([108,111,99,97,108,116,105,109,101,40,91,115,101,99,111,110,100,115,93,41,32,45,62,32,40,116,109,95,121,101,
97,114,44,116,109,95,109,111,110,44,116,109,95,109,100,97,121,44,116,109,95,104,111,117,114,44,116,109,95,109,105,110,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,116,109,95,115,101,99,44,116,109,95,119,100,97,121,44,116,109,95,121,100,97,121,44,116,109,95,105,115,100,115,116,41,10,10,67,111,110,118,101,114,116,32,115,101,99,111,110,100,115,32,115,105,110,99,101,32,116,104,101,32,69,112,111,99,104,32,116,111,32,97,32,116,105,109,101,32,116,117,112,108,101,32,
101,120,112,114,101,115,115,105,110,103,32,108,111,99,97,108,32,116,105,109,101,46,10,87,104,101,110,32,39,115,101,99,111,110,100,115,39,32,105,115,32,110,111,116,32,112,97,115,115,101,100,32,105,110,44,32,99,111,110,118,101,114,116,32,116,104,101,32,99,117,114,114,101,110,116,32,116,105,109,101,32,105,110,115,116,101,97,100,46,0],"i8",ALLOC_NORMAL);H=allocate([40,105,105,105,105,105,105,105,105,105,41,0],"i8",ALLOC_NORMAL);S=allocate(1,"%struct.PyObject*",ALLOC_NORMAL);U=allocate([97,99,99,101,112,
116,50,100,121,101,97,114,0],"i8",ALLOC_NORMAL);z=allocate([121,101,97,114,32,62,61,32,49,57,48,48,32,114,101,113,117,105,114,101,100,0],"i8",ALLOC_NORMAL);aa=allocate([121,101,97,114,32,111,117,116,32,111,102,32,114,97,110,103,101,0],"i8",ALLOC_NORMAL);ja=allocate([115,124,79,58,115,116,114,102,116,105,109,101,0],"i8",ALLOC_NORMAL);la=allocate([109,111,110,116,104,32,111,117,116,32,111,102,32,114,97,110,103,101,0],"i8",ALLOC_NORMAL);da=allocate([100,97,121,32,111,102,32,109,111,110,116,104,32,111,
117,116,32,111,102,32,114,97,110,103,101,0],"i8",ALLOC_NORMAL);Ka=allocate([104,111,117,114,32,111,117,116,32,111,102,32,114,97,110,103,101,0],"i8",ALLOC_NORMAL);Ma=allocate([109,105,110,117,116,101,32,111,117,116,32,111,102,32,114,97,110,103,101,0],"i8",ALLOC_NORMAL);wa=allocate([115,101,99,111,110,100,115,32,111,117,116,32,111,102,32,114,97,110,103,101,0],"i8",ALLOC_NORMAL);ib=allocate([100,97,121,32,111,102,32,119,101,101,107,32,111,117,116,32,111,102,32,114,97,110,103,101,0],"i8",ALLOC_NORMAL);
cb=allocate([100,97,121,32,111,102,32,121,101,97,114,32,111,117,116,32,111,102,32,114,97,110,103,101,0],"i8",ALLOC_NORMAL);db=allocate([115,116,114,102,116,105,109,101,40,102,111,114,109,97,116,91,44,32,116,117,112,108,101,93,41,32,45,62,32,115,116,114,105,110,103,10,10,67,111,110,118,101,114,116,32,97,32,116,105,109,101,32,116,117,112,108,101,32,116,111,32,97,32,115,116,114,105,110,103,32,97,99,99,111,114,100,105,110,103,32,116,111,32,97,32,102,111,114,109,97,116,32,115,112,101,99,105,102,105,99,
97,116,105,111,110,46,10,83,101,101,32,116,104,101,32,108,105,98,114,97,114,121,32,114,101,102,101,114,101,110,99,101,32,109,97,110,117,97,108,32,102,111,114,32,102,111,114,109,97,116,116,105,110,103,32,99,111,100,101,115,46,32,87,104,101,110,32,116,104,101,32,116,105,109,101,32,116,117,112,108,101,10,105,115,32,110,111,116,32,112,114,101,115,101,110,116,44,32,99,117,114,114,101,110,116,32,116,105,109,101,32,97,115,32,114,101,116,117,114,110,101,100,32,98,121,32,108,111,99,97,108,116,105,109,101,
40,41,32,105,115,32,117,115,101,100,46,0],"i8",ALLOC_NORMAL);Da=allocate([95,115,116,114,112,116,105,109,101,0],"i8",ALLOC_NORMAL);gb=allocate([95,115,116,114,112,116,105,109,101,95,116,105,109,101,0],"i8",ALLOC_NORMAL);Xa=allocate([79,0],"i8",ALLOC_NORMAL);Ca=allocate([115,116,114,112,116,105,109,101,40,115,116,114,105,110,103,44,32,102,111,114,109,97,116,41,32,45,62,32,115,116,114,117,99,116,95,116,105,109,101,10,10,80,97,114,115,101,32,97,32,115,116,114,105,110,103,32,116,111,32,97,32,116,105,
109,101,32,116,117,112,108,101,32,97,99,99,111,114,100,105,110,103,32,116,111,32,97,32,102,111,114,109,97,116,32,115,112,101,99,105,102,105,99,97,116,105,111,110,46,10,83,101,101,32,116,104,101,32,108,105,98,114,97,114,121,32,114,101,102,101,114,101,110,99,101,32,109,97,110,117,97,108,32,102,111,114,32,102,111,114,109,97,116,116,105,110,103,32,99,111,100,101,115,32,40,115,97,109,101,32,97,115,32,115,116,114,102,116,105,109,101,40,41,41,46,0],"i8",ALLOC_NORMAL);Za=allocate([97,115,99,116,105,109,101,
0],"i8",ALLOC_NORMAL);Va=allocate([105,110,118,97,108,105,100,32,116,105,109,101,0],"i8",ALLOC_NORMAL);Ga=allocate([97,115,99,116,105,109,101,40,91,116,117,112,108,101,93,41,32,45,62,32,115,116,114,105,110,103,10,10,67,111,110,118,101,114,116,32,97,32,116,105,109,101,32,116,117,112,108,101,32,116,111,32,97,32,115,116,114,105,110,103,44,32,101,46,103,46,32,39,83,97,116,32,74,117,110,32,48,54,32,49,54,58,50,54,58,49,49,32,49,57,57,56,39,46,10,87,104,101,110,32,116,104,101,32,116,105,109,101,32,116,
117,112,108,101,32,105,115,32,110,111,116,32,112,114,101,115,101,110,116,44,32,99,117,114,114,101,110,116,32,116,105,109,101,32,97,115,32,114,101,116,117,114,110,101,100,32,98,121,32,108,111,99,97,108,116,105,109,101,40,41,10,105,115,32,117,115,101,100,46,0],"i8",ALLOC_NORMAL);ha=allocate([99,116,105,109,101,0],"i8",ALLOC_NORMAL);Na=allocate([117,110,99,111,110,118,101,114,116,105,98,108,101,32,116,105,109,101,0],"i8",ALLOC_NORMAL);jb=allocate([99,116,105,109,101,40,115,101,99,111,110,100,115,41,
32,45,62,32,115,116,114,105,110,103,10,10,67,111,110,118,101,114,116,32,97,32,116,105,109,101,32,105,110,32,115,101,99,111,110,100,115,32,115,105,110,99,101,32,116,104,101,32,69,112,111,99,104,32,116,111,32,97,32,115,116,114,105,110,103,32,105,110,32,108,111,99,97,108,32,116,105,109,101,46,10,84,104,105,115,32,105,115,32,101,113,117,105,118,97,108,101,110,116,32,116,111,32,97,115,99,116,105,109,101,40,108,111,99,97,108,116,105,109,101,40,115,101,99,111,110,100,115,41,41,46,32,87,104,101,110,32,116,
104,101,32,116,105,109,101,32,116,117,112,108,101,32,105,115,10,110,111,116,32,112,114,101,115,101,110,116,44,32,99,117,114,114,101,110,116,32,116,105,109,101,32,97,115,32,114,101,116,117,114,110,101,100,32,98,121,32,108,111,99,97,108,116,105,109,101,40,41,32,105,115,32,117,115,101,100,46,0],"i8",ALLOC_NORMAL);hb=allocate([109,107,116,105,109,101,32,97,114,103,117,109,101,110,116,32,111,117,116,32,111,102,32,114,97,110,103,101,0],"i8",ALLOC_NORMAL);Qa=allocate([109,107,116,105,109,101,40,116,117,
112,108,101,41,32,45,62,32,102,108,111,97,116,105,110,103,32,112,111,105,110,116,32,110,117,109,98,101,114,10,10,67,111,110,118,101,114,116,32,97,32,116,105,109,101,32,116,117,112,108,101,32,105,110,32,108,111,99,97,108,32,116,105,109,101,32,116,111,32,115,101,99,111,110,100,115,32,115,105,110,99,101,32,116,104,101,32,69,112,111,99,104,46,0],"i8",ALLOC_NORMAL);Ha=allocate([116,105,109,101,0],"i8",ALLOC_NORMAL);Ra=allocate([116,122,115,101,116,40,41,10,10,73,110,105,116,105,97,108,105,122,101,44,32,
111,114,32,114,101,105,110,105,116,105,97,108,105,122,101,44,32,116,104,101,32,108,111,99,97,108,32,116,105,109,101,122,111,110,101,32,116,111,32,116,104,101,32,118,97,108,117,101,32,115,116,111,114,101,100,32,105,110,10,111,115,46,101,110,118,105,114,111,110,91,39,84,90,39,93,46,32,84,104,101,32,84,90,32,101,110,118,105,114,111,110,109,101,110,116,32,118,97,114,105,97,98,108,101,32,115,104,111,117,108,100,32,98,101,32,115,112,101,99,105,102,105,101,100,32,105,110,10,115,116,97,110,100,97,114,100,
32,85,110,105,120,32,116,105,109,101,122,111,110,101,32,102,111,114,109,97,116,32,97,115,32,100,111,99,117,109,101,110,116,101,100,32,105,110,32,116,104,101,32,116,122,115,101,116,32,109,97,110,32,112,97,103,101,10,40,101,103,46,32,39,85,83,47,69,97,115,116,101,114,110,39,44,32,39,69,117,114,111,112,101,47,65,109,115,116,101,114,100,97,109,39,41,46,32,85,110,107,110,111,119,110,32,116,105,109,101,122,111,110,101,115,32,119,105,108,108,32,115,105,108,101,110,116,108,121,10,102,97,108,108,32,98,97,
99,107,32,116,111,32,85,84,67,46,32,73,102,32,116,104,101,32,84,90,32,101,110,118,105,114,111,110,109,101,110,116,32,118,97,114,105,97,98,108,101,32,105,115,32,110,111,116,32,115,101,116,44,32,116,104,101,32,108,111,99,97,108,10,116,105,109,101,122,111,110,101,32,105,115,32,115,101,116,32,116,111,32,116,104,101,32,115,121,115,116,101,109,115,32,98,101,115,116,32,103,117,101,115,115,32,111,102,32,119,97,108,108,99,108,111,99,107,32,116,105,109,101,46,10,67,104,97,110,103,105,110,103,32,116,104,101,
32,84,90,32,101,110,118,105,114,111,110,109,101,110,116,32,118,97,114,105,97,98,108,101,32,119,105,116,104,111,117,116,32,99,97,108,108,105,110,103,32,116,122,115,101,116,32,42,109,97,121,42,32,99,104,97,110,103,101,10,116,104,101,32,108,111,99,97,108,32,116,105,109,101,122,111,110,101,32,117,115,101,100,32,98,121,32,109,101,116,104,111,100,115,32,115,117,99,104,32,97,115,32,108,111,99,97,108,116,105,109,101,44,32,98,117,116,32,116,104,105,115,32,98,101,104,97,118,105,111,117,114,10,115,104,111,117,
108,100,32,110,111,116,32,98,101,32,114,101,108,105,101,100,32,111,110,46,0],"i8",ALLOC_NORMAL);Ia=allocate([32,32,32,0],"i8",ALLOC_NORMAL);Fa=allocate([116,105,109,101,122,111,110,101,0],"i8",ALLOC_NORMAL);$a=allocate([97,108,116,122,111,110,101,0],"i8",ALLOC_NORMAL);Wa=allocate([100,97,121,108,105,103,104,116,0],"i8",ALLOC_NORMAL);Y=allocate([40,122,122,41,0],"i8",ALLOC_NORMAL);kb=allocate([116,122,110,97,109,101,0],"i8",ALLOC_NORMAL);ra=allocate([99,108,111,99,107,0],"i8",ALLOC_NORMAL);Ta=allocate([115,
108,101,101,112,0],"i8",ALLOC_NORMAL);ia=allocate([103,109,116,105,109,101,0],"i8",ALLOC_NORMAL);ba=allocate([108,111,99,97,108,116,105,109,101,0],"i8",ALLOC_NORMAL);Ya=allocate([109,107,116,105,109,101,0],"i8",ALLOC_NORMAL);ta=allocate([115,116,114,102,116,105,109,101,0],"i8",ALLOC_NORMAL);O=allocate([115,116,114,112,116,105,109,101,0],"i8",ALLOC_NORMAL);wb=allocate([116,122,115,101,116,0],"i8",ALLOC_NORMAL);bb=allocate([0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],["i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,
"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",
0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,
0,"i8","i8","i8","i8","i8","i8","i8","i8"],ALLOC_NORMAL);vb=allocate([84,104,105,115,32,109,111,100,117,108,101,32,112,114,111,118,105,100,101,115,32,118,97,114,105,111,117,115,32,102,117,110,99,116,105,111,110,115,32,116,111,32,109,97,110,105,112,117,108,97,116,101,32,116,105,109,101,32,118,97,108,117,101,115,46,10,10,84,104,101,114,101,32,97,114,101,32,116,119,111,32,115,116,97,110,100,97,114,100,32,114,101,112,114,101,115,101,110,116,97,116,105,111,110,115,32,111,102,32,116,105,109,101,46,32,32,
79,110,101,32,105,115,32,116,104,101,32,110,117,109,98,101,114,10,111,102,32,115,101,99,111,110,100,115,32,115,105,110,99,101,32,116,104,101,32,69,112,111,99,104,44,32,105,110,32,85,84,67,32,40,97,46,107,46,97,46,32,71,77,84,41,46,32,32,73,116,32,109,97,121,32,98,101,32,97,110,32,105,110,116,101,103,101,114,10,111,114,32,97,32,102,108,111,97,116,105,110,103,32,112,111,105,110,116,32,110,117,109,98,101,114,32,40,116,111,32,114,101,112,114,101,115,101,110,116,32,102,114,97,99,116,105,111,110,115,32,
111,102,32,115,101,99,111,110,100,115,41,46,10,84,104,101,32,69,112,111,99,104,32,105,115,32,115,121,115,116,101,109,45,100,101,102,105,110,101,100,59,32,111,110,32,85,110,105,120,44,32,105,116,32,105,115,32,103,101,110,101,114,97,108,108,121,32,74,97,110,117,97,114,121,32,49,115,116,44,32,49,57,55,48,46,10,84,104,101,32,97,99,116,117,97,108,32,118,97,108,117,101,32,99,97,110,32,98,101,32,114,101,116,114,105,101,118,101,100,32,98,121,32,99,97,108,108,105,110,103,32,103,109,116,105,109,101,40,48,41,
46,10,10,84,104,101,32,111,116,104,101,114,32,114,101,112,114,101,115,101,110,116,97,116,105,111,110,32,105,115,32,97,32,116,117,112,108,101,32,111,102,32,57,32,105,110,116,101,103,101,114,115,32,103,105,118,105,110,103,32,108,111,99,97,108,32,116,105,109,101,46,10,84,104,101,32,116,117,112,108,101,32,105,116,101,109,115,32,97,114,101,58,10,32,32,121,101,97,114,32,40,102,111,117,114,32,100,105,103,105,116,115,44,32,101,46,103,46,32,49,57,57,56,41,10,32,32,109,111,110,116,104,32,40,49,45,49,50,41,
10,32,32,100,97,121,32,40,49,45,51,49,41,10,32,32,104,111,117,114,115,32,40,48,45,50,51,41,10,32,32,109,105,110,117,116,101,115,32,40,48,45,53,57,41,10,32,32,115,101,99,111,110,100,115,32,40,48,45,53,57,41,10,32,32,119,101,101,107,100,97,121,32,40,48,45,54,44,32,77,111,110,100,97,121,32,105,115,32,48,41,10,32,32,74,117,108,105,97,110,32,100,97,121,32,40,100,97,121,32,105,110,32,116,104,101,32,121,101,97,114,44,32,49,45,51,54,54,41,10,32,32,68,83,84,32,40,68,97,121,108,105,103,104,116,32,83,97,118,
105,110,103,115,32,84,105,109,101,41,32,102,108,97,103,32,40,45,49,44,32,48,32,111,114,32,49,41,10,73,102,32,116,104,101,32,68,83,84,32,102,108,97,103,32,105,115,32,48,44,32,116,104,101,32,116,105,109,101,32,105,115,32,103,105,118,101,110,32,105,110,32,116,104,101,32,114,101,103,117,108,97,114,32,116,105,109,101,32,122,111,110,101,59,10,105,102,32,105,116,32,105,115,32,49,44,32,116,104,101,32,116,105,109,101,32,105,115,32,103,105,118,101,110,32,105,110,32,116,104,101,32,68,83,84,32,116,105,109,101,
32,122,111,110,101,59,10,105,102,32,105,116,32,105,115,32,45,49,44,32,109,107,116,105,109,101,40,41,32,115,104,111,117,108,100,32,103,117,101,115,115,32,98,97,115,101,100,32,111,110,32,116,104,101,32,100,97,116,101,32,97,110,100,32,116,105,109,101,46,10,10,86,97,114,105,97,98,108,101,115,58,10,10,116,105,109,101,122,111,110,101,32,45,45,32,100,105,102,102,101,114,101,110,99,101,32,105,110,32,115,101,99,111,110,100,115,32,98,101,116,119,101,101,110,32,85,84,67,32,97,110,100,32,108,111,99,97,108,32,
115,116,97,110,100,97,114,100,32,116,105,109,101,10,97,108,116,122,111,110,101,32,45,45,32,100,105,102,102,101,114,101,110,99,101,32,105,110,32,32,115,101,99,111,110,100,115,32,98,101,116,119,101,101,110,32,85,84,67,32,97,110,100,32,108,111,99,97,108,32,68,83,84,32,116,105,109,101,10,100,97,121,108,105,103,104,116,32,45,45,32,119,104,101,116,104,101,114,32,108,111,99,97,108,32,116,105,109,101,32,115,104,111,117,108,100,32,114,101,102,108,101,99,116,32,68,83,84,10,116,122,110,97,109,101,32,45,45,32,
116,117,112,108,101,32,111,102,32,40,115,116,97,110,100,97,114,100,32,116,105,109,101,32,122,111,110,101,32,110,97,109,101,44,32,68,83,84,32,116,105,109,101,32,122,111,110,101,32,110,97,109,101,41,10,10,70,117,110,99,116,105,111,110,115,58,10,10,116,105,109,101,40,41,32,45,45,32,114,101,116,117,114,110,32,99,117,114,114,101,110,116,32,116,105,109,101,32,105,110,32,115,101,99,111,110,100,115,32,115,105,110,99,101,32,116,104,101,32,69,112,111,99,104,32,97,115,32,97,32,102,108,111,97,116,10,99,108,111,
99,107,40,41,32,45,45,32,114,101,116,117,114,110,32,67,80,85,32,116,105,109,101,32,115,105,110,99,101,32,112,114,111,99,101,115,115,32,115,116,97,114,116,32,97,115,32,97,32,102,108,111,97,116,10,115,108,101,101,112,40,41,32,45,45,32,100,101,108,97,121,32,102,111,114,32,97,32,110,117,109,98,101,114,32,111,102,32,115,101,99,111,110,100,115,32,103,105,118,101,110,32,97,115,32,97,32,102,108,111,97,116,10,103,109,116,105,109,101,40,41,32,45,45,32,99,111,110,118,101,114,116,32,115,101,99,111,110,100,115,
32,115,105,110,99,101,32,69,112,111,99,104,32,116,111,32,85,84,67,32,116,117,112,108,101,10,108,111,99,97,108,116,105,109,101,40,41,32,45,45,32,99,111,110,118,101,114,116,32,115,101,99,111,110,100,115,32,115,105,110,99,101,32,69,112,111,99,104,32,116,111,32,108,111,99,97,108,32,116,105,109,101,32,116,117,112,108,101,10,97,115,99,116,105,109,101,40,41,32,45,45,32,99,111,110,118,101,114,116,32,116,105,109,101,32,116,117,112,108,101,32,116,111,32,115,116,114,105,110,103,10,99,116,105,109,101,40,41,32,
45,45,32,99,111,110,118,101,114,116,32,116,105,109,101,32,105,110,32,115,101,99,111,110,100,115,32,116,111,32,115,116,114,105,110,103,10,109,107,116,105,109,101,40,41,32,45,45,32,99,111,110,118,101,114,116,32,108,111,99,97,108,32,116,105,109,101,32,116,117,112,108,101,32,116,111,32,115,101,99,111,110,100,115,32,115,105,110,99,101,32,69,112,111,99,104,10,115,116,114,102,116,105,109,101,40,41,32,45,45,32,99,111,110,118,101,114,116,32,116,105,109,101,32,116,117,112,108,101,32,116,111,32,115,116,114,
105,110,103,32,97,99,99,111,114,100,105,110,103,32,116,111,32,102,111,114,109,97,116,32,115,112,101,99,105,102,105,99,97,116,105,111,110,10,115,116,114,112,116,105,109,101,40,41,32,45,45,32,112,97,114,115,101,32,115,116,114,105,110,103,32,116,111,32,116,105,109,101,32,116,117,112,108,101,32,97,99,99,111,114,100,105,110,103,32,116,111,32,102,111,114,109,97,116,32,115,112,101,99,105,102,105,99,97,116,105,111,110,10,116,122,115,101,116,40,41,32,45,45,32,99,104,97,110,103,101,32,116,104,101,32,108,111,
99,97,108,32,116,105,109,101,122,111,110,101,0],"i8",ALLOC_NORMAL);ka=allocate([80,89,84,72,79,78,89,50,75,0],"i8",ALLOC_NORMAL);za=allocate(1,"i1",ALLOC_NORMAL);Aa=allocate([115,116,114,117,99,116,95,116,105,109,101,0],"i8",ALLOC_NORMAL);HEAP[I]=p;HEAP[I+4]=q;HEAP[I+8]=r;HEAP[I+12]=t;HEAP[I+16]=s;HEAP[I+20]=u;HEAP[I+24]=v;HEAP[I+28]=w;HEAP[I+32]=x;HEAP[I+36]=y;HEAP[I+40]=B;HEAP[I+44]=A;HEAP[I+48]=C;HEAP[I+52]=G;HEAP[I+56]=F;HEAP[I+60]=E;HEAP[I+64]=N;HEAP[I+68]=Q;HEAP[J]=P;HEAP[J+4]=D;HEAP[J+8]=I;
HEAP[bb]=Ha;HEAP[bb+4]=g+6;HEAP[bb+12]=l;HEAP[bb+16]=ra;HEAP[bb+20]=g+8;HEAP[bb+28]=m;HEAP[bb+32]=Ta;HEAP[bb+36]=g+10;HEAP[bb+44]=o;HEAP[bb+48]=ia;HEAP[bb+52]=g+12;HEAP[bb+60]=$;HEAP[bb+64]=ba;HEAP[bb+68]=g+14;HEAP[bb+76]=K;HEAP[bb+80]=Za;HEAP[bb+84]=g+16;HEAP[bb+92]=Ga;HEAP[bb+96]=ha;HEAP[bb+100]=g+18;HEAP[bb+108]=jb;HEAP[bb+112]=Ya;HEAP[bb+116]=g+20;HEAP[bb+124]=Qa;HEAP[bb+128]=ta;HEAP[bb+132]=g+22;HEAP[bb+140]=db;HEAP[bb+144]=O;HEAP[bb+148]=g+24;HEAP[bb+156]=Ca;HEAP[bb+160]=wb;HEAP[bb+164]=g+26;
HEAP[bb+172]=Ra}var j={arguments:[]};Runtime.QUANTUM_SIZE=4;var k,l,m,n,o,p,q,r,t,s,u,v,w,x,y,B,A,C,G,F,E,N,Q,I,J,P,D,T,L,$,R,K,H,S,U,z,aa,ja,la,da,Ka,Ma,wa,ib,cb,db,Da,gb,Xa,Ca,Za,Va,Ga,ha,Na,jb,hb,Qa,Ha,Ra,Ia,Fa,$a,Wa,Y,kb,ra,Ta,ia,ba,Ya,ta,O,wb,bb,vb,ka,za,Aa;j._inittime=function(){var a;for(a=-1;;)switch(a){case -1:var b,c,e;c=_Py_InitModule4(Ha,bb,vb,0,1013);a=c==0?10:1;break;case 1:a=HEAP[_Py_IgnoreEnvironmentFlag]==0?3:2;break;case 2:e=0;a=5;break;case 3:e=a=_getenv(ka);a=a==0?5:4;break;case 4:a=
HEAP[e]==0?5:6;break;case 5:b=1;a=7;break;case 6:b=0;a=7;break;case 7:_PyModule_AddIntConstant(c,U,b);a=_PyModule_GetDict(c);HEAP[S]=a;HEAP[HEAP[S]]+=1;d(c);a=HEAP[za]==0?8:9;break;case 8:_PyStructSequence_InitType(T,J);a=9;break;case 9:HEAP[T]+=1;_PyModule_AddObject(c,Aa,T);HEAP[za]=1;a=10;break;case 10:return;default:assert(0,"bad label: "+a)}};FUNCTION_TABLE=FUNCTION_TABLE.concat([0,0,_gmtime,0,_localtime,0,function(){var a;for(a=-1;;)switch(a){case -1:var b,c;c=f();a=c==0?1:2;break;case 1:_PyErr_SetFromErrno(HEAP[_PyExc_IOError]);
b=0;a=3;break;case 2:b=_PyFloat_FromDouble(c);a=3;break;case 3:return a=b;default:assert(0,"bad label: "+a)}},0,function(){var a=_clock()/1E6;return _PyFloat_FromDouble(a)},0,function(a,b){var c=STACKTOP;STACKTOP+=8;_memset(c,0,8);var d;for(d=-1;;)switch(d){case -1:var e,f=c;d=_PyArg_ParseTuple(b,n,allocate([f,0,0,0],["double*",0,0,0],ALLOC_STACK))==0?1:2;break;case 1:e=0;d=5;break;case 2:a:{var g=HEAP[f];d=STACKTOP;STACKTOP+=8;_memset(d,0,8);for(var h=void 0,h=-1;;)switch(h){case -1:var j,k=d,l,
h=g;l=_fmod(h,1);h=_floor(h);HEAP[k]=h|0;HEAP[k+4]=l*1E6|0;h=_select(0,0,0,0,k)!=0?1:3;break;case 1:h=___errno_location();h=HEAP[h]!=4?2:3;break;case 2:_PyErr_SetFromErrno(HEAP[_PyExc_IOError]);j=-1;h=4;break;case 3:j=0;h=4;break;case 4:g=j;STACKTOP=d;d=g;break a;default:assert(0,"bad label: "+h)}d=void 0}d=d!=0?3:4;break;case 3:e=0;d=5;break;case 4:HEAP[__Py_NoneStruct]+=1;e=__Py_NoneStruct;d=5;break;case 5:return STACKTOP=c,e;default:assert(0,"bad label: "+d)}},0,function(c,d){var e=STACKTOP;STACKTOP+=
8;_memset(e,0,8);var f;for(f=-1;;)switch(f){case -1:var h,j=e;f=a(d,L,j)==0?1:2;break;case 1:h=0;f=3;break;case 2:h=b(HEAP[j],g+2);f=3;break;case 3:return f=h,STACKTOP=e,f;default:assert(0,"bad label: "+f)}},0,function(c,d){var e=STACKTOP;STACKTOP+=8;_memset(e,0,8);var f;for(f=-1;;)switch(f){case -1:var h,j=e;f=a(d,R,j)==0?1:2;break;case 1:h=0;f=3;break;case 2:h=b(HEAP[j],g+4);f=3;break;case 3:return f=h,STACKTOP=e,f;default:assert(0,"bad label: "+f)}},0,function(a,b){var d=STACKTOP;STACKTOP+=52;
_memset(d,0,52);var e;for(e=-1;;)switch(e){case -1:var f,g=d,h=d+4,j,k=d+48;e=b;HEAP[g]=0;e=_PyArg_UnpackTuple(e,Za,0,1,allocate([g,0,0,0],["%struct.PyObject**",0,0,0],ALLOC_STACK))==0?1:2;break;case 1:f=0;e=11;break;case 2:e=HEAP[g]==0?3:4;break;case 3:e=_time(0);HEAP[k]=e;e=_localtime(k);_llvm_memcpy_p0i8_p0i8_i32(h,e,44,4,0);e=6;break;case 4:e=c(HEAP[g],h)==0?5:6;break;case 5:f=0;e=11;break;case 6:j=e=_asctime(h);e=e==0?7:8;break;case 7:_PyErr_SetString(HEAP[_PyExc_ValueError],Va);f=0;e=11;break;
case 8:e=HEAP[j+24]==10?9:10;break;case 9:HEAP[j+24]=0;e=10;break;case 10:f=_PyString_FromString(j);e=11;break;case 11:return STACKTOP=d,f;default:assert(0,"bad label: "+e)}},0,function(a,b){var c=STACKTOP;STACKTOP+=8;_memset(c,0,8);var d;for(d=-1;;)switch(d){case -1:var f,g=c,h=c+4,j,k;d=b;HEAP[g]=0;d=_PyArg_UnpackTuple(d,ha,0,1,allocate([g,0,0,0],["%struct.PyObject**",0,0,0],ALLOC_STACK))==0?1:2;break;case 1:f=0;d=14;break;case 2:d=HEAP[g]==0|HEAP[g]==__Py_NoneStruct?3:4;break;case 3:d=_time(0);
HEAP[h]=d;d=9;break;case 4:k=_PyFloat_AsDouble(HEAP[g]);d=_PyErr_Occurred()!=0?5:6;break;case 5:f=0;d=14;break;case 6:d=e(k);HEAP[h]=d;d=HEAP[h]==-1?7:9;break;case 7:d=_PyErr_Occurred()!=0?8:9;break;case 8:f=0;d=14;break;case 9:j=d=_ctime(h);d=d==0?10:11;break;case 10:_PyErr_SetString(HEAP[_PyExc_ValueError],Na);f=0;d=14;break;case 11:d=HEAP[j+24]==10?12:13;break;case 12:HEAP[j+24]=0;d=13;break;case 13:f=_PyString_FromString(j);d=14;break;case 14:return STACKTOP=c,f;default:assert(0,"bad label: "+
d)}},0,function(a,b){var d=STACKTOP;STACKTOP+=44;_memset(d,0,44);var e;for(e=-1;;)switch(e){case -1:var f,g=d,h;e=c(b,g)==0?1:2;break;case 1:f=0;e=6;break;case 2:HEAP[g+24]=-1;h=_mktime(g);e=h==-1?3:5;break;case 3:e=HEAP[g+24]==-1?4:5;break;case 4:_PyErr_SetString(HEAP[_PyExc_OverflowError],hb);f=0;e=6;break;case 5:f=_PyFloat_FromDouble(h);e=6;break;case 6:return e=f,STACKTOP=d,e;default:assert(0,"bad label: "+e)}},0,function(a,b){var d=STACKTOP;STACKTOP+=56;_memset(d,0,56);var e;for(e=-1;;)switch(e){case -1:var f,
g;f=d;var h=d+4,j=d+48,k,l,m,n,o=d+52;e=b;m=HEAP[f]=0;_llvm_memset_p0i8_i32(h,0,44,1,0);e=_PyArg_ParseTuple(e,ja,allocate([j,0,0,0,f,0,0,0],["i8**",0,0,0,"%struct.PyObject**",0,0,0],ALLOC_STACK))==0?1:2;break;case 1:g=0;e=43;break;case 2:e=HEAP[f]==0?3:4;break;case 3:e=_time(0);HEAP[o]=e;e=_localtime(o);_llvm_memcpy_p0i8_p0i8_i32(h,e,44,4,0);e=6;break;case 4:e=c(HEAP[f],h)==0?5:6;break;case 5:g=0;e=43;break;case 6:var p=h+16;e=HEAP[h+16]==-1?7:8;break;case 7:HEAP[p]=0;e=11;break;case 8:e=HEAP[p]<
0?10:9;break;case 9:e=HEAP[h+16]>11?10:11;break;case 10:_PyErr_SetString(HEAP[_PyExc_ValueError],la);g=0;e=43;break;case 11:var q=h+12;e=HEAP[h+12]==0?12:13;break;case 12:HEAP[q]=1;e=16;break;case 13:e=HEAP[q]<0?15:14;break;case 14:e=HEAP[h+12]>31?15:16;break;case 15:_PyErr_SetString(HEAP[_PyExc_ValueError],da);g=0;e=43;break;case 16:e=HEAP[h+8]<0?18:17;break;case 17:e=HEAP[h+8]>23?18:19;break;case 18:_PyErr_SetString(HEAP[_PyExc_ValueError],Ka);g=0;e=43;break;case 19:e=HEAP[h+4]<0?21:20;break;case 20:e=
HEAP[h+4]>59?21:22;break;case 21:_PyErr_SetString(HEAP[_PyExc_ValueError],Ma);g=0;e=43;break;case 22:e=HEAP[h]<0?24:23;break;case 23:e=HEAP[h]>61?24:25;break;case 24:_PyErr_SetString(HEAP[_PyExc_ValueError],wa);g=0;e=43;break;case 25:e=HEAP[h+24]<0?26:27;break;case 26:_PyErr_SetString(HEAP[_PyExc_ValueError],ib);g=0;e=43;break;case 27:var r=h+28;e=HEAP[h+28]==-1?28:29;break;case 28:HEAP[r]=0;e=32;break;case 29:e=HEAP[r]<0?31:30;break;case 30:e=HEAP[h+28]>365?31:32;break;case 31:_PyErr_SetString(HEAP[_PyExc_ValueError],
cb);g=0;e=43;break;case 32:var s=h+32;e=HEAP[h+32]<-1?33:34;break;case 33:HEAP[s]=-1;e=36;break;case 34:e=HEAP[s]>1?35:36;break;case 35:HEAP[h+32]=1;e=36;break;case 36:k=_strlen(HEAP[j]);n=1024;e=37;break;case 37:m=e=_malloc(n);e=e==0?38:39;break;case 38:g=_PyErr_NoMemory();e=43;break;case 39:l=_strftime(m,n,HEAP[j],h);e=l!=0?41:40;break;case 40:e=k*256<=n?41:42;break;case 41:g=_PyString_FromStringAndSize(m,l);_free(m);e=43;break;case 42:_free(m);n+=n;e=37;break;case 43:return f=g,STACKTOP=d,f;default:assert(0,
"bad label: "+e)}},0,function(a,b){var c;for(c=-1;;)switch(c){case -1:var d,e,f,g;d=b;f=_PyImport_ImportModuleNoBlock(Da);c=f==0?1:2;break;case 1:e=0;c=5;break;case 2:g=_PyObject_CallMethod(f,gb,Xa,allocate([d,0,0,0],["%struct.PyObject*",0,0,0],ALLOC_STACK));HEAP[f]-=1;c=HEAP[f]==0?3:4;break;case 3:FUNCTION_TABLE[HEAP[HEAP[f+4]+24]](f);c=4;break;case 4:e=g;c=5;break;case 5:return c=e;default:assert(0,"bad label: "+c)}},0,function(){var a;for(a=-1;;)switch(a){case -1:var b,c;c=_PyImport_ImportModuleNoBlock(Ha);
a=c==0?1:2;break;case 1:b=0;a=5;break;case 2:_tzset();d(c);HEAP[c]-=1;a=HEAP[c]==0?3:4;break;case 3:FUNCTION_TABLE[HEAP[HEAP[c+4]+24]](c);a=4;break;case 4:HEAP[__Py_NoneStruct]+=1;b=__Py_NoneStruct;a=5;break;case 5:return a=b;default:assert(0,"bad label: "+a)}},0]);j.run=h;h();return j});