(function(c){function e(a,b,c,d){var e,g,h,j,k;e=d;d=c<0?1:2;a:do if(d==1)_PyErr_SetString(HEAP[_PyExc_ValueError],f),g=-1;else if(d==2){d=e==-1?3:14;b:do if(d==3){e=_PySequence_Size(a);if(!(e<0)){d=14;break b}g=-1;break a}while(0);for(;;){var l=c;if(!(c<e)){d=15;break}j=(e+l)/2|0;h=_PySequence_GetItem(a,j);if(h==0){d=6;break}k=_PyObject_RichCompareBool(b,h,0);HEAP[h]-=1;d=HEAP[h]==0?8:9;if(d==8)FUNCTION_TABLE[HEAP[HEAP[h+4]+24]](h);if(k<
0){d=10;break}h=j;d=k!=0?12:13;d==12?(e=h,d=14):d==13&&(c=h+1,d=14)}d==15?g=l:d==6?g=-1:d==10&&(g=-1)}while(0);return g}function a(a,b,c,d){var e,g,h,j,k;e=d;d=c<0?1:2;a:do if(d==1)_PyErr_SetString(HEAP[_PyExc_ValueError],f),g=-1;else if(d==2){d=e==-1?3:14;b:do if(d==3){e=_PySequence_Size(a);if(!(e<0)){d=14;break b}g=-1;break a}while(0);for(;;){var l=c;if(!(c<e)){d=15;break}j=(e+l)/2|0;h=_PySequence_GetItem(a,j);if(h==0){d=6;break}k=_PyObject_RichCompareBool(h,b,0);HEAP[h]-=1;d=HEAP[h]==0?8:9;if(d==
8)FUNCTION_TABLE[HEAP[HEAP[h+4]+24]](h);if(k<0){d=10;break}h=j;d=k!=0?12:13;d==12?(c=h+1,d=14):d==13&&(e=h,d=14)}d==15?g=l:d==6?g=-1:d==10&&(g=-1)}while(0);return g}function b(){f=allocate([108,111,32,109,117,115,116,32,98,101,32,110,111,110,45,110,101,103,97,116,105,118,101,0],"i8",ALLOC_NORMAL);g=allocate([79,79,124,110,110,58,98,105,115,101,99,116,95,114,105,103,104,116,0],"i8",ALLOC_NORMAL);h=allocate(20,"i8*",ALLOC_NORMAL);j=allocate([97,0],"i8",ALLOC_NORMAL);k=allocate([120,0],"i8",ALLOC_NORMAL);
l=allocate([108,111,0],"i8",ALLOC_NORMAL);m=allocate([104,105,0],"i8",ALLOC_NORMAL);n=allocate([98,105,115,101,99,116,95,114,105,103,104,116,40,97,44,32,120,91,44,32,108,111,91,44,32,104,105,93,93,41,32,45,62,32,105,110,100,101,120,10,10,82,101,116,117,114,110,32,116,104,101,32,105,110,100,101,120,32,119,104,101,114,101,32,116,111,32,105,110,115,101,114,116,32,105,116,101,109,32,120,32,105,110,32,108,105,115,116,32,97,44,32,97,115,115,117,109,105,110,103,32,97,32,105,115,32,115,111,114,116,101,100,
46,10,10,84,104,101,32,114,101,116,117,114,110,32,118,97,108,117,101,32,105,32,105,115,32,115,117,99,104,32,116,104,97,116,32,97,108,108,32,101,32,105,110,32,97,91,58,105,93,32,104,97,118,101,32,101,32,60,61,32,120,44,32,97,110,100,32,97,108,108,32,101,32,105,110,10,97,91,105,58,93,32,104,97,118,101,32,101,32,62,32,120,46,32,32,83,111,32,105,102,32,120,32,97,108,114,101,97,100,121,32,97,112,112,101,97,114,115,32,105,110,32,116,104,101,32,108,105,115,116,44,32,105,32,112,111,105,110,116,115,32,106,
117,115,116,10,98,101,121,111,110,100,32,116,104,101,32,114,105,103,104,116,109,111,115,116,32,120,32,97,108,114,101,97,100,121,32,116,104,101,114,101,10,10,79,112,116,105,111,110,97,108,32,97,114,103,115,32,108,111,32,40,100,101,102,97,117,108,116,32,48,41,32,97,110,100,32,104,105,32,40,100,101,102,97,117,108,116,32,108,101,110,40,97,41,41,32,98,111,117,110,100,32,116,104,101,10,115,108,105,99,101,32,111,102,32,97,32,116,111,32,98,101,32,115,101,97,114,99,104,101,100,46,10,0],"i8",ALLOC_NORMAL);
o=allocate([79,79,124,110,110,58,105,110,115,111,114,116,95,114,105,103,104,116,0],"i8",ALLOC_NORMAL);p=allocate(20,"i8*",ALLOC_NORMAL);r=allocate([105,110,115,101,114,116,0],"i8",ALLOC_NORMAL);q=allocate([110,79,0],"i8",ALLOC_NORMAL);s=allocate([105,110,115,111,114,116,95,114,105,103,104,116,40,97,44,32,120,91,44,32,108,111,91,44,32,104,105,93,93,41,10,10,73,110,115,101,114,116,32,105,116,101,109,32,120,32,105,110,32,108,105,115,116,32,97,44,32,97,110,100,32,107,101,101,112,32,105,116,32,115,111,
114,116,101,100,32,97,115,115,117,109,105,110,103,32,97,32,105,115,32,115,111,114,116,101,100,46,10,10,73,102,32,120,32,105,115,32,97,108,114,101,97,100,121,32,105,110,32,97,44,32,105,110,115,101,114,116,32,105,116,32,116,111,32,116,104,101,32,114,105,103,104,116,32,111,102,32,116,104,101,32,114,105,103,104,116,109,111,115,116,32,120,46,10,10,79,112,116,105,111,110,97,108,32,97,114,103,115,32,108,111,32,40,100,101,102,97,117,108,116,32,48,41,32,97,110,100,32,104,105,32,40,100,101,102,97,117,108,116,
32,108,101,110,40,97,41,41,32,98,111,117,110,100,32,116,104,101,10,115,108,105,99,101,32,111,102,32,97,32,116,111,32,98,101,32,115,101,97,114,99,104,101,100,46,10,0],"i8",ALLOC_NORMAL);u=allocate([79,79,124,110,110,58,98,105,115,101,99,116,95,108,101,102,116,0],"i8",ALLOC_NORMAL);v=allocate(20,"i8*",ALLOC_NORMAL);y=allocate([98,105,115,101,99,116,95,108,101,102,116,40,97,44,32,120,91,44,32,108,111,91,44,32,104,105,93,93,41,32,45,62,32,105,110,100,101,120,10,10,82,101,116,117,114,110,32,116,104,101,
32,105,110,100,101,120,32,119,104,101,114,101,32,116,111,32,105,110,115,101,114,116,32,105,116,101,109,32,120,32,105,110,32,108,105,115,116,32,97,44,32,97,115,115,117,109,105,110,103,32,97,32,105,115,32,115,111,114,116,101,100,46,10,10,84,104,101,32,114,101,116,117,114,110,32,118,97,108,117,101,32,105,32,105,115,32,115,117,99,104,32,116,104,97,116,32,97,108,108,32,101,32,105,110,32,97,91,58,105,93,32,104,97,118,101,32,101,32,60,32,120,44,32,97,110,100,32,97,108,108,32,101,32,105,110,10,97,91,105,
58,93,32,104,97,118,101,32,101,32,62,61,32,120,46,32,32,83,111,32,105,102,32,120,32,97,108,114,101,97,100,121,32,97,112,112,101,97,114,115,32,105,110,32,116,104,101,32,108,105,115,116,44,32,105,32,112,111,105,110,116,115,32,106,117,115,116,10,98,101,102,111,114,101,32,116,104,101,32,108,101,102,116,109,111,115,116,32,120,32,97,108,114,101,97,100,121,32,116,104,101,114,101,46,10,10,79,112,116,105,111,110,97,108,32,97,114,103,115,32,108,111,32,40,100,101,102,97,117,108,116,32,48,41,32,97,110,100,32,
104,105,32,40,100,101,102,97,117,108,116,32,108,101,110,40,97,41,41,32,98,111,117,110,100,32,116,104,101,10,115,108,105,99,101,32,111,102,32,97,32,116,111,32,98,101,32,115,101,97,114,99,104,101,100,46,10,0],"i8",ALLOC_NORMAL);w=allocate([79,79,124,110,110,58,105,110,115,111,114,116,95,108,101,102,116,0],"i8",ALLOC_NORMAL);x=allocate(20,"i8*",ALLOC_NORMAL);B=allocate([105,79,0],"i8",ALLOC_NORMAL);z=allocate([105,110,115,111,114,116,95,108,101,102,116,40,97,44,32,120,91,44,32,108,111,91,44,32,104,105,
93,93,41,10,10,73,110,115,101,114,116,32,105,116,101,109,32,120,32,105,110,32,108,105,115,116,32,97,44,32,97,110,100,32,107,101,101,112,32,105,116,32,115,111,114,116,101,100,32,97,115,115,117,109,105,110,103,32,97,32,105,115,32,115,111,114,116,101,100,46,10,10,73,102,32,120,32,105,115,32,97,108,114,101,97,100,121,32,105,110,32,97,44,32,105,110,115,101,114,116,32,105,116,32,116,111,32,116,104,101,32,108,101,102,116,32,111,102,32,116,104,101,32,108,101,102,116,109,111,115,116,32,120,46,10,10,79,112,
116,105,111,110,97,108,32,97,114,103,115,32,108,111,32,40,100,101,102,97,117,108,116,32,48,41,32,97,110,100,32,104,105,32,40,100,101,102,97,117,108,116,32,108,101,110,40,97,41,41,32,98,111,117,110,100,32,116,104,101,10,115,108,105,99,101,32,111,102,32,97,32,116,111,32,98,101,32,115,101,97,114,99,104,101,100,46,10,0],"i8",ALLOC_NORMAL);F=allocate([65,108,105,97,115,32,102,111,114,32,98,105,115,101,99,116,95,114,105,103,104,116,40,41,46,10,0],"i8",ALLOC_NORMAL);I=allocate([65,108,105,97,115,32,102,
111,114,32,105,110,115,111,114,116,95,114,105,103,104,116,40,41,46,10,0],"i8",ALLOC_NORMAL);N=allocate([98,105,115,101,99,116,95,114,105,103,104,116,0],"i8",ALLOC_NORMAL);G=allocate([98,105,115,101,99,116,0],"i8",ALLOC_NORMAL);D=allocate([105,110,115,111,114,116,95,114,105,103,104,116,0],"i8",ALLOC_NORMAL);Z=allocate([105,110,115,111,114,116,0],"i8",ALLOC_NORMAL);T=allocate([98,105,115,101,99,116,95,108,101,102,116,0],"i8",ALLOC_NORMAL);P=allocate([105,110,115,111,114,116,95,108,101,102,116,0],"i8",
ALLOC_NORMAL);L=allocate([0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],["i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",
0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8"],ALLOC_NORMAL);K=allocate([66,105,115,101,99,116,
105,111,110,32,97,108,103,111,114,105,116,104,109,115,46,10,10,84,104,105,115,32,109,111,100,117,108,101,32,112,114,111,118,105,100,101,115,32,115,117,112,112,111,114,116,32,102,111,114,32,109,97,105,110,116,97,105,110,105,110,103,32,97,32,108,105,115,116,32,105,110,32,115,111,114,116,101,100,32,111,114,100,101,114,32,119,105,116,104,111,117,116,10,104,97,118,105,110,103,32,116,111,32,115,111,114,116,32,116,104,101,32,108,105,115,116,32,97,102,116,101,114,32,101,97,99,104,32,105,110,115,101,114,116,
105,111,110,46,32,70,111,114,32,108,111,110,103,32,108,105,115,116,115,32,111,102,32,105,116,101,109,115,32,119,105,116,104,10,101,120,112,101,110,115,105,118,101,32,99,111,109,112,97,114,105,115,111,110,32,111,112,101,114,97,116,105,111,110,115,44,32,116,104,105,115,32,99,97,110,32,98,101,32,97,110,32,105,109,112,114,111,118,101,109,101,110,116,32,111,118,101,114,32,116,104,101,32,109,111,114,101,10,99,111,109,109,111,110,32,97,112,112,114,111,97,99,104,46,10,0],"i8",ALLOC_NORMAL);E=allocate([95,
98,105,115,101,99,116,0],"i8",ALLOC_NORMAL);HEAP[h]=j;HEAP[h+4]=k;HEAP[h+8]=l;HEAP[h+12]=m;HEAP[p]=j;HEAP[p+4]=k;HEAP[p+8]=l;HEAP[p+12]=m;HEAP[v]=j;HEAP[v+4]=k;HEAP[v+8]=l;HEAP[v+12]=m;HEAP[x]=j;HEAP[x+4]=k;HEAP[x+8]=l;HEAP[x+12]=m;HEAP[L]=N;HEAP[L+4]=c+2;HEAP[L+12]=n;HEAP[L+16]=G;HEAP[L+20]=c+2;HEAP[L+28]=F;HEAP[L+32]=D;HEAP[L+36]=c+4;HEAP[L+44]=s;HEAP[L+48]=Z;HEAP[L+52]=c+4;HEAP[L+60]=I;HEAP[L+64]=T;HEAP[L+68]=c+6;HEAP[L+76]=y;HEAP[L+80]=P;HEAP[L+84]=c+8;HEAP[L+92]=z}var d={arguments:[]};Runtime.QUANTUM_SIZE=
4;var f,g,h,j,k,l,m,n,o,p,r,q,s,u,v,y,w,x,B,z,F,I,N,G,D,Z,T,P,L,K,E;d._init_bisect=function(){_Py_InitModule4(E,L,K,0,1013)};FUNCTION_TABLE=FUNCTION_TABLE.concat([0,0,function(a,b,c){a=STACKTOP;STACKTOP+=16;_memset(a,0,16);var d,f=a+4,j=a+8,k=a+12;HEAP[j]=0;HEAP[k]=-1;b=_PyArg_ParseTupleAndKeywords(b,c,g,h,allocate([a,0,0,0,f,0,0,0,j,0,0,0,k,0,0,0],["%struct.PyObject**",0,0,0,"%struct.PyObject**",0,0,0,"i32*",0,0,0,"i32*",0,0,0],ALLOC_STACK))==0?1:2;b==1?d=0:b==2&&(c=e(HEAP[a],HEAP[f],HEAP[j],HEAP[k]),
b=c<0?3:4,b==3?d=0:b==4&&(d=_PyInt_FromSsize_t(c)));STACKTOP=a;return d},0,function(a,b,c){a=STACKTOP;STACKTOP+=16;_memset(a,0,16);var d,f=a+4,g,h=a+8,j=a+12;HEAP[h]=0;HEAP[j]=-1;b=_PyArg_ParseTupleAndKeywords(b,c,o,p,allocate([a,0,0,0,f,0,0,0,h,0,0,0,j,0,0,0],["%struct.PyObject**",0,0,0,"%struct.PyObject**",0,0,0,"i32*",0,0,0,"i32*",0,0,0],ALLOC_STACK))==0?1:2;a:do if(b==1)d=0;else if(b==2)if(g=e(HEAP[a],HEAP[f],HEAP[h],HEAP[j]),b=g<0?3:4,b==3)d=0;else if(b==4){d=HEAP[f];var c=HEAP[a],k=g,b=HEAP[HEAP[a]+
4]==_PyList_Type?5:7;b:do if(b==5){if(!(_PyList_Insert(c,k,d)<0)){b=11;break b}d=0;break a}else if(b==7)if(g=_PyObject_CallMethod(c,r,q,allocate([k,0,0,0,d,0,0,0],["i32",0,0,0,"%struct.PyObject*",0,0,0],ALLOC_STACK)),b=g==0?8:9,b==8){d=0;break a}else if(b==9){HEAP[g]-=1;if(HEAP[g]!=0){b=11;break b}FUNCTION_TABLE[HEAP[HEAP[g+4]+24]](g)}while(0);HEAP[__Py_NoneStruct]+=1;d=__Py_NoneStruct}while(0);STACKTOP=a;return d},0,function(b,c,d){b=STACKTOP;STACKTOP+=16;_memset(b,0,16);var e,f=b+4,g=b+8,h=b+12;
HEAP[g]=0;HEAP[h]=-1;c=_PyArg_ParseTupleAndKeywords(c,d,u,v,allocate([b,0,0,0,f,0,0,0,g,0,0,0,h,0,0,0],["%struct.PyObject**",0,0,0,"%struct.PyObject**",0,0,0,"i32*",0,0,0,"i32*",0,0,0],ALLOC_STACK))==0?1:2;c==1?e=0:c==2&&(d=a(HEAP[b],HEAP[f],HEAP[g],HEAP[h]),c=d<0?3:4,c==3?e=0:c==4&&(e=_PyInt_FromSsize_t(d)));STACKTOP=b;return e},0,function(b,c,d){b=STACKTOP;STACKTOP+=16;_memset(b,0,16);var e,f=b+4,g,h=b+8,j=b+12;HEAP[h]=0;HEAP[j]=-1;c=_PyArg_ParseTupleAndKeywords(c,d,w,x,allocate([b,0,0,0,f,0,0,
0,h,0,0,0,j,0,0,0],["%struct.PyObject**",0,0,0,"%struct.PyObject**",0,0,0,"i32*",0,0,0,"i32*",0,0,0],ALLOC_STACK))==0?1:2;a:do if(c==1)e=0;else if(c==2)if(g=a(HEAP[b],HEAP[f],HEAP[h],HEAP[j]),c=g<0?3:4,c==3)e=0;else if(c==4){e=HEAP[f];var d=HEAP[b],k=g,c=HEAP[HEAP[b]+4]==_PyList_Type?5:7;b:do if(c==5){if(!(_PyList_Insert(d,k,e)<0)){c=11;break b}e=0;break a}else if(c==7)if(g=_PyObject_CallMethod(d,r,B,allocate([k,0,0,0,e,0,0,0],["i32",0,0,0,"%struct.PyObject*",0,0,0],ALLOC_STACK)),c=g==0?8:9,c==8){e=
0;break a}else if(c==9){HEAP[g]-=1;if(HEAP[g]!=0){c=11;break b}FUNCTION_TABLE[HEAP[HEAP[g+4]+24]](g)}while(0);HEAP[__Py_NoneStruct]+=1;e=__Py_NoneStruct}while(0);STACKTOP=b;return e},0]);d.run=b;b();return d});