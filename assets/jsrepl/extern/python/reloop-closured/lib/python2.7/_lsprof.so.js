(function(c){function e(){var a=STACKTOP;STACKTOP+=8;_memset(a,0,8);var b;_gettimeofday(a,0);b=HEAP[a];b=HEAP[a+4]+b*1E6;STACKTOP=a;return b}function a(a){var b,c,d,e;e=_PyObject_Call(HEAP[a+24],HEAP[s],0);b=e==0?1:2;if(b==1)_PyErr_WriteUnraisable(HEAP[a+24]),c=0;else if(b==2){b=HEAP[a+28]>0?3:4;b==3?d=_PyLong_AsLongLong(e):b==4&&(b=_PyFloat_AsDouble(e),d=cRound(b*4294967296));HEAP[e]-=1;b=HEAP[e]==0?6:7;if(b==6)FUNCTION_TABLE[HEAP[HEAP[e+
4]+24]](e);b=_PyErr_Occurred()!=0?8:9;b==8?(_PyErr_WriteUnraisable(HEAP[a+24]),c=0):b==9&&(c=d)}return c}function b(a){var b,d=null;p(HEAP[a+8],c+4,0);HEAP[a+8]=0;b=HEAP[a+12]!=0?1:2;b==1&&(_free(HEAP[a+12]),HEAP[a+12]=0);var e=a+16;HEAP[a+16]!=0?(d=2,b=3):(d=2,b=4);a:do if(b==3)for(;;){b=HEAP[d==3?f:e];HEAP[a+16]=HEAP[b+16];_free(b);var f=a+16;if(HEAP[a+16]!=0)b=d=3;else{d=3;break a}}while(0);HEAP[d==2?e:f]=0}function d(b,c,d){var f,g,h;f=HEAP[b+24]!=0?1:2;f==1?g=a(b):f==2&&(g=e());g-=HEAP[c];h=
g-HEAP[c+8];f=HEAP[c+16]!=0?4:5;f==4&&(HEAP[HEAP[c+16]+8]=g+HEAP[HEAP[c+16]+8]);HEAP[b+12]=HEAP[c+16];HEAP[d+40]-=1;f=HEAP[d+40]==0?6:7;f==6?HEAP[d+16]=g+HEAP[d+16]:f==7&&(HEAP[d+36]+=1);HEAP[d+24]=h+HEAP[d+24];HEAP[d+32]+=1;f=(HEAP[b+20]&2)!=0?9:15;a:do if(f==9){if(HEAP[c+16]==0)break a;f=HEAP[HEAP[c+16]+20];b=o(f+44,d);if(b==0)break a;HEAP[b+36]-=1;f=HEAP[b+36]==0?12:13;f==12?HEAP[b+12]=g+HEAP[b+12]:f==13&&(HEAP[b+32]+=1);HEAP[b+20]=h+HEAP[b+20];HEAP[b+28]+=1}while(0)}function f(b,c,d){var f=STACKTOP;
STACKTOP+=12;_memset(f,0,12);var g,h,j,k=f+4,l=f+8;_PyErr_Fetch(f,k,l);h=o(b+8,c);g=h==0?1:2;a:do if(g==1){g=b;h=c;var m=void 0,t=void 0;j=c=void 0;t=d;j=_malloc(48);m=j==0?1:2;if(m==1)HEAP[g+20]|=256,c=0;else if(m==2){var d=t,p=void 0,q=m=void 0,r=void 0,s=t=void 0,r=s=r=void 0,p=HEAP[d+4]!=_PyCFunction_Type?1:2;b:do if(p==1)HEAP[d]+=1,m=d;else if(p==2)if(r=q=d,p=HEAP[q+12]==0?3:15,p==3){r=HEAP[r+16];p=r==0?11:4;c:do if(p==4)if(s=r,p=(HEAP[HEAP[r+4]+84]&134217728)==0?6:5,p==6){if(s==0){p=11;break c}p=
HEAP[r+4]==_PyModule_Type?9:8;if(p==8&&_PyType_IsSubtype(HEAP[r+4],_PyModule_Type)==0){p=11;break c}t=p=_PyModule_GetName(r);if(p!=0){p=12;break c}_PyErr_Clear();t=u;p=12;break c}else if(p==5){t=s+20;p=12;break c}while(0);p==11&&(t=u);p=_strcmp(t,u);q=HEAP[HEAP[q+8]];p=p!=0?13:14;p==13?m=_PyString_FromFormat(v,allocate([t,0,0,0,q,0,0,0],["i8*",0,0,0,"i8*",0,0,0],ALLOC_STACK)):p==14&&(m=_PyString_FromFormat(y,allocate([q,0,0,0],["i8*",0,0,0],ALLOC_STACK)))}else if(p==15){s=HEAP[r+12];r=_PyString_FromString(HEAP[HEAP[q+
8]]);p=r!=0?16:25;c:do if(p==16){s=__PyType_Lookup(HEAP[s+4],r);p=s!=0?17:18;p==17&&(HEAP[s]+=1);HEAP[r]-=1;p=HEAP[r]==0?19:20;if(p==19)FUNCTION_TABLE[HEAP[HEAP[r+4]+24]](r);if(s==0){p=25;break c}r=_PyObject_Repr(s);HEAP[s]-=1;p=HEAP[s]==0?22:23;if(p==22)FUNCTION_TABLE[HEAP[HEAP[s+4]+24]](s);if(r==0){p=25;break c}m=r;break b}while(0);_PyErr_Clear();m=_PyString_FromFormat(w,allocate([HEAP[HEAP[q+8]],0,0,0],["i8*",0,0,0],ALLOC_STACK))}while(0);t=m;m=t==0?3:4;m==3?(_PyErr_Clear(),_free(j),HEAP[g+20]|=
256,c=0):m==4&&(HEAP[j]=h,HEAP[j+12]=t,HEAP[j+16]=0,HEAP[j+24]=0,HEAP[j+32]=0,HEAP[j+36]=0,HEAP[j+40]=0,HEAP[j+44]=0,n(g+8,j),c=j)}h=c;g=h==0?7:2;break a}while(0);a:do if(g==2){j=HEAP[b+16];g=HEAP[b+16]!=0?3:4;b:do if(g==3)HEAP[b+16]=HEAP[j+16];else if(g==4){j=_malloc(24);if(j!=0){g=6;break b}HEAP[b+20]|=256;break a}while(0);c=b;d=h;q=p=t=m=void 0;HEAP[j+20]=d;HEAP[j+8]=0;HEAP[j+16]=HEAP[c+12];HEAP[c+12]=j;HEAP[d+40]+=1;m=(HEAP[c+20]&2)!=0?1:5;b:do if(m==1){if(HEAP[j+16]==0)break b;p=HEAP[HEAP[j+
16]+20];q=o(p+44,d);m=q==0?3:4;if(m==3){var q=c,r=d,A=s=void 0,S=void 0,S=_malloc(40),s=S==0?1:2;s==1?(HEAP[q+20]|=256,A=0):s==2&&(HEAP[S]=r,HEAP[S+12]=0,HEAP[S+20]=0,HEAP[S+28]=0,HEAP[S+32]=0,HEAP[S+36]=0,n(p+44,S),A=S);q=p=A;if(p==0)break b}HEAP[q+36]+=1}while(0);m=HEAP[c+24]!=0?6:7;m==6?t=a(c):m==7&&(t=e());HEAP[j]=t}while(0);_PyErr_Restore(HEAP[f],HEAP[k],HEAP[l]);STACKTOP=f}function g(a,b){var c,e,f;f=HEAP[a+12];if((f==0?5:1)==1)e=o(a+8,b),c=e!=0?2:3,c==2?d(a,f,e):c==3&&(HEAP[a+12]=HEAP[f+16]),
HEAP[f+16]=HEAP[a+16],HEAP[a+16]=f}function h(a){var b,c;b=(HEAP[a+20]&256)!=0?1:2;b==1?(HEAP[a+20]-=256,_PyErr_SetString(HEAP[_PyExc_MemoryError],x),c=-1):b==2&&(c=0);return c}function j(a,b){var c;c=b==0?1:2;a:do if(c==1)HEAP[a+20]&=-3;else if(c==2){if(!(b>0))break a;HEAP[a+20]|=2}while(0);return 0}function k(a,b){var c;c=b==0?1:2;a:do if(c==1)HEAP[a+20]&=-5;else if(c==2){if(!(b>0))break a;HEAP[a+20]|=4}while(0);return 0}function l(a){var b,c,e;b=HEAP[a+12]!=0?1:7;a:do if(b==1)for(;;)if(c=HEAP[a+
12],e=HEAP[c+20],b=HEAP[c+20]!=0?2:3,b==2?d(a,c,e):b==3&&(HEAP[a+12]=HEAP[c+16]),b=c!=0?6:5,b==6&&_free(c),HEAP[a+12]!=0)b=1;else break a;while(0)}function m(a){var b;if((1<<a>HEAP[Ga]?1:2)==1)HEAP[J]*=1082527,HEAP[Ga]=HEAP[J];b=(1<<a)-1&HEAP[Ga];HEAP[Ga]>>>=a;return b}function n(a,b){var c,d=null,e;e=a;HEAP[e]!=0?(d=-1,c=1):(d=-1,c=5);a:do if(c==1)for(;;){var f=HEAP[e];c=HEAP[d==3?g:b]<HEAP[HEAP[e]]?2:4;c==2?e=f+4:c==4&&(e=f+8);var g=b;if(HEAP[e]!=0)d=3,c=1;else{d=3;break a}}while(0);HEAP[(d==-1?
b:g)+4]=0;HEAP[b+8]=0;HEAP[e]=b}function o(a,b){var c,d=null,e,f,g,h;c=m(3)!=4?1:9;if(c==1){var j=HEAP[a];f=j;for(d=1;;){if((d==1?j:d==6?l:h)==0){c=8;break}g=f;if(HEAP[f]==b){c=3;break}var k=f;c=HEAP[g]>b?5:6;if(c==5)f=h=HEAP[k+4],d=5,c=7;else if(c==6){var l=HEAP[k+8];f=l;d=6;c=7}}c==8?e=0:c==3&&(e=g)}else if(c==9)if(d=a,g=HEAP[d],c=g==0?10:11,c==10)e=0;else if(c==11){for(;;){if(HEAP[g]==b){c=12;break}h=m(1)==0;l=g;c=HEAP[g]>b?14:19;if(c==14){f=HEAP[l+4];if(f==0){c=15;break}c=h!=0?17:18;c==17?(HEAP[g+
4]=HEAP[f+8],HEAP[f+8]=g,HEAP[d]=f):c==18&&(d=g+4)}else if(c==19){f=HEAP[l+8];if(f==0){c=20;break}c=h!=0?22:23;c==22?(HEAP[g+8]=HEAP[f+4],HEAP[f+4]=g,HEAP[d]=f):c==23&&(d=g+8)}g=f;c=11}c==12?e=g:c==15?e=0:c==20&&(e=0)}return e}function p(a,b,c){var d,e=null,f,g,h;f=a;for(e=-1;;){if((e==5?j:a)==0){d=7;break}h=p(HEAP[f+4],b,c);if(h!=0){d=2;break}d=HEAP[f+8];h=FUNCTION_TABLE[b](f,c);if(h!=0){d=4;break}var j=d;f=j;e=5;d=6}d==2?g=h:d==4?g=h:d==7&&(g=0);return g}function r(){s=allocate(1,"%struct.PyObject*",
ALLOC_NORMAL);u=allocate([95,95,98,117,105,108,116,105,110,95,95,0],"i8",ALLOC_NORMAL);v=allocate([60,37,115,46,37,115,62,0],"i8",ALLOC_NORMAL);y=allocate([60,37,115,62,0],"i8",ALLOC_NORMAL);w=allocate([60,98,117,105,108,116,45,105,110,32,109,101,116,104,111,100,32,37,115,62,0],"i8",ALLOC_NORMAL);x=allocate([109,101,109,111,114,121,32,119,97,115,32,101,120,104,97,117,115,116,101,100,32,119,104,105,108,101,32,112,114,111,102,105,108,105,110,103,0],"i8",ALLOC_NORMAL);B=allocate([99,111,100,101,0],"i8",
ALLOC_NORMAL);z=allocate([99,111,100,101,32,111,98,106,101,99,116,32,111,114,32,98,117,105,108,116,45,105,110,32,102,117,110,99,116,105,111,110,32,110,97,109,101,0],"i8",ALLOC_NORMAL);F=allocate([99,97,108,108,99,111,117,110,116,0],"i8",ALLOC_NORMAL);I=allocate([104,111,119,32,109,97,110,121,32,116,105,109,101,115,32,116,104,105,115,32,119,97,115,32,99,97,108,108,101,100,0],"i8",ALLOC_NORMAL);N=allocate([114,101,99,99,97,108,108,99,111,117,110,116,0],"i8",ALLOC_NORMAL);G=allocate([104,111,119,32,
109,97,110,121,32,116,105,109,101,115,32,99,97,108,108,101,100,32,114,101,99,117,114,115,105,118,101,108,121,0],"i8",ALLOC_NORMAL);D=allocate([116,111,116,97,108,116,105,109,101,0],"i8",ALLOC_NORMAL);Z=allocate([116,111,116,97,108,32,116,105,109,101,32,105,110,32,116,104,105,115,32,101,110,116,114,121,0],"i8",ALLOC_NORMAL);T=allocate([105,110,108,105,110,101,116,105,109,101,0],"i8",ALLOC_NORMAL);P=allocate([105,110,108,105,110,101,32,116,105,109,101,32,105,110,32,116,104,105,115,32,101,110,116,114,
121,32,40,110,111,116,32,105,110,32,115,117,98,99,97,108,108,115,41,0],"i8",ALLOC_NORMAL);L=allocate([99,97,108,108,115,0],"i8",ALLOC_NORMAL);K=allocate([100,101,116,97,105,108,115,32,111,102,32,116,104,101,32,99,97,108,108,115,0],"i8",ALLOC_NORMAL);E=allocate(56,["i8*",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"i8","i8","i8","i8"],ALLOC_NORMAL);aa=allocate([99,97,108,108,101,100,32,99,111,
100,101,32,111,98,106,101,99,116,32,111,114,32,98,117,105,108,116,45,105,110,32,102,117,110,99,116,105,111,110,32,110,97,109,101,0],"i8",ALLOC_NORMAL);Q=allocate([104,111,119,32,109,97,110,121,32,116,105,109,101,115,32,116,104,105,115,32,105,115,32,99,97,108,108,101,100,0],"i8",ALLOC_NORMAL);$=allocate([104,111,119,32,109,97,110,121,32,116,105,109,101,115,32,116,104,105,115,32,105,115,32,99,97,108,108,101,100,32,114,101,99,117,114,115,105,118,101,108,121,0],"i8",ALLOC_NORMAL);S=allocate([116,111,
116,97,108,32,116,105,109,101,32,115,112,101,110,116,32,105,110,32,116,104,105,115,32,99,97,108,108,0],"i8",ALLOC_NORMAL);t=allocate([105,110,108,105,110,101,32,116,105,109,101,32,40,110,111,116,32,105,110,32,102,117,114,116,104,101,114,32,115,117,98,99,97,108,108,115,41,0],"i8",ALLOC_NORMAL);A=allocate(48,["i8*",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"i8","i8","i8","i8"],ALLOC_NORMAL);ra=allocate([0,0,0,0,0,0,
0,0,0,0,0,0,6,0,0,0],["i8*",0,0,0,"i8*",0,0,0,"%struct.PyStructSequence_Field*",0,0,0,"i32",0,0,0],ALLOC_NORMAL);ga=allocate([95,108,115,112,114,111,102,46,112,114,111,102,105,108,101,114,95,101,110,116,114,121,0],"i8",ALLOC_NORMAL);Ha=allocate([0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0],["i8*",0,0,0,"i8*",0,0,0,"%struct.PyStructSequence_Field*",0,0,0,"i32",0,0,0],ALLOC_NORMAL);ba=allocate([95,108,115,112,114,111,102,46,112,114,111,102,105,108,101,114,95,115,117,98,101,110,116,114,121,0],"i8",ALLOC_NORMAL);
pa=allocate(196,["i32",0,0,0,"%struct._typeobject*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i32",0,0,0,"i32",0,0,0,"void (%struct.PyObject*)*",0,0,0,"i32 (%struct.PyObject*, %struct.FILE*, i32)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, i8*)*",0,0,0,"i32 (%struct.PyObject*, i8*, %struct.PyObject*)*",0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*)*",0,0,0,"%struct.PyNumberMethods*",0,0,0,"%struct.PySequenceMethods*",0,0,0,"%struct.PyMappingMethods*",0,0,
0,"i32 (%struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"%struct.PyBufferProcs*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i32 (%struct.PyObject*, i32 (%struct.PyObject*, i8*)*, i8*)*",0,0,0,"i32 (%struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*, i32)*",
0,0,0,"i32",0,0,0,"%struct.PyObject* (%struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*)*",0,0,0,"%struct.PyMethodDef*",0,0,0,"%struct.PyMemberDef*",0,0,0,"%struct.PyGetSetDef*",0,0,0,"%struct._typeobject*",0,0,0,"%struct.PyObject*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct._typeobject*, i32)*",
0,0,0,"%struct.PyObject* (%struct._typeobject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"void (i8*)*",0,0,0,"i32 (%struct.PyObject*)*",0,0,0,"%struct.PyObject*",0,0,0,"%struct.PyObject*",0,0,0,"%struct.PyObject*",0,0,0,"%struct.PyObject*",0,0,0,"%struct.PyObject*",0,0,0,"void (%struct.PyObject*)*",0,0,0,"i32",0,0,0],ALLOC_NORMAL);ya=allocate([40,40,79,108,108,100,100,41,41,0],"i8",ALLOC_NORMAL);va=allocate(196,["i32",0,0,0,"%struct._typeobject*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i32",0,0,0,"i32",
0,0,0,"void (%struct.PyObject*)*",0,0,0,"i32 (%struct.PyObject*, %struct.FILE*, i32)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, i8*)*",0,0,0,"i32 (%struct.PyObject*, i8*, %struct.PyObject*)*",0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*)*",0,0,0,"%struct.PyNumberMethods*",0,0,0,"%struct.PySequenceMethods*",0,0,0,"%struct.PyMappingMethods*",0,0,0,"i32 (%struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",
0,0,0,"%struct.PyObject* (%struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"%struct.PyBufferProcs*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i32 (%struct.PyObject*, i32 (%struct.PyObject*, i8*)*, i8*)*",0,0,0,"i32 (%struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*, i32)*",0,0,0,"i32",0,0,0,"%struct.PyObject* (%struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*)*",
0,0,0,"%struct.PyMethodDef*",0,0,0,"%struct.PyMemberDef*",0,0,0,"%struct.PyGetSetDef*",0,0,0,"%struct._typeobject*",0,0,0,"%struct.PyObject*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct._typeobject*, i32)*",0,0,0,"%struct.PyObject* (%struct._typeobject*, %struct.PyObject*, %struct.PyObject*)*",
0,0,0,"void (i8*)*",0,0,0,"i32 (%struct.PyObject*)*",0,0,0,"%struct.PyObject*",0,0,0,"%struct.PyObject*",0,0,0,"%struct.PyObject*",0,0,0,"%struct.PyObject*",0,0,0,"%struct.PyObject*",0,0,0,"void (%struct.PyObject*)*",0,0,0,"i32",0,0,0],ALLOC_NORMAL);Ua=allocate([40,40,79,108,108,100,100,79,41,41,0],"i8",ALLOC_NORMAL);$a=allocate([103,101,116,115,116,97,116,115,40,41,32,45,62,32,108,105,115,116,32,111,102,32,112,114,111,102,105,108,101,114,95,101,110,116,114,121,32,111,98,106,101,99,116,115,10,10,
82,101,116,117,114,110,32,97,108,108,32,105,110,102,111,114,109,97,116,105,111,110,32,99,111,108,108,101,99,116,101,100,32,98,121,32,116,104,101,32,112,114,111,102,105,108,101,114,46,10,69,97,99,104,32,112,114,111,102,105,108,101,114,95,101,110,116,114,121,32,105,115,32,97,32,116,117,112,108,101,45,108,105,107,101,32,111,98,106,101,99,116,32,119,105,116,104,32,116,104,101,10,102,111,108,108,111,119,105,110,103,32,97,116,116,114,105,98,117,116,101,115,58,10,10,32,32,32,32,99,111,100,101,32,32,32,32,
32,32,32,32,32,32,99,111,100,101,32,111,98,106,101,99,116,10,32,32,32,32,99,97,108,108,99,111,117,110,116,32,32,32,32,32,104,111,119,32,109,97,110,121,32,116,105,109,101,115,32,116,104,105,115,32,119,97,115,32,99,97,108,108,101,100,10,32,32,32,32,114,101,99,99,97,108,108,99,111,117,110,116,32,32,104,111,119,32,109,97,110,121,32,116,105,109,101,115,32,99,97,108,108,101,100,32,114,101,99,117,114,115,105,118,101,108,121,10,32,32,32,32,116,111,116,97,108,116,105,109,101,32,32,32,32,32,116,111,116,97,
108,32,116,105,109,101,32,105,110,32,116,104,105,115,32,101,110,116,114,121,10,32,32,32,32,105,110,108,105,110,101,116,105,109,101,32,32,32,32,105,110,108,105,110,101,32,116,105,109,101,32,105,110,32,116,104,105,115,32,101,110,116,114,121,32,40,110,111,116,32,105,110,32,115,117,98,99,97,108,108,115,41,10,32,32,32,32,99,97,108,108,115,32,32,32,32,32,32,32,32,32,100,101,116,97,105,108,115,32,111,102,32,116,104,101,32,99,97,108,108,115,10,10,84,104,101,32,99,97,108,108,115,32,97,116,116,114,105,98,117,
116,101,32,105,115,32,101,105,116,104,101,114,32,78,111,110,101,32,111,114,32,97,32,108,105,115,116,32,111,102,10,112,114,111,102,105,108,101,114,95,115,117,98,101,110,116,114,121,32,111,98,106,101,99,116,115,58,10,10,32,32,32,32,99,111,100,101,32,32,32,32,32,32,32,32,32,32,99,97,108,108,101,100,32,99,111,100,101,32,111,98,106,101,99,116,10,32,32,32,32,99,97,108,108,99,111,117,110,116,32,32,32,32,32,104,111,119,32,109,97,110,121,32,116,105,109,101,115,32,116,104,105,115,32,105,115,32,99,97,108,108,
101,100,10,32,32,32,32,114,101,99,99,97,108,108,99,111,117,110,116,32,32,104,111,119,32,109,97,110,121,32,116,105,109,101,115,32,116,104,105,115,32,105,115,32,99,97,108,108,101,100,32,114,101,99,117,114,115,105,118,101,108,121,10,32,32,32,32,116,111,116,97,108,116,105,109,101,32,32,32,32,32,116,111,116,97,108,32,116,105,109,101,32,115,112,101,110,116,32,105,110,32,116,104,105,115,32,99,97,108,108,10,32,32,32,32,105,110,108,105,110,101,116,105,109,101,32,32,32,32,105,110,108,105,110,101,32,116,105,
109,101,32,40,110,111,116,32,105,110,32,102,117,114,116,104,101,114,32,115,117,98,99,97,108,108,115,41,10,0],"i8",ALLOC_NORMAL);Va=allocate([101,110,97,98,108,101,40,115,117,98,99,97,108,108,115,61,84,114,117,101,44,32,98,117,105,108,116,105,110,115,61,84,114,117,101,41,10,10,83,116,97,114,116,32,99,111,108,108,101,99,116,105,110,103,32,112,114,111,102,105,108,105,110,103,32,105,110,102,111,114,109,97,116,105,111,110,46,10,73,102,32,39,115,117,98,99,97,108,108,115,39,32,105,115,32,84,114,117,101,
44,32,97,108,115,111,32,114,101,99,111,114,100,115,32,102,111,114,32,101,97,99,104,32,102,117,110,99,116,105,111,110,10,115,116,97,116,105,115,116,105,99,115,32,115,101,112,97,114,97,116,101,100,32,97,99,99,111,114,100,105,110,103,32,116,111,32,105,116,115,32,99,117,114,114,101,110,116,32,99,97,108,108,101,114,46,10,73,102,32,39,98,117,105,108,116,105,110,115,39,32,105,115,32,84,114,117,101,44,32,114,101,99,111,114,100,115,32,116,104,101,32,116,105,109,101,32,115,112,101,110,116,32,105,110,10,98,
117,105,108,116,45,105,110,32,102,117,110,99,116,105,111,110,115,32,115,101,112,97,114,97,116,101,108,121,32,102,114,111,109,32,116,104,101,105,114,32,99,97,108,108,101,114,46,10,0],"i8",ALLOC_NORMAL);db=allocate([124,105,105,58,101,110,97,98,108,101,0],"i8",ALLOC_NORMAL);Ta=allocate(12,"i8*",ALLOC_NORMAL);Ra=allocate([115,117,98,99,97,108,108,115,0],"i8",ALLOC_NORMAL);Ka=allocate([98,117,105,108,116,105,110,115,0],"i8",ALLOC_NORMAL);Za=allocate([100,105,115,97,98,108,101,40,41,10,10,83,116,111,112,
32,99,111,108,108,101,99,116,105,110,103,32,112,114,111,102,105,108,105,110,103,32,105,110,102,111,114,109,97,116,105,111,110,46,10,0],"i8",ALLOC_NORMAL);Ia=allocate([99,108,101,97,114,40,41,10,10,67,108,101,97,114,32,97,108,108,32,112,114,111,102,105,108,105,110,103,32,105,110,102,111,114,109,97,116,105,111,110,32,99,111,108,108,101,99,116,101,100,32,115,111,32,102,97,114,46,10,0],"i8",ALLOC_NORMAL);la=allocate([124,79,100,105,105,58,80,114,111,102,105,108,101,114,0],"i8",ALLOC_NORMAL);Fa=allocate(20,
"i8*",ALLOC_NORMAL);Ja=allocate([116,105,109,101,114,0],"i8",ALLOC_NORMAL);Oa=allocate([116,105,109,101,117,110,105,116,0],"i8",ALLOC_NORMAL);Y=allocate([103,101,116,115,116,97,116,115,0],"i8",ALLOC_NORMAL);Ba=allocate([101,110,97,98,108,101,0],"i8",ALLOC_NORMAL);Ma=allocate([100,105,115,97,98,108,101,0],"i8",ALLOC_NORMAL);ca=allocate([99,108,101,97,114,0],"i8",ALLOC_NORMAL);ja=allocate([0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],["i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",
0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8"],ALLOC_NORMAL);ia=allocate([80,114,111,102,105,108,101,114,40,99,117,115,116,111,109,95,116,105,109,101,114,61,78,111,110,101,44,32,116,105,109,101,95,117,110,105,116,61,78,111,110,101,44,32,115,117,98,99,97,108,108,115,61,84,114,117,101,44,32,98,117,105,108,116,105,110,115,61,84,114,117,101,41,10,10,32,32,32,32,66,117,105,108,100,115,32,97,32,112,114,111,102,105,108,101,114,32,111,98,106,101,99,116,32,117,115,105,110,103,32,116,104,101,32,115,112,101,
99,105,102,105,101,100,32,116,105,109,101,114,32,102,117,110,99,116,105,111,110,46,10,32,32,32,32,84,104,101,32,100,101,102,97,117,108,116,32,116,105,109,101,114,32,105,115,32,97,32,102,97,115,116,32,98,117,105,108,116,45,105,110,32,111,110,101,32,98,97,115,101,100,32,111,110,32,114,101,97,108,32,116,105,109,101,46,10,32,32,32,32,70,111,114,32,99,117,115,116,111,109,32,116,105,109,101,114,32,102,117,110,99,116,105,111,110,115,32,114,101,116,117,114,110,105,110,103,32,105,110,116,101,103,101,114,115,
44,32,116,105,109,101,95,117,110,105,116,32,99,97,110,10,32,32,32,32,98,101,32,97,32,102,108,111,97,116,32,115,112,101,99,105,102,121,105,110,103,32,97,32,115,99,97,108,101,32,40,105,46,101,46,32,104,111,119,32,108,111,110,103,32,101,97,99,104,32,105,110,116,101,103,101,114,32,117,110,105,116,10,32,32,32,32,105,115,44,32,105,110,32,115,101,99,111,110,100,115,41,46,10,0],"i8",ALLOC_NORMAL);ka=allocate([95,108,115,112,114,111,102,46,80,114,111,102,105,108,101,114,0],"i8",ALLOC_NORMAL);ma=allocate([1,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,36,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,132587,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],["i32",0,0,0,"%struct._typeobject*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i32",0,0,0,"i32",0,0,0,"void (%struct.PyObject*)*",
0,0,0,"i32 (%struct.PyObject*, %struct.FILE*, i32)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, i8*)*",0,0,0,"i32 (%struct.PyObject*, i8*, %struct.PyObject*)*",0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*)*",0,0,0,"%struct.PyNumberMethods*",0,0,0,"%struct.PySequenceMethods*",0,0,0,"%struct.PyMappingMethods*",0,0,0,"i32 (%struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*)*",
0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"%struct.PyBufferProcs*",0,0,0,"i32",0,0,0,"i8*",0,0,0,"i32 (%struct.PyObject*, i32 (%struct.PyObject*, i8*)*, i8*)*",0,0,0,"i32 (%struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*, i32)*",0,0,0,"i32",0,0,0,"%struct.PyObject* (%struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct.PyObject*)*",0,0,0,"%struct.PyMethodDef*",0,
0,0,"%struct.PyMemberDef*",0,0,0,"%struct.PyGetSetDef*",0,0,0,"%struct._typeobject*",0,0,0,"%struct.PyObject*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"i32",0,0,0,"i32 (%struct.PyObject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"%struct.PyObject* (%struct._typeobject*, i32)*",0,0,0,"%struct.PyObject* (%struct._typeobject*, %struct.PyObject*, %struct.PyObject*)*",0,0,0,"void (i8*)*",
0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8","i8"],ALLOC_NORMAL);na=allocate(16,["i8*",0,0,0,"%struct.PyObject* (%struct.PyObject*, %struct.PyObject*)*",0,0,0,"i8","i8","i8","i8","i8","i8","i8","i8"],ALLOC_NORMAL);Ea=allocate([95,108,115,112,114,111,102,0],"i8",ALLOC_NORMAL);La=allocate([70,97,115,116,32,112,114,111,102,105,108,101,114,0],"i8",ALLOC_NORMAL);ea=allocate([80,114,111,102,
105,108,101,114,0],"i8",ALLOC_NORMAL);oa=allocate(1,"i1",ALLOC_NORMAL);Sa=allocate([112,114,111,102,105,108,101,114,95,101,110,116,114,121,0],"i8",ALLOC_NORMAL);za=allocate([112,114,111,102,105,108,101,114,95,115,117,98,101,110,116,114,121,0],"i8",ALLOC_NORMAL);J=allocate([1],["i32",0,0,0,0],ALLOC_NORMAL);Ga=allocate(1,"i32",ALLOC_NORMAL);HEAP[E]=B;HEAP[E+4]=z;HEAP[E+8]=F;HEAP[E+12]=I;HEAP[E+16]=N;HEAP[E+20]=G;HEAP[E+24]=D;HEAP[E+28]=Z;HEAP[E+32]=T;HEAP[E+36]=P;HEAP[E+40]=L;HEAP[E+44]=K;HEAP[A]=B;
HEAP[A+4]=aa;HEAP[A+8]=F;HEAP[A+12]=Q;HEAP[A+16]=N;HEAP[A+20]=$;HEAP[A+24]=D;HEAP[A+28]=S;HEAP[A+32]=T;HEAP[A+36]=t;HEAP[ra]=ga;HEAP[ra+8]=E;HEAP[Ha]=ba;HEAP[Ha+8]=A;HEAP[Ta]=Ra;HEAP[Ta+4]=Ka;HEAP[Fa]=Ja;HEAP[Fa+4]=Oa;HEAP[Fa+8]=Ra;HEAP[Fa+12]=Ka;HEAP[ja]=Y;HEAP[ja+4]=c+12;HEAP[ja+12]=$a;HEAP[ja+16]=Ba;HEAP[ja+20]=c+14;HEAP[ja+28]=Va;HEAP[ja+32]=Ma;HEAP[ja+36]=c+16;HEAP[ja+44]=Za;HEAP[ja+48]=ca;HEAP[ja+52]=c+18;HEAP[ja+60]=Ia;HEAP[ma+12]=ka;HEAP[ma+24]=c+20;HEAP[ma+88]=ia;HEAP[ma+116]=ja;HEAP[ma+
148]=c+22;HEAP[ma+152]=c+24;HEAP[ma+156]=c+26;HEAP[ma+160]=c+28}var q={arguments:[]};Runtime.QUANTUM_SIZE=4;var s,u,v,y,w,x,B,z,F,I,N,G,D,Z,T,P,L,K,E,aa,Q,$,S,t,A,ra,ga,Ha,ba,pa,ya,va,Ua,$a,Va,db,Ta,Ra,Ka,Za,Ia,la,Fa,Ja,Oa,Y,Ba,Ma,ca,ja,ia,ka,ma,na,Ea,La,ea,oa,Sa,za,J,Ga;q._init_lsprof=function(){var a,b;b=_Py_InitModule4(Ea,na,La,0,1013);a=b==0?5:1;a:do if(a==1){a=_PyModule_GetDict(b);if(_PyType_Ready(ma)<0)break a;_PyDict_SetItemString(a,ea,ma);a=HEAP[oa]==0?3:4;a==3&&(_PyStructSequence_InitType(va,
ra),_PyStructSequence_InitType(pa,Ha));HEAP[va]+=1;HEAP[pa]+=1;_PyModule_AddObject(b,Sa,va);_PyModule_AddObject(b,za,pa);var c=_PyTuple_New(0);HEAP[s]=c;HEAP[oa]=1}while(0)};FUNCTION_TABLE=FUNCTION_TABLE.concat([0,0,function(a){_free(a);return 0},0,function(a){p(HEAP[a+44],c+2,0);var b=HEAP[a+12];HEAP[b]-=1;if((HEAP[b]==0?1:2)==1)FUNCTION_TABLE[HEAP[HEAP[HEAP[a+12]+4]+24]](HEAP[a+12]);_free(a);return 0},0,function(a,b){var c,d,e;e=_PyObject_CallFunction(pa,ya,allocate([HEAP[HEAP[a]+12],0,0,0,HEAP[a+
28],0,0,0,HEAP[a+32],0,0,0,HEAP[b+8]*HEAP[a+12],0,0,0,0,0,0,0,HEAP[b+8]*HEAP[a+20],0,0,0,0,0,0,0],["%struct.PyObject*",0,0,0,"i32",0,0,0,"i32",0,0,0,"double",0,0,0,0,0,0,0,"double",0,0,0,0,0,0,0],ALLOC_STACK));c=e==0?1:2;if(c==1)d=-1;else if(c==2&&(d=_PyList_Append(HEAP[b+4],e),HEAP[e]-=1,c=HEAP[e]==0?3:4,c==3))FUNCTION_TABLE[HEAP[HEAP[e+4]+24]](e);return d},0,function(a,b){var d,e,f;d=HEAP[a+32]==0?1:2;a:do if(d==1)e=0;else if(d==2){d=HEAP[a+44]!=0?3:9;b:do if(d==3)if(f=_PyList_New(0),HEAP[b+4]=
f,d=HEAP[b+4]==0?4:5,d==4){e=-1;break a}else{if(d==5){if(p(HEAP[a+44],c+6,b)==0)break b;e=HEAP[b+4];HEAP[e]-=1;d=HEAP[e]==0?7:8;if(d==7)FUNCTION_TABLE[HEAP[HEAP[HEAP[b+4]+4]+24]](HEAP[b+4]);e=-1;break a}}else d==9&&(HEAP[__Py_NoneStruct]+=1,HEAP[b+4]=__Py_NoneStruct);while(0);f=_PyObject_CallFunction(va,Ua,allocate([HEAP[a+12],0,0,0,HEAP[a+32],0,0,0,HEAP[a+36],0,0,0,HEAP[b+8]*HEAP[a+16],0,0,0,0,0,0,0,HEAP[b+8]*HEAP[a+24],0,0,0,0,0,0,0,HEAP[b+4],0,0,0],["%struct.PyObject*",0,0,0,"i32",0,0,0,"i32",
0,0,0,"double",0,0,0,0,0,0,0,"double",0,0,0,0,0,0,0,"%struct.PyObject*",0,0,0],ALLOC_STACK));d=HEAP[b+4];HEAP[d]-=1;d=HEAP[d]==0?11:12;if(d==11)FUNCTION_TABLE[HEAP[HEAP[HEAP[b+4]+4]+24]](HEAP[b+4]);d=f==0?13:14;if(d==13)e=-1;else if(d==14&&(e=_PyList_Append(HEAP[b],f),HEAP[f]-=1,d=HEAP[f]==0?15:16,d==15))FUNCTION_TABLE[HEAP[HEAP[f+4]+24]](f)}while(0);return e},0,function(a,b,c,d){c=c==0?1:c==3?2:c==4?3:c==5?6:c==6?6:9;a:do if(c==1)f(a,HEAP[b+16],HEAP[b+16]);else if(c==2)g(a,HEAP[b+16]);else if(c==
3){if((HEAP[a+20]&4)==0)break a;if(HEAP[d+4]!=_PyCFunction_Type)break a;f(a,HEAP[d+8],d)}else if(c==6){if((HEAP[a+20]&4)==0)break a;if(HEAP[d+4]!=_PyCFunction_Type)break a;g(a,HEAP[d+8])}while(0);return 0},0,function(a){var b=STACKTOP;STACKTOP+=16;_memset(b,0,16);var d,e;d=h(a)!=0?1:2;if(d==1)e=0;else if(d==2)if(d=HEAP[a+24]==0?3:4,d==3?HEAP[b+8]=1.0E-6:d==4&&(d=HEAP[a+28]>0?5:6,d==5?HEAP[b+8]=HEAP[a+28]:d==6&&(HEAP[b+8]=2.3283064365386963E-10)),d=_PyList_New(0),HEAP[b]=d,d=HEAP[b]==0?8:9,d==8)e=
0;else if(d==9)if(d=p(HEAP[a+8],c+8,b),a=HEAP[b],d=d!=0?10:13,d==10){HEAP[a]-=1;d=HEAP[a]==0?11:12;if(d==11)FUNCTION_TABLE[HEAP[HEAP[HEAP[b]+4]+24]](HEAP[b]);e=0}else d==13&&(e=a);STACKTOP=b;return e},0,function(a,b,d){var e=STACKTOP;STACKTOP+=8;_memset(e,0,8);var f,g=e+4;HEAP[e]=-1;HEAP[g]=-1;b=_PyArg_ParseTupleAndKeywords(b,d,db,Ta,allocate([e,0,0,0,g,0,0,0],["i32*",0,0,0,"i32*",0,0,0],ALLOC_STACK))==0?1:2;a:do if(b==1)f=0;else if(b==2){b=j(a,HEAP[e])<0?4:3;b:do if(b==3){if(k(a,HEAP[g])<0){b=4;
break b}_PyEval_SetProfile(c+10,a);HEAP[a+20]|=1;HEAP[__Py_NoneStruct]+=1;f=__Py_NoneStruct;break a}while(0);f=0}while(0);STACKTOP=e;return f},0,function(a){var b;HEAP[a+20]&=-2;_PyEval_SetProfile(0,0);l(a);a=h(a)!=0?1:2;a==1?b=0:a==2&&(HEAP[__Py_NoneStruct]+=1,b=__Py_NoneStruct);return b},0,function(a){b(a);HEAP[__Py_NoneStruct]+=1;return __Py_NoneStruct},0,function(a){var c;c=(HEAP[a+20]&1)!=0?1:2;c==1&&_PyEval_SetProfile(0,0);l(a);b(a);c=HEAP[a+24]!=0?3:5;a:do if(c==3){var d=HEAP[a+24];HEAP[d]-=
1;if(HEAP[d]!=0)break a;FUNCTION_TABLE[HEAP[HEAP[HEAP[a+24]+4]+24]](HEAP[a+24])}while(0);FUNCTION_TABLE[HEAP[HEAP[a+4]+160]](a)},0,function(a,b,c){var d=STACKTOP;STACKTOP+=20;_memset(d,0,20);var e,f=d+4,g=d+12,h=d+16;HEAP[d]=0;HEAP[f]=0;HEAP[g]=1;HEAP[h]=1;b=_PyArg_ParseTupleAndKeywords(b,c,la,Fa,allocate([d,0,0,0,f,0,0,0,g,0,0,0,h,0,0,0],["%struct.PyObject**",0,0,0,"double*",0,0,0,"i32*",0,0,0,"i32*",0,0,0],ALLOC_STACK))==0?1:2;a:do if(b==1)e=-1;else if(b==2){b=j(a,HEAP[g])<0?4:3;b:do if(b==3){if(k(a,
HEAP[h])<0){b=4;break b}e=HEAP[a+24];HEAP[a+24]=HEAP[d];b=HEAP[d]!=0?6:7;b==6&&(HEAP[HEAP[d]]+=1);b=e!=0?8:10;c:do if(b==8){HEAP[e]-=1;if(HEAP[e]!=0)break c;FUNCTION_TABLE[HEAP[HEAP[e+4]+24]](e)}while(0);HEAP[a+28]=HEAP[f];e=0;break a}while(0);e=-1}while(0);STACKTOP=d;return e},0,_PyType_GenericAlloc,0,_PyType_GenericNew,0,_PyObject_Free,0]);q.run=r;r();return q});